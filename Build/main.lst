GAS LISTING /tmp/cc4RI4t5.s 			page 1


   1              		.file	"main.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.globl	_Z7reshapeii
   6              	_Z7reshapeii:
   7              	.LVL0:
   8              	.LFB2498:
   9              		.file 1 "Src/main.cpp"
   1:Src/main.cpp  **** #include <iostream>
   2:Src/main.cpp  **** #include <stdio.h>      // standard input / output functions
   3:Src/main.cpp  **** #include <stdlib.h>
   4:Src/main.cpp  **** #include <string.h>     // string function definitions
   5:Src/main.cpp  **** #include <unistd.h>     // UNIX standard function definitions
   6:Src/main.cpp  **** #include <fcntl.h>      // File control definitions
   7:Src/main.cpp  **** #include <errno.h>      // Error number definitions
   8:Src/main.cpp  **** #include <termios.h>    // POSIX terminal control definitions
   9:Src/main.cpp  **** #include <signal.h>
  10:Src/main.cpp  **** #include <GL/glew.h>
  11:Src/main.cpp  **** #include <GL/glut.h>
  12:Src/main.cpp  **** #include <GL/gl.h>
  13:Src/main.cpp  **** #include <GL/glu.h>
  14:Src/main.cpp  **** #include <FTGL/ftgl.h>
  15:Src/main.cpp  **** #include <FTGL/FTGLPixmapFont.h>
  16:Src/main.cpp  **** 
  17:Src/main.cpp  **** #include "routines.hpp"
  18:Src/main.cpp  **** #include "findwayBases.hpp"
  19:Src/main.cpp  **** 
  20:Src/main.cpp  **** #define GL_TIMER_DELAY	400
  21:Src/main.cpp  **** #define RETURN_CODE_OK 0
  22:Src/main.cpp  **** #define OBST_COLOR 0xFF0000
  23:Src/main.cpp  **** #define GRAPH_COLOR 0x00FFFF
  24:Src/main.cpp  **** #define DATA_COLOR	0xFFFFFF
  25:Src/main.cpp  **** 
  26:Src/main.cpp  **** // #define VECTORS_PER_CHECK	50
  27:Src/main.cpp  **** 
  28:Src/main.cpp  **** #define ZERO_QUAD_CHECK_SIDE 2000;
  29:Src/main.cpp  **** size_t watchRadius = ZERO_QUAD_CHECK_SIDE;
  30:Src/main.cpp  **** 
  31:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_A	0.0
  32:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_B	0.0
  33:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_C	numOfObstacles
  34:Src/main.cpp  **** 
  35:Src/main.cpp  **** #define FIELD_MAX_LEN		2000
  36:Src/main.cpp  **** 
  37:Src/main.cpp  **** using namespace std;
  38:Src/main.cpp  **** 
  39:Src/main.cpp  **** 
  40:Src/main.cpp  **** bool terminated = false;
  41:Src/main.cpp  **** size_t numOfObstacles = 0;
  42:Src/main.cpp  **** size_t graphSize = 0;
  43:Src/main.cpp  **** size_t calculatedPoints = 0;
  44:Src/main.cpp  **** 
  45:Src/main.cpp  **** 
  46:Src/main.cpp  **** struct obstacle *obstacles;
  47:Src/main.cpp  **** struct coords	startway,
  48:Src/main.cpp  **** 				endway;
  49:Src/main.cpp  **** struct graphPoint **graph;
GAS LISTING /tmp/cc4RI4t5.s 			page 2


  50:Src/main.cpp  **** size_t *ways;
  51:Src/main.cpp  **** 
  52:Src/main.cpp  **** size_t 	target = 1,
  53:Src/main.cpp  **** 		home = 1;
  54:Src/main.cpp  **** 
  55:Src/main.cpp  **** 
  56:Src/main.cpp  **** struct array
  57:Src/main.cpp  **** {
  58:Src/main.cpp  **** 	void *items;
  59:Src/main.cpp  **** 	size_t size;
  60:Src/main.cpp  **** };
  61:Src/main.cpp  **** 
  62:Src/main.cpp  **** 
  63:Src/main.cpp  **** uint8_t getMinDatasetSize()
  64:Src/main.cpp  **** {
  65:Src/main.cpp  **** 	int ret = numOfObstacles;
  66:Src/main.cpp  **** 	if(ret < 2)
  67:Src/main.cpp  **** 		ret = 2;
  68:Src/main.cpp  **** 	if(ret >= numOfObstacles)
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
  70:Src/main.cpp  **** 	return ret;
  71:Src/main.cpp  **** }
  72:Src/main.cpp  **** 
  73:Src/main.cpp  **** 
  74:Src/main.cpp  **** 
  75:Src/main.cpp  **** 
  76:Src/main.cpp  **** void initObst(const struct obstacle *obst);
  77:Src/main.cpp  **** void initPoint(struct graphPoint *p, const struct coords *c);
  78:Src/main.cpp  **** 
  79:Src/main.cpp  **** 
  80:Src/main.cpp  **** 
  81:Src/main.cpp  **** /*
  82:Src/main.cpp  ****  *	-------+----->	0
  83:Src/main.cpp  ****  *	<------+------	180
  84:Src/main.cpp  ****  *		  /|\
  85:Src/main.cpp  ****  *         |		90
  86:Src/main.cpp  ****  *		   +
  87:Src/main.cpp  ****  */
  88:Src/main.cpp  **** struct vect createVect(const struct coords *c, const COORDS_DATATYPE angle)
  89:Src/main.cpp  **** {
  90:Src/main.cpp  **** 	struct vect ret;
  91:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
  92:Src/main.cpp  **** 	ret.c->x = c->x;
  93:Src/main.cpp  **** 	ret.c->y = c->y;
  94:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  95:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
  96:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
  97:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
  98:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
  99:Src/main.cpp  **** 		ret.dy *= -1;
 100:Src/main.cpp  **** 
 101:Src/main.cpp  **** 	if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 102:Src/main.cpp  **** 		ret.dx *= -1;
 103:Src/main.cpp  **** 	return ret;
 104:Src/main.cpp  **** }
 105:Src/main.cpp  **** 
 106:Src/main.cpp  **** struct vect createVect(const struct coords *start, const struct coords *end)
GAS LISTING /tmp/cc4RI4t5.s 			page 3


 107:Src/main.cpp  **** {
 108:Src/main.cpp  **** 	struct vect ret;
 109:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
 110:Src/main.cpp  **** 	ret.c->x = start->x;
 111:Src/main.cpp  **** 	ret.c->y = start->y;
 112:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 113:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 114:Src/main.cpp  **** 	return ret;
 115:Src/main.cpp  **** }
 116:Src/main.cpp  **** 
 117:Src/main.cpp  **** 
 118:Src/main.cpp  **** struct vect createVect(const struct obstacle *obst, const uint8_t corner, const COORDS_DATATYPE ang
 119:Src/main.cpp  **** {
 120:Src/main.cpp  **** 	struct vect ret;
 121:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 122:Src/main.cpp  **** 	ret = createVect(c, angle);
 123:Src/main.cpp  **** 	free(c);
 124:Src/main.cpp  **** 	return ret;
 125:Src/main.cpp  **** }
 126:Src/main.cpp  **** 
 127:Src/main.cpp  **** 
 128:Src/main.cpp  **** struct array* getPointsDataSet(const struct coords *c)
 129:Src/main.cpp  **** {
 130:Src/main.cpp  **** 	size_t size = 0;
 131:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 132:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 133:Src/main.cpp  **** 		size = 0;
 134:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 135:Src/main.cpp  **** 		{
 136:Src/main.cpp  **** 			if(graph[i]->c.x >= c->x - watchRadius
 137:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 138:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 139:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 140:Src/main.cpp  **** 				size++;
 141:Src/main.cpp  **** 		}
 142:Src/main.cpp  **** 		if(size < getMinDatasetSize())
 143:Src/main.cpp  **** 		{
 144:Src/main.cpp  **** 			cout << "Increacing radius\n";
 145:Src/main.cpp  **** 			watchRadius += 100;
 146:Src/main.cpp  **** 		}
 147:Src/main.cpp  **** 	}
 148:Src/main.cpp  **** 	size_t iter = 0;
 149:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 150:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 151:Src/main.cpp  **** 	{
 152:Src/main.cpp  **** 		if(graph[i]->c.x >= c->x - watchRadius
 153:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 154:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 155:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 156:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 157:Src/main.cpp  **** 	}
 158:Src/main.cpp  **** 	struct array *ret = (struct array*)malloc(sizeof(struct array));
 159:Src/main.cpp  **** 	ret->items = dataset;
 160:Src/main.cpp  **** 	ret->size = size;
 161:Src/main.cpp  **** 	return ret;
 162:Src/main.cpp  **** }
 163:Src/main.cpp  **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 4


 164:Src/main.cpp  **** 
 165:Src/main.cpp  **** 
 166:Src/main.cpp  **** bool hasIntersections(const struct vect *v)
 167:Src/main.cpp  **** {
 168:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 169:Src/main.cpp  **** 	{
 170:Src/main.cpp  **** 		if(hasIntersection(&obstacles[i], v))
 171:Src/main.cpp  **** 			return true;
 172:Src/main.cpp  **** 	}
 173:Src/main.cpp  **** 	return false;
 174:Src/main.cpp  **** }
 175:Src/main.cpp  **** 
 176:Src/main.cpp  **** 
 177:Src/main.cpp  **** #define CONST 0.4
 178:Src/main.cpp  **** 
 179:Src/main.cpp  **** bool isDotInside(const struct coords *c)
 180:Src/main.cpp  **** {
 181:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 182:Src/main.cpp  **** 	{
 183:Src/main.cpp  **** 		if(	(c->x - CONST > obstacles[i].c->x)
 184:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 185:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 186:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 187:Src/main.cpp  **** 			return true;
 188:Src/main.cpp  **** 	}
 189:Src/main.cpp  **** 	return false;
 190:Src/main.cpp  **** }
 191:Src/main.cpp  **** 
 192:Src/main.cpp  **** 
 193:Src/main.cpp  **** 
 194:Src/main.cpp  **** 
 195:Src/main.cpp  **** 
 196:Src/main.cpp  **** void initPoint(struct graphPoint *p)
 197:Src/main.cpp  **** {
 198:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 199:Src/main.cpp  **** 	struct vect v;
 200:Src/main.cpp  **** 	struct coords *tgt;
 201:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 202:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 203:Src/main.cpp  **** 	{
 204:Src/main.cpp  **** 		currP = ((struct graphPoint**)(points->items))[i];
 205:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 206:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 207:Src/main.cpp  **** 		{
 208:Src/main.cpp  **** 			if(p->numOfTargets == 0)
 209:Src/main.cpp  **** 				calculatedPoints++;
 210:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 211:Src/main.cpp  **** 				calculatedPoints++;
 212:Src/main.cpp  **** 			addTarget(p, currP);
 213:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 214:Src/main.cpp  **** 				initPoint(currP);
 215:Src/main.cpp  **** 		}
 216:Src/main.cpp  **** 	}
 217:Src/main.cpp  **** 	free(points);
 218:Src/main.cpp  **** }
 219:Src/main.cpp  **** 
 220:Src/main.cpp  **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 5


 221:Src/main.cpp  **** 
 222:Src/main.cpp  **** 
 223:Src/main.cpp  **** 
 224:Src/main.cpp  **** 
 225:Src/main.cpp  **** 
 226:Src/main.cpp  **** 
 227:Src/main.cpp  **** 
 228:Src/main.cpp  **** 
 229:Src/main.cpp  **** 
 230:Src/main.cpp  **** 
 231:Src/main.cpp  **** 
 232:Src/main.cpp  **** struct coords getCoordsOfPoint(struct graphPoint *p)
 233:Src/main.cpp  **** {
 234:Src/main.cpp  **** 	return (p->c);
 235:Src/main.cpp  **** }
 236:Src/main.cpp  **** 
 237:Src/main.cpp  **** 
 238:Src/main.cpp  **** 
 239:Src/main.cpp  **** 
 240:Src/main.cpp  **** 
 241:Src/main.cpp  **** bool hasUncalculatedPoints(const struct graphPoint *p)
 242:Src/main.cpp  **** {
 243:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 244:Src/main.cpp  **** 	{
 245:Src/main.cpp  **** 		if(!(p->targets[i]->calculated))
 246:Src/main.cpp  **** 			return true;
 247:Src/main.cpp  **** 	}
 248:Src/main.cpp  **** 	return false;
 249:Src/main.cpp  **** }
 250:Src/main.cpp  **** 
 251:Src/main.cpp  **** struct graphPoint* getMinTarget(const struct graphPoint *p)
 252:Src/main.cpp  **** {
 253:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 254:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 255:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 256:Src/main.cpp  **** 	{
 257:Src/main.cpp  **** 		if(!p->targets[i]->calculated && p->targets[i]->weight <= w)
 258:Src/main.cpp  **** 		{
 259:Src/main.cpp  **** 			w = p->targets[i]->weight;
 260:Src/main.cpp  **** 			pp = p->targets[i];
 261:Src/main.cpp  **** 		}
 262:Src/main.cpp  **** 	}
 263:Src/main.cpp  **** 	return pp;
 264:Src/main.cpp  **** }
 265:Src/main.cpp  **** 
 266:Src/main.cpp  **** void calculateWay(size_t index) 
 267:Src/main.cpp  **** {
 268:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 269:Src/main.cpp  **** 		return;
 270:Src/main.cpp  **** 	graph[index]->calculated = true;
 271:Src/main.cpp  **** 	
 272:Src/main.cpp  **** 	if(graph[index]->numOfTargets == 0)
 273:Src/main.cpp  **** 		return;
 274:Src/main.cpp  **** 
 275:Src/main.cpp  **** 	struct graphPoint * watch;
 276:Src/main.cpp  **** 	COORDS_DATATYPE w;
 277:Src/main.cpp  **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 6


 278:Src/main.cpp  **** 	for(size_t i = 0; i < graph[index]->numOfTargets; i++)
 279:Src/main.cpp  **** 	{
 280:Src/main.cpp  **** 		watch = graph[index]->targets[i];
 281:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 282:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 283:Src/main.cpp  **** 		{
 284:Src/main.cpp  **** 			watch->weight = w + graph[index]->weight;
 285:Src/main.cpp  **** 			ways[watch->i] = index;
 286:Src/main.cpp  **** 		}
 287:Src/main.cpp  **** 	}
 288:Src/main.cpp  **** 
 289:Src/main.cpp  **** 	while (hasUncalculatedPoints(graph[index]))
 290:Src/main.cpp  **** 	{
 291:Src/main.cpp  **** 		watch = getMinTarget(graph[index]);
 292:Src/main.cpp  **** 		calculateWay(watch->i);
 293:Src/main.cpp  **** 	}
 294:Src/main.cpp  **** }
 295:Src/main.cpp  **** 
 296:Src/main.cpp  **** 
 297:Src/main.cpp  **** 
 298:Src/main.cpp  **** void drawLine(struct coords *start, struct coords *end)
 299:Src/main.cpp  **** {
 300:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 301:Src/main.cpp  **** }
 302:Src/main.cpp  **** 
 303:Src/main.cpp  **** void drawLine(struct graphPoint *start, struct graphPoint *end)
 304:Src/main.cpp  **** {
 305:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 306:Src/main.cpp  **** }
 307:Src/main.cpp  **** 
 308:Src/main.cpp  **** 
 309:Src/main.cpp  **** // void drawWeight(struct graphPoint *start, struct graphPoint *end)
 310:Src/main.cpp  **** // {
 311:Src/main.cpp  **** // 	COORDS_DATATYPE w = getWayPrice(start, end),
 312:Src/main.cpp  **** // 					x = end->c.x - start->c.x,
 313:Src/main.cpp  **** // 					y = end->c.y - start->c.y;
 314:Src/main.cpp  **** // 	drawText(to_wstring(w), 12, x, y);
 315:Src/main.cpp  **** // }
 316:Src/main.cpp  **** 
 317:Src/main.cpp  **** 
 318:Src/main.cpp  **** // void drawWeight(struct coords *start, struct coords *end)
 319:Src/main.cpp  **** // {
 320:Src/main.cpp  **** // 	glSetColor(0xFFFFFF);
 321:Src/main.cpp  **** // 	COORDS_DATATYPE w = getWayPrice(start, end),
 322:Src/main.cpp  **** // 					x = (end->x + start->x) / 2,
 323:Src/main.cpp  **** // 					y = (end->y + start->y) / 2;
 324:Src/main.cpp  **** // 	drawText(to_wstring(w), 10, x, y);
 325:Src/main.cpp  **** // }
 326:Src/main.cpp  **** 
 327:Src/main.cpp  **** 
 328:Src/main.cpp  **** 
 329:Src/main.cpp  **** void drawEdges(struct graphPoint *p)
 330:Src/main.cpp  **** {
 331:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 332:Src/main.cpp  **** 	{
 333:Src/main.cpp  **** 		return;
 334:Src/main.cpp  **** 	}
GAS LISTING /tmp/cc4RI4t5.s 			page 7


 335:Src/main.cpp  **** 	glSetColor(GRAPH_COLOR);
 336:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 337:Src/main.cpp  **** 	{
 338:Src/main.cpp  **** 		drawLine(&p->c, &p->targets[i]->c);
 339:Src/main.cpp  **** 	}
 340:Src/main.cpp  **** }
 341:Src/main.cpp  **** 
 342:Src/main.cpp  **** 
 343:Src/main.cpp  **** 
 344:Src/main.cpp  **** 
 345:Src/main.cpp  **** void drawObstacle(const struct obstacle *o)
 346:Src/main.cpp  **** {
 347:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 348:Src/main.cpp  **** 	glSetColor(OBST_COLOR);
 349:Src/main.cpp  **** 	// drawQuad(o->c->x, o->c->y, o->a);
 350:Src/main.cpp  **** 	drawRect(o->c->x, o->c->y, o->a, o->b);
 351:Src/main.cpp  **** 	glSetColor(DATA_COLOR);
 352:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 353:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 354:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 355:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 356:Src/main.cpp  **** }
 357:Src/main.cpp  **** 
 358:Src/main.cpp  **** 
 359:Src/main.cpp  **** void drawWay(size_t pointNum, size_t target)
 360:Src/main.cpp  **** {
 361:Src/main.cpp  **** 	size_t curr = pointNum;
 362:Src/main.cpp  **** 	while(curr != target)
 363:Src/main.cpp  **** 	{
 364:Src/main.cpp  **** 		drawLine(graph[curr], graph[ways[curr]]);
 365:Src/main.cpp  **** 		curr = ways[curr];
 366:Src/main.cpp  **** 	}
 367:Src/main.cpp  **** }
 368:Src/main.cpp  **** 
 369:Src/main.cpp  **** 
 370:Src/main.cpp  **** void renderScene(void)
 371:Src/main.cpp  **** {
 372:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 373:Src/main.cpp  **** 
 374:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 375:Src/main.cpp  **** 		{
 376:Src/main.cpp  **** 			drawObstacle(&obstacles[i]);
 377:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 378:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 379:Src/main.cpp  **** 		}
 380:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 381:Src/main.cpp  **** 		{
 382:Src/main.cpp  **** 			glLineWidth(1);
 383:Src/main.cpp  **** 			drawEdges(graph[i]);
 384:Src/main.cpp  **** 		}
 385:Src/main.cpp  **** 
 386:Src/main.cpp  **** 		glLineWidth(5);
 387:Src/main.cpp  **** 		glSetColor(0x00FF99);
 388:Src/main.cpp  **** 		drawWay(home, target);
 389:Src/main.cpp  **** 
 390:Src/main.cpp  ****     glutSwapBuffers();
 391:Src/main.cpp  **** }
GAS LISTING /tmp/cc4RI4t5.s 			page 8


 392:Src/main.cpp  **** 
 393:Src/main.cpp  **** 
 394:Src/main.cpp  **** void handleKeypress(unsigned char key, //The key that was pressed
 395:Src/main.cpp  ****                                         int x, int y) //The current mouse coordinates
 396:Src/main.cpp  **** {
 397:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 398:Src/main.cpp  ****     if(key == 27) //ESC
 399:Src/main.cpp  ****     {
 400:Src/main.cpp  **** 	    cout << "ESC\n";
 401:Src/main.cpp  **** 		terminated = true;
 402:Src/main.cpp  ****     }
 403:Src/main.cpp  **** }
 404:Src/main.cpp  **** 
 405:Src/main.cpp  **** 
 406:Src/main.cpp  **** 
 407:Src/main.cpp  **** 
 408:Src/main.cpp  **** 
 409:Src/main.cpp  **** void reshape(int w, int h)
 410:Src/main.cpp  **** {
  10              		.loc 1 410 1 view -0
  11              		.cfi_startproc
  12              		.loc 1 410 1 is_stmt 0 view .LVU1
  13 0000 55       		pushq	%rbp
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0001 53       		pushq	%rbx
  17              		.cfi_def_cfa_offset 24
  18              		.cfi_offset 3, -24
  19 0002 4883EC08 		subq	$8, %rsp
  20              		.cfi_def_cfa_offset 32
  21 0006 89FB     		movl	%edi, %ebx
  22 0008 89F5     		movl	%esi, %ebp
 411:Src/main.cpp  **** 	glViewport(0, 0, w, h);
  23              		.loc 1 411 2 is_stmt 1 view .LVU2
  24              		.loc 1 411 12 is_stmt 0 view .LVU3
  25 000a 89F1     		movl	%esi, %ecx
  26 000c 89FA     		movl	%edi, %edx
  27 000e BE000000 		movl	$0, %esi
  27      00
  28              	.LVL1:
  29              		.loc 1 411 12 view .LVU4
  30 0013 BF000000 		movl	$0, %edi
  30      00
  31              	.LVL2:
  32              		.loc 1 411 12 view .LVU5
  33 0018 E8000000 		call	glViewport@PLT
  33      00
  34              	.LVL3:
 412:Src/main.cpp  **** 
 413:Src/main.cpp  **** 	glMatrixMode(GL_PROJECTION);
  35              		.loc 1 413 2 is_stmt 1 view .LVU6
  36              		.loc 1 413 14 is_stmt 0 view .LVU7
  37 001d BF011700 		movl	$5889, %edi
  37      00
  38 0022 E8000000 		call	glMatrixMode@PLT
  38      00
  39              	.LVL4:
GAS LISTING /tmp/cc4RI4t5.s 			page 9


 414:Src/main.cpp  **** 	glLoadIdentity();
  40              		.loc 1 414 2 is_stmt 1 view .LVU8
  41              		.loc 1 414 16 is_stmt 0 view .LVU9
  42 0027 E8000000 		call	glLoadIdentity@PLT
  42      00
  43              	.LVL5:
 415:Src/main.cpp  **** 	gluOrtho2D(0, w, 0, h);
  44              		.loc 1 415 2 is_stmt 1 view .LVU10
  45              		.loc 1 415 12 is_stmt 0 view .LVU11
  46 002c 660FEFDB 		pxor	%xmm3, %xmm3
  47 0030 F20F2ADD 		cvtsi2sdl	%ebp, %xmm3
  48 0034 660FEFD2 		pxor	%xmm2, %xmm2
  49 0038 660FEFC9 		pxor	%xmm1, %xmm1
  50 003c F20F2ACB 		cvtsi2sdl	%ebx, %xmm1
  51 0040 660F28C2 		movapd	%xmm2, %xmm0
  52 0044 E8000000 		call	gluOrtho2D@PLT
  52      00
  53              	.LVL6:
 416:Src/main.cpp  **** 
 417:Src/main.cpp  **** 	glMatrixMode(GL_MODELVIEW);
  54              		.loc 1 417 2 is_stmt 1 view .LVU12
  55              		.loc 1 417 14 is_stmt 0 view .LVU13
  56 0049 BF001700 		movl	$5888, %edi
  56      00
  57 004e E8000000 		call	glMatrixMode@PLT
  57      00
  58              	.LVL7:
 418:Src/main.cpp  **** 	glLoadIdentity();
  59              		.loc 1 418 2 is_stmt 1 view .LVU14
  60              		.loc 1 418 16 is_stmt 0 view .LVU15
  61 0053 E8000000 		call	glLoadIdentity@PLT
  61      00
  62              	.LVL8:
 419:Src/main.cpp  **** }
  63              		.loc 1 419 1 view .LVU16
  64 0058 4883C408 		addq	$8, %rsp
  65              		.cfi_def_cfa_offset 24
  66 005c 5B       		popq	%rbx
  67              		.cfi_def_cfa_offset 16
  68              	.LVL9:
  69              		.loc 1 419 1 view .LVU17
  70 005d 5D       		popq	%rbp
  71              		.cfi_def_cfa_offset 8
  72              	.LVL10:
  73              		.loc 1 419 1 view .LVU18
  74 005e C3       		ret
  75              		.cfi_endproc
  76              	.LFE2498:
  78              		.globl	_Z4timfi
  80              	_Z4timfi:
  81              	.LVL11:
  82              	.LFB2499:
 420:Src/main.cpp  **** 
 421:Src/main.cpp  **** 
 422:Src/main.cpp  **** 
 423:Src/main.cpp  **** 
 424:Src/main.cpp  **** void timf(int value)				// Timer function
GAS LISTING /tmp/cc4RI4t5.s 			page 10


 425:Src/main.cpp  **** {
  83              		.loc 1 425 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		.loc 1 425 1 is_stmt 0 view .LVU20
  86 005f 4883EC08 		subq	$8, %rsp
  87              		.cfi_def_cfa_offset 16
 426:Src/main.cpp  **** 	if(!terminated)					//if don't wanna terminate
  88              		.loc 1 426 2 is_stmt 1 view .LVU21
  89 0063 803D0000 		cmpb	$0, terminated(%rip)
  89      000000
  90 006a 7520     		jne	.L4
 427:Src/main.cpp  **** 	{
 428:Src/main.cpp  **** 		glutPostRedisplay();		//Redraw windows
  91              		.loc 1 428 3 view .LVU22
  92              		.loc 1 428 20 is_stmt 0 view .LVU23
  93 006c E8000000 		call	glutPostRedisplay@PLT
  93      00
  94              	.LVL12:
 429:Src/main.cpp  **** 		glutTimerFunc(GL_TIMER_DELAY, timf, 0);	//Setup next timer
  95              		.loc 1 429 3 is_stmt 1 view .LVU24
  96              		.loc 1 429 16 is_stmt 0 view .LVU25
  97 0071 BA000000 		movl	$0, %edx
  97      00
  98 0076 488D3500 		leaq	_Z4timfi(%rip), %rsi
  98      000000
  99 007d BF900100 		movl	$400, %edi
  99      00
 100 0082 E8000000 		call	glutTimerFunc@PLT
 100      00
 101              	.LVL13:
 430:Src/main.cpp  **** 	}
 431:Src/main.cpp  **** 	else							//if wanna terminate
 432:Src/main.cpp  **** 	{
 433:Src/main.cpp  **** 		terminated = false;			//set terminated flag
 434:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 435:Src/main.cpp  **** 	}
 436:Src/main.cpp  **** }
 102              		.loc 1 436 1 view .LVU26
 103 0087 4883C408 		addq	$8, %rsp
 104              		.cfi_remember_state
 105              		.cfi_def_cfa_offset 8
 106 008b C3       		ret
 107              	.LVL14:
 108              	.L4:
 109              		.cfi_restore_state
 433:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 110              		.loc 1 433 3 is_stmt 1 view .LVU27
 433:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 111              		.loc 1 433 14 is_stmt 0 view .LVU28
 112 008c C6050000 		movb	$0, terminated(%rip)
 112      000000
 434:Src/main.cpp  **** 	}
 113              		.loc 1 434 3 is_stmt 1 view .LVU29
 434:Src/main.cpp  **** 	}
 114              		.loc 1 434 7 is_stmt 0 view .LVU30
 115 0093 BF000000 		movl	$0, %edi
 115      00
GAS LISTING /tmp/cc4RI4t5.s 			page 11


 116              	.LVL15:
 434:Src/main.cpp  **** 	}
 117              		.loc 1 434 7 view .LVU31
 118 0098 E8000000 		call	exit@PLT
 118      00
 119              	.LVL16:
 120              		.cfi_endproc
 121              	.LFE2499:
 124              	_Z41__static_initialization_and_destruction_0ii:
 125              	.LVL17:
 126              	.LFB2869:
 437:Src/main.cpp  **** 
 438:Src/main.cpp  **** 
 439:Src/main.cpp  **** 
 440:Src/main.cpp  **** 
 441:Src/main.cpp  **** int main(int argc, char **argv)
 442:Src/main.cpp  **** {
 443:Src/main.cpp  **** 	numOfObstacles = 30;
 444:Src/main.cpp  **** 	size_t iter = 0;
 445:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 446:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 447:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 448:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(510, 350, 200, 100);
 449:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 450:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(80, 330, 50);
 451:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(120, 340, 50);
 452:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(60, 400, 30);
 453:Src/main.cpp  **** 	numOfObstacles = iter;
 454:Src/main.cpp  **** 
 455:Src/main.cpp  **** 	graphSize = numOfObstacles * 4 + 2;
 456:Src/main.cpp  **** 
 457:Src/main.cpp  **** 	struct graphPoint *p = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 458:Src/main.cpp  **** 
 459:Src/main.cpp  **** 	struct coords c;
 460:Src/main.cpp  **** 	c.x = 350;
 461:Src/main.cpp  **** 	c.y = 10;
 462:Src/main.cpp  **** 	p->c = c;
 463:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 464:Src/main.cpp  **** 
 465:Src/main.cpp  **** 	struct coords c2;
 466:Src/main.cpp  **** 	c2.x = 80;
 467:Src/main.cpp  **** 	c2.y = 440;
 468:Src/main.cpp  **** 	p2->c = c2;
 469:Src/main.cpp  **** 
 470:Src/main.cpp  **** 	graph = (struct graphPoint**)malloc(graphSize * sizeof(struct graphPoint*));
 471:Src/main.cpp  **** 	target = numOfObstacles * 4;
 472:Src/main.cpp  **** 	home = target + 1;
 473:Src/main.cpp  **** 	p2->i = home;
 474:Src/main.cpp  **** 	p->i = target;
 475:Src/main.cpp  **** 	graph[target] = p;
 476:Src/main.cpp  **** 	graph[home] = p2;
 477:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 478:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 479:Src/main.cpp  **** 
 480:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 481:Src/main.cpp  **** 	{
 482:Src/main.cpp  **** 		graph[i]->i = i;
GAS LISTING /tmp/cc4RI4t5.s 			page 12


 483:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 484:Src/main.cpp  **** 	}
 485:Src/main.cpp  **** 	graph[target]->weight = 0;
 486:Src/main.cpp  **** 
 487:Src/main.cpp  **** 	ways = (size_t*)malloc(graphSize * sizeof(size_t));
 488:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 489:Src/main.cpp  **** 		ways[i] = target;
 490:Src/main.cpp  **** 
 491:Src/main.cpp  **** 	startway.x 	= 0;
 492:Src/main.cpp  **** 	startway.y 	= 0;
 493:Src/main.cpp  **** 	endway.x	= 150;
 494:Src/main.cpp  **** 	endway.y	= 150;
 495:Src/main.cpp  **** 
 496:Src/main.cpp  **** 
 497:Src/main.cpp  **** 	struct coords c3;
 498:Src/main.cpp  **** 	c3.x = 200;
 499:Src/main.cpp  **** 	c3.y = 0;
 500:Src/main.cpp  **** 
 501:Src/main.cpp  **** 
 502:Src/main.cpp  **** 	initPoint(p);
 503:Src/main.cpp  **** 	calculateWay(target);
 504:Src/main.cpp  **** 	
 505:Src/main.cpp  **** 	
 506:Src/main.cpp  **** 
 507:Src/main.cpp  **** 	if(argc == 1)
 508:Src/main.cpp  **** 		exit(0);
 509:Src/main.cpp  **** 
 510:Src/main.cpp  **** 	
 511:Src/main.cpp  **** 
 512:Src/main.cpp  **** 
 513:Src/main.cpp  ****  	cout << "glut init\n";
 514:Src/main.cpp  **** 	glutInit(&argc, argv);
 515:Src/main.cpp  **** 	cout << "dispmode\n";
 516:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 517:Src/main.cpp  **** 	glutCreateWindow("floating");
 518:Src/main.cpp  **** 	cout << "reshape\n";
 519:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 520:Src/main.cpp  **** 	cout << "dispfunc\n";
 521:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 522:Src/main.cpp  ****     cout << "keyfunc\n";
 523:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 524:Src/main.cpp  **** 	cout << "timer\n";
 525:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 526:Src/main.cpp  **** 	cout << "mainloop\n";
 527:Src/main.cpp  **** 	glutMainLoop();
 528:Src/main.cpp  **** 
 529:Src/main.cpp  **** 
 530:Src/main.cpp  **** 	return 0;
 531:Src/main.cpp  **** }
 127              		.loc 1 531 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		.loc 1 531 1 is_stmt 0 view .LVU33
 130 009d 83FF01   		cmpl	$1, %edi
 131 00a0 7401     		je	.L13
 132              	.L10:
 133 00a2 C3       		ret
 134              	.L13:
GAS LISTING /tmp/cc4RI4t5.s 			page 13


 135              		.loc 1 531 1 discriminator 1 view .LVU34
 136 00a3 81FEFFFF 		cmpl	$65535, %esi
 136      0000
 137 00a9 75F7     		jne	.L10
 138              		.loc 1 531 1 view .LVU35
 139 00ab 4883EC08 		subq	$8, %rsp
 140              		.cfi_def_cfa_offset 16
 141              		.file 2 "/usr/include/c++/9.2.0/iostream"
   1:/usr/include/c++/9.2.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.2.0/iostream **** 
   3:/usr/include/c++/9.2.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/iostream **** //
   5:/usr/include/c++/9.2.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/iostream **** // any later version.
  10:/usr/include/c++/9.2.0/iostream **** 
  11:/usr/include/c++/9.2.0/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/iostream **** 
  16:/usr/include/c++/9.2.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/iostream **** 
  20:/usr/include/c++/9.2.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/iostream **** 
  25:/usr/include/c++/9.2.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.2.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/iostream ****  */
  28:/usr/include/c++/9.2.0/iostream **** 
  29:/usr/include/c++/9.2.0/iostream **** //
  30:/usr/include/c++/9.2.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.2.0/iostream **** //
  32:/usr/include/c++/9.2.0/iostream **** 
  33:/usr/include/c++/9.2.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.2.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.2.0/iostream **** 
  36:/usr/include/c++/9.2.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/iostream **** 
  38:/usr/include/c++/9.2.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/iostream **** #include <ostream>
  40:/usr/include/c++/9.2.0/iostream **** #include <istream>
  41:/usr/include/c++/9.2.0/iostream **** 
  42:/usr/include/c++/9.2.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.2.0/iostream **** {
  44:/usr/include/c++/9.2.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.2.0/iostream **** 
  46:/usr/include/c++/9.2.0/iostream ****   /**
  47:/usr/include/c++/9.2.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.2.0/iostream ****    *
  49:/usr/include/c++/9.2.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
GAS LISTING /tmp/cc4RI4t5.s 			page 14


  50:/usr/include/c++/9.2.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.2.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.2.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.2.0/iostream ****    *
  54:/usr/include/c++/9.2.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.2.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.2.0/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/9.2.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.2.0/iostream ****   */
  59:/usr/include/c++/9.2.0/iostream ****   //@{
  60:/usr/include/c++/9.2.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.2.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.2.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.2.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.2.0/iostream **** 
  65:/usr/include/c++/9.2.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.2.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.2.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.2.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/9.2.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.2.0/iostream **** #endif
  71:/usr/include/c++/9.2.0/iostream ****   //@}
  72:/usr/include/c++/9.2.0/iostream **** 
  73:/usr/include/c++/9.2.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.2.0/iostream ****   static ios_base::Init __ioinit;
 142              		.loc 2 74 25 view .LVU36
 143 00af 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 143      000000
 144              	.LVL18:
 145              		.loc 2 74 25 view .LVU37
 146 00b6 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 146      00
 147              	.LVL19:
 148              		.loc 2 74 25 view .LVU38
 149 00bb 488D1500 		leaq	__dso_handle(%rip), %rdx
 149      000000
 150 00c2 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 150      000000
 151 00c9 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 151      000000
 152 00d0 E8000000 		call	__cxa_atexit@PLT
 152      00
 153              	.LVL20:
 154              		.loc 1 531 1 view .LVU39
 155 00d5 4883C408 		addq	$8, %rsp
 156              		.cfi_def_cfa_offset 8
 157 00d9 C3       		ret
 158              		.cfi_endproc
 159              	.LFE2869:
 161              		.section	.rodata.str1.1,"aMS",@progbits,1
 162              	.LC1:
 163 0000 50524553 		.string	"PRESSED\n"
 163      5345440A 
 163      00
 164              	.LC2:
 165 0009 4553430A 		.string	"ESC\n"
 165      00
GAS LISTING /tmp/cc4RI4t5.s 			page 15


 166              		.text
 167              		.globl	_Z14handleKeypresshii
 169              	_Z14handleKeypresshii:
 170              	.LVL21:
 171              	.LFB2497:
 396:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 172              		.loc 1 396 1 is_stmt 1 view -0
 173              		.cfi_startproc
 396:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 174              		.loc 1 396 1 is_stmt 0 view .LVU41
 175 00da 4154     		pushq	%r12
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 12, -16
 178 00dc 55       		pushq	%rbp
 179              		.cfi_def_cfa_offset 24
 180              		.cfi_offset 6, -24
 181 00dd 53       		pushq	%rbx
 182              		.cfi_def_cfa_offset 32
 183              		.cfi_offset 3, -32
 184 00de 89FD     		movl	%edi, %ebp
 397:Src/main.cpp  ****     if(key == 27) //ESC
 185              		.loc 1 397 5 is_stmt 1 view .LVU42
 186              	.LVL22:
 187              	.LBB503:
 188              	.LBI503:
 189              		.file 3 "/usr/include/c++/9.2.0/ostream"
   1:/usr/include/c++/9.2.0/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/9.2.0/ostream **** 
   3:/usr/include/c++/9.2.0/ostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ostream **** //
   5:/usr/include/c++/9.2.0/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ostream **** // any later version.
  10:/usr/include/c++/9.2.0/ostream **** 
  11:/usr/include/c++/9.2.0/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ostream **** 
  16:/usr/include/c++/9.2.0/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ostream **** 
  20:/usr/include/c++/9.2.0/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ostream **** 
  25:/usr/include/c++/9.2.0/ostream **** /** @file include/ostream
  26:/usr/include/c++/9.2.0/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/ostream ****  */
  28:/usr/include/c++/9.2.0/ostream **** 
  29:/usr/include/c++/9.2.0/ostream **** //
  30:/usr/include/c++/9.2.0/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/9.2.0/ostream **** //
GAS LISTING /tmp/cc4RI4t5.s 			page 16


  32:/usr/include/c++/9.2.0/ostream **** 
  33:/usr/include/c++/9.2.0/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/9.2.0/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/9.2.0/ostream **** 
  36:/usr/include/c++/9.2.0/ostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/ostream **** 
  38:/usr/include/c++/9.2.0/ostream **** #include <ios>
  39:/usr/include/c++/9.2.0/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/9.2.0/ostream **** 
  41:/usr/include/c++/9.2.0/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/ostream **** {
  43:/usr/include/c++/9.2.0/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/ostream **** 
  45:/usr/include/c++/9.2.0/ostream ****   /**
  46:/usr/include/c++/9.2.0/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/9.2.0/ostream ****    *  @ingroup io
  48:/usr/include/c++/9.2.0/ostream ****    *
  49:/usr/include/c++/9.2.0/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/9.2.0/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/9.2.0/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/9.2.0/ostream ****    *
  53:/usr/include/c++/9.2.0/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/9.2.0/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/9.2.0/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/9.2.0/ostream ****   */
  57:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/9.2.0/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/9.2.0/ostream ****     {
  60:/usr/include/c++/9.2.0/ostream ****     public:
  61:/usr/include/c++/9.2.0/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/9.2.0/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/9.2.0/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/9.2.0/ostream **** 
  68:/usr/include/c++/9.2.0/ostream ****       // Non-standard Types:
  69:/usr/include/c++/9.2.0/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/9.2.0/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/9.2.0/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/9.2.0/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/9.2.0/ostream ****       							__num_put_type;
  74:/usr/include/c++/9.2.0/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/9.2.0/ostream **** 
  76:/usr/include/c++/9.2.0/ostream ****       /**
  77:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/9.2.0/ostream ****        *
  79:/usr/include/c++/9.2.0/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/9.2.0/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/9.2.0/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/9.2.0/ostream ****       */
  83:/usr/include/c++/9.2.0/ostream ****       explicit
  84:/usr/include/c++/9.2.0/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/9.2.0/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/9.2.0/ostream **** 
  87:/usr/include/c++/9.2.0/ostream ****       /**
  88:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base destructor.
GAS LISTING /tmp/cc4RI4t5.s 			page 17


  89:/usr/include/c++/9.2.0/ostream ****        *
  90:/usr/include/c++/9.2.0/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/9.2.0/ostream ****       */
  92:/usr/include/c++/9.2.0/ostream ****       virtual
  93:/usr/include/c++/9.2.0/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/9.2.0/ostream **** 
  95:/usr/include/c++/9.2.0/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/9.2.0/ostream ****       class sentry;
  97:/usr/include/c++/9.2.0/ostream ****       friend class sentry;
  98:/usr/include/c++/9.2.0/ostream **** 
  99:/usr/include/c++/9.2.0/ostream ****       //@{
 100:/usr/include/c++/9.2.0/ostream ****       /**
 101:/usr/include/c++/9.2.0/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/9.2.0/ostream ****        *
 103:/usr/include/c++/9.2.0/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/9.2.0/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/9.2.0/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/9.2.0/ostream ****       */
 107:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 108:/usr/include/c++/9.2.0/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/9.2.0/ostream ****       {
 110:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/9.2.0/ostream **** 	return __pf(*this);
 114:/usr/include/c++/9.2.0/ostream ****       }
 115:/usr/include/c++/9.2.0/ostream **** 
 116:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 117:/usr/include/c++/9.2.0/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/9.2.0/ostream ****       {
 119:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 123:/usr/include/c++/9.2.0/ostream **** 	return *this;
 124:/usr/include/c++/9.2.0/ostream ****       }
 125:/usr/include/c++/9.2.0/ostream **** 
 126:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 127:/usr/include/c++/9.2.0/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/9.2.0/ostream ****       {
 129:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 133:/usr/include/c++/9.2.0/ostream **** 	return *this;
 134:/usr/include/c++/9.2.0/ostream ****       }
 135:/usr/include/c++/9.2.0/ostream ****       //@}
 136:/usr/include/c++/9.2.0/ostream **** 
 137:/usr/include/c++/9.2.0/ostream ****       //@{
 138:/usr/include/c++/9.2.0/ostream ****       /**
 139:/usr/include/c++/9.2.0/ostream ****        *  @name Inserters
 140:/usr/include/c++/9.2.0/ostream ****        *
 141:/usr/include/c++/9.2.0/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/9.2.0/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/9.2.0/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/9.2.0/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/9.2.0/ostream ****        *  status flag; see the sentry documentation for more.
GAS LISTING /tmp/cc4RI4t5.s 			page 18


 146:/usr/include/c++/9.2.0/ostream ****        *
 147:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/9.2.0/ostream ****        *
 150:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/9.2.0/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/9.2.0/ostream ****        *  be rethrown.
 154:/usr/include/c++/9.2.0/ostream ****       */
 155:/usr/include/c++/9.2.0/ostream **** 
 156:/usr/include/c++/9.2.0/ostream ****       //@{
 157:/usr/include/c++/9.2.0/ostream ****       /**
 158:/usr/include/c++/9.2.0/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/9.2.0/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/9.2.0/ostream ****        *
 162:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/9.2.0/ostream ****       */
 165:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 166:/usr/include/c++/9.2.0/ostream ****       operator<<(long __n)
 167:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/9.2.0/ostream **** 
 169:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 170:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/9.2.0/ostream **** 
 173:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 174:/usr/include/c++/9.2.0/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/9.2.0/ostream **** 
 177:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 178:/usr/include/c++/9.2.0/ostream ****       operator<<(short __n);
 179:/usr/include/c++/9.2.0/ostream **** 
 180:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 181:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/9.2.0/ostream ****       {
 183:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/9.2.0/ostream ****       }
 187:/usr/include/c++/9.2.0/ostream **** 
 188:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 189:/usr/include/c++/9.2.0/ostream ****       operator<<(int __n);
 190:/usr/include/c++/9.2.0/ostream **** 
 191:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 192:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/9.2.0/ostream ****       {
 194:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/9.2.0/ostream ****       }
 198:/usr/include/c++/9.2.0/ostream **** 
 199:/usr/include/c++/9.2.0/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 201:/usr/include/c++/9.2.0/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
GAS LISTING /tmp/cc4RI4t5.s 			page 19


 203:/usr/include/c++/9.2.0/ostream **** 
 204:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 205:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/9.2.0/ostream **** #endif
 208:/usr/include/c++/9.2.0/ostream ****       //@}
 209:/usr/include/c++/9.2.0/ostream **** 
 210:/usr/include/c++/9.2.0/ostream ****       //@{
 211:/usr/include/c++/9.2.0/ostream ****       /**
 212:/usr/include/c++/9.2.0/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/9.2.0/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/9.2.0/ostream ****        *
 216:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/9.2.0/ostream ****       */
 219:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 220:/usr/include/c++/9.2.0/ostream ****       operator<<(double __f)
 221:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/9.2.0/ostream **** 
 223:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 224:/usr/include/c++/9.2.0/ostream ****       operator<<(float __f)
 225:/usr/include/c++/9.2.0/ostream ****       {
 226:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/9.2.0/ostream ****       }
 230:/usr/include/c++/9.2.0/ostream **** 
 231:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 232:/usr/include/c++/9.2.0/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/9.2.0/ostream ****       //@}
 235:/usr/include/c++/9.2.0/ostream **** 
 236:/usr/include/c++/9.2.0/ostream ****       /**
 237:/usr/include/c++/9.2.0/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/9.2.0/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/9.2.0/ostream ****        *
 241:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/9.2.0/ostream ****       */
 244:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 245:/usr/include/c++/9.2.0/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/9.2.0/ostream **** 
 248:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 250:/usr/include/c++/9.2.0/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/9.2.0/ostream ****       { return *this << "nullptr"; }
 252:/usr/include/c++/9.2.0/ostream **** #endif
 253:/usr/include/c++/9.2.0/ostream **** 
 254:/usr/include/c++/9.2.0/ostream ****       /**
 255:/usr/include/c++/9.2.0/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/9.2.0/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/9.2.0/ostream ****        *
 258:/usr/include/c++/9.2.0/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/9.2.0/ostream ****        *  in that it also constructs a sentry object and has the same error
GAS LISTING /tmp/cc4RI4t5.s 			page 20


 260:/usr/include/c++/9.2.0/ostream ****        *  handling behavior.
 261:/usr/include/c++/9.2.0/ostream ****        *
 262:/usr/include/c++/9.2.0/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/9.2.0/ostream ****        *
 264:/usr/include/c++/9.2.0/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/9.2.0/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/9.2.0/ostream ****        *
 267:/usr/include/c++/9.2.0/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/9.2.0/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/9.2.0/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/9.2.0/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/9.2.0/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/9.2.0/ostream ****        *
 273:/usr/include/c++/9.2.0/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/9.2.0/ostream ****       */
 275:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 276:/usr/include/c++/9.2.0/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/9.2.0/ostream ****       //@}
 278:/usr/include/c++/9.2.0/ostream **** 
 279:/usr/include/c++/9.2.0/ostream ****       //@{
 280:/usr/include/c++/9.2.0/ostream ****       /**
 281:/usr/include/c++/9.2.0/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/9.2.0/ostream ****        *
 283:/usr/include/c++/9.2.0/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/9.2.0/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/9.2.0/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/9.2.0/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/9.2.0/ostream ****        *  for more.
 288:/usr/include/c++/9.2.0/ostream ****        *
 289:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/9.2.0/ostream ****        *
 292:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/9.2.0/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/9.2.0/ostream ****        *  without completing its actions.
 296:/usr/include/c++/9.2.0/ostream ****       */
 297:/usr/include/c++/9.2.0/ostream **** 
 298:/usr/include/c++/9.2.0/ostream ****       /**
 299:/usr/include/c++/9.2.0/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/9.2.0/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 302:/usr/include/c++/9.2.0/ostream ****        *
 303:/usr/include/c++/9.2.0/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/9.2.0/ostream ****        *
 305:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 307:/usr/include/c++/9.2.0/ostream ****       */
 308:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 309:/usr/include/c++/9.2.0/ostream ****       put(char_type __c);
 310:/usr/include/c++/9.2.0/ostream **** 
 311:/usr/include/c++/9.2.0/ostream ****       /**
 312:/usr/include/c++/9.2.0/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/9.2.0/ostream ****       */
 316:/usr/include/c++/9.2.0/ostream ****       void
GAS LISTING /tmp/cc4RI4t5.s 			page 21


 317:/usr/include/c++/9.2.0/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/9.2.0/ostream ****       {
 319:/usr/include/c++/9.2.0/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/9.2.0/ostream **** 	if (__put != __n)
 321:/usr/include/c++/9.2.0/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/9.2.0/ostream ****       }
 323:/usr/include/c++/9.2.0/ostream **** 
 324:/usr/include/c++/9.2.0/ostream ****       /**
 325:/usr/include/c++/9.2.0/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 329:/usr/include/c++/9.2.0/ostream ****        *
 330:/usr/include/c++/9.2.0/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/9.2.0/ostream ****        *  one of the following happens:
 332:/usr/include/c++/9.2.0/ostream ****        *
 333:/usr/include/c++/9.2.0/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/9.2.0/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/9.2.0/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/9.2.0/ostream ****        *
 337:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 339:/usr/include/c++/9.2.0/ostream ****       */
 340:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 341:/usr/include/c++/9.2.0/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/9.2.0/ostream ****       //@}
 343:/usr/include/c++/9.2.0/ostream **** 
 344:/usr/include/c++/9.2.0/ostream ****       /**
 345:/usr/include/c++/9.2.0/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 347:/usr/include/c++/9.2.0/ostream ****        *
 348:/usr/include/c++/9.2.0/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/9.2.0/ostream ****        *
 350:/usr/include/c++/9.2.0/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/9.2.0/ostream ****        *  sets badbit.
 352:/usr/include/c++/9.2.0/ostream ****       */
 353:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 354:/usr/include/c++/9.2.0/ostream ****       flush();
 355:/usr/include/c++/9.2.0/ostream **** 
 356:/usr/include/c++/9.2.0/ostream ****       /**
 357:/usr/include/c++/9.2.0/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/9.2.0/ostream ****        *  @return  A file position object.
 359:/usr/include/c++/9.2.0/ostream ****        *
 360:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/9.2.0/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/9.2.0/ostream ****       */
 363:/usr/include/c++/9.2.0/ostream ****       pos_type
 364:/usr/include/c++/9.2.0/ostream ****       tellp();
 365:/usr/include/c++/9.2.0/ostream **** 
 366:/usr/include/c++/9.2.0/ostream ****       /**
 367:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/9.2.0/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 370:/usr/include/c++/9.2.0/ostream ****        *
 371:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/9.2.0/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/9.2.0/ostream ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 22


 374:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 375:/usr/include/c++/9.2.0/ostream ****       seekp(pos_type);
 376:/usr/include/c++/9.2.0/ostream **** 
 377:/usr/include/c++/9.2.0/ostream ****       /**
 378:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/9.2.0/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/9.2.0/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 382:/usr/include/c++/9.2.0/ostream ****        *
 383:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/9.2.0/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/9.2.0/ostream ****       */
 386:/usr/include/c++/9.2.0/ostream ****        __ostream_type&
 387:/usr/include/c++/9.2.0/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/9.2.0/ostream **** 
 389:/usr/include/c++/9.2.0/ostream ****     protected:
 390:/usr/include/c++/9.2.0/ostream ****       basic_ostream()
 391:/usr/include/c++/9.2.0/ostream ****       { this->init(0); }
 392:/usr/include/c++/9.2.0/ostream **** 
 393:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/9.2.0/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/9.2.0/ostream **** 
 397:/usr/include/c++/9.2.0/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/9.2.0/ostream **** 
 399:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/9.2.0/ostream ****       : __ios_type()
 401:/usr/include/c++/9.2.0/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/9.2.0/ostream **** 
 403:/usr/include/c++/9.2.0/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/9.2.0/ostream **** 
 405:/usr/include/c++/9.2.0/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/9.2.0/ostream **** 
 407:/usr/include/c++/9.2.0/ostream ****       basic_ostream&
 408:/usr/include/c++/9.2.0/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/9.2.0/ostream ****       {
 410:/usr/include/c++/9.2.0/ostream **** 	swap(__rhs);
 411:/usr/include/c++/9.2.0/ostream **** 	return *this;
 412:/usr/include/c++/9.2.0/ostream ****       }
 413:/usr/include/c++/9.2.0/ostream **** 
 414:/usr/include/c++/9.2.0/ostream ****       void
 415:/usr/include/c++/9.2.0/ostream ****       swap(basic_ostream& __rhs)
 416:/usr/include/c++/9.2.0/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/9.2.0/ostream **** #endif
 418:/usr/include/c++/9.2.0/ostream **** 
 419:/usr/include/c++/9.2.0/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/9.2.0/ostream **** 	__ostream_type&
 421:/usr/include/c++/9.2.0/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/9.2.0/ostream ****     };
 423:/usr/include/c++/9.2.0/ostream **** 
 424:/usr/include/c++/9.2.0/ostream ****   /**
 425:/usr/include/c++/9.2.0/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/9.2.0/ostream ****    *
 427:/usr/include/c++/9.2.0/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/9.2.0/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/9.2.0/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/9.2.0/ostream ****   */
GAS LISTING /tmp/cc4RI4t5.s 			page 23


 431:/usr/include/c++/9.2.0/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/9.2.0/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/9.2.0/ostream ****     {
 434:/usr/include/c++/9.2.0/ostream ****       // Data Members.
 435:/usr/include/c++/9.2.0/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/9.2.0/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/9.2.0/ostream **** 
 438:/usr/include/c++/9.2.0/ostream ****     public:
 439:/usr/include/c++/9.2.0/ostream ****       /**
 440:/usr/include/c++/9.2.0/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/9.2.0/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/9.2.0/ostream ****        *
 443:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/9.2.0/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/9.2.0/ostream ****        *  is called to synchronize the output sequences.
 446:/usr/include/c++/9.2.0/ostream ****        *
 447:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/9.2.0/ostream ****        *  true (@a okay).
 449:/usr/include/c++/9.2.0/ostream ****       */
 450:/usr/include/c++/9.2.0/ostream ****       explicit
 451:/usr/include/c++/9.2.0/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/9.2.0/ostream **** 
 453:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic push
 454:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/9.2.0/ostream ****       /**
 456:/usr/include/c++/9.2.0/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/9.2.0/ostream ****        *
 458:/usr/include/c++/9.2.0/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/9.2.0/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/9.2.0/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/9.2.0/ostream ****       */
 462:/usr/include/c++/9.2.0/ostream ****       ~sentry()
 463:/usr/include/c++/9.2.0/ostream ****       {
 464:/usr/include/c++/9.2.0/ostream **** 	// XXX MT
 465:/usr/include/c++/9.2.0/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/9.2.0/ostream **** 	  {
 467:/usr/include/c++/9.2.0/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:/usr/include/c++/9.2.0/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/9.2.0/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/9.2.0/ostream **** 	  }
 471:/usr/include/c++/9.2.0/ostream ****       }
 472:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic pop
 473:/usr/include/c++/9.2.0/ostream **** 
 474:/usr/include/c++/9.2.0/ostream ****       /**
 475:/usr/include/c++/9.2.0/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/9.2.0/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/9.2.0/ostream ****        *
 478:/usr/include/c++/9.2.0/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/9.2.0/ostream ****        *  return value is that of the sentry state (true == okay).
 480:/usr/include/c++/9.2.0/ostream ****       */
 481:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/9.2.0/ostream ****       explicit
 483:/usr/include/c++/9.2.0/ostream **** #endif
 484:/usr/include/c++/9.2.0/ostream ****       operator bool() const
 485:/usr/include/c++/9.2.0/ostream ****       { return _M_ok; }
 486:/usr/include/c++/9.2.0/ostream ****     };
 487:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 24


 488:/usr/include/c++/9.2.0/ostream ****   //@{
 489:/usr/include/c++/9.2.0/ostream ****   /**
 490:/usr/include/c++/9.2.0/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/9.2.0/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 494:/usr/include/c++/9.2.0/ostream ****    *
 495:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/9.2.0/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/9.2.0/ostream ****    *  called.
 500:/usr/include/c++/9.2.0/ostream ****    *
 501:/usr/include/c++/9.2.0/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/9.2.0/ostream ****    *  @c char, the character is widened before insertion.
 503:/usr/include/c++/9.2.0/ostream ****   */
 504:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/9.2.0/ostream **** 
 509:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/9.2.0/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/9.2.0/ostream **** 
 514:/usr/include/c++/9.2.0/ostream ****   // Specialization
 515:/usr/include/c++/9.2.0/ostream ****   template <class _Traits>
 516:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/9.2.0/ostream **** 
 520:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 521:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 522:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 525:/usr/include/c++/9.2.0/ostream **** 
 526:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 527:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 530:/usr/include/c++/9.2.0/ostream ****   //@}
 531:/usr/include/c++/9.2.0/ostream **** 
 532:/usr/include/c++/9.2.0/ostream ****   //@{
 533:/usr/include/c++/9.2.0/ostream ****   /**
 534:/usr/include/c++/9.2.0/ostream ****    *  @brief  String inserters
 535:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 536:/usr/include/c++/9.2.0/ostream ****    *  @param  __s  A character string.
 537:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 538:/usr/include/c++/9.2.0/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 539:/usr/include/c++/9.2.0/ostream ****    *
 540:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 541:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 542:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 543:/usr/include/c++/9.2.0/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 544:/usr/include/c++/9.2.0/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
GAS LISTING /tmp/cc4RI4t5.s 			page 25


 545:/usr/include/c++/9.2.0/ostream ****   */
 546:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 547:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 548:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 549:/usr/include/c++/9.2.0/ostream ****     {
 550:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 551:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 552:/usr/include/c++/9.2.0/ostream ****       else
 553:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 554:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 555:/usr/include/c++/9.2.0/ostream ****       return __out;
 556:/usr/include/c++/9.2.0/ostream ****     }
 557:/usr/include/c++/9.2.0/ostream **** 
 558:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/9.2.0/ostream ****     basic_ostream<_CharT, _Traits> &
 560:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 561:/usr/include/c++/9.2.0/ostream **** 
 562:/usr/include/c++/9.2.0/ostream ****   // Partial specializations
 563:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 564:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 565:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 190              		.loc 3 565 5 view .LVU43
 191              		.loc 3 565 5 is_stmt 0 view .LVU44
 192              	.LBE503:
 193              		.file 4 "/usr/include/c++/9.2.0/bits/char_traits.h"
   1:/usr/include/c++/9.2.0/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/char_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/char_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/char_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  31:/usr/include/c++/9.2.0/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/char_traits.h **** //
GAS LISTING /tmp/cc4RI4t5.s 			page 26


  33:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  34:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/9.2.0/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  37:/usr/include/c++/9.2.0/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  43:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/c++/9.2.0/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
  46:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  47:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/9.2.0/bits/char_traits.h **** {
  49:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  51:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  52:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  54:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  64:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
  69:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  70:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  71:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  72:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  74:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  82:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
  86:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits
  88:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  89:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef _CharT                                    char_type;
GAS LISTING /tmp/cc4RI4t5.s 			page 27


  90:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  95:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  99:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 103:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 107:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 110:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s);
 112:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 113:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 117:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 119:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 120:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 122:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 123:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 125:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 129:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 133:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof()
 139:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 141:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
 145:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 146:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
GAS LISTING /tmp/cc4RI4t5.s 			page 28


 147:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/c++/9.2.0/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 151:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return -1;
 154:/usr/include/c++/9.2.0/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 1;
 156:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 157:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 158:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 159:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/c++/9.2.0/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 164:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/c++/9.2.0/bits/char_traits.h ****         ++__i;
 167:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i;
 168:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 169:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 170:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/c++/9.2.0/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 175:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/c++/9.2.0/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/c++/9.2.0/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 179:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 180:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 181:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/c++/9.2.0/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 186:/usr/include/c++/9.2.0/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __s1;
 188:/usr/include/c++/9.2.0/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/c++/9.2.0/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 191:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 192:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/c++/9.2.0/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 197:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s1;
 200:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 201:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 202:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
GAS LISTING /tmp/cc4RI4t5.s 			page 29


 204:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 205:/usr/include/c++/9.2.0/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 207:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s;
 210:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 211:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 212:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/c++/9.2.0/bits/char_traits.h **** } // namespace
 214:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 215:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/c++/9.2.0/bits/char_traits.h **** {
 217:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 219:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/c++/9.2.0/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 223:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __s  The string.
 226:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 227:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 229:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 233:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __s;
 235:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 238:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__s++;
 240:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 242:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 243:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 244:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 245:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 250:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 252:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 253:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 256:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __a;
 258:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __n;
 259:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
GAS LISTING /tmp/cc4RI4t5.s 			page 30


 261:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 262:/usr/include/c++/9.2.0/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__i++;
 265:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 267:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 268:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 269:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 270:/usr/include/c++/9.2.0/bits/char_traits.h ****   // 21.1
 271:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 272:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 274:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 279:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/c++/9.2.0/bits/char_traits.h ****   */
 283:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<class _CharT>
 284:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/c++/9.2.0/bits/char_traits.h ****     { };
 286:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 287:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 288:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 290:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 292:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 298:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 302:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 306:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 309:/usr/include/c++/9.2.0/bits/char_traits.h **** 	// LWG 467.
 310:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/c++/9.2.0/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 313:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 314:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 317:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
GAS LISTING /tmp/cc4RI4t5.s 			page 31


 318:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 319:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 325:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 327:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 328:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 331:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 335:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_strlen(__s);
 194              		.loc 4 335 2 is_stmt 1 view .LVU45
 195              	.LBB505:
 196              	.LBB504:
 566:/usr/include/c++/9.2.0/ostream ****     {
 567:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 568:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 569:/usr/include/c++/9.2.0/ostream ****       else
 570:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 197              		.loc 3 570 18 is_stmt 0 view .LVU46
 198 00e0 BA080000 		movl	$8, %edx
 198      00
 199              	.LVL23:
 200              		.loc 3 570 18 view .LVU47
 201 00e5 488D3500 		leaq	.LC1(%rip), %rsi
 201      000000
 202              	.LVL24:
 203              		.loc 3 570 18 view .LVU48
 204 00ec 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 204      000000
 205              	.LVL25:
 206              		.loc 3 570 18 view .LVU49
 207 00f3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 207      00
 208              	.LVL26:
 209              		.loc 3 570 18 view .LVU50
 210              	.LBE504:
 211              	.LBE505:
 397:Src/main.cpp  ****     if(key == 27) //ESC
 212              		.loc 1 397 33 view .LVU51
 213 00f8 400FB6F5 		movzbl	%bpl, %esi
 214 00fc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 214      000000
 215 0103 E8000000 		call	_ZNSolsEi@PLT
 215      00
 216              	.LVL27:
 217 0108 4889C3   		movq	%rax, %rbx
 218              	.LVL28:
 219              	.LBB506:
 220              	.LBI506:
GAS LISTING /tmp/cc4RI4t5.s 			page 32


 108:/usr/include/c++/9.2.0/ostream ****       {
 221              		.loc 3 108 7 is_stmt 1 view .LVU52
 222              	.LBB507:
 223              	.LBI507:
 571:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 572:/usr/include/c++/9.2.0/ostream ****       return __out;
 573:/usr/include/c++/9.2.0/ostream ****     }
 574:/usr/include/c++/9.2.0/ostream **** 
 575:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 576:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 577:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 578:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 579:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 580:/usr/include/c++/9.2.0/ostream **** 
 581:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 582:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits> &
 583:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 584:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 585:/usr/include/c++/9.2.0/ostream ****   //@}
 586:/usr/include/c++/9.2.0/ostream **** 
 587:/usr/include/c++/9.2.0/ostream ****   // Standard basic_ostream manipulators
 588:/usr/include/c++/9.2.0/ostream **** 
 589:/usr/include/c++/9.2.0/ostream ****   /**
 590:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a newline and flush the stream.
 591:/usr/include/c++/9.2.0/ostream ****    *
 592:/usr/include/c++/9.2.0/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 593:/usr/include/c++/9.2.0/ostream ****    *  desired, leading to poor buffering performance.  See
 594:/usr/include/c++/9.2.0/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 595:/usr/include/c++/9.2.0/ostream ****    *  for more on this subject.
 596:/usr/include/c++/9.2.0/ostream ****   */
 597:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 598:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 599:/usr/include/c++/9.2.0/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 224              		.loc 3 599 5 view .LVU53
 225              	.LBB508:
 600:/usr/include/c++/9.2.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 226              		.loc 3 600 19 is_stmt 0 view .LVU54
 227 010b 488B00   		movq	(%rax), %rax
 228              	.LVL29:
 229              		.loc 3 600 19 view .LVU55
 230 010e 4889D9   		movq	%rbx, %rcx
 231 0111 480348E8 		addq	-24(%rax), %rcx
 232              	.LVL30:
 233              	.LBB509:
 234              	.LBI509:
 235              		.file 5 "/usr/include/c++/9.2.0/bits/basic_ios.h"
   1:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_ios.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/cc4RI4t5.s 			page 33


  12:/usr/include/c++/9.2.0/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/9.2.0/bits/basic_ios.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/9.2.0/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  33:/usr/include/c++/9.2.0/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  35:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  41:/usr/include/c++/9.2.0/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/basic_ios.h **** {
  43:/usr/include/c++/9.2.0/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  45:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/9.2.0/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  49:/usr/include/c++/9.2.0/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
  51:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/9.2.0/bits/basic_ios.h ****     }
  53:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  54:/usr/include/c++/9.2.0/bits/basic_ios.h ****   /**
  55:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  59:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  63:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/9.2.0/bits/basic_ios.h ****   */
  66:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/9.2.0/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
GAS LISTING /tmp/cc4RI4t5.s 			page 34


  69:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
  70:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  72:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  76:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  82:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  85:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  87:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_get_type;
  92:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  94:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/9.2.0/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 101:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 108:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
 109:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 111:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 113:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 116:/usr/include/c++/9.2.0/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit operator bool() const
 118:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/9.2.0/bits/basic_ios.h **** #else
 120:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/9.2.0/bits/basic_ios.h **** #endif
 123:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 124:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 125:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator!() const
GAS LISTING /tmp/cc4RI4t5.s 			page 35


 126:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 129:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 130:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 133:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 136:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf_state; }
 139:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 140:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 141:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 144:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 147:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 148:/usr/include/c++/9.2.0/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 149:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 150:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 151:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 154:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 156:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 157:/usr/include/c++/9.2.0/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 160:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 164:/usr/include/c++/9.2.0/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 166:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 172:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 173:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 174:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 175:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 177:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 179:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 180:/usr/include/c++/9.2.0/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 36


 183:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 184:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 187:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 189:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 190:/usr/include/c++/9.2.0/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 193:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 194:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 197:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 200:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 201:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 204:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 205:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 206:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 208:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 210:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 211:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 214:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 215:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 218:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 221:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 225:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 226:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 229:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 232:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 234:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <fstream>
GAS LISTING /tmp/cc4RI4t5.s 			page 37


 240:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 242:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 246:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 248:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 251:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 256:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 257:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 259:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/9.2.0/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 262:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 263:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 265:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 267:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 269:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/9.2.0/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 276:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 278:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 281:/usr/include/c++/9.2.0/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/9.2.0/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 284:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 286:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           not tied.
 289:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 290:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 294:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_tie; }
GAS LISTING /tmp/cc4RI4t5.s 			page 38


 297:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 298:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 299:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 304:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 306:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 309:/usr/include/c++/9.2.0/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/9.2.0/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 313:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 314:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 315:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 318:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 320:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 324:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 325:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 329:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 332:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 339:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 343:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 346:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 349:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 350:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 39


 354:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 360:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios&
 361:/usr/include/c++/9.2.0/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 364:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 367:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 369:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 370:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 372:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  }
 377:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 379:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 380:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 381:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 385:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 389:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 392:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 396:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 397:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 399:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 403:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 406:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 409:/usr/include/c++/9.2.0/bits/basic_ios.h ****       locale
 410:/usr/include/c++/9.2.0/bits/basic_ios.h ****       imbue(const locale& __loc);
GAS LISTING /tmp/cc4RI4t5.s 			page 40


 411:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 412:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 413:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 418:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 421:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 426:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 427:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 429:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char
 430:/usr/include/c++/9.2.0/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 433:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 434:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 438:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 440:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 445:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 448:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/9.2.0/bits/basic_ios.h ****       widen(char __c) const
 236              		.loc 5 449 7 is_stmt 1 view .LVU56
 237              	.LBB510:
 450:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 238              		.loc 5 450 30 is_stmt 0 view .LVU57
 239 0115 4C8BA1F0 		movq	240(%rcx), %r12
 239      000000
 240              	.LVL31:
 241              	.LBB511:
 242              	.LBI511:
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
 243              		.loc 5 47 5 is_stmt 1 view .LVU58
 244              	.LBB512:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 245              		.loc 5 49 7 is_stmt 0 view .LVU59
 246 011c 4D85E4   		testq	%r12, %r12
 247 011f 742D     		je	.L20
 248              	.LVL32:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
GAS LISTING /tmp/cc4RI4t5.s 			page 41


 249              		.loc 5 49 7 view .LVU60
 250              	.LBE512:
 251              	.LBE511:
 252              	.LBB514:
 253              	.LBI514:
 254              		.file 6 "/usr/include/c++/9.2.0/bits/locale_facets.h"
   1:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
   3:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
   5:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  11:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  16:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  20:/usr/include/c++/9.2.0/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  25:/usr/include/c++/9.2.0/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/9.2.0/bits/locale_facets.h ****  */
  29:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  30:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  31:/usr/include/c++/9.2.0/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  33:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  34:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/9.2.0/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  37:/usr/include/c++/9.2.0/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  39:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  50:/usr/include/c++/9.2.0/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/9.2.0/bits/locale_facets.h **** {
GAS LISTING /tmp/cc4RI4t5.s 			page 42


  52:/usr/include/c++/9.2.0/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  54:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  59:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  62:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  65:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  67:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  68:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _Tp>
  72:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  73:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  75:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  76:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  79:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  82:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  84:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  87:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  89:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  92:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/9.2.0/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
  97:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static void
  98:/usr/include/c++/9.2.0/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 101:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 102:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _CharT*
GAS LISTING /tmp/cc4RI4t5.s 			page 43


 109:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 113:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 118:/usr/include/c++/9.2.0/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 121:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 124:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 125:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 128:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _OutIter
 129:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 131:/usr/include/c++/9.2.0/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 135:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 136:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 137:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 140:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 141:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 143:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 146:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 149:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 152:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 153:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 157:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 158:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 160:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 164:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
GAS LISTING /tmp/cc4RI4t5.s 			page 44


 166:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 168:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool
 169:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 172:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 173:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 175:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 180:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 185:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 186:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 189:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 190:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 192:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 196:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 201:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 205:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 206:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 208:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 212:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 217:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 221:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 222:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
GAS LISTING /tmp/cc4RI4t5.s 			page 45


 223:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 224:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 228:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 229:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 231:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 234:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 235:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 236:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 238:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 242:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 246:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 250:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 251:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 253:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 257:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 260:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 264:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 265:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 267:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 271:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 275:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 279:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
GAS LISTING /tmp/cc4RI4t5.s 			page 46


 280:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 282:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 286:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 289:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type.
 291:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 292:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 296:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 297:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 299:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 303:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 306:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 311:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 315:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 316:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 318:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 323:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 326:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 329:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 330:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char
 331:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 334:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 335:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 47


 337:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 343:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 346:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 352:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 357:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 361:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 364:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 365:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 367:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 369:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 373:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 377:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 380:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 381:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 383:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the input.
 386:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 387:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 391:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
GAS LISTING /tmp/cc4RI4t5.s 			page 48


 394:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 396:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 400:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 401:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 403:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 406:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 410:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 415:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 419:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 420:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 422:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 425:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 429:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 434:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 438:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 439:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 441:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 445:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 449:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
GAS LISTING /tmp/cc4RI4t5.s 			page 49


 451:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 452:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 455:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 456:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 458:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 461:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 465:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 469:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 472:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 473:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 474:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 475:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 478:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 482:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 485:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 488:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 489:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 491:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 494:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 498:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 502:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 505:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 506:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 50


 508:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 511:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 514:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 515:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 518:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 519:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 521:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 524:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 525:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 527:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 530:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 534:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 537:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 542:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 545:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 546:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 548:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 552:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 556:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 559:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 563:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
GAS LISTING /tmp/cc4RI4t5.s 			page 51


 565:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 566:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 567:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 569:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 575:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 579:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 582:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 588:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 592:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 593:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 594:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 597:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 601:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 608:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 611:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 614:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 615:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 619:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 52


 622:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 625:/usr/include/c++/9.2.0/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~ctype();
 628:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 629:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 632:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 633:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 635:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 638:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 642:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 645:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 648:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 651:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 654:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 657:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 660:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 663:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 667:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 668:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/9.2.0/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 671:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 672:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 675:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  optimizations as well.
GAS LISTING /tmp/cc4RI4t5.s 			page 53


 679:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 680:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 683:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 684:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 685:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 688:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Data Members:
 690:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:/usr/include/c++/9.2.0/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 701:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 702:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 707:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 708:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 710:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 712:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 717:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 720:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 721:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 723:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 725:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 730:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 734:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 735:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char classification.
GAS LISTING /tmp/cc4RI4t5.s 			page 54


 736:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 737:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 739:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 743:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 746:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 747:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 749:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 753:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 758:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 759:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 761:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 762:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 764:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 767:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 772:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 775:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 776:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 778:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 781:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 786:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 789:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 790:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 792:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
GAS LISTING /tmp/cc4RI4t5.s 			page 55


 793:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 795:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 798:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 799:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 801:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 804:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 805:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 806:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 808:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 811:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 814:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 818:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 822:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 823:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 825:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 828:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 831:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 834:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 838:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 839:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 841:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 844:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 847:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
GAS LISTING /tmp/cc4RI4t5.s 			page 56


 850:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 851:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 855:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 856:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 858:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument will be returned unchanged.
 861:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 862:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 865:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 868:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted character.
 870:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 871:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 255              		.loc 6 872 7 is_stmt 1 view .LVU61
 256              	.LBB515:
 873:/usr/include/c++/9.2.0/bits/locale_facets.h ****       {
 874:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	if (_M_widen_ok)
 257              		.loc 6 874 2 view .LVU62
 258 0121 41807C24 		cmpb	$0, 56(%r12)
 258      3800
 259 0127 742A     		je	.L16
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 260              		.loc 6 875 4 view .LVU63
 261              		.loc 6 875 51 is_stmt 0 view .LVU64
 262 0129 410FB674 		movzbl	67(%r12), %esi
 262      2443
 263              	.LVL33:
 264              	.L17:
 265              		.loc 6 875 51 view .LVU65
 266              	.LBE515:
 267              	.LBE514:
 268              	.LBE510:
 269              	.LBE509:
 270              		.loc 3 600 19 view .LVU66
 271 012f 400FBEF6 		movsbl	%sil, %esi
 272 0133 4889DF   		movq	%rbx, %rdi
 273 0136 E8000000 		call	_ZNSo3putEc@PLT
 273      00
 274              	.LVL34:
 275 013b 4889C7   		movq	%rax, %rdi
 276              	.LVL35:
 277              	.LBB520:
 278              	.LBI520:
 601:/usr/include/c++/9.2.0/ostream **** 
 602:/usr/include/c++/9.2.0/ostream ****   /**
 603:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a null character into the output sequence.
 604:/usr/include/c++/9.2.0/ostream ****    *
GAS LISTING /tmp/cc4RI4t5.s 			page 57


 605:/usr/include/c++/9.2.0/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 606:/usr/include/c++/9.2.0/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 607:/usr/include/c++/9.2.0/ostream ****    *  string terminator.
 608:/usr/include/c++/9.2.0/ostream ****   */
 609:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 610:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 611:/usr/include/c++/9.2.0/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 612:/usr/include/c++/9.2.0/ostream ****     { return __os.put(_CharT()); }
 613:/usr/include/c++/9.2.0/ostream **** 
 614:/usr/include/c++/9.2.0/ostream ****   /**
 615:/usr/include/c++/9.2.0/ostream ****    *  @brief  Flushes the output stream.
 616:/usr/include/c++/9.2.0/ostream ****    *
 617:/usr/include/c++/9.2.0/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 618:/usr/include/c++/9.2.0/ostream ****   */
 619:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 620:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 621:/usr/include/c++/9.2.0/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 279              		.loc 3 621 5 is_stmt 1 view .LVU67
 280              	.LBB521:
 622:/usr/include/c++/9.2.0/ostream ****     { return __os.flush(); }
 281              		.loc 3 622 25 is_stmt 0 view .LVU68
 282 013e E8000000 		call	_ZNSo5flushEv@PLT
 282      00
 283              	.LVL36:
 284              		.loc 3 622 25 view .LVU69
 285              	.LBE521:
 286              	.LBE520:
 287              	.LBE508:
 288              	.LBE507:
 289              	.LBE506:
 398:Src/main.cpp  ****     {
 290              		.loc 1 398 5 is_stmt 1 view .LVU70
 291 0143 4080FD1B 		cmpb	$27, %bpl
 292 0147 7425     		je	.L21
 293              	.L14:
 403:Src/main.cpp  **** 
 294              		.loc 1 403 1 is_stmt 0 view .LVU71
 295 0149 5B       		popq	%rbx
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 24
 298 014a 5D       		popq	%rbp
 299              		.cfi_def_cfa_offset 16
 300 014b 415C     		popq	%r12
 301              		.cfi_def_cfa_offset 8
 302 014d C3       		ret
 303              	.LVL37:
 304              	.L20:
 305              		.cfi_restore_state
 306              	.LBB525:
 307              	.LBB524:
 308              	.LBB523:
 309              	.LBB522:
 310              	.LBB519:
 311              	.LBB517:
 312              	.LBB513:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 313              		.loc 5 50 18 view .LVU72
GAS LISTING /tmp/cc4RI4t5.s 			page 58


 314 014e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 314      00
 315              	.LVL38:
 316              	.L16:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 317              		.loc 5 50 18 view .LVU73
 318              	.LBE513:
 319              	.LBE517:
 320              	.LBB518:
 321              	.LBB516:
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 322              		.loc 6 876 2 is_stmt 1 view .LVU74
 323              		.loc 6 876 21 is_stmt 0 view .LVU75
 324 0153 4C89E7   		movq	%r12, %rdi
 325 0156 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 325      00
 326              	.LVL39:
 877:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 327              		.loc 6 877 2 is_stmt 1 view .LVU76
 328              		.loc 6 877 27 is_stmt 0 view .LVU77
 329 015b 498B0424 		movq	(%r12), %rax
 330              		.loc 6 877 23 view .LVU78
 331 015f BE0A0000 		movl	$10, %esi
 331      00
 332 0164 4C89E7   		movq	%r12, %rdi
 333 0167 FF5030   		call	*48(%rax)
 334              	.LVL40:
 335 016a 89C6     		movl	%eax, %esi
 336              		.loc 6 877 27 view .LVU79
 337 016c EBC1     		jmp	.L17
 338              	.LVL41:
 339              	.L21:
 340              		.loc 6 877 27 view .LVU80
 341              	.LBE516:
 342              	.LBE518:
 343              	.LBE519:
 344              	.LBE522:
 345              	.LBE523:
 346              	.LBE524:
 347              	.LBE525:
 400:Src/main.cpp  **** 		terminated = true;
 348              		.loc 1 400 6 is_stmt 1 view .LVU81
 349              	.LBB526:
 350              	.LBI526:
 565:/usr/include/c++/9.2.0/ostream ****     {
 351              		.loc 3 565 5 view .LVU82
 565:/usr/include/c++/9.2.0/ostream ****     {
 352              		.loc 3 565 5 is_stmt 0 view .LVU83
 353              	.LBE526:
 354              		.loc 4 335 2 is_stmt 1 view .LVU84
 355              	.LBB528:
 356              	.LBB527:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 357              		.loc 3 570 18 is_stmt 0 view .LVU85
 358 016e BA040000 		movl	$4, %edx
 358      00
 359 0173 488D3500 		leaq	.LC2(%rip), %rsi
GAS LISTING /tmp/cc4RI4t5.s 			page 59


 359      000000
 360 017a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 360      000000
 361 0181 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 361      00
 362              	.LVL42:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 363              		.loc 3 570 18 view .LVU86
 364              	.LBE527:
 365              	.LBE528:
 401:Src/main.cpp  ****     }
 366              		.loc 1 401 3 is_stmt 1 view .LVU87
 401:Src/main.cpp  ****     }
 367              		.loc 1 401 14 is_stmt 0 view .LVU88
 368 0186 C6050000 		movb	$1, terminated(%rip)
 368      000001
 403:Src/main.cpp  **** 
 369              		.loc 1 403 1 view .LVU89
 370 018d EBBA     		jmp	.L14
 371              		.cfi_endproc
 372              	.LFE2497:
 374              		.globl	_Z17getMinDatasetSizev
 376              	_Z17getMinDatasetSizev:
 377              	.LFB2476:
  64:Src/main.cpp  **** 	int ret = numOfObstacles;
 378              		.loc 1 64 1 is_stmt 1 view -0
 379              		.cfi_startproc
  65:Src/main.cpp  **** 	if(ret < 2)
 380              		.loc 1 65 2 view .LVU91
  65:Src/main.cpp  **** 	if(ret < 2)
 381              		.loc 1 65 6 is_stmt 0 view .LVU92
 382 018f 488B1500 		movq	numOfObstacles(%rip), %rdx
 382      000000
 383 0196 89D0     		movl	%edx, %eax
 384              	.LVL43:
  66:Src/main.cpp  **** 		ret = 2;
 385              		.loc 1 66 2 is_stmt 1 view .LVU93
 386 0198 83FA01   		cmpl	$1, %edx
 387 019b 7E0C     		jle	.L26
 388              	.LVL44:
 389              	.L23:
  68:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 390              		.loc 1 68 2 view .LVU94
  68:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 391              		.loc 1 68 5 is_stmt 0 view .LVU95
 392 019d 4863C8   		movslq	%eax, %rcx
  68:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 393              		.loc 1 68 2 view .LVU96
 394 01a0 4839CA   		cmpq	%rcx, %rdx
 395 01a3 7703     		ja	.L24
  69:Src/main.cpp  **** 	return ret;
 396              		.loc 1 69 3 is_stmt 1 view .LVU97
  69:Src/main.cpp  **** 	return ret;
 397              		.loc 1 69 7 is_stmt 0 view .LVU98
 398 01a5 8D42FF   		leal	-1(%rdx), %eax
 399              	.LVL45:
 400              	.L24:
GAS LISTING /tmp/cc4RI4t5.s 			page 60


  70:Src/main.cpp  **** }
 401              		.loc 1 70 2 is_stmt 1 view .LVU99
  71:Src/main.cpp  **** 
 402              		.loc 1 71 1 is_stmt 0 view .LVU100
 403 01a8 C3       		ret
 404              	.L26:
  67:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 405              		.loc 1 67 7 view .LVU101
 406 01a9 B8020000 		movl	$2, %eax
 406      00
 407              	.LVL46:
  67:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 408              		.loc 1 67 7 view .LVU102
 409 01ae EBED     		jmp	.L23
 410              		.cfi_endproc
 411              	.LFE2476:
 413              		.globl	_Z10createVectPK6coordsf
 415              	_Z10createVectPK6coordsf:
 416              	.LVL47:
 417              	.LFB2477:
  89:Src/main.cpp  **** 	struct vect ret;
 418              		.loc 1 89 1 is_stmt 1 view -0
 419              		.cfi_startproc
  89:Src/main.cpp  **** 	struct vect ret;
 420              		.loc 1 89 1 is_stmt 0 view .LVU104
 421 01b0 55       		pushq	%rbp
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 6, -16
 424 01b1 53       		pushq	%rbx
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 3, -24
 427 01b2 4883EC18 		subq	$24, %rsp
 428              		.cfi_def_cfa_offset 48
 429 01b6 4889FD   		movq	%rdi, %rbp
 430 01b9 F30F1144 		movss	%xmm0, 12(%rsp)
 430      240C
  90:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
 431              		.loc 1 90 2 is_stmt 1 view .LVU105
  91:Src/main.cpp  **** 	ret.c->x = c->x;
 432              		.loc 1 91 2 view .LVU106
  91:Src/main.cpp  **** 	ret.c->x = c->x;
 433              		.loc 1 91 33 is_stmt 0 view .LVU107
 434 01bf BF080000 		movl	$8, %edi
 434      00
 435              	.LVL48:
  91:Src/main.cpp  **** 	ret.c->x = c->x;
 436              		.loc 1 91 33 view .LVU108
 437 01c4 E8000000 		call	malloc@PLT
 437      00
 438              	.LVL49:
  91:Src/main.cpp  **** 	ret.c->x = c->x;
 439              		.loc 1 91 33 view .LVU109
 440 01c9 4889C3   		movq	%rax, %rbx
  92:Src/main.cpp  **** 	ret.c->y = c->y;
 441              		.loc 1 92 2 is_stmt 1 view .LVU110
  92:Src/main.cpp  **** 	ret.c->y = c->y;
 442              		.loc 1 92 16 is_stmt 0 view .LVU111
GAS LISTING /tmp/cc4RI4t5.s 			page 61


 443 01cc F30F1045 		movss	0(%rbp), %xmm0
 443      00
  92:Src/main.cpp  **** 	ret.c->y = c->y;
 444              		.loc 1 92 11 view .LVU112
 445 01d1 F30F1100 		movss	%xmm0, (%rax)
  93:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 446              		.loc 1 93 2 is_stmt 1 view .LVU113
  93:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 447              		.loc 1 93 16 is_stmt 0 view .LVU114
 448 01d5 F30F1045 		movss	4(%rbp), %xmm0
 448      04
  93:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 449              		.loc 1 93 11 view .LVU115
 450 01da F30F1140 		movss	%xmm0, 4(%rax)
 450      04
  94:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 451              		.loc 1 94 2 is_stmt 1 view .LVU116
  94:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 452              		.loc 1 94 38 is_stmt 0 view .LVU117
 453 01df 660FEFC0 		pxor	%xmm0, %xmm0
 454 01e3 F30F5A44 		cvtss2sd	12(%rsp), %xmm0
 454      240C
  94:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 455              		.loc 1 94 44 view .LVU118
 456 01e9 F20F5E05 		divsd	.LC3(%rip), %xmm0
 456      00000000 
  94:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 457              		.loc 1 94 37 view .LVU119
 458 01f1 F20F5905 		mulsd	.LC4(%rip), %xmm0
 458      00000000 
 459 01f9 E8000000 		call	tan@PLT
 459      00
 460              	.LVL50:
  94:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 461              		.loc 1 94 32 view .LVU120
 462 01fe F20F100D 		movsd	.LC5(%rip), %xmm1
 462      00000000 
 463 0206 F20F5EC8 		divsd	%xmm0, %xmm1
 464 020a F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
  95:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 465              		.loc 1 95 2 is_stmt 1 view .LVU121
  95:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 466              		.loc 1 95 15 is_stmt 0 view .LVU122
 467 020e 660FEFD2 		pxor	%xmm2, %xmm2
 468 0212 F30F5AD1 		cvtss2sd	%xmm1, %xmm2
  95:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 469              		.loc 1 95 18 view .LVU123
 470 0216 F20F59C2 		mulsd	%xmm2, %xmm0
 471 021a F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
  96:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
 472              		.loc 1 96 2 is_stmt 1 view .LVU124
 473              	.LVL51:
 474              	.LBB529:
 475              	.LBI529:
 476              		.file 7 "/usr/include/c++/9.2.0/bits/std_abs.h"
   1:/usr/include/c++/9.2.0/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/c++/9.2.0/bits/std_abs.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 62


   3:/usr/include/c++/9.2.0/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/std_abs.h **** //
   5:/usr/include/c++/9.2.0/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/std_abs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  11:/usr/include/c++/9.2.0/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  16:/usr/include/c++/9.2.0/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  20:/usr/include/c++/9.2.0/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  25:/usr/include/c++/9.2.0/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/c++/9.2.0/bits/std_abs.h ****  */
  29:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  30:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  33:/usr/include/c++/9.2.0/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  35:/usr/include/c++/9.2.0/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  37:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/c++/9.2.0/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/c++/9.2.0/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  42:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  44:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef abs
  45:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  46:/usr/include/c++/9.2.0/bits/std_abs.h **** extern "C++"
  47:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  48:/usr/include/c++/9.2.0/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  50:/usr/include/c++/9.2.0/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  52:/usr/include/c++/9.2.0/bits/std_abs.h ****   using ::abs;
  53:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  54:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long
  56:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  58:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  59:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
GAS LISTING /tmp/cc4RI4t5.s 			page 63


  60:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long long
  61:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  63:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  64:/usr/include/c++/9.2.0/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  69:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  74:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(float __x)
 477              		.loc 7 75 3 view .LVU125
 478              	.LBB530:
  76:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 479              		.loc 7 76 5 view .LVU126
 480              		.loc 7 76 31 is_stmt 0 view .LVU127
 481 021e F30F1015 		movss	.LC6(%rip), %xmm2
 481      00000000 
 482 0226 0F54CA   		andps	%xmm2, %xmm1
 483              	.LVL52:
 484              		.loc 7 76 31 view .LVU128
 485              	.LBE530:
 486              	.LBE529:
  97:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 487              		.loc 1 97 2 is_stmt 1 view .LVU129
 488              	.LBB531:
 489              	.LBI531:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 490              		.loc 7 75 3 view .LVU130
 491              	.LBB532:
 492              		.loc 7 76 5 view .LVU131
 493              		.loc 7 76 31 is_stmt 0 view .LVU132
 494 0229 0F54C2   		andps	%xmm2, %xmm0
 495              	.LVL53:
 496              		.loc 7 76 31 view .LVU133
 497              	.LBE532:
 498              	.LBE531:
  97:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 499              		.loc 1 97 9 view .LVU134
 500 022c 660F7EC0 		movd	%xmm0, %eax
 501 0230 48C1E020 		salq	$32, %rax
 502 0234 660F7ECA 		movd	%xmm1, %edx
 503              	.LVL54:
  97:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 504              		.loc 1 97 9 view .LVU135
 505 0238 4809C2   		orq	%rax, %rdx
  98:Src/main.cpp  **** 		ret.dy *= -1;
 506              		.loc 1 98 2 is_stmt 1 view .LVU136
 507 023b F30F1064 		movss	12(%rsp), %xmm4
 507      240C
 508 0241 0F2F2500 		comiss	.LC7(%rip), %xmm4
 508      000000
GAS LISTING /tmp/cc4RI4t5.s 			page 64


 509 0248 770C     		ja	.L28
 510 024a 4889D1   		movq	%rdx, %rcx
  98:Src/main.cpp  **** 		ret.dy *= -1;
 511              		.loc 1 98 17 is_stmt 0 discriminator 1 view .LVU137
 512 024d 660FEFD2 		pxor	%xmm2, %xmm2
 513 0251 0F2FD4   		comiss	%xmm4, %xmm2
 514 0254 7614     		jbe	.L29
 515              	.L28:
  99:Src/main.cpp  **** 
 516              		.loc 1 99 3 is_stmt 1 view .LVU138
  99:Src/main.cpp  **** 
 517              		.loc 1 99 10 is_stmt 0 view .LVU139
 518 0256 0F570500 		xorps	.LC9(%rip), %xmm0
 518      000000
 519 025d 660F7EC0 		movd	%xmm0, %eax
 520 0261 48C1E020 		salq	$32, %rax
 521 0265 89D1     		movl	%edx, %ecx
  99:Src/main.cpp  **** 
 522              		.loc 1 99 10 view .LVU140
 523 0267 4809C1   		orq	%rax, %rcx
 524              	.L29:
 101:Src/main.cpp  **** 		ret.dx *= -1;
 525              		.loc 1 101 2 is_stmt 1 view .LVU141
 526 026a F30F106C 		movss	12(%rsp), %xmm5
 526      240C
 527 0270 0F2F2D00 		comiss	.LC10(%rip), %xmm5
 527      000000
 528 0277 720D     		jb	.L31
 101:Src/main.cpp  **** 		ret.dx *= -1;
 529              		.loc 1 101 21 is_stmt 0 discriminator 2 view .LVU142
 530 0279 F30F1005 		movss	.LC11(%rip), %xmm0
 530      00000000 
 531 0281 0F2FC5   		comiss	%xmm5, %xmm0
 532 0284 733A     		jnb	.L33
 533              	.L31:
 101:Src/main.cpp  **** 		ret.dx *= -1;
 534              		.loc 1 101 5 discriminator 3 view .LVU143
 535 0286 F30F1074 		movss	12(%rsp), %xmm6
 535      240C
 536 028c 0F2F3500 		comiss	.LC12(%rip), %xmm6
 536      000000
 537 0293 720D     		jb	.L34
 101:Src/main.cpp  **** 		ret.dx *= -1;
 538              		.loc 1 101 59 discriminator 4 view .LVU144
 539 0295 F30F1005 		movss	.LC13(%rip), %xmm0
 539      00000000 
 540 029d 0F2FC6   		comiss	%xmm6, %xmm0
 541 02a0 731E     		jnb	.L33
 542              	.L34:
 102:Src/main.cpp  **** 	return ret;
 543              		.loc 1 102 3 is_stmt 1 view .LVU145
 102:Src/main.cpp  **** 	return ret;
 544              		.loc 1 102 10 is_stmt 0 view .LVU146
 545 02a2 0F570D00 		xorps	.LC9(%rip), %xmm1
 545      000000
 546 02a9 660F7ECA 		movd	%xmm1, %edx
 547 02ad 48B80000 		movabsq	$-4294967296, %rax
GAS LISTING /tmp/cc4RI4t5.s 			page 65


 547      0000FFFF 
 547      FFFF
 102:Src/main.cpp  **** 	return ret;
 548              		.loc 1 102 10 view .LVU147
 549 02b7 4821C8   		andq	%rcx, %rax
 550 02ba 4809D0   		orq	%rdx, %rax
 551 02bd 4889C1   		movq	%rax, %rcx
 552              	.L33:
 103:Src/main.cpp  **** }
 553              		.loc 1 103 2 is_stmt 1 view .LVU148
 104:Src/main.cpp  **** 
 554              		.loc 1 104 1 is_stmt 0 view .LVU149
 555 02c0 4889D8   		movq	%rbx, %rax
 104:Src/main.cpp  **** 
 556              		.loc 1 104 1 view .LVU150
 557 02c3 66480F6E 		movq	%rcx, %xmm0
 557      C1
 558 02c8 4883C418 		addq	$24, %rsp
 559              		.cfi_def_cfa_offset 24
 560 02cc 5B       		popq	%rbx
 561              		.cfi_def_cfa_offset 16
 562 02cd 5D       		popq	%rbp
 563              		.cfi_def_cfa_offset 8
 564              	.LVL55:
 104:Src/main.cpp  **** 
 565              		.loc 1 104 1 view .LVU151
 566 02ce C3       		ret
 567              		.cfi_endproc
 568              	.LFE2477:
 570              		.globl	_Z10createVectPK6coordsS1_
 572              	_Z10createVectPK6coordsS1_:
 573              	.LVL56:
 574              	.LFB2481:
 107:Src/main.cpp  **** 	struct vect ret;
 575              		.loc 1 107 1 is_stmt 1 view -0
 576              		.cfi_startproc
 107:Src/main.cpp  **** 	struct vect ret;
 577              		.loc 1 107 1 is_stmt 0 view .LVU153
 578 02cf 55       		pushq	%rbp
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 6, -16
 581 02d0 53       		pushq	%rbx
 582              		.cfi_def_cfa_offset 24
 583              		.cfi_offset 3, -24
 584 02d1 4883EC08 		subq	$8, %rsp
 585              		.cfi_def_cfa_offset 32
 586 02d5 4889FD   		movq	%rdi, %rbp
 587 02d8 4889F3   		movq	%rsi, %rbx
 108:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
 588              		.loc 1 108 2 is_stmt 1 view .LVU154
 109:Src/main.cpp  **** 	ret.c->x = start->x;
 589              		.loc 1 109 2 view .LVU155
 109:Src/main.cpp  **** 	ret.c->x = start->x;
 590              		.loc 1 109 32 is_stmt 0 view .LVU156
 591 02db BF080000 		movl	$8, %edi
 591      00
 592              	.LVL57:
GAS LISTING /tmp/cc4RI4t5.s 			page 66


 109:Src/main.cpp  **** 	ret.c->x = start->x;
 593              		.loc 1 109 32 view .LVU157
 594 02e0 E8000000 		call	malloc@PLT
 594      00
 595              	.LVL58:
 110:Src/main.cpp  **** 	ret.c->y = start->y;
 596              		.loc 1 110 2 is_stmt 1 view .LVU158
 110:Src/main.cpp  **** 	ret.c->y = start->y;
 597              		.loc 1 110 20 is_stmt 0 view .LVU159
 598 02e5 F30F1055 		movss	0(%rbp), %xmm2
 598      00
 110:Src/main.cpp  **** 	ret.c->y = start->y;
 599              		.loc 1 110 11 view .LVU160
 600 02ea F30F1110 		movss	%xmm2, (%rax)
 111:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 601              		.loc 1 111 2 is_stmt 1 view .LVU161
 111:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 602              		.loc 1 111 20 is_stmt 0 view .LVU162
 603 02ee F30F104D 		movss	4(%rbp), %xmm1
 603      04
 111:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 604              		.loc 1 111 11 view .LVU163
 605 02f3 F30F1148 		movss	%xmm1, 4(%rax)
 605      04
 112:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 606              		.loc 1 112 2 is_stmt 1 view .LVU164
 112:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 607              		.loc 1 112 16 is_stmt 0 view .LVU165
 608 02f8 F30F1003 		movss	(%rbx), %xmm0
 112:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 609              		.loc 1 112 9 view .LVU166
 610 02fc F30F5CC2 		subss	%xmm2, %xmm0
 113:Src/main.cpp  **** 	return ret;
 611              		.loc 1 113 2 is_stmt 1 view .LVU167
 113:Src/main.cpp  **** 	return ret;
 612              		.loc 1 113 16 is_stmt 0 view .LVU168
 613 0300 F30F1053 		movss	4(%rbx), %xmm2
 613      04
 113:Src/main.cpp  **** 	return ret;
 614              		.loc 1 113 9 view .LVU169
 615 0305 F30F5CD1 		subss	%xmm1, %xmm2
 616 0309 660F7ED2 		movd	%xmm2, %edx
 617 030d 4889D1   		movq	%rdx, %rcx
 618 0310 48C1E120 		salq	$32, %rcx
 619 0314 660F7EC2 		movd	%xmm0, %edx
 620              	.LVL59:
 113:Src/main.cpp  **** 	return ret;
 621              		.loc 1 113 9 view .LVU170
 622 0318 4809CA   		orq	%rcx, %rdx
 114:Src/main.cpp  **** }
 623              		.loc 1 114 2 is_stmt 1 view .LVU171
 115:Src/main.cpp  **** 
 624              		.loc 1 115 1 is_stmt 0 view .LVU172
 625 031b 66480F6E 		movq	%rdx, %xmm0
 625      C2
 626 0320 4883C408 		addq	$8, %rsp
 627              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/cc4RI4t5.s 			page 67


 628 0324 5B       		popq	%rbx
 629              		.cfi_def_cfa_offset 16
 630              	.LVL60:
 115:Src/main.cpp  **** 
 631              		.loc 1 115 1 view .LVU173
 632 0325 5D       		popq	%rbp
 633              		.cfi_def_cfa_offset 8
 634              	.LVL61:
 115:Src/main.cpp  **** 
 635              		.loc 1 115 1 view .LVU174
 636 0326 C3       		ret
 637              		.cfi_endproc
 638              	.LFE2481:
 640              		.globl	_Z10createVectPK8obstaclehf
 642              	_Z10createVectPK8obstaclehf:
 643              	.LVL62:
 644              	.LFB2482:
 119:Src/main.cpp  **** 	struct vect ret;
 645              		.loc 1 119 1 is_stmt 1 view -0
 646              		.cfi_startproc
 119:Src/main.cpp  **** 	struct vect ret;
 647              		.loc 1 119 1 is_stmt 0 view .LVU176
 648 0327 55       		pushq	%rbp
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 6, -16
 651 0328 53       		pushq	%rbx
 652              		.cfi_def_cfa_offset 24
 653              		.cfi_offset 3, -24
 654 0329 4883EC18 		subq	$24, %rsp
 655              		.cfi_def_cfa_offset 48
 656 032d F30F1144 		movss	%xmm0, 8(%rsp)
 656      2408
 120:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 657              		.loc 1 120 2 is_stmt 1 view .LVU177
 121:Src/main.cpp  **** 	ret = createVect(c, angle);
 658              		.loc 1 121 2 view .LVU178
 121:Src/main.cpp  **** 	ret = createVect(c, angle);
 659              		.loc 1 121 38 is_stmt 0 view .LVU179
 660 0333 400FB6F6 		movzbl	%sil, %esi
 121:Src/main.cpp  **** 	ret = createVect(c, angle);
 661              		.loc 1 121 38 view .LVU180
 662 0337 E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh@PLT
 662      00
 663              	.LVL63:
 121:Src/main.cpp  **** 	ret = createVect(c, angle);
 664              		.loc 1 121 38 view .LVU181
 665 033c 4889C3   		movq	%rax, %rbx
 666              	.LVL64:
 122:Src/main.cpp  **** 	free(c);
 667              		.loc 1 122 2 is_stmt 1 view .LVU182
 122:Src/main.cpp  **** 	free(c);
 668              		.loc 1 122 27 is_stmt 0 view .LVU183
 669 033f F30F1044 		movss	8(%rsp), %xmm0
 669      2408
 670 0345 4889C7   		movq	%rax, %rdi
 671 0348 E8000000 		call	_Z10createVectPK6coordsf
 671      00
GAS LISTING /tmp/cc4RI4t5.s 			page 68


 672              	.LVL65:
 122:Src/main.cpp  **** 	free(c);
 673              		.loc 1 122 27 view .LVU184
 674 034d 4889C5   		movq	%rax, %rbp
 675 0350 660FD644 		movq	%xmm0, 8(%rsp)
 675      2408
 676              	.LVL66:
 123:Src/main.cpp  **** 	return ret;
 677              		.loc 1 123 2 is_stmt 1 view .LVU185
 123:Src/main.cpp  **** 	return ret;
 678              		.loc 1 123 6 is_stmt 0 view .LVU186
 679 0356 4889DF   		movq	%rbx, %rdi
 680 0359 E8000000 		call	free@PLT
 680      00
 681              	.LVL67:
 124:Src/main.cpp  **** }
 682              		.loc 1 124 2 is_stmt 1 view .LVU187
 125:Src/main.cpp  **** 
 683              		.loc 1 125 1 is_stmt 0 view .LVU188
 684 035e 4889E8   		movq	%rbp, %rax
 685 0361 F30F7E44 		movq	8(%rsp), %xmm0
 685      2408
 686 0367 4883C418 		addq	$24, %rsp
 687              		.cfi_def_cfa_offset 24
 688 036b 5B       		popq	%rbx
 689              		.cfi_def_cfa_offset 16
 690              	.LVL68:
 125:Src/main.cpp  **** 
 691              		.loc 1 125 1 view .LVU189
 692 036c 5D       		popq	%rbp
 693              		.cfi_def_cfa_offset 8
 694 036d C3       		ret
 695              		.cfi_endproc
 696              	.LFE2482:
 698              		.section	.rodata.str1.1
 699              	.LC14:
 700 000e 496E6372 		.string	"Increacing radius\n"
 700      65616369 
 700      6E672072 
 700      61646975 
 700      730A00
 701              		.text
 702              		.globl	_Z16getPointsDataSetPK6coords
 704              	_Z16getPointsDataSetPK6coords:
 705              	.LVL69:
 706              	.LFB2483:
 129:Src/main.cpp  **** 	size_t size = 0;
 707              		.loc 1 129 1 is_stmt 1 view -0
 708              		.cfi_startproc
 129:Src/main.cpp  **** 	size_t size = 0;
 709              		.loc 1 129 1 is_stmt 0 view .LVU191
 710 036e 4155     		pushq	%r13
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 13, -16
 713 0370 4154     		pushq	%r12
 714              		.cfi_def_cfa_offset 24
 715              		.cfi_offset 12, -24
GAS LISTING /tmp/cc4RI4t5.s 			page 69


 716 0372 55       		pushq	%rbp
 717              		.cfi_def_cfa_offset 32
 718              		.cfi_offset 6, -32
 719 0373 53       		pushq	%rbx
 720              		.cfi_def_cfa_offset 40
 721              		.cfi_offset 3, -40
 722 0374 4883EC08 		subq	$8, %rsp
 723              		.cfi_def_cfa_offset 48
 724 0378 4889FB   		movq	%rdi, %rbx
 130:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 725              		.loc 1 130 2 is_stmt 1 view .LVU192
 726              	.LVL70:
 131:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 727              		.loc 1 131 2 view .LVU193
 131:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 728              		.loc 1 131 11 is_stmt 0 view .LVU194
 729 037b BDD00700 		movl	$2000, %ebp
 729      00
 130:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 730              		.loc 1 130 9 view .LVU195
 731 0380 41BC0000 		movl	$0, %r12d
 731      0000
 732 0386 EB6B     		jmp	.L44
 733              	.LVL71:
 734              	.L47:
 735              	.LBB546:
 736              	.LBB547:
 134:Src/main.cpp  **** 		{
 737              		.loc 1 134 3 is_stmt 1 discriminator 2 view .LVU196
 738 0388 4883C101 		addq	$1, %rcx
 739              	.LVL72:
 740              	.L52:
 134:Src/main.cpp  **** 		{
 741              		.loc 1 134 23 discriminator 1 view .LVU197
 742 038c 48390D00 		cmpq	%rcx, graphSize(%rip)
 742      000000
 743 0393 7659     		jbe	.L46
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 744              		.loc 1 136 4 view .LVU198
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 745              		.loc 1 136 14 is_stmt 0 view .LVU199
 746 0395 488B1500 		movq	graph(%rip), %rdx
 746      000000
 747 039c 488B34CA 		movq	(%rdx,%rcx,8), %rsi
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 748              		.loc 1 136 19 view .LVU200
 749 03a0 F30F1056 		movss	16(%rsi), %xmm2
 749      10
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 750              		.loc 1 136 27 view .LVU201
 751 03a5 F30F100B 		movss	(%rbx), %xmm1
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 752              		.loc 1 136 31 view .LVU202
 753 03a9 0FB7D5   		movzwl	%bp, %edx
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 754              		.loc 1 136 29 view .LVU203
 755 03ac 660FEFC0 		pxor	%xmm0, %xmm0
GAS LISTING /tmp/cc4RI4t5.s 			page 70


 756 03b0 F30F2AC2 		cvtsi2ssl	%edx, %xmm0
 757 03b4 0F28D9   		movaps	%xmm1, %xmm3
 758 03b7 F30F5CD8 		subss	%xmm0, %xmm3
 136:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 759              		.loc 1 136 4 view .LVU204
 760 03bb 0F2FD3   		comiss	%xmm3, %xmm2
 761 03be 72C8     		jb	.L47
 137:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 762              		.loc 1 137 29 view .LVU205
 763 03c0 F30F58C8 		addss	%xmm0, %xmm1
 137:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 764              		.loc 1 137 4 view .LVU206
 765 03c4 0F2FCA   		comiss	%xmm2, %xmm1
 766 03c7 72BF     		jb	.L47
 138:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 767              		.loc 1 138 19 view .LVU207
 768 03c9 F30F104E 		movss	20(%rsi), %xmm1
 768      14
 138:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 769              		.loc 1 138 27 view .LVU208
 770 03ce F30F1053 		movss	4(%rbx), %xmm2
 770      04
 138:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 771              		.loc 1 138 29 view .LVU209
 772 03d3 0F28DA   		movaps	%xmm2, %xmm3
 773 03d6 F30F5CD8 		subss	%xmm0, %xmm3
 138:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 774              		.loc 1 138 4 view .LVU210
 775 03da 0F2FCB   		comiss	%xmm3, %xmm1
 776 03dd 72A9     		jb	.L47
 139:Src/main.cpp  **** 				size++;
 777              		.loc 1 139 29 view .LVU211
 778 03df F30F58C2 		addss	%xmm2, %xmm0
 139:Src/main.cpp  **** 				size++;
 779              		.loc 1 139 4 view .LVU212
 780 03e3 0F2FC1   		comiss	%xmm1, %xmm0
 781 03e6 72A0     		jb	.L47
 140:Src/main.cpp  **** 		}
 782              		.loc 1 140 5 is_stmt 1 view .LVU213
 140:Src/main.cpp  **** 		}
 783              		.loc 1 140 9 is_stmt 0 view .LVU214
 784 03e8 4983C401 		addq	$1, %r12
 785              	.LVL73:
 140:Src/main.cpp  **** 		}
 786              		.loc 1 140 9 view .LVU215
 787 03ec EB9A     		jmp	.L47
 788              	.L46:
 140:Src/main.cpp  **** 		}
 789              		.loc 1 140 9 view .LVU216
 790              	.LBE547:
 142:Src/main.cpp  **** 		{
 791              		.loc 1 142 3 is_stmt 1 view .LVU217
 792 03ee 4C39E0   		cmpq	%r12, %rax
 793 03f1 771D     		ja	.L70
 794              	.LVL74:
 795              	.L44:
 142:Src/main.cpp  **** 		{
GAS LISTING /tmp/cc4RI4t5.s 			page 71


 796              		.loc 1 142 3 is_stmt 0 view .LVU218
 797              	.LBE546:
 131:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 798              		.loc 1 131 45 is_stmt 1 discriminator 1 view .LVU219
 132:Src/main.cpp  **** 		size = 0;
 799              		.loc 1 132 2 discriminator 1 view .LVU220
 132:Src/main.cpp  **** 		size = 0;
 800              		.loc 1 132 14 discriminator 1 view .LVU221
 132:Src/main.cpp  **** 		size = 0;
 801              		.loc 1 132 33 is_stmt 0 discriminator 1 view .LVU222
 802 03f3 E8000000 		call	_Z17getMinDatasetSizev
 802      00
 803              	.LVL75:
 804 03f8 0FB6C0   		movzbl	%al, %eax
 132:Src/main.cpp  **** 		size = 0;
 805              		.loc 1 132 14 discriminator 1 view .LVU223
 806 03fb 4C39E0   		cmpq	%r12, %rax
 807 03fe 762D     		jbe	.L45
 808              	.LBB552:
 809              	.LBB548:
 134:Src/main.cpp  **** 		{
 810              		.loc 1 134 14 view .LVU224
 811 0400 B9000000 		movl	$0, %ecx
 811      00
 812              	.LBE548:
 133:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 813              		.loc 1 133 8 view .LVU225
 814 0405 41BC0000 		movl	$0, %r12d
 814      0000
 815              	.LVL76:
 133:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 816              		.loc 1 133 8 view .LVU226
 817 040b E97CFFFF 		jmp	.L52
 817      FF
 818              	.LVL77:
 819              	.L70:
 144:Src/main.cpp  **** 			watchRadius += 100;
 820              		.loc 1 144 4 is_stmt 1 view .LVU227
 821              	.LBB549:
 822              	.LBI549:
 565:/usr/include/c++/9.2.0/ostream ****     {
 823              		.loc 3 565 5 view .LVU228
 565:/usr/include/c++/9.2.0/ostream ****     {
 824              		.loc 3 565 5 is_stmt 0 view .LVU229
 825              	.LBE549:
 826              	.LBE552:
 827              		.loc 4 335 2 is_stmt 1 view .LVU230
 828              	.LBB553:
 829              	.LBB551:
 830              	.LBB550:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 831              		.loc 3 570 18 is_stmt 0 view .LVU231
 832 0410 BA120000 		movl	$18, %edx
 832      00
 833 0415 488D3500 		leaq	.LC14(%rip), %rsi
 833      000000
 834 041c 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
GAS LISTING /tmp/cc4RI4t5.s 			page 72


 834      000000
 835 0423 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 835      00
 836              	.LVL78:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 837              		.loc 3 570 18 view .LVU232
 838              	.LBE550:
 839              	.LBE551:
 145:Src/main.cpp  **** 		}
 840              		.loc 1 145 4 is_stmt 1 view .LVU233
 145:Src/main.cpp  **** 		}
 841              		.loc 1 145 16 is_stmt 0 view .LVU234
 842 0428 83C564   		addl	$100, %ebp
 843              	.LVL79:
 145:Src/main.cpp  **** 		}
 844              		.loc 1 145 16 view .LVU235
 845 042b EBC6     		jmp	.L44
 846              	.L45:
 145:Src/main.cpp  **** 		}
 847              		.loc 1 145 16 view .LVU236
 848              	.LBE553:
 148:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 849              		.loc 1 148 2 is_stmt 1 view .LVU237
 850              	.LVL80:
 149:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 851              		.loc 1 149 2 view .LVU238
 149:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 852              		.loc 1 149 59 is_stmt 0 view .LVU239
 853 042d 4A8D3CE5 		leaq	0(,%r12,8), %rdi
 853      00000000 
 854 0435 E8000000 		call	malloc@PLT
 854      00
 855              	.LVL81:
 856 043a 4989C5   		movq	%rax, %r13
 857              	.LVL82:
 150:Src/main.cpp  **** 	{
 858              		.loc 1 150 2 is_stmt 1 view .LVU240
 859              	.LBB554:
 150:Src/main.cpp  **** 	{
 860              		.loc 1 150 13 is_stmt 0 view .LVU241
 861 043d BA000000 		movl	$0, %edx
 861      00
 862              	.LBE554:
 148:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 863              		.loc 1 148 9 view .LVU242
 864 0442 BE000000 		movl	$0, %esi
 864      00
 865 0447 EB04     		jmp	.L60
 866              	.LVL83:
 867              	.L55:
 868              	.LBB555:
 150:Src/main.cpp  **** 	{
 869              		.loc 1 150 2 is_stmt 1 discriminator 2 view .LVU243
 870 0449 4883C201 		addq	$1, %rdx
 871              	.LVL84:
 872              	.L60:
 150:Src/main.cpp  **** 	{
GAS LISTING /tmp/cc4RI4t5.s 			page 73


 873              		.loc 1 150 22 discriminator 1 view .LVU244
 874 044d 48391500 		cmpq	%rdx, graphSize(%rip)
 874      000000
 875 0454 765E     		jbe	.L54
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 876              		.loc 1 152 3 view .LVU245
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 877              		.loc 1 152 13 is_stmt 0 view .LVU246
 878 0456 488B0500 		movq	graph(%rip), %rax
 878      000000
 879 045d 488B0CD0 		movq	(%rax,%rdx,8), %rcx
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 880              		.loc 1 152 18 view .LVU247
 881 0461 F30F1051 		movss	16(%rcx), %xmm2
 881      10
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 882              		.loc 1 152 26 view .LVU248
 883 0466 F30F100B 		movss	(%rbx), %xmm1
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 884              		.loc 1 152 30 view .LVU249
 885 046a 0FB7C5   		movzwl	%bp, %eax
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 886              		.loc 1 152 28 view .LVU250
 887 046d 660FEFC0 		pxor	%xmm0, %xmm0
 888 0471 F30F2AC0 		cvtsi2ssl	%eax, %xmm0
 889 0475 0F28D9   		movaps	%xmm1, %xmm3
 890 0478 F30F5CD8 		subss	%xmm0, %xmm3
 152:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 891              		.loc 1 152 3 view .LVU251
 892 047c 0F2FD3   		comiss	%xmm3, %xmm2
 893 047f 72C8     		jb	.L55
 153:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 894              		.loc 1 153 28 view .LVU252
 895 0481 F30F58C8 		addss	%xmm0, %xmm1
 153:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 896              		.loc 1 153 3 view .LVU253
 897 0485 0F2FCA   		comiss	%xmm2, %xmm1
 898 0488 72BF     		jb	.L55
 154:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 899              		.loc 1 154 18 view .LVU254
 900 048a F30F1049 		movss	20(%rcx), %xmm1
 900      14
 154:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 901              		.loc 1 154 26 view .LVU255
 902 048f F30F1053 		movss	4(%rbx), %xmm2
 902      04
 154:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 903              		.loc 1 154 28 view .LVU256
 904 0494 0F28DA   		movaps	%xmm2, %xmm3
 905 0497 F30F5CD8 		subss	%xmm0, %xmm3
 154:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 906              		.loc 1 154 3 view .LVU257
 907 049b 0F2FCB   		comiss	%xmm3, %xmm1
 908 049e 72A9     		jb	.L55
 155:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 909              		.loc 1 155 28 view .LVU258
 910 04a0 F30F58C2 		addss	%xmm2, %xmm0
GAS LISTING /tmp/cc4RI4t5.s 			page 74


 155:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 911              		.loc 1 155 3 view .LVU259
 912 04a4 0F2FC1   		comiss	%xmm1, %xmm0
 913 04a7 72A0     		jb	.L55
 156:Src/main.cpp  **** 	}
 914              		.loc 1 156 4 is_stmt 1 view .LVU260
 915              	.LVL85:
 156:Src/main.cpp  **** 	}
 916              		.loc 1 156 20 is_stmt 0 view .LVU261
 917 04a9 49894CF5 		movq	%rcx, 0(%r13,%rsi,8)
 917      00
 156:Src/main.cpp  **** 	}
 918              		.loc 1 156 16 view .LVU262
 919 04ae 488D7601 		leaq	1(%rsi), %rsi
 920              	.LVL86:
 156:Src/main.cpp  **** 	}
 921              		.loc 1 156 16 view .LVU263
 922 04b2 EB95     		jmp	.L55
 923              	.L54:
 156:Src/main.cpp  **** 	}
 924              		.loc 1 156 16 view .LVU264
 925              	.LBE555:
 158:Src/main.cpp  **** 	ret->items = dataset;
 926              		.loc 1 158 2 is_stmt 1 view .LVU265
 158:Src/main.cpp  **** 	ret->items = dataset;
 927              		.loc 1 158 43 is_stmt 0 view .LVU266
 928 04b4 BF100000 		movl	$16, %edi
 928      00
 929 04b9 E8000000 		call	malloc@PLT
 929      00
 930              	.LVL87:
 159:Src/main.cpp  **** 	ret->size = size;
 931              		.loc 1 159 2 is_stmt 1 view .LVU267
 159:Src/main.cpp  **** 	ret->size = size;
 932              		.loc 1 159 13 is_stmt 0 view .LVU268
 933 04be 4C8928   		movq	%r13, (%rax)
 160:Src/main.cpp  **** 	return ret;
 934              		.loc 1 160 2 is_stmt 1 view .LVU269
 160:Src/main.cpp  **** 	return ret;
 935              		.loc 1 160 12 is_stmt 0 view .LVU270
 936 04c1 4C896008 		movq	%r12, 8(%rax)
 161:Src/main.cpp  **** }
 937              		.loc 1 161 2 is_stmt 1 view .LVU271
 162:Src/main.cpp  **** 
 938              		.loc 1 162 1 is_stmt 0 view .LVU272
 939 04c5 4883C408 		addq	$8, %rsp
 940              		.cfi_def_cfa_offset 40
 941 04c9 5B       		popq	%rbx
 942              		.cfi_def_cfa_offset 32
 943              	.LVL88:
 162:Src/main.cpp  **** 
 944              		.loc 1 162 1 view .LVU273
 945 04ca 5D       		popq	%rbp
 946              		.cfi_def_cfa_offset 24
 947              	.LVL89:
 162:Src/main.cpp  **** 
 948              		.loc 1 162 1 view .LVU274
GAS LISTING /tmp/cc4RI4t5.s 			page 75


 949 04cb 415C     		popq	%r12
 950              		.cfi_def_cfa_offset 16
 951              	.LVL90:
 162:Src/main.cpp  **** 
 952              		.loc 1 162 1 view .LVU275
 953 04cd 415D     		popq	%r13
 954              		.cfi_def_cfa_offset 8
 955              	.LVL91:
 162:Src/main.cpp  **** 
 956              		.loc 1 162 1 view .LVU276
 957 04cf C3       		ret
 958              		.cfi_endproc
 959              	.LFE2483:
 961              		.globl	_Z16hasIntersectionsPK4vect
 963              	_Z16hasIntersectionsPK4vect:
 964              	.LVL92:
 965              	.LFB2484:
 167:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 966              		.loc 1 167 1 is_stmt 1 view -0
 967              		.cfi_startproc
 167:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 968              		.loc 1 167 1 is_stmt 0 view .LVU278
 969 04d0 55       		pushq	%rbp
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 6, -16
 972 04d1 53       		pushq	%rbx
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 3, -24
 975 04d2 4883EC08 		subq	$8, %rsp
 976              		.cfi_def_cfa_offset 32
 977 04d6 4889FD   		movq	%rdi, %rbp
 168:Src/main.cpp  **** 	{
 978              		.loc 1 168 2 is_stmt 1 view .LVU279
 979              	.LVL93:
 980              	.LBB556:
 168:Src/main.cpp  **** 	{
 981              		.loc 1 168 13 is_stmt 0 view .LVU280
 982 04d9 BB000000 		movl	$0, %ebx
 982      00
 983              	.LVL94:
 984              	.L73:
 168:Src/main.cpp  **** 	{
 985              		.loc 1 168 22 is_stmt 1 discriminator 1 view .LVU281
 986 04de 48391D00 		cmpq	%rbx, numOfObstacles(%rip)
 986      000000
 987 04e5 7621     		jbe	.L74
 170:Src/main.cpp  **** 			return true;
 988              		.loc 1 170 3 view .LVU282
 170:Src/main.cpp  **** 			return true;
 989              		.loc 1 170 34 is_stmt 0 view .LVU283
 990 04e7 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 991 04eb 48C1E704 		salq	$4, %rdi
 170:Src/main.cpp  **** 			return true;
 992              		.loc 1 170 22 view .LVU284
 993 04ef 48033D00 		addq	obstacles(%rip), %rdi
 993      000000
 170:Src/main.cpp  **** 			return true;
GAS LISTING /tmp/cc4RI4t5.s 			page 76


 994              		.loc 1 170 21 view .LVU285
 995 04f6 4889EE   		movq	%rbp, %rsi
 996 04f9 E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 996      00
 997              	.LVL95:
 170:Src/main.cpp  **** 			return true;
 998              		.loc 1 170 3 view .LVU286
 999 04fe 84C0     		testb	%al, %al
 1000 0500 750B     		jne	.L71
 168:Src/main.cpp  **** 	{
 1001              		.loc 1 168 2 is_stmt 1 discriminator 2 view .LVU287
 1002 0502 4883C301 		addq	$1, %rbx
 1003              	.LVL96:
 168:Src/main.cpp  **** 	{
 1004              		.loc 1 168 2 is_stmt 0 discriminator 2 view .LVU288
 1005 0506 EBD6     		jmp	.L73
 1006              	.L74:
 168:Src/main.cpp  **** 	{
 1007              		.loc 1 168 2 discriminator 2 view .LVU289
 1008              	.LBE556:
 173:Src/main.cpp  **** }
 1009              		.loc 1 173 9 view .LVU290
 1010 0508 B8000000 		movl	$0, %eax
 1010      00
 1011              	.L71:
 174:Src/main.cpp  **** 
 1012              		.loc 1 174 1 view .LVU291
 1013 050d 4883C408 		addq	$8, %rsp
 1014              		.cfi_def_cfa_offset 24
 1015 0511 5B       		popq	%rbx
 1016              		.cfi_def_cfa_offset 16
 1017              	.LVL97:
 174:Src/main.cpp  **** 
 1018              		.loc 1 174 1 view .LVU292
 1019 0512 5D       		popq	%rbp
 1020              		.cfi_def_cfa_offset 8
 1021              	.LVL98:
 174:Src/main.cpp  **** 
 1022              		.loc 1 174 1 view .LVU293
 1023 0513 C3       		ret
 1024              		.cfi_endproc
 1025              	.LFE2484:
 1027              		.globl	_Z11isDotInsidePK6coords
 1029              	_Z11isDotInsidePK6coords:
 1030              	.LVL99:
 1031              	.LFB2485:
 180:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 1032              		.loc 1 180 1 is_stmt 1 view -0
 1033              		.cfi_startproc
 181:Src/main.cpp  **** 	{
 1034              		.loc 1 181 5 view .LVU295
 1035              	.LBB557:
 181:Src/main.cpp  **** 	{
 1036              		.loc 1 181 16 is_stmt 0 view .LVU296
 1037 0514 BA000000 		movl	$0, %edx
 1037      00
 1038 0519 EB04     		jmp	.L82
GAS LISTING /tmp/cc4RI4t5.s 			page 77


 1039              	.LVL100:
 1040              	.L78:
 181:Src/main.cpp  **** 	{
 1041              		.loc 1 181 5 is_stmt 1 discriminator 2 view .LVU297
 1042 051b 4883C201 		addq	$1, %rdx
 1043              	.LVL101:
 1044              	.L82:
 181:Src/main.cpp  **** 	{
 1045              		.loc 1 181 25 discriminator 1 view .LVU298
 1046 051f 48391500 		cmpq	%rdx, numOfObstacles(%rip)
 1046      000000
 1047 0526 0F869F00 		jbe	.L83
 1047      0000
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1048              		.loc 1 183 3 view .LVU299
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1049              		.loc 1 183 11 is_stmt 0 view .LVU300
 1050 052c 660FEFC9 		pxor	%xmm1, %xmm1
 1051 0530 F30F5A0F 		cvtss2sd	(%rdi), %xmm1
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1052              		.loc 1 183 13 view .LVU301
 1053 0534 660F28D9 		movapd	%xmm1, %xmm3
 1054 0538 F20F5C1D 		subsd	.LC15(%rip), %xmm3
 1054      00000000 
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1055              		.loc 1 183 34 view .LVU302
 1056 0540 488D0452 		leaq	(%rdx,%rdx,2), %rax
 1057 0544 48C1E004 		salq	$4, %rax
 1058 0548 48030500 		addq	obstacles(%rip), %rax
 1058      000000
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1059              		.loc 1 183 36 view .LVU303
 1060 054f 488B08   		movq	(%rax), %rcx
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1061              		.loc 1 183 39 view .LVU304
 1062 0552 F30F1001 		movss	(%rcx), %xmm0
 1063 0556 660FEFD2 		pxor	%xmm2, %xmm2
 1064 055a F30F5AD0 		cvtss2sd	%xmm0, %xmm2
 183:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1065              		.loc 1 183 3 view .LVU305
 1066 055e 660F2FDA 		comisd	%xmm2, %xmm3
 1067 0562 76B7     		jbe	.L78
 184:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1068              		.loc 1 184 13 view .LVU306
 1069 0564 F20F580D 		addsd	.LC15(%rip), %xmm1
 1069      00000000 
 184:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1070              		.loc 1 184 56 view .LVU307
 1071 056c F30F1050 		movss	40(%rax), %xmm2
 1071      28
 184:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1072              		.loc 1 184 41 view .LVU308
 1073 0571 F30F58C2 		addss	%xmm2, %xmm0
 1074 0575 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 184:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1075              		.loc 1 184 3 view .LVU309
 1076 0579 660F2FC1 		comisd	%xmm1, %xmm0
GAS LISTING /tmp/cc4RI4t5.s 			page 78


 1077 057d 769C     		jbe	.L78
 185:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1078              		.loc 1 185 11 view .LVU310
 1079 057f 660FEFC0 		pxor	%xmm0, %xmm0
 1080 0583 F30F5A47 		cvtss2sd	4(%rdi), %xmm0
 1080      04
 185:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1081              		.loc 1 185 13 view .LVU311
 1082 0588 660F28E0 		movapd	%xmm0, %xmm4
 1083 058c F20F5C25 		subsd	.LC15(%rip), %xmm4
 1083      00000000 
 185:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1084              		.loc 1 185 39 view .LVU312
 1085 0594 F30F1049 		movss	4(%rcx), %xmm1
 1085      04
 1086 0599 660FEFDB 		pxor	%xmm3, %xmm3
 1087 059d F30F5AD9 		cvtss2sd	%xmm1, %xmm3
 185:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1088              		.loc 1 185 3 view .LVU313
 1089 05a1 660F2FE3 		comisd	%xmm3, %xmm4
 1090 05a5 0F8670FF 		jbe	.L78
 1090      FFFF
 186:Src/main.cpp  **** 			return true;
 1091              		.loc 1 186 13 view .LVU314
 1092 05ab F20F5805 		addsd	.LC15(%rip), %xmm0
 1092      00000000 
 186:Src/main.cpp  **** 			return true;
 1093              		.loc 1 186 41 view .LVU315
 1094 05b3 F30F58D1 		addss	%xmm1, %xmm2
 1095 05b7 F30F5AD2 		cvtss2sd	%xmm2, %xmm2
 186:Src/main.cpp  **** 			return true;
 1096              		.loc 1 186 3 view .LVU316
 1097 05bb 660F2FD0 		comisd	%xmm0, %xmm2
 1098 05bf 0F8656FF 		jbe	.L78
 1098      FFFF
 187:Src/main.cpp  **** 	}
 1099              		.loc 1 187 11 view .LVU317
 1100 05c5 B8010000 		movl	$1, %eax
 1100      00
 1101              	.LBE557:
 190:Src/main.cpp  **** 
 1102              		.loc 1 190 1 view .LVU318
 1103 05ca C3       		ret
 1104              	.L83:
 189:Src/main.cpp  **** }
 1105              		.loc 1 189 9 view .LVU319
 1106 05cb B8000000 		movl	$0, %eax
 1106      00
 1107 05d0 C3       		ret
 1108              		.cfi_endproc
 1109              	.LFE2485:
 1111              		.globl	_Z9initPointP10graphPoint
 1113              	_Z9initPointP10graphPoint:
 1114              	.LVL102:
 1115              	.LFB2486:
 197:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1116              		.loc 1 197 1 is_stmt 1 view -0
GAS LISTING /tmp/cc4RI4t5.s 			page 79


 1117              		.cfi_startproc
 197:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1118              		.loc 1 197 1 is_stmt 0 view .LVU321
 1119 05d1 4157     		pushq	%r15
 1120              		.cfi_def_cfa_offset 16
 1121              		.cfi_offset 15, -16
 1122 05d3 4156     		pushq	%r14
 1123              		.cfi_def_cfa_offset 24
 1124              		.cfi_offset 14, -24
 1125 05d5 4155     		pushq	%r13
 1126              		.cfi_def_cfa_offset 32
 1127              		.cfi_offset 13, -32
 1128 05d7 4154     		pushq	%r12
 1129              		.cfi_def_cfa_offset 40
 1130              		.cfi_offset 12, -40
 1131 05d9 55       		pushq	%rbp
 1132              		.cfi_def_cfa_offset 48
 1133              		.cfi_offset 6, -48
 1134 05da 53       		pushq	%rbx
 1135              		.cfi_def_cfa_offset 56
 1136              		.cfi_offset 3, -56
 1137 05db 4883EC28 		subq	$40, %rsp
 1138              		.cfi_def_cfa_offset 96
 1139 05df 4989FD   		movq	%rdi, %r13
 197:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1140              		.loc 1 197 1 view .LVU322
 1141 05e2 64488B04 		movq	%fs:40, %rax
 1141      25280000 
 1141      00
 1142 05eb 48894424 		movq	%rax, 24(%rsp)
 1142      18
 1143 05f0 31C0     		xorl	%eax, %eax
 198:Src/main.cpp  **** 	struct vect v;
 1144              		.loc 1 198 2 is_stmt 1 view .LVU323
 198:Src/main.cpp  **** 	struct vect v;
 1145              		.loc 1 198 42 is_stmt 0 view .LVU324
 1146 05f2 4C8D6710 		leaq	16(%rdi), %r12
 198:Src/main.cpp  **** 	struct vect v;
 1147              		.loc 1 198 41 view .LVU325
 1148 05f6 4C89E7   		movq	%r12, %rdi
 1149              	.LVL103:
 198:Src/main.cpp  **** 	struct vect v;
 1150              		.loc 1 198 41 view .LVU326
 1151 05f9 E8000000 		call	_Z16getPointsDataSetPK6coords
 1151      00
 1152              	.LVL104:
 1153 05fe 4889C5   		movq	%rax, %rbp
 1154              	.LVL105:
 199:Src/main.cpp  **** 	struct coords *tgt;
 1155              		.loc 1 199 2 is_stmt 1 view .LVU327
 199:Src/main.cpp  **** 	struct coords *tgt;
 1156              		.loc 1 199 14 is_stmt 0 view .LVU328
 1157 0601 48C70424 		movq	$0, (%rsp)
 1157      00000000 
 1158 0609 C7442408 		movl	$0x00000000, 8(%rsp)
 1158      00000000 
 1159 0611 C744240C 		movl	$0x00000000, 12(%rsp)
GAS LISTING /tmp/cc4RI4t5.s 			page 80


 1159      00000000 
 200:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 1160              		.loc 1 200 2 is_stmt 1 view .LVU329
 201:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 1161              		.loc 1 201 2 view .LVU330
 1162              	.LVL106:
 202:Src/main.cpp  **** 	{
 1163              		.loc 1 202 2 view .LVU331
 1164              	.LBB558:
 202:Src/main.cpp  **** 	{
 1165              		.loc 1 202 10 is_stmt 0 view .LVU332
 1166 0619 BB000000 		movl	$0, %ebx
 1166      00
 1167 061e EB0F     		jmp	.L95
 1168              	.LVL107:
 1169              	.L90:
 206:Src/main.cpp  **** 		{
 1170              		.loc 1 206 51 discriminator 3 view .LVU333
 1171 0620 4889E7   		movq	%rsp, %rdi
 1172 0623 E8000000 		call	_Z16hasIntersectionsPK4vect
 1172      00
 1173              	.LVL108:
 206:Src/main.cpp  **** 		{
 1174              		.loc 1 206 31 discriminator 3 view .LVU334
 1175 0628 84C0     		testb	%al, %al
 1176 062a 7458     		je	.L98
 1177              	.L91:
 202:Src/main.cpp  **** 	{
 1178              		.loc 1 202 2 is_stmt 1 discriminator 2 view .LVU335
 1179 062c 83C301   		addl	$1, %ebx
 1180              	.LVL109:
 1181              	.L95:
 202:Src/main.cpp  **** 	{
 1182              		.loc 1 202 19 discriminator 1 view .LVU336
 202:Src/main.cpp  **** 	{
 1183              		.loc 1 202 17 is_stmt 0 discriminator 1 view .LVU337
 1184 062f 4863C3   		movslq	%ebx, %rax
 202:Src/main.cpp  **** 	{
 1185              		.loc 1 202 19 discriminator 1 view .LVU338
 1186 0632 483B4508 		cmpq	8(%rbp), %rax
 1187 0636 0F83A100 		jnb	.L89
 1187      0000
 204:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1188              		.loc 1 204 3 is_stmt 1 view .LVU339
 204:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1189              		.loc 1 204 51 is_stmt 0 view .LVU340
 1190 063c 48C1E003 		salq	$3, %rax
 1191 0640 48034500 		addq	0(%rbp), %rax
 204:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1192              		.loc 1 204 9 view .LVU341
 1193 0644 4C8B30   		movq	(%rax), %r14
 1194              	.LVL110:
 205:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1195              		.loc 1 205 3 is_stmt 1 view .LVU342
 205:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1196              		.loc 1 205 25 is_stmt 0 view .LVU343
 1197 0647 4D8D7E10 		leaq	16(%r14), %r15
GAS LISTING /tmp/cc4RI4t5.s 			page 81


 205:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1198              		.loc 1 205 34 view .LVU344
 1199 064b 4C89FE   		movq	%r15, %rsi
 1200 064e 4C89E7   		movq	%r12, %rdi
 1201 0651 E8000000 		call	_Z10createVectPK6coordsS1_
 1201      00
 1202              	.LVL111:
 1203 0656 48890424 		movq	%rax, (%rsp)
 1204 065a 660FD644 		movq	%xmm0, 8(%rsp)
 1204      2408
 206:Src/main.cpp  **** 		{
 1205              		.loc 1 206 3 is_stmt 1 view .LVU345
 206:Src/main.cpp  **** 		{
 1206              		.loc 1 206 9 is_stmt 0 view .LVU346
 1207 0660 F30F1044 		movss	8(%rsp), %xmm0
 1207      2408
 206:Src/main.cpp  **** 		{
 1208              		.loc 1 206 79 view .LVU347
 1209 0666 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1209      000000
 1210 066d 7AB1     		jp	.L90
 1211 066f 75AF     		jne	.L90
 206:Src/main.cpp  **** 		{
 1212              		.loc 1 206 22 discriminator 2 view .LVU348
 1213 0671 F30F1044 		movss	12(%rsp), %xmm0
 1213      240C
 206:Src/main.cpp  **** 		{
 1214              		.loc 1 206 17 discriminator 2 view .LVU349
 1215 0677 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1215      000000
 1216 067e 7AA0     		jp	.L90
 1217 0680 74AA     		je	.L91
 1218 0682 EB9C     		jmp	.L90
 1219              	.L98:
 206:Src/main.cpp  **** 		{
 1220              		.loc 1 206 71 discriminator 6 view .LVU350
 1221 0684 4C89E7   		movq	%r12, %rdi
 1222 0687 E8000000 		call	_Z11isDotInsidePK6coords
 1222      00
 1223              	.LVL112:
 206:Src/main.cpp  **** 		{
 1224              		.loc 1 206 56 discriminator 6 view .LVU351
 1225 068c 84C0     		testb	%al, %al
 1226 068e 759C     		jne	.L91
 206:Src/main.cpp  **** 		{
 1227              		.loc 1 206 94 discriminator 8 view .LVU352
 1228 0690 4C89FF   		movq	%r15, %rdi
 1229 0693 E8000000 		call	_Z11isDotInsidePK6coords
 1229      00
 1230              	.LVL113:
 206:Src/main.cpp  **** 		{
 1231              		.loc 1 206 79 discriminator 8 view .LVU353
 1232 0698 84C0     		testb	%al, %al
 1233 069a 7590     		jne	.L91
 208:Src/main.cpp  **** 				calculatedPoints++;
 1234              		.loc 1 208 4 is_stmt 1 view .LVU354
 1235 069c 49837D08 		cmpq	$0, 8(%r13)
GAS LISTING /tmp/cc4RI4t5.s 			page 82


 1235      00
 1236 06a1 7508     		jne	.L93
 209:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1237              		.loc 1 209 5 view .LVU355
 209:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1238              		.loc 1 209 21 is_stmt 0 view .LVU356
 1239 06a3 48830500 		addq	$1, calculatedPoints(%rip)
 1239      00000001 
 1240              	.L93:
 210:Src/main.cpp  **** 				calculatedPoints++;
 1241              		.loc 1 210 4 is_stmt 1 view .LVU357
 1242 06ab 49837E08 		cmpq	$0, 8(%r14)
 1242      00
 1243 06b0 7508     		jne	.L94
 211:Src/main.cpp  **** 			addTarget(p, currP);
 1244              		.loc 1 211 5 view .LVU358
 211:Src/main.cpp  **** 			addTarget(p, currP);
 1245              		.loc 1 211 21 is_stmt 0 view .LVU359
 1246 06b2 48830500 		addq	$1, calculatedPoints(%rip)
 1246      00000001 
 1247              	.L94:
 212:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1248              		.loc 1 212 4 is_stmt 1 view .LVU360
 212:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1249              		.loc 1 212 13 is_stmt 0 view .LVU361
 1250 06ba 4C89F6   		movq	%r14, %rsi
 1251 06bd 4C89EF   		movq	%r13, %rdi
 1252 06c0 E8000000 		call	_Z9addTargetP10graphPointS0_@PLT
 1252      00
 1253              	.LVL114:
 213:Src/main.cpp  **** 				initPoint(currP);
 1254              		.loc 1 213 4 is_stmt 1 view .LVU362
 1255 06c5 49837E08 		cmpq	$1, 8(%r14)
 1255      01
 1256 06ca 0F855CFF 		jne	.L91
 1256      FFFF
 214:Src/main.cpp  **** 		}
 1257              		.loc 1 214 5 view .LVU363
 214:Src/main.cpp  **** 		}
 1258              		.loc 1 214 14 is_stmt 0 view .LVU364
 1259 06d0 4C89F7   		movq	%r14, %rdi
 1260 06d3 E8000000 		call	_Z9initPointP10graphPoint
 1260      00
 1261              	.LVL115:
 1262 06d8 E94FFFFF 		jmp	.L91
 1262      FF
 1263              	.LVL116:
 1264              	.L89:
 214:Src/main.cpp  **** 		}
 1265              		.loc 1 214 14 view .LVU365
 1266              	.LBE558:
 217:Src/main.cpp  **** }
 1267              		.loc 1 217 2 is_stmt 1 view .LVU366
 217:Src/main.cpp  **** }
 1268              		.loc 1 217 6 is_stmt 0 view .LVU367
 1269 06dd 4889EF   		movq	%rbp, %rdi
 1270 06e0 E8000000 		call	free@PLT
GAS LISTING /tmp/cc4RI4t5.s 			page 83


 1270      00
 1271              	.LVL117:
 218:Src/main.cpp  **** 
 1272              		.loc 1 218 1 view .LVU368
 1273 06e5 488B4424 		movq	24(%rsp), %rax
 1273      18
 1274 06ea 64483304 		xorq	%fs:40, %rax
 1274      25280000 
 1274      00
 1275 06f3 750F     		jne	.L99
 1276 06f5 4883C428 		addq	$40, %rsp
 1277              		.cfi_remember_state
 1278              		.cfi_def_cfa_offset 56
 1279 06f9 5B       		popq	%rbx
 1280              		.cfi_def_cfa_offset 48
 1281              	.LVL118:
 218:Src/main.cpp  **** 
 1282              		.loc 1 218 1 view .LVU369
 1283 06fa 5D       		popq	%rbp
 1284              		.cfi_def_cfa_offset 40
 1285              	.LVL119:
 218:Src/main.cpp  **** 
 1286              		.loc 1 218 1 view .LVU370
 1287 06fb 415C     		popq	%r12
 1288              		.cfi_def_cfa_offset 32
 1289 06fd 415D     		popq	%r13
 1290              		.cfi_def_cfa_offset 24
 1291              	.LVL120:
 218:Src/main.cpp  **** 
 1292              		.loc 1 218 1 view .LVU371
 1293 06ff 415E     		popq	%r14
 1294              		.cfi_def_cfa_offset 16
 1295 0701 415F     		popq	%r15
 1296              		.cfi_def_cfa_offset 8
 1297 0703 C3       		ret
 1298              	.LVL121:
 1299              	.L99:
 1300              		.cfi_restore_state
 218:Src/main.cpp  **** 
 1301              		.loc 1 218 1 view .LVU372
 1302 0704 E8000000 		call	__stack_chk_fail@PLT
 1302      00
 1303              	.LVL122:
 1304              		.cfi_endproc
 1305              	.LFE2486:
 1307              		.globl	_Z16getCoordsOfPointP10graphPoint
 1309              	_Z16getCoordsOfPointP10graphPoint:
 1310              	.LVL123:
 1311              	.LFB2487:
 233:Src/main.cpp  **** 	return (p->c);
 1312              		.loc 1 233 1 is_stmt 1 view -0
 1313              		.cfi_startproc
 234:Src/main.cpp  **** }
 1314              		.loc 1 234 2 view .LVU374
 234:Src/main.cpp  **** }
 1315              		.loc 1 234 14 is_stmt 0 view .LVU375
 1316 0709 F30F7E47 		movq	16(%rdi), %xmm0
GAS LISTING /tmp/cc4RI4t5.s 			page 84


 1316      10
 235:Src/main.cpp  **** 
 1317              		.loc 1 235 1 view .LVU376
 1318 070e C3       		ret
 1319              		.cfi_endproc
 1320              	.LFE2487:
 1322              		.globl	_Z21hasUncalculatedPointsPK10graphPoint
 1324              	_Z21hasUncalculatedPointsPK10graphPoint:
 1325              	.LVL124:
 1326              	.LFB2488:
 242:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 1327              		.loc 1 242 1 is_stmt 1 view -0
 1328              		.cfi_startproc
 243:Src/main.cpp  **** 	{
 1329              		.loc 1 243 2 view .LVU378
 1330              	.LBB559:
 243:Src/main.cpp  **** 	{
 1331              		.loc 1 243 13 is_stmt 0 view .LVU379
 1332 070f B8000000 		movl	$0, %eax
 1332      00
 1333              	.LVL125:
 1334              	.L103:
 243:Src/main.cpp  **** 	{
 1335              		.loc 1 243 22 is_stmt 1 discriminator 1 view .LVU380
 1336 0714 48394708 		cmpq	%rax, 8(%rdi)
 1337 0718 7613     		jbe	.L104
 245:Src/main.cpp  **** 			return true;
 1338              		.loc 1 245 3 view .LVU381
 245:Src/main.cpp  **** 			return true;
 1339              		.loc 1 245 11 is_stmt 0 view .LVU382
 1340 071a 488B17   		movq	(%rdi), %rdx
 245:Src/main.cpp  **** 			return true;
 1341              		.loc 1 245 20 view .LVU383
 1342 071d 488B14C2 		movq	(%rdx,%rax,8), %rdx
 245:Src/main.cpp  **** 			return true;
 1343              		.loc 1 245 3 view .LVU384
 1344 0721 807A1800 		cmpb	$0, 24(%rdx)
 1345 0725 740C     		je	.L105
 243:Src/main.cpp  **** 	{
 1346              		.loc 1 243 2 is_stmt 1 discriminator 2 view .LVU385
 1347 0727 4883C001 		addq	$1, %rax
 1348              	.LVL126:
 243:Src/main.cpp  **** 	{
 1349              		.loc 1 243 2 is_stmt 0 discriminator 2 view .LVU386
 1350 072b EBE7     		jmp	.L103
 1351              	.L104:
 243:Src/main.cpp  **** 	{
 1352              		.loc 1 243 2 discriminator 2 view .LVU387
 1353              	.LBE559:
 248:Src/main.cpp  **** }
 1354              		.loc 1 248 9 view .LVU388
 1355 072d B8000000 		movl	$0, %eax
 1355      00
 1356              	.LVL127:
 248:Src/main.cpp  **** }
 1357              		.loc 1 248 9 view .LVU389
 1358 0732 C3       		ret
GAS LISTING /tmp/cc4RI4t5.s 			page 85


 1359              	.LVL128:
 1360              	.L105:
 1361              	.LBB560:
 246:Src/main.cpp  **** 	}
 1362              		.loc 1 246 11 view .LVU390
 1363 0733 B8010000 		movl	$1, %eax
 1363      00
 1364              	.LVL129:
 246:Src/main.cpp  **** 	}
 1365              		.loc 1 246 11 view .LVU391
 1366              	.LBE560:
 249:Src/main.cpp  **** 
 1367              		.loc 1 249 1 view .LVU392
 1368 0738 C3       		ret
 1369              		.cfi_endproc
 1370              	.LFE2488:
 1372              		.globl	_Z12getMinTargetPK10graphPoint
 1374              	_Z12getMinTargetPK10graphPoint:
 1375              	.LVL130:
 1376              	.LFB2489:
 252:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 1377              		.loc 1 252 1 is_stmt 1 view -0
 1378              		.cfi_startproc
 253:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 1379              		.loc 1 253 2 view .LVU394
 253:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 1380              		.loc 1 253 18 is_stmt 0 view .LVU395
 1381 0739 F30F100D 		movss	.LC16(%rip), %xmm1
 1381      00000000 
 1382 0741 F30F5E0D 		divss	.LC8(%rip), %xmm1
 1382      00000000 
 1383              	.LVL131:
 254:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1384              		.loc 1 254 2 is_stmt 1 view .LVU396
 255:Src/main.cpp  **** 	{
 1385              		.loc 1 255 2 view .LVU397
 1386              	.LBB561:
 255:Src/main.cpp  **** 	{
 1387              		.loc 1 255 13 is_stmt 0 view .LVU398
 1388 0749 B8000000 		movl	$0, %eax
 1388      00
 1389              	.LBE561:
 254:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1390              		.loc 1 254 22 view .LVU399
 1391 074e B9000000 		movl	$0, %ecx
 1391      00
 1392 0753 EB04     		jmp	.L109
 1393              	.LVL132:
 1394              	.L108:
 1395              	.LBB562:
 255:Src/main.cpp  **** 	{
 1396              		.loc 1 255 2 is_stmt 1 discriminator 2 view .LVU400
 1397 0755 4883C001 		addq	$1, %rax
 1398              	.LVL133:
 1399              	.L109:
 255:Src/main.cpp  **** 	{
 1400              		.loc 1 255 22 discriminator 1 view .LVU401
GAS LISTING /tmp/cc4RI4t5.s 			page 86


 1401 0759 48394708 		cmpq	%rax, 8(%rdi)
 1402 075d 761F     		jbe	.L106
 257:Src/main.cpp  **** 		{
 1403              		.loc 1 257 3 view .LVU402
 257:Src/main.cpp  **** 		{
 1404              		.loc 1 257 10 is_stmt 0 view .LVU403
 1405 075f 488B17   		movq	(%rdi), %rdx
 257:Src/main.cpp  **** 		{
 1406              		.loc 1 257 19 view .LVU404
 1407 0762 488B14C2 		movq	(%rdx,%rax,8), %rdx
 257:Src/main.cpp  **** 		{
 1408              		.loc 1 257 3 view .LVU405
 1409 0766 807A1800 		cmpb	$0, 24(%rdx)
 1410 076a 75E9     		jne	.L108
 257:Src/main.cpp  **** 		{
 1411              		.loc 1 257 51 discriminator 1 view .LVU406
 1412 076c F30F1042 		movss	28(%rdx), %xmm0
 1412      1C
 257:Src/main.cpp  **** 		{
 1413              		.loc 1 257 33 discriminator 1 view .LVU407
 1414 0771 0F2FC8   		comiss	%xmm0, %xmm1
 1415 0774 72DF     		jb	.L108
 260:Src/main.cpp  **** 		}
 1416              		.loc 1 260 7 view .LVU408
 1417 0776 4889D1   		movq	%rdx, %rcx
 1418              	.LVL134:
 259:Src/main.cpp  **** 			pp = p->targets[i];
 1419              		.loc 1 259 6 view .LVU409
 1420 0779 0F28C8   		movaps	%xmm0, %xmm1
 1421              	.LVL135:
 259:Src/main.cpp  **** 			pp = p->targets[i];
 1422              		.loc 1 259 6 view .LVU410
 1423 077c EBD7     		jmp	.L108
 1424              	.LVL136:
 1425              	.L106:
 259:Src/main.cpp  **** 			pp = p->targets[i];
 1426              		.loc 1 259 6 view .LVU411
 1427              	.LBE562:
 264:Src/main.cpp  **** 
 1428              		.loc 1 264 1 view .LVU412
 1429 077e 4889C8   		movq	%rcx, %rax
 1430              	.LVL137:
 264:Src/main.cpp  **** 
 1431              		.loc 1 264 1 view .LVU413
 1432 0781 C3       		ret
 1433              		.cfi_endproc
 1434              	.LFE2489:
 1436              		.globl	_Z12calculateWaym
 1438              	_Z12calculateWaym:
 1439              	.LVL138:
 1440              	.LFB2490:
 267:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 1441              		.loc 1 267 1 is_stmt 1 view -0
 1442              		.cfi_startproc
 267:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 1443              		.loc 1 267 1 is_stmt 0 view .LVU415
 1444 0782 4155     		pushq	%r13
GAS LISTING /tmp/cc4RI4t5.s 			page 87


 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 13, -16
 1447 0784 4154     		pushq	%r12
 1448              		.cfi_def_cfa_offset 24
 1449              		.cfi_offset 12, -24
 1450 0786 55       		pushq	%rbp
 1451              		.cfi_def_cfa_offset 32
 1452              		.cfi_offset 6, -32
 1453 0787 53       		pushq	%rbx
 1454              		.cfi_def_cfa_offset 40
 1455              		.cfi_offset 3, -40
 1456 0788 4883EC08 		subq	$8, %rsp
 1457              		.cfi_def_cfa_offset 48
 268:Src/main.cpp  **** 		return;
 1458              		.loc 1 268 2 is_stmt 1 view .LVU416
 268:Src/main.cpp  **** 		return;
 1459              		.loc 1 268 16 is_stmt 0 view .LVU417
 1460 078c 4C8D24FD 		leaq	0(,%rdi,8), %r12
 1460      00000000 
 1461 0794 4C89E2   		movq	%r12, %rdx
 1462 0797 48031500 		addq	graph(%rip), %rdx
 1462      000000
 1463 079e 488B02   		movq	(%rdx), %rax
 268:Src/main.cpp  **** 		return;
 1464              		.loc 1 268 2 view .LVU418
 1465 07a1 4885C0   		testq	%rax, %rax
 1466 07a4 0F84AD00 		je	.L111
 1466      0000
 1467 07aa 4989FD   		movq	%rdi, %r13
 268:Src/main.cpp  **** 		return;
 1468              		.loc 1 268 26 discriminator 1 view .LVU419
 1469 07ad 80781800 		cmpb	$0, 24(%rax)
 1470 07b1 0F85A000 		jne	.L111
 1470      0000
 270:Src/main.cpp  **** 	
 1471              		.loc 1 270 2 is_stmt 1 view .LVU420
 270:Src/main.cpp  **** 	
 1472              		.loc 1 270 27 is_stmt 0 view .LVU421
 1473 07b7 C6401801 		movb	$1, 24(%rax)
 272:Src/main.cpp  **** 		return;
 1474              		.loc 1 272 2 is_stmt 1 view .LVU422
 272:Src/main.cpp  **** 		return;
 1475              		.loc 1 272 16 is_stmt 0 view .LVU423
 1476 07bb 488B02   		movq	(%rdx), %rax
 272:Src/main.cpp  **** 		return;
 1477              		.loc 1 272 2 view .LVU424
 1478 07be 48837808 		cmpq	$0, 8(%rax)
 1478      00
 1479 07c3 0F848E00 		je	.L111
 1479      0000
 1480              	.LBB563:
 278:Src/main.cpp  **** 	{
 1481              		.loc 1 278 13 view .LVU425
 1482 07c9 BB000000 		movl	$0, %ebx
 1482      00
 1483 07ce EB04     		jmp	.L116
 1484              	.LVL139:
GAS LISTING /tmp/cc4RI4t5.s 			page 88


 1485              	.L114:
 278:Src/main.cpp  **** 	{
 1486              		.loc 1 278 2 is_stmt 1 discriminator 2 view .LVU426
 1487 07d0 4883C301 		addq	$1, %rbx
 1488              	.LVL140:
 1489              	.L116:
 278:Src/main.cpp  **** 	{
 1490              		.loc 1 278 22 discriminator 1 view .LVU427
 278:Src/main.cpp  **** 	{
 1491              		.loc 1 278 35 is_stmt 0 discriminator 1 view .LVU428
 1492 07d4 488B0500 		movq	graph(%rip), %rax
 1492      000000
 1493 07db 4A8B3C20 		movq	(%rax,%r12), %rdi
 278:Src/main.cpp  **** 	{
 1494              		.loc 1 278 22 discriminator 1 view .LVU429
 1495 07df 48395F08 		cmpq	%rbx, 8(%rdi)
 1496 07e3 7646     		jbe	.L113
 280:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1497              		.loc 1 280 3 is_stmt 1 view .LVU430
 280:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1498              		.loc 1 280 34 is_stmt 0 view .LVU431
 1499 07e5 488D04DD 		leaq	0(,%rbx,8), %rax
 1499      00000000 
 1500 07ed 480307   		addq	(%rdi), %rax
 280:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1501              		.loc 1 280 9 view .LVU432
 1502 07f0 488B28   		movq	(%rax), %rbp
 1503              	.LVL141:
 281:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 1504              		.loc 1 281 3 is_stmt 1 view .LVU433
 281:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 1505              		.loc 1 281 18 is_stmt 0 view .LVU434
 1506 07f3 4889EE   		movq	%rbp, %rsi
 1507 07f6 E8000000 		call	_Z11getWayPriceP10graphPointS0_@PLT
 1507      00
 1508              	.LVL142:
 282:Src/main.cpp  **** 		{
 1509              		.loc 1 282 3 is_stmt 1 view .LVU435
 282:Src/main.cpp  **** 		{
 1510              		.loc 1 282 13 is_stmt 0 view .LVU436
 1511 07fb F30F104D 		movss	28(%rbp), %xmm1
 1511      1C
 282:Src/main.cpp  **** 		{
 1512              		.loc 1 282 33 view .LVU437
 1513 0800 488B0500 		movq	graph(%rip), %rax
 1513      000000
 1514 0807 4A8B0420 		movq	(%rax,%r12), %rax
 282:Src/main.cpp  **** 		{
 1515              		.loc 1 282 43 view .LVU438
 1516 080b F30F5840 		addss	28(%rax), %xmm0
 1516      1C
 1517              	.LVL143:
 282:Src/main.cpp  **** 		{
 1518              		.loc 1 282 3 view .LVU439
 1519 0810 0F2FC8   		comiss	%xmm0, %xmm1
 1520 0813 76BB     		jbe	.L114
 284:Src/main.cpp  **** 			ways[watch->i] = index;
GAS LISTING /tmp/cc4RI4t5.s 			page 89


 1521              		.loc 1 284 4 is_stmt 1 view .LVU440
 284:Src/main.cpp  **** 			ways[watch->i] = index;
 1522              		.loc 1 284 18 is_stmt 0 view .LVU441
 1523 0815 F30F1145 		movss	%xmm0, 28(%rbp)
 1523      1C
 285:Src/main.cpp  **** 		}
 1524              		.loc 1 285 4 is_stmt 1 view .LVU442
 285:Src/main.cpp  **** 		}
 1525              		.loc 1 285 16 is_stmt 0 view .LVU443
 1526 081a 488B5520 		movq	32(%rbp), %rdx
 285:Src/main.cpp  **** 		}
 1527              		.loc 1 285 19 view .LVU444
 1528 081e 488B0500 		movq	ways(%rip), %rax
 1528      000000
 1529 0825 4C892CD0 		movq	%r13, (%rax,%rdx,8)
 1530 0829 EBA5     		jmp	.L114
 1531              	.LVL144:
 1532              	.L113:
 285:Src/main.cpp  **** 		}
 1533              		.loc 1 285 19 view .LVU445
 1534              	.LBE563:
 289:Src/main.cpp  **** 	{
 1535              		.loc 1 289 2 is_stmt 1 view .LVU446
 289:Src/main.cpp  **** 	{
 1536              		.loc 1 289 30 view .LVU447
 289:Src/main.cpp  **** 	{
 1537              		.loc 1 289 42 is_stmt 0 view .LVU448
 1538 082b 4C89E0   		movq	%r12, %rax
 1539 082e 48030500 		addq	graph(%rip), %rax
 1539      000000
 289:Src/main.cpp  **** 	{
 1540              		.loc 1 289 30 view .LVU449
 1541 0835 488B18   		movq	(%rax), %rbx
 1542 0838 4889DF   		movq	%rbx, %rdi
 1543 083b E8000000 		call	_Z21hasUncalculatedPointsPK10graphPoint
 1543      00
 1544              	.LVL145:
 1545 0840 84C0     		testb	%al, %al
 1546 0842 7413     		je	.L111
 291:Src/main.cpp  **** 		calculateWay(watch->i);
 1547              		.loc 1 291 3 is_stmt 1 view .LVU450
 291:Src/main.cpp  **** 		calculateWay(watch->i);
 1548              		.loc 1 291 23 is_stmt 0 view .LVU451
 1549 0844 4889DF   		movq	%rbx, %rdi
 1550 0847 E8000000 		call	_Z12getMinTargetPK10graphPoint
 1550      00
 1551              	.LVL146:
 292:Src/main.cpp  **** 	}
 1552              		.loc 1 292 3 is_stmt 1 view .LVU452
 292:Src/main.cpp  **** 	}
 1553              		.loc 1 292 15 is_stmt 0 view .LVU453
 1554 084c 488B7820 		movq	32(%rax), %rdi
 1555 0850 E8000000 		call	_Z12calculateWaym
 1555      00
 1556              	.LVL147:
 289:Src/main.cpp  **** 	{
 1557              		.loc 1 289 2 view .LVU454
GAS LISTING /tmp/cc4RI4t5.s 			page 90


 1558 0855 EBD4     		jmp	.L113
 1559              	.LVL148:
 1560              	.L111:
 294:Src/main.cpp  **** 
 1561              		.loc 1 294 1 view .LVU455
 1562 0857 4883C408 		addq	$8, %rsp
 1563              		.cfi_def_cfa_offset 40
 1564 085b 5B       		popq	%rbx
 1565              		.cfi_def_cfa_offset 32
 1566 085c 5D       		popq	%rbp
 1567              		.cfi_def_cfa_offset 24
 1568 085d 415C     		popq	%r12
 1569              		.cfi_def_cfa_offset 16
 1570 085f 415D     		popq	%r13
 1571              		.cfi_def_cfa_offset 8
 1572 0861 C3       		ret
 1573              		.cfi_endproc
 1574              	.LFE2490:
 1576              		.globl	_Z8drawLineP6coordsS0_
 1578              	_Z8drawLineP6coordsS0_:
 1579              	.LVL149:
 1580              	.LFB2491:
 299:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 1581              		.loc 1 299 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 299:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 1583              		.loc 1 299 1 is_stmt 0 view .LVU457
 1584 0862 4883EC08 		subq	$8, %rsp
 1585              		.cfi_def_cfa_offset 16
 300:Src/main.cpp  **** }
 1586              		.loc 1 300 2 is_stmt 1 view .LVU458
 300:Src/main.cpp  **** }
 1587              		.loc 1 300 10 is_stmt 0 view .LVU459
 1588 0866 F30F105E 		movss	4(%rsi), %xmm3
 1588      04
 1589 086b F30F1016 		movss	(%rsi), %xmm2
 1590 086f F30F104F 		movss	4(%rdi), %xmm1
 1590      04
 1591 0874 F30F1007 		movss	(%rdi), %xmm0
 1592 0878 E8000000 		call	_Z8drawLineffff@PLT
 1592      00
 1593              	.LVL150:
 301:Src/main.cpp  **** 
 1594              		.loc 1 301 1 view .LVU460
 1595 087d 4883C408 		addq	$8, %rsp
 1596              		.cfi_def_cfa_offset 8
 1597 0881 C3       		ret
 1598              		.cfi_endproc
 1599              	.LFE2491:
 1601              		.globl	_Z8drawLineP10graphPointS0_
 1603              	_Z8drawLineP10graphPointS0_:
 1604              	.LVL151:
 1605              	.LFB2492:
 304:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 1606              		.loc 1 304 1 is_stmt 1 view -0
 1607              		.cfi_startproc
 304:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
GAS LISTING /tmp/cc4RI4t5.s 			page 91


 1608              		.loc 1 304 1 is_stmt 0 view .LVU462
 1609 0882 4883EC08 		subq	$8, %rsp
 1610              		.cfi_def_cfa_offset 16
 305:Src/main.cpp  **** }
 1611              		.loc 1 305 2 is_stmt 1 view .LVU463
 305:Src/main.cpp  **** }
 1612              		.loc 1 305 10 is_stmt 0 view .LVU464
 1613 0886 4883C610 		addq	$16, %rsi
 1614              	.LVL152:
 305:Src/main.cpp  **** }
 1615              		.loc 1 305 10 view .LVU465
 1616 088a 4883C710 		addq	$16, %rdi
 1617              	.LVL153:
 305:Src/main.cpp  **** }
 1618              		.loc 1 305 10 view .LVU466
 1619 088e E8000000 		call	_Z8drawLineP6coordsS0_
 1619      00
 1620              	.LVL154:
 306:Src/main.cpp  **** 
 1621              		.loc 1 306 1 view .LVU467
 1622 0893 4883C408 		addq	$8, %rsp
 1623              		.cfi_def_cfa_offset 8
 1624 0897 C3       		ret
 1625              		.cfi_endproc
 1626              	.LFE2492:
 1628              		.globl	_Z9drawEdgesP10graphPoint
 1630              	_Z9drawEdgesP10graphPoint:
 1631              	.LVL155:
 1632              	.LFB2493:
 330:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 1633              		.loc 1 330 1 is_stmt 1 view -0
 1634              		.cfi_startproc
 331:Src/main.cpp  **** 	{
 1635              		.loc 1 331 2 view .LVU469
 1636 0898 4885FF   		testq	%rdi, %rdi
 1637 089b 7448     		je	.L127
 330:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 1638              		.loc 1 330 1 is_stmt 0 discriminator 1 view .LVU470
 1639 089d 55       		pushq	%rbp
 1640              		.cfi_def_cfa_offset 16
 1641              		.cfi_offset 6, -16
 1642 089e 53       		pushq	%rbx
 1643              		.cfi_def_cfa_offset 24
 1644              		.cfi_offset 3, -24
 1645 089f 4883EC08 		subq	$8, %rsp
 1646              		.cfi_def_cfa_offset 32
 1647 08a3 4889FB   		movq	%rdi, %rbx
 331:Src/main.cpp  **** 	{
 1648              		.loc 1 331 15 discriminator 1 view .LVU471
 1649 08a6 48837F08 		cmpq	$0, 8(%rdi)
 1649      00
 1650 08ab 7507     		jne	.L130
 1651              	.LVL156:
 1652              	.L123:
 340:Src/main.cpp  **** 
 1653              		.loc 1 340 1 view .LVU472
 1654 08ad 4883C408 		addq	$8, %rsp
GAS LISTING /tmp/cc4RI4t5.s 			page 92


 1655              		.cfi_remember_state
 1656              		.cfi_def_cfa_offset 24
 1657 08b1 5B       		popq	%rbx
 1658              		.cfi_def_cfa_offset 16
 1659              	.LVL157:
 340:Src/main.cpp  **** 
 1660              		.loc 1 340 1 view .LVU473
 1661 08b2 5D       		popq	%rbp
 1662              		.cfi_def_cfa_offset 8
 1663 08b3 C3       		ret
 1664              	.LVL158:
 1665              	.L130:
 1666              		.cfi_restore_state
 335:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1667              		.loc 1 335 2 is_stmt 1 view .LVU474
 335:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1668              		.loc 1 335 12 is_stmt 0 view .LVU475
 1669 08b4 BFFFFF00 		movl	$65535, %edi
 1669      00
 1670 08b9 E8000000 		call	_Z10glSetColorj@PLT
 1670      00
 1671              	.LVL159:
 336:Src/main.cpp  **** 	{
 1672              		.loc 1 336 2 is_stmt 1 view .LVU476
 1673              	.LBB564:
 336:Src/main.cpp  **** 	{
 1674              		.loc 1 336 13 is_stmt 0 view .LVU477
 1675 08be BD000000 		movl	$0, %ebp
 1675      00
 1676 08c3 EB18     		jmp	.L125
 1677              	.LVL160:
 1678              	.L131:
 338:Src/main.cpp  **** 	}
 1679              		.loc 1 338 3 is_stmt 1 discriminator 2 view .LVU478
 338:Src/main.cpp  **** 	}
 1680              		.loc 1 338 23 is_stmt 0 discriminator 2 view .LVU479
 1681 08c5 488B03   		movq	(%rbx), %rax
 338:Src/main.cpp  **** 	}
 1682              		.loc 1 338 32 discriminator 2 view .LVU480
 1683 08c8 488B34E8 		movq	(%rax,%rbp,8), %rsi
 338:Src/main.cpp  **** 	}
 1684              		.loc 1 338 11 discriminator 2 view .LVU481
 1685 08cc 4883C610 		addq	$16, %rsi
 1686 08d0 488D7B10 		leaq	16(%rbx), %rdi
 1687 08d4 E8000000 		call	_Z8drawLineP6coordsS0_
 1687      00
 1688              	.LVL161:
 336:Src/main.cpp  **** 	{
 1689              		.loc 1 336 2 is_stmt 1 discriminator 2 view .LVU482
 1690 08d9 4883C501 		addq	$1, %rbp
 1691              	.LVL162:
 1692              	.L125:
 336:Src/main.cpp  **** 	{
 1693              		.loc 1 336 22 discriminator 3 view .LVU483
 1694 08dd 48396B08 		cmpq	%rbp, 8(%rbx)
 1695 08e1 77E2     		ja	.L131
 1696 08e3 EBC8     		jmp	.L123
GAS LISTING /tmp/cc4RI4t5.s 			page 93


 1697              	.LVL163:
 1698              	.L127:
 1699              		.cfi_def_cfa_offset 8
 1700              		.cfi_restore 3
 1701              		.cfi_restore 6
 336:Src/main.cpp  **** 	{
 1702              		.loc 1 336 22 is_stmt 0 discriminator 3 view .LVU484
 1703 08e5 C3       		ret
 1704              	.LBE564:
 1705              		.cfi_endproc
 1706              	.LFE2493:
 1708              		.globl	_Z7drawWaymm
 1710              	_Z7drawWaymm:
 1711              	.LVL164:
 1712              	.LFB2495:
 360:Src/main.cpp  **** 	size_t curr = pointNum;
 1713              		.loc 1 360 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 360:Src/main.cpp  **** 	size_t curr = pointNum;
 1715              		.loc 1 360 1 is_stmt 0 view .LVU486
 1716 08e6 55       		pushq	%rbp
 1717              		.cfi_def_cfa_offset 16
 1718              		.cfi_offset 6, -16
 1719 08e7 53       		pushq	%rbx
 1720              		.cfi_def_cfa_offset 24
 1721              		.cfi_offset 3, -24
 1722 08e8 4883EC08 		subq	$8, %rsp
 1723              		.cfi_def_cfa_offset 32
 1724 08ec 4889F5   		movq	%rsi, %rbp
 361:Src/main.cpp  **** 	while(curr != target)
 1725              		.loc 1 361 2 is_stmt 1 view .LVU487
 1726              	.LVL165:
 1727              	.L134:
 362:Src/main.cpp  **** 	{
 1728              		.loc 1 362 2 view .LVU488
 362:Src/main.cpp  **** 	{
 1729              		.loc 1 362 13 view .LVU489
 1730 08ef 4839EF   		cmpq	%rbp, %rdi
 1731 08f2 7433     		je	.L132
 364:Src/main.cpp  **** 		curr = ways[curr];
 1732              		.loc 1 364 3 view .LVU490
 364:Src/main.cpp  **** 		curr = ways[curr];
 1733              		.loc 1 364 41 is_stmt 0 view .LVU491
 1734 08f4 488B0500 		movq	graph(%rip), %rax
 1734      000000
 364:Src/main.cpp  **** 		curr = ways[curr];
 1735              		.loc 1 364 40 view .LVU492
 1736 08fb 488D1CFD 		leaq	0(,%rdi,8), %rbx
 1736      00000000 
 1737 0903 488B1500 		movq	ways(%rip), %rdx
 1737      000000
 1738 090a 488B14FA 		movq	(%rdx,%rdi,8), %rdx
 364:Src/main.cpp  **** 		curr = ways[curr];
 1739              		.loc 1 364 11 view .LVU493
 1740 090e 488B34D0 		movq	(%rax,%rdx,8), %rsi
 1741 0912 488B3C18 		movq	(%rax,%rbx), %rdi
 1742              	.LVL166:
GAS LISTING /tmp/cc4RI4t5.s 			page 94


 364:Src/main.cpp  **** 		curr = ways[curr];
 1743              		.loc 1 364 11 view .LVU494
 1744 0916 E8000000 		call	_Z8drawLineP10graphPointS0_
 1744      00
 1745              	.LVL167:
 365:Src/main.cpp  **** 	}
 1746              		.loc 1 365 3 is_stmt 1 view .LVU495
 365:Src/main.cpp  **** 	}
 1747              		.loc 1 365 19 is_stmt 0 view .LVU496
 1748 091b 48031D00 		addq	ways(%rip), %rbx
 1748      000000
 365:Src/main.cpp  **** 	}
 1749              		.loc 1 365 8 view .LVU497
 1750 0922 488B3B   		movq	(%rbx), %rdi
 1751              	.LVL168:
 362:Src/main.cpp  **** 	{
 1752              		.loc 1 362 2 view .LVU498
 1753 0925 EBC8     		jmp	.L134
 1754              	.L132:
 367:Src/main.cpp  **** 
 1755              		.loc 1 367 1 view .LVU499
 1756 0927 4883C408 		addq	$8, %rsp
 1757              		.cfi_def_cfa_offset 24
 1758 092b 5B       		popq	%rbx
 1759              		.cfi_def_cfa_offset 16
 1760 092c 5D       		popq	%rbp
 1761              		.cfi_def_cfa_offset 8
 1762              	.LVL169:
 367:Src/main.cpp  **** 
 1763              		.loc 1 367 1 view .LVU500
 1764 092d C3       		ret
 1765              		.cfi_endproc
 1766              	.LFE2495:
 1768              		.section	.rodata.str1.1
 1769              	.LC26:
 1770 0021 676C7574 		.string	"glut init\n"
 1770      20696E69 
 1770      740A00
 1771              	.LC27:
 1772 002c 64697370 		.string	"dispmode\n"
 1772      6D6F6465 
 1772      0A00
 1773              	.LC28:
 1774 0036 666C6F61 		.string	"floating"
 1774      74696E67 
 1774      00
 1775              	.LC29:
 1776 003f 72657368 		.string	"reshape\n"
 1776      6170650A 
 1776      00
 1777              	.LC30:
 1778 0048 64697370 		.string	"dispfunc\n"
 1778      66756E63 
 1778      0A00
 1779              	.LC31:
 1780 0052 6B657966 		.string	"keyfunc\n"
 1780      756E630A 
GAS LISTING /tmp/cc4RI4t5.s 			page 95


 1780      00
 1781              	.LC32:
 1782 005b 74696D65 		.string	"timer\n"
 1782      720A00
 1783              	.LC33:
 1784 0062 6D61696E 		.string	"mainloop\n"
 1784      6C6F6F70 
 1784      0A00
 1785              		.text
 1786              		.globl	main
 1788              	main:
 1789              	.LVL170:
 1790              	.LFB2500:
 442:Src/main.cpp  **** 	numOfObstacles = 30;
 1791              		.loc 1 442 1 is_stmt 1 view -0
 1792              		.cfi_startproc
 442:Src/main.cpp  **** 	numOfObstacles = 30;
 1793              		.loc 1 442 1 is_stmt 0 view .LVU502
 1794 092e 4155     		pushq	%r13
 1795              		.cfi_def_cfa_offset 16
 1796              		.cfi_offset 13, -16
 1797 0930 4154     		pushq	%r12
 1798              		.cfi_def_cfa_offset 24
 1799              		.cfi_offset 12, -24
 1800 0932 55       		pushq	%rbp
 1801              		.cfi_def_cfa_offset 32
 1802              		.cfi_offset 6, -32
 1803 0933 53       		pushq	%rbx
 1804              		.cfi_def_cfa_offset 40
 1805              		.cfi_offset 3, -40
 1806 0934 4883EC58 		subq	$88, %rsp
 1807              		.cfi_def_cfa_offset 128
 1808 0938 897C243C 		movl	%edi, 60(%rsp)
 1809 093c 4889F5   		movq	%rsi, %rbp
 442:Src/main.cpp  **** 	numOfObstacles = 30;
 1810              		.loc 1 442 1 view .LVU503
 1811 093f 64488B04 		movq	%fs:40, %rax
 1811      25280000 
 1811      00
 1812 0948 48894424 		movq	%rax, 72(%rsp)
 1812      48
 1813 094d 31C0     		xorl	%eax, %eax
 443:Src/main.cpp  **** 	size_t iter = 0;
 1814              		.loc 1 443 2 is_stmt 1 view .LVU504
 443:Src/main.cpp  **** 	size_t iter = 0;
 1815              		.loc 1 443 17 is_stmt 0 view .LVU505
 1816 094f 48C70500 		movq	$30, numOfObstacles(%rip)
 1816      0000001E 
 1816      000000
 444:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 1817              		.loc 1 444 2 is_stmt 1 view .LVU506
 1818              	.LVL171:
 445:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 1819              		.loc 1 445 2 view .LVU507
 445:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 1820              		.loc 1 445 38 is_stmt 0 view .LVU508
 1821 095a BFA00500 		movl	$1440, %edi
GAS LISTING /tmp/cc4RI4t5.s 			page 96


 1821      00
 1822              	.LVL172:
 445:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 1823              		.loc 1 445 38 view .LVU509
 1824 095f E8000000 		call	malloc@PLT
 1824      00
 1825              	.LVL173:
 445:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 1826              		.loc 1 445 38 view .LVU510
 1827 0964 4889C3   		movq	%rax, %rbx
 445:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 1828              		.loc 1 445 12 view .LVU511
 1829 0967 48890500 		movq	%rax, obstacles(%rip)
 1829      000000
 446:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 1830              		.loc 1 446 2 is_stmt 1 view .LVU512
 1831              	.LVL174:
 446:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 1832              		.loc 1 446 50 is_stmt 0 view .LVU513
 1833 096e 4989E4   		movq	%rsp, %r12
 1834 0971 F30F1015 		movss	.LC17(%rip), %xmm2
 1834      00000000 
 1835 0979 F30F100D 		movss	.LC18(%rip), %xmm1
 1835      00000000 
 1836 0981 0F28C1   		movaps	%xmm1, %xmm0
 1837 0984 4C89E7   		movq	%r12, %rdi
 1838 0987 E8000000 		call	_Z14createObstaclefff@PLT
 1838      00
 1839              	.LVL175:
 1840 098c F30F6F24 		movdqu	(%rsp), %xmm4
 1840      24
 1841 0991 0F1123   		movups	%xmm4, (%rbx)
 1842 0994 F30F6F6C 		movdqu	16(%rsp), %xmm5
 1842      2410
 1843 099a 0F116B10 		movups	%xmm5, 16(%rbx)
 1844 099e F30F6F74 		movdqu	32(%rsp), %xmm6
 1844      2420
 1845 09a4 0F117320 		movups	%xmm6, 32(%rbx)
 447:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(510, 350, 200, 100);
 1846              		.loc 1 447 2 is_stmt 1 view .LVU514
 1847              	.LVL176:
 447:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(510, 350, 200, 100);
 1848              		.loc 1 447 20 is_stmt 0 view .LVU515
 1849 09a8 4C8B2D00 		movq	obstacles(%rip), %r13
 1849      000000
 447:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(510, 350, 200, 100);
 1850              		.loc 1 447 50 view .LVU516
 1851 09af F30F1015 		movss	.LC17(%rip), %xmm2
 1851      00000000 
 1852 09b7 F30F100D 		movss	.LC19(%rip), %xmm1
 1852      00000000 
 1853 09bf F30F1005 		movss	.LC20(%rip), %xmm0
 1853      00000000 
 1854 09c7 4C89E7   		movq	%r12, %rdi
 1855 09ca E8000000 		call	_Z14createObstaclefff@PLT
 1855      00
 1856              	.LVL177:
GAS LISTING /tmp/cc4RI4t5.s 			page 97


 1857 09cf F30F6F3C 		movdqu	(%rsp), %xmm7
 1857      24
 1858 09d4 410F117D 		movups	%xmm7, 48(%r13)
 1858      30
 1859 09d9 F30F6F5C 		movdqu	16(%rsp), %xmm3
 1859      2410
 1860 09df 410F115D 		movups	%xmm3, 64(%r13)
 1860      40
 1861 09e4 F30F6F64 		movdqu	32(%rsp), %xmm4
 1861      2420
 1862 09ea 410F1165 		movups	%xmm4, 80(%r13)
 1862      50
 448:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 1863              		.loc 1 448 2 is_stmt 1 view .LVU517
 1864              	.LVL178:
 448:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 1865              		.loc 1 448 20 is_stmt 0 view .LVU518
 1866 09ef 4C8B2D00 		movq	obstacles(%rip), %r13
 1866      000000
 448:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 1867              		.loc 1 448 55 view .LVU519
 1868 09f6 F30F101D 		movss	.LC18(%rip), %xmm3
 1868      00000000 
 1869 09fe F30F1015 		movss	.LC17(%rip), %xmm2
 1869      00000000 
 1870 0a06 F30F100D 		movss	.LC19(%rip), %xmm1
 1870      00000000 
 1871 0a0e F30F1005 		movss	.LC21(%rip), %xmm0
 1871      00000000 
 1872 0a16 4C89E7   		movq	%r12, %rdi
 1873 0a19 E8000000 		call	_Z14createObstacleffff@PLT
 1873      00
 1874              	.LVL179:
 1875 0a1e F30F6F2C 		movdqu	(%rsp), %xmm5
 1875      24
 1876 0a23 410F116D 		movups	%xmm5, 96(%r13)
 1876      60
 1877 0a28 F30F6F74 		movdqu	16(%rsp), %xmm6
 1877      2410
 1878 0a2e 410F1175 		movups	%xmm6, 112(%r13)
 1878      70
 1879 0a33 F30F6F7C 		movdqu	32(%rsp), %xmm7
 1879      2420
 1880 0a39 410F11BD 		movups	%xmm7, 128(%r13)
 1880      80000000 
 453:Src/main.cpp  **** 
 1881              		.loc 1 453 2 is_stmt 1 view .LVU520
 453:Src/main.cpp  **** 
 1882              		.loc 1 453 17 is_stmt 0 view .LVU521
 1883 0a41 48C70500 		movq	$3, numOfObstacles(%rip)
 1883      00000003 
 1883      000000
 455:Src/main.cpp  **** 
 1884              		.loc 1 455 2 is_stmt 1 view .LVU522
 455:Src/main.cpp  **** 
 1885              		.loc 1 455 12 is_stmt 0 view .LVU523
 1886 0a4c 48C70500 		movq	$14, graphSize(%rip)
GAS LISTING /tmp/cc4RI4t5.s 			page 98


 1886      0000000E 
 1886      000000
 457:Src/main.cpp  **** 
 1887              		.loc 1 457 2 is_stmt 1 view .LVU524
 457:Src/main.cpp  **** 
 1888              		.loc 1 457 51 is_stmt 0 view .LVU525
 1889 0a57 BF280000 		movl	$40, %edi
 1889      00
 1890 0a5c E8000000 		call	malloc@PLT
 1890      00
 1891              	.LVL180:
 1892 0a61 4889C3   		movq	%rax, %rbx
 1893              	.LVL181:
 459:Src/main.cpp  **** 	c.x = 350;
 1894              		.loc 1 459 2 is_stmt 1 view .LVU526
 460:Src/main.cpp  **** 	c.y = 10;
 1895              		.loc 1 460 2 view .LVU527
 461:Src/main.cpp  **** 	p->c = c;
 1896              		.loc 1 461 2 view .LVU528
 462:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 1897              		.loc 1 462 2 view .LVU529
 462:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 1898              		.loc 1 462 7 is_stmt 0 view .LVU530
 1899 0a64 48B80000 		movabsq	$4692750812855599104, %rax
 1899      AF430000 
 1899      2041
 1900              	.LVL182:
 462:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 1901              		.loc 1 462 7 view .LVU531
 1902 0a6e 48894310 		movq	%rax, 16(%rbx)
 463:Src/main.cpp  **** 
 1903              		.loc 1 463 2 is_stmt 1 view .LVU532
 463:Src/main.cpp  **** 
 1904              		.loc 1 463 52 is_stmt 0 view .LVU533
 1905 0a72 BF280000 		movl	$40, %edi
 1905      00
 1906 0a77 E8000000 		call	malloc@PLT
 1906      00
 1907              	.LVL183:
 1908 0a7c 4989C4   		movq	%rax, %r12
 1909              	.LVL184:
 465:Src/main.cpp  **** 	c2.x = 80;
 1910              		.loc 1 465 2 is_stmt 1 view .LVU534
 466:Src/main.cpp  **** 	c2.y = 440;
 1911              		.loc 1 466 2 view .LVU535
 467:Src/main.cpp  **** 	p2->c = c2;
 1912              		.loc 1 467 2 view .LVU536
 468:Src/main.cpp  **** 
 1913              		.loc 1 468 2 view .LVU537
 468:Src/main.cpp  **** 
 1914              		.loc 1 468 8 is_stmt 0 view .LVU538
 1915 0a7f 48B80000 		movabsq	$4889783296535298048, %rax
 1915      A0420000 
 1915      DC43
 1916              	.LVL185:
 468:Src/main.cpp  **** 
 1917              		.loc 1 468 8 view .LVU539
GAS LISTING /tmp/cc4RI4t5.s 			page 99


 1918 0a89 49894424 		movq	%rax, 16(%r12)
 1918      10
 470:Src/main.cpp  **** 	target = numOfObstacles * 4;
 1919              		.loc 1 470 2 is_stmt 1 view .LVU540
 470:Src/main.cpp  **** 	target = numOfObstacles * 4;
 1920              		.loc 1 470 37 is_stmt 0 view .LVU541
 1921 0a8e BF700000 		movl	$112, %edi
 1921      00
 1922 0a93 E8000000 		call	malloc@PLT
 1922      00
 1923              	.LVL186:
 470:Src/main.cpp  **** 	target = numOfObstacles * 4;
 1924              		.loc 1 470 8 view .LVU542
 1925 0a98 48890500 		movq	%rax, graph(%rip)
 1925      000000
 471:Src/main.cpp  **** 	home = target + 1;
 1926              		.loc 1 471 2 is_stmt 1 view .LVU543
 471:Src/main.cpp  **** 	home = target + 1;
 1927              		.loc 1 471 9 is_stmt 0 view .LVU544
 1928 0a9f 48C70500 		movq	$12, target(%rip)
 1928      0000000C 
 1928      000000
 472:Src/main.cpp  **** 	p2->i = home;
 1929              		.loc 1 472 2 is_stmt 1 view .LVU545
 472:Src/main.cpp  **** 	p2->i = home;
 1930              		.loc 1 472 7 is_stmt 0 view .LVU546
 1931 0aaa 48C70500 		movq	$13, home(%rip)
 1931      0000000D 
 1931      000000
 473:Src/main.cpp  **** 	p->i = target;
 1932              		.loc 1 473 2 is_stmt 1 view .LVU547
 473:Src/main.cpp  **** 	p->i = target;
 1933              		.loc 1 473 8 is_stmt 0 view .LVU548
 1934 0ab5 49C74424 		movq	$13, 32(%r12)
 1934      200D0000 
 1934      00
 474:Src/main.cpp  **** 	graph[target] = p;
 1935              		.loc 1 474 2 is_stmt 1 view .LVU549
 474:Src/main.cpp  **** 	graph[target] = p;
 1936              		.loc 1 474 7 is_stmt 0 view .LVU550
 1937 0abe 48C74320 		movq	$12, 32(%rbx)
 1937      0C000000 
 475:Src/main.cpp  **** 	graph[home] = p2;
 1938              		.loc 1 475 2 is_stmt 1 view .LVU551
 475:Src/main.cpp  **** 	graph[home] = p2;
 1939              		.loc 1 475 16 is_stmt 0 view .LVU552
 1940 0ac6 48895860 		movq	%rbx, 96(%rax)
 476:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 1941              		.loc 1 476 2 is_stmt 1 view .LVU553
 476:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 1942              		.loc 1 476 14 is_stmt 0 view .LVU554
 1943 0aca 4C896068 		movq	%r12, 104(%rax)
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1944              		.loc 1 477 2 is_stmt 1 view .LVU555
 1945              	.LVL187:
 1946              	.LBB565:
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
GAS LISTING /tmp/cc4RI4t5.s 			page 100


 1947              		.loc 1 477 13 is_stmt 0 view .LVU556
 1948 0ace B8000000 		movl	$0, %eax
 1948      00
 1949              	.LVL188:
 1950              	.L138:
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1951              		.loc 1 477 22 is_stmt 1 discriminator 3 view .LVU557
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1952              		.loc 1 477 39 is_stmt 0 discriminator 3 view .LVU558
 1953 0ad3 488B3500 		movq	numOfObstacles(%rip), %rsi
 1953      000000
 1954 0ada 488D14B5 		leaq	0(,%rsi,4), %rdx
 1954      00000000 
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1955              		.loc 1 477 22 discriminator 3 view .LVU559
 1956 0ae2 4839C2   		cmpq	%rax, %rdx
 1957 0ae5 7632     		jbe	.L144
 478:Src/main.cpp  **** 
 1958              		.loc 1 478 3 is_stmt 1 discriminator 2 view .LVU560
 478:Src/main.cpp  **** 
 1959              		.loc 1 478 26 is_stmt 0 discriminator 2 view .LVU561
 1960 0ae7 4889C2   		movq	%rax, %rdx
 1961 0aea 48C1EA02 		shrq	$2, %rdx
 478:Src/main.cpp  **** 
 1962              		.loc 1 478 29 discriminator 2 view .LVU562
 1963 0aee 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 1964 0af2 48C1E204 		salq	$4, %rdx
 1965 0af6 48031500 		addq	obstacles(%rip), %rdx
 1965      000000
 478:Src/main.cpp  **** 
 1966              		.loc 1 478 41 discriminator 2 view .LVU563
 1967 0afd 4889C1   		movq	%rax, %rcx
 1968 0b00 83E103   		andl	$3, %ecx
 478:Src/main.cpp  **** 
 1969              		.loc 1 478 44 discriminator 2 view .LVU564
 1970 0b03 488B4CCA 		movq	8(%rdx,%rcx,8), %rcx
 1970      08
 478:Src/main.cpp  **** 
 1971              		.loc 1 478 12 discriminator 2 view .LVU565
 1972 0b08 488B1500 		movq	graph(%rip), %rdx
 1972      000000
 1973 0b0f 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1974              		.loc 1 477 2 is_stmt 1 discriminator 2 view .LVU566
 1975 0b13 4883C001 		addq	$1, %rax
 1976              	.LVL189:
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1977              		.loc 1 477 2 is_stmt 0 discriminator 2 view .LVU567
 1978 0b17 EBBA     		jmp	.L138
 1979              	.L144:
 477:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 1980              		.loc 1 477 2 discriminator 2 view .LVU568
 1981              	.LBE565:
 1982              	.LBB566:
 480:Src/main.cpp  **** 	{
 1983              		.loc 1 480 13 view .LVU569
 1984 0b19 B8000000 		movl	$0, %eax
GAS LISTING /tmp/cc4RI4t5.s 			page 101


 1984      00
 1985              	.LVL190:
 1986              	.L137:
 480:Src/main.cpp  **** 	{
 1987              		.loc 1 480 22 is_stmt 1 discriminator 3 view .LVU570
 1988 0b1e 488B3D00 		movq	graphSize(%rip), %rdi
 1988      000000
 1989 0b25 4839C7   		cmpq	%rax, %rdi
 1990 0b28 7630     		jbe	.L139
 482:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 1991              		.loc 1 482 3 discriminator 2 view .LVU571
 482:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 1992              		.loc 1 482 10 is_stmt 0 discriminator 2 view .LVU572
 1993 0b2a 488B1500 		movq	graph(%rip), %rdx
 1993      000000
 1994 0b31 488D14C2 		leaq	(%rdx,%rax,8), %rdx
 1995 0b35 488B0A   		movq	(%rdx), %rcx
 482:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 1996              		.loc 1 482 15 discriminator 2 view .LVU573
 1997 0b38 48894120 		movq	%rax, 32(%rcx)
 483:Src/main.cpp  **** 	}
 1998              		.loc 1 483 3 is_stmt 1 discriminator 2 view .LVU574
 483:Src/main.cpp  **** 	}
 1999              		.loc 1 483 10 is_stmt 0 discriminator 2 view .LVU575
 2000 0b3c 488B12   		movq	(%rdx), %rdx
 483:Src/main.cpp  **** 	}
 2001              		.loc 1 483 20 discriminator 2 view .LVU576
 2002 0b3f F30F1005 		movss	.LC16(%rip), %xmm0
 2002      00000000 
 2003 0b47 F30F5E05 		divss	.LC8(%rip), %xmm0
 2003      00000000 
 2004 0b4f F30F1142 		movss	%xmm0, 28(%rdx)
 2004      1C
 480:Src/main.cpp  **** 	{
 2005              		.loc 1 480 2 is_stmt 1 discriminator 2 view .LVU577
 2006 0b54 4883C001 		addq	$1, %rax
 2007              	.LVL191:
 480:Src/main.cpp  **** 	{
 2008              		.loc 1 480 2 is_stmt 0 discriminator 2 view .LVU578
 2009 0b58 EBC4     		jmp	.L137
 2010              	.L139:
 480:Src/main.cpp  **** 	{
 2011              		.loc 1 480 2 discriminator 2 view .LVU579
 2012              	.LBE566:
 485:Src/main.cpp  **** 
 2013              		.loc 1 485 2 is_stmt 1 view .LVU580
 485:Src/main.cpp  **** 
 2014              		.loc 1 485 14 is_stmt 0 view .LVU581
 2015 0b5a 488B1500 		movq	target(%rip), %rdx
 2015      000000
 2016 0b61 488B0500 		movq	graph(%rip), %rax
 2016      000000
 2017              	.LVL192:
 485:Src/main.cpp  **** 
 2018              		.loc 1 485 14 view .LVU582
 2019 0b68 488B04D0 		movq	(%rax,%rdx,8), %rax
 485:Src/main.cpp  **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 102


 2020              		.loc 1 485 24 view .LVU583
 2021 0b6c C7401C00 		movl	$0x00000000, 28(%rax)
 2021      000000
 487:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 2022              		.loc 1 487 2 is_stmt 1 view .LVU584
 487:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 2023              		.loc 1 487 24 is_stmt 0 view .LVU585
 2024 0b73 48C1E703 		salq	$3, %rdi
 2025 0b77 E8000000 		call	malloc@PLT
 2025      00
 2026              	.LVL193:
 487:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 2027              		.loc 1 487 7 view .LVU586
 2028 0b7c 48890500 		movq	%rax, ways(%rip)
 2028      000000
 488:Src/main.cpp  **** 		ways[i] = target;
 2029              		.loc 1 488 2 is_stmt 1 view .LVU587
 2030              	.LVL194:
 2031              	.LBB567:
 488:Src/main.cpp  **** 		ways[i] = target;
 2032              		.loc 1 488 13 is_stmt 0 view .LVU588
 2033 0b83 B8000000 		movl	$0, %eax
 2033      00
 2034              	.LVL195:
 2035              	.L141:
 488:Src/main.cpp  **** 		ways[i] = target;
 2036              		.loc 1 488 22 is_stmt 1 discriminator 3 view .LVU589
 2037 0b88 48390500 		cmpq	%rax, graphSize(%rip)
 2037      000000
 2038 0b8f 7618     		jbe	.L140
 489:Src/main.cpp  **** 
 2039              		.loc 1 489 3 discriminator 2 view .LVU590
 489:Src/main.cpp  **** 
 2040              		.loc 1 489 11 is_stmt 0 discriminator 2 view .LVU591
 2041 0b91 488B0D00 		movq	target(%rip), %rcx
 2041      000000
 2042 0b98 488B1500 		movq	ways(%rip), %rdx
 2042      000000
 2043 0b9f 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 488:Src/main.cpp  **** 		ways[i] = target;
 2044              		.loc 1 488 2 is_stmt 1 discriminator 2 view .LVU592
 2045 0ba3 4883C001 		addq	$1, %rax
 2046              	.LVL196:
 488:Src/main.cpp  **** 		ways[i] = target;
 2047              		.loc 1 488 2 is_stmt 0 discriminator 2 view .LVU593
 2048 0ba7 EBDF     		jmp	.L141
 2049              	.L140:
 488:Src/main.cpp  **** 		ways[i] = target;
 2050              		.loc 1 488 2 discriminator 2 view .LVU594
 2051              	.LBE567:
 491:Src/main.cpp  **** 	startway.y 	= 0;
 2052              		.loc 1 491 2 is_stmt 1 view .LVU595
 491:Src/main.cpp  **** 	startway.y 	= 0;
 2053              		.loc 1 491 14 is_stmt 0 view .LVU596
 2054 0ba9 C7050000 		movl	$0x00000000, startway(%rip)
 2054      00000000 
 2054      0000
GAS LISTING /tmp/cc4RI4t5.s 			page 103


 492:Src/main.cpp  **** 	endway.x	= 150;
 2055              		.loc 1 492 2 is_stmt 1 view .LVU597
 492:Src/main.cpp  **** 	endway.x	= 150;
 2056              		.loc 1 492 14 is_stmt 0 view .LVU598
 2057 0bb3 C7050000 		movl	$0x00000000, 4+startway(%rip)
 2057      00000000 
 2057      0000
 493:Src/main.cpp  **** 	endway.y	= 150;
 2058              		.loc 1 493 2 is_stmt 1 view .LVU599
 493:Src/main.cpp  **** 	endway.y	= 150;
 2059              		.loc 1 493 11 is_stmt 0 view .LVU600
 2060 0bbd F30F1005 		movss	.LC25(%rip), %xmm0
 2060      00000000 
 2061 0bc5 F30F1105 		movss	%xmm0, endway(%rip)
 2061      00000000 
 494:Src/main.cpp  **** 
 2062              		.loc 1 494 2 is_stmt 1 view .LVU601
 494:Src/main.cpp  **** 
 2063              		.loc 1 494 11 is_stmt 0 view .LVU602
 2064 0bcd F30F1105 		movss	%xmm0, 4+endway(%rip)
 2064      00000000 
 497:Src/main.cpp  **** 	c3.x = 200;
 2065              		.loc 1 497 2 is_stmt 1 view .LVU603
 498:Src/main.cpp  **** 	c3.y = 0;
 2066              		.loc 1 498 2 view .LVU604
 499:Src/main.cpp  **** 
 2067              		.loc 1 499 2 view .LVU605
 502:Src/main.cpp  **** 	calculateWay(target);
 2068              		.loc 1 502 2 view .LVU606
 502:Src/main.cpp  **** 	calculateWay(target);
 2069              		.loc 1 502 11 is_stmt 0 view .LVU607
 2070 0bd5 4889DF   		movq	%rbx, %rdi
 2071 0bd8 E8000000 		call	_Z9initPointP10graphPoint
 2071      00
 2072              	.LVL197:
 503:Src/main.cpp  **** 	
 2073              		.loc 1 503 2 is_stmt 1 view .LVU608
 503:Src/main.cpp  **** 	
 2074              		.loc 1 503 14 is_stmt 0 view .LVU609
 2075 0bdd 488B3D00 		movq	target(%rip), %rdi
 2075      000000
 2076 0be4 E8000000 		call	_Z12calculateWaym
 2076      00
 2077              	.LVL198:
 507:Src/main.cpp  **** 		exit(0);
 2078              		.loc 1 507 2 is_stmt 1 view .LVU610
 2079 0be9 837C243C 		cmpl	$1, 60(%rsp)
 2079      01
 2080 0bee 0F840701 		je	.L146
 2080      0000
 513:Src/main.cpp  **** 	glutInit(&argc, argv);
 2081              		.loc 1 513 3 view .LVU611
 513:Src/main.cpp  **** 	glutInit(&argc, argv);
 2082              		.loc 1 513 11 is_stmt 0 view .LVU612
 2083 0bf4 488D3500 		leaq	.LC26(%rip), %rsi
 2083      000000
 2084 0bfb 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
GAS LISTING /tmp/cc4RI4t5.s 			page 104


 2084      000000
 2085 0c02 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2085      00
 2086              	.LVL199:
 514:Src/main.cpp  **** 	cout << "dispmode\n";
 2087              		.loc 1 514 2 is_stmt 1 view .LVU613
 514:Src/main.cpp  **** 	cout << "dispmode\n";
 2088              		.loc 1 514 10 is_stmt 0 view .LVU614
 2089 0c07 488D7C24 		leaq	60(%rsp), %rdi
 2089      3C
 2090 0c0c 4889EE   		movq	%rbp, %rsi
 2091 0c0f E8000000 		call	glutInit@PLT
 2091      00
 2092              	.LVL200:
 515:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 2093              		.loc 1 515 2 is_stmt 1 view .LVU615
 515:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 2094              		.loc 1 515 10 is_stmt 0 view .LVU616
 2095 0c14 488D3500 		leaq	.LC27(%rip), %rsi
 2095      000000
 2096 0c1b 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2096      000000
 2097 0c22 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2097      00
 2098              	.LVL201:
 516:Src/main.cpp  **** 	glutCreateWindow("floating");
 2099              		.loc 1 516 2 is_stmt 1 view .LVU617
 516:Src/main.cpp  **** 	glutCreateWindow("floating");
 2100              		.loc 1 516 21 is_stmt 0 view .LVU618
 2101 0c27 BF020000 		movl	$2, %edi
 2101      00
 2102 0c2c E8000000 		call	glutInitDisplayMode@PLT
 2102      00
 2103              	.LVL202:
 517:Src/main.cpp  **** 	cout << "reshape\n";
 2104              		.loc 1 517 2 is_stmt 1 view .LVU619
 517:Src/main.cpp  **** 	cout << "reshape\n";
 2105              		.loc 1 517 18 is_stmt 0 view .LVU620
 2106 0c31 488D3D00 		leaq	.LC28(%rip), %rdi
 2106      000000
 2107 0c38 E8000000 		call	glutCreateWindow@PLT
 2107      00
 2108              	.LVL203:
 518:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 2109              		.loc 1 518 2 is_stmt 1 view .LVU621
 518:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 2110              		.loc 1 518 10 is_stmt 0 view .LVU622
 2111 0c3d 488D3500 		leaq	.LC29(%rip), %rsi
 2111      000000
 2112 0c44 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2112      000000
 2113 0c4b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2113      00
 2114              	.LVL204:
 519:Src/main.cpp  **** 	cout << "dispfunc\n";
 2115              		.loc 1 519 2 is_stmt 1 view .LVU623
 519:Src/main.cpp  **** 	cout << "dispfunc\n";
GAS LISTING /tmp/cc4RI4t5.s 			page 105


 2116              		.loc 1 519 17 is_stmt 0 view .LVU624
 2117 0c50 488D3D00 		leaq	_Z7reshapeii(%rip), %rdi
 2117      000000
 2118 0c57 E8000000 		call	glutReshapeFunc@PLT
 2118      00
 2119              	.LVL205:
 520:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 2120              		.loc 1 520 2 is_stmt 1 view .LVU625
 520:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 2121              		.loc 1 520 10 is_stmt 0 view .LVU626
 2122 0c5c 488D3500 		leaq	.LC30(%rip), %rsi
 2122      000000
 2123 0c63 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2123      000000
 2124 0c6a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2124      00
 2125              	.LVL206:
 521:Src/main.cpp  ****     cout << "keyfunc\n";
 2126              		.loc 1 521 2 is_stmt 1 view .LVU627
 521:Src/main.cpp  ****     cout << "keyfunc\n";
 2127              		.loc 1 521 17 is_stmt 0 view .LVU628
 2128 0c6f 488D3D00 		leaq	_Z11renderScenev(%rip), %rdi
 2128      000000
 2129 0c76 E8000000 		call	glutDisplayFunc@PLT
 2129      00
 2130              	.LVL207:
 522:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 2131              		.loc 1 522 5 is_stmt 1 view .LVU629
 522:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 2132              		.loc 1 522 13 is_stmt 0 view .LVU630
 2133 0c7b 488D3500 		leaq	.LC31(%rip), %rsi
 2133      000000
 2134 0c82 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2134      000000
 2135 0c89 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2135      00
 2136              	.LVL208:
 523:Src/main.cpp  **** 	cout << "timer\n";
 2137              		.loc 1 523 5 is_stmt 1 view .LVU631
 523:Src/main.cpp  **** 	cout << "timer\n";
 2138              		.loc 1 523 21 is_stmt 0 view .LVU632
 2139 0c8e 488D3D00 		leaq	_Z14handleKeypresshii(%rip), %rdi
 2139      000000
 2140 0c95 E8000000 		call	glutKeyboardFunc@PLT
 2140      00
 2141              	.LVL209:
 524:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 2142              		.loc 1 524 2 is_stmt 1 view .LVU633
 524:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 2143              		.loc 1 524 10 is_stmt 0 view .LVU634
 2144 0c9a 488D3500 		leaq	.LC32(%rip), %rsi
 2144      000000
 2145 0ca1 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2145      000000
 2146 0ca8 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2146      00
 2147              	.LVL210:
GAS LISTING /tmp/cc4RI4t5.s 			page 106


 525:Src/main.cpp  **** 	cout << "mainloop\n";
 2148              		.loc 1 525 2 is_stmt 1 view .LVU635
 525:Src/main.cpp  **** 	cout << "mainloop\n";
 2149              		.loc 1 525 15 is_stmt 0 view .LVU636
 2150 0cad BA000000 		movl	$0, %edx
 2150      00
 2151 0cb2 488D3500 		leaq	_Z4timfi(%rip), %rsi
 2151      000000
 2152 0cb9 BF900100 		movl	$400, %edi
 2152      00
 2153 0cbe E8000000 		call	glutTimerFunc@PLT
 2153      00
 2154              	.LVL211:
 526:Src/main.cpp  **** 	glutMainLoop();
 2155              		.loc 1 526 2 is_stmt 1 view .LVU637
 526:Src/main.cpp  **** 	glutMainLoop();
 2156              		.loc 1 526 10 is_stmt 0 view .LVU638
 2157 0cc3 488D3500 		leaq	.LC33(%rip), %rsi
 2157      000000
 2158 0cca 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2158      000000
 2159 0cd1 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2159      00
 2160              	.LVL212:
 527:Src/main.cpp  **** 
 2161              		.loc 1 527 2 is_stmt 1 view .LVU639
 527:Src/main.cpp  **** 
 2162              		.loc 1 527 14 is_stmt 0 view .LVU640
 2163 0cd6 E8000000 		call	glutMainLoop@PLT
 2163      00
 2164              	.LVL213:
 530:Src/main.cpp  **** }
 2165              		.loc 1 530 2 is_stmt 1 view .LVU641
 2166              		.loc 1 531 1 is_stmt 0 view .LVU642
 2167 0cdb 488B4424 		movq	72(%rsp), %rax
 2167      48
 2168 0ce0 64483304 		xorq	%fs:40, %rax
 2168      25280000 
 2168      00
 2169 0ce9 751A     		jne	.L147
 2170 0ceb B8000000 		movl	$0, %eax
 2170      00
 2171 0cf0 4883C458 		addq	$88, %rsp
 2172              		.cfi_remember_state
 2173              		.cfi_def_cfa_offset 40
 2174 0cf4 5B       		popq	%rbx
 2175              		.cfi_def_cfa_offset 32
 2176              	.LVL214:
 2177              		.loc 1 531 1 view .LVU643
 2178 0cf5 5D       		popq	%rbp
 2179              		.cfi_def_cfa_offset 24
 2180              	.LVL215:
 2181              		.loc 1 531 1 view .LVU644
 2182 0cf6 415C     		popq	%r12
 2183              		.cfi_def_cfa_offset 16
 2184              	.LVL216:
 2185              		.loc 1 531 1 view .LVU645
GAS LISTING /tmp/cc4RI4t5.s 			page 107


 2186 0cf8 415D     		popq	%r13
 2187              		.cfi_def_cfa_offset 8
 2188 0cfa C3       		ret
 2189              	.LVL217:
 2190              	.L146:
 2191              		.cfi_restore_state
 508:Src/main.cpp  **** 
 2192              		.loc 1 508 3 is_stmt 1 view .LVU646
 508:Src/main.cpp  **** 
 2193              		.loc 1 508 7 is_stmt 0 view .LVU647
 2194 0cfb BF000000 		movl	$0, %edi
 2194      00
 2195 0d00 E8000000 		call	exit@PLT
 2195      00
 2196              	.LVL218:
 2197              	.L147:
 2198              		.loc 1 531 1 view .LVU648
 2199 0d05 E8000000 		call	__stack_chk_fail@PLT
 2199      00
 2200              	.LVL219:
 2201              		.cfi_endproc
 2202              	.LFE2500:
 2204              		.section	.rodata._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St
 2205              		.align 8
 2206              	.LC34:
 2207 0000 62617369 		.string	"basic_string::_M_construct null not valid"
 2207      635F7374 
 2207      72696E67 
 2207      3A3A5F4D 
 2207      5F636F6E 
 2208              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20
 2209              		.align 2
 2210              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_i
 2212              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator
 2213              	.LVL220:
 2214              	.LFB2836:
 2215              		.file 8 "/usr/include/c++/9.2.0/bits/basic_string.tcc"
   1:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/cc4RI4t5.s 			page 108


  21:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  42:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  44:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  46:/usr/include/c++/9.2.0/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/bits/basic_string.tcc **** {
  48:/usr/include/c++/9.2.0/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  50:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     void
  58:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
  61:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	return;
  63:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  64:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  66:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (_M_is_local())
  67:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  69:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  71:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
GAS LISTING /tmp/cc4RI4t5.s 			page 109


  78:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  79:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  81:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  86:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  87:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (length())
  88:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  89:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  94:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  95:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
  96:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	else
  97:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  98:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 105:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       else
 106:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 107:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 110:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 115:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  else
 116:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 117:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 122:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 124:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 125:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 129:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 130:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
GAS LISTING /tmp/cc4RI4t5.s 			page 110


 135:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 140:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 145:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 150:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 151:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // null char_type() element.
 153:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 155:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 156:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 163:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 167:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 170:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 172:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    ++__beg;
 174:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 175:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 176:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 177:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 178:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
 180:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  {
 182:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_dispose();
 187:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  }
 190:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		++__beg;
GAS LISTING /tmp/cc4RI4t5.s 			page 111


 192:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
 193:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 194:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 195:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 196:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 197:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 199:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 200:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 202:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 203:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 2216              		.loc 8 206 7 is_stmt 1 view -0
 2217              		.cfi_startproc
 2218              		.loc 8 206 7 is_stmt 0 view .LVU650
 2219 0000 4154     		pushq	%r12
 2220              		.cfi_def_cfa_offset 16
 2221              		.cfi_offset 12, -16
 2222 0002 55       		pushq	%rbp
 2223              		.cfi_def_cfa_offset 24
 2224              		.cfi_offset 6, -24
 2225 0003 53       		pushq	%rbx
 2226              		.cfi_def_cfa_offset 32
 2227              		.cfi_offset 3, -32
 2228 0004 4883EC10 		subq	$16, %rsp
 2229              		.cfi_def_cfa_offset 48
 2230 0008 4889FD   		movq	%rdi, %rbp
 2231 000b 4989F4   		movq	%rsi, %r12
 2232 000e 4889D3   		movq	%rdx, %rbx
 2233              		.loc 8 206 7 view .LVU651
 2234 0011 64488B04 		movq	%fs:40, %rax
 2234      25280000 
 2234      00
 2235 001a 48894424 		movq	%rax, 8(%rsp)
 2235      08
 2236 001f 31C0     		xorl	%eax, %eax
 207:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 210:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 2237              		.loc 8 211 42 view .LVU652
 2238 0021 4885F6   		testq	%rsi, %rsi
 2239 0024 742D     		je	.L155
 2240              	.L149:
 2241              	.LVL221:
 2242              	.LBB568:
 2243              	.LBI568:
 2244              		.file 9 "/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h"
   1:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
GAS LISTING /tmp/cc4RI4t5.s 			page 112


   6:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  16:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
GAS LISTING /tmp/cc4RI4t5.s 			page 113


  63:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  77:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
  83:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  86:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	{
  89:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	}
  92:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
  94:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  95:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
 101:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 106:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 107:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 115:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
GAS LISTING /tmp/cc4RI4t5.s 			page 114


 120:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #endif
 121:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 122:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   /**
 123:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 128:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 132:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   */
 135:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 2245              		.loc 9 138 5 is_stmt 1 view .LVU653
 2246              	.LBB569:
 2247              	.LBI569:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2248              		.loc 9 98 5 view .LVU654
 2249              	.LBB570:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2250              		.loc 9 104 21 is_stmt 0 view .LVU655
 2251 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2252              		.loc 9 104 23 view .LVU656
 2253 0029 48C1FB02 		sarq	$2, %rbx
 2254              	.LVL222:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2255              		.loc 9 104 23 view .LVU657
 2256              	.LBE570:
 2257              	.LBE569:
 2258              	.LBE568:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 2259              		.loc 8 215 12 view .LVU658
 2260 002d 48891C24 		movq	%rbx, (%rsp)
 216:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 2261              		.loc 8 217 2 view .LVU659
 2262 0031 4883FB03 		cmpq	$3, %rbx
 2263 0035 772D     		ja	.L156
 2264              	.LVL223:
 2265              	.L150:
 2266              	.LBB571:
 2267              	.LBI571:
 2268              		.file 10 "/usr/include/c++/9.2.0/bits/basic_string.h"
   1:/usr/include/c++/9.2.0/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.h **** //
GAS LISTING /tmp/cc4RI4t5.s 			page 115


   5:/usr/include/c++/9.2.0/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/9.2.0/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  37:/usr/include/c++/9.2.0/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  43:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  46:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  47:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/9.2.0/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  50:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  51:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/9.2.0/bits/basic_string.h **** {
  54:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
  59:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
GAS LISTING /tmp/cc4RI4t5.s 			page 116


  62:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  65:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  70:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
  76:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
  79:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
  85:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/9.2.0/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 100:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 103:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
 104:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 108:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 111:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 112:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 116:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
GAS LISTING /tmp/cc4RI4t5.s 			page 117


 119:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
 125:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 128:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
 132:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 144:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 145:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 152:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 162:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 163:/usr/include/c++/9.2.0/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 166:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 169:/usr/include/c++/9.2.0/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 171:/usr/include/c++/9.2.0/bits/basic_string.h ****       union
 172:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 173:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
GAS LISTING /tmp/cc4RI4t5.s 			page 118


 176:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 177:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 181:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 185:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const
 2269              		.loc 10 186 7 is_stmt 1 view .LVU660
 2270              	.LBB572:
 187:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2271              		.loc 10 187 28 is_stmt 0 view .LVU661
 2272 0037 488B7D00 		movq	0(%rbp), %rdi
 2273              	.LVL224:
 2274              		.loc 10 187 28 view .LVU662
 2275              	.LBE572:
 2276              	.LBE571:
 2277              	.LBB573:
 2278              	.LBI573:
 188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 189:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 197:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 199:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_pointer
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 202:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 207:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 209:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 213:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 219:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 220:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
GAS LISTING /tmp/cc4RI4t5.s 			page 119


 223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 224:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 226:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 228:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 234:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 235:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 239:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 243:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 246:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/c++/9.2.0/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 249:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 250:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 254:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 257:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 258:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 261:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 263:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
 268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 269:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 272:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 279:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
GAS LISTING /tmp/cc4RI4t5.s 			page 120


 280:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 282:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 283:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 285:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type&
 286:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 289:/usr/include/c++/9.2.0/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 293:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 295:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/usr/include/c++/9.2.0/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/c++/9.2.0/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 308:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 309:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 310:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 312:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
 317:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 319:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 327:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 329:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 334:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 335:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
GAS LISTING /tmp/cc4RI4t5.s 			page 121


 337:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 343:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 354:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 355:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 357:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 360:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 362:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 364:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 369:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 371:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 372:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
 376:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
 378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 382:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 383:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 386:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 391:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
GAS LISTING /tmp/cc4RI4t5.s 			page 122


 394:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 395:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 396:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 2279              		.loc 10 396 7 is_stmt 1 view .LVU663
 2280              	.LBB574:
 2281              	.LBI574:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2282              		.loc 10 346 7 view .LVU664
 2283              	.LBB575:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2284              		.loc 10 348 2 is_stmt 0 view .LVU665
 2285 003b 4883FB01 		cmpq	$1, %rbx
 2286 003f 7441     		je	.L157
 2287              	.LVL225:
 2288              	.LBB576:
 2289              	.LBI576:
 336:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 337:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 338:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 341:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 342:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 343:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 349:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 351:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 352:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 353:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 355:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 356:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 357:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 359:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 360:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 362:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 364:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 365:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 366:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 367:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 368:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 369:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, size_t __n, char_type __a)
 370:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 371:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 372:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s;
 373:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memset(__s, __a, __n));
 374:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 375:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 376:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
GAS LISTING /tmp/cc4RI4t5.s 			page 123


 377:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT
 378:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 379:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 380:/usr/include/c++/9.2.0/bits/char_traits.h ****       // To keep both the byte 0xff and the eof symbol 0xffffffff
 381:/usr/include/c++/9.2.0/bits/char_traits.h ****       // from ending up as 0xffffffff.
 382:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 383:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(static_cast<unsigned char>(__c)); }
 385:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 386:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 387:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT
 388:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 389:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 391:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof() _GLIBCXX_NOEXCEPT
 392:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 393:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 394:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 395:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT
 396:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return (__c == eof()) ? 0 : __c; }
 397:/usr/include/c++/9.2.0/bits/char_traits.h ****   };
 398:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 400:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 401:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.2  char_traits specializations
 402:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 403:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<wchar_t>
 404:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 405:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wchar_t           char_type;
 406:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wint_t            int_type;
 407:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 408:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wstreampos        pos_type;
 409:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 410:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 413:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 414:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 415:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 416:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 417:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 418:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 419:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 420:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 421:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 422:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 424:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 425:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 426:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 427:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 428:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 429:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 430:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 431:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 432:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 433:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
GAS LISTING /tmp/cc4RI4t5.s 			page 124


 434:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcmp(__s1, __s2, __n);
 435:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 436:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 437:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 439:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 440:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 441:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 442:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 443:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 444:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wcslen(__s);
 445:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 446:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 447:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 448:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 449:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 450:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 451:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 452:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 453:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 454:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 455:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 456:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 457:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 458:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemchr(__s, __a, __n);
 459:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 460:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 461:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 462:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 463:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 464:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 465:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 466:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemmove(__s1, __s2, __n);
 467:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 468:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 469:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 2290              		.loc 4 470 7 is_stmt 1 view .LVU666
 2291              	.LBB577:
 471:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 2292              		.loc 4 472 2 view .LVU667
 2293 0041 4885DB   		testq	%rbx, %rbx
 2294 0044 7442     		je	.L152
 473:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 474:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcpy(__s1, __s2, __n);
 2295              		.loc 4 474 2 view .LVU668
 2296              		.loc 4 474 16 is_stmt 0 view .LVU669
 2297 0046 4889DA   		movq	%rbx, %rdx
 2298 0049 4C89E6   		movq	%r12, %rsi
 2299 004c E8000000 		call	wmemcpy@PLT
 2299      00
 2300              	.LVL226:
 2301              		.loc 4 474 32 view .LVU670
 2302 0051 EB35     		jmp	.L152
 2303              	.LVL227:
 2304              	.L155:
GAS LISTING /tmp/cc4RI4t5.s 			page 125


 2305              		.loc 4 474 32 view .LVU671
 2306              	.LBE577:
 2307              	.LBE576:
 2308              	.LBE575:
 2309              	.LBE574:
 2310              	.LBE573:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2311              		.loc 8 211 42 discriminator 1 view .LVU672
 2312 0053 4839D6   		cmpq	%rdx, %rsi
 2313 0056 74CE     		je	.L149
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2314              		.loc 8 212 28 view .LVU673
 2315 0058 488D3D00 		leaq	.LC34(%rip), %rdi
 2315      000000
 2316              	.LVL228:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2317              		.loc 8 212 28 view .LVU674
 2318 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 2318      00
 2319              	.LVL229:
 2320              	.L156:
 218:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 2321              		.loc 8 219 6 view .LVU675
 2322 0064 4889E6   		movq	%rsp, %rsi
 2323              	.LVL230:
 2324              		.loc 8 219 6 view .LVU676
 2325 0067 BA000000 		movl	$0, %edx
 2325      00
 2326              	.LVL231:
 2327              		.loc 8 219 6 view .LVU677
 2328 006c 4889EF   		movq	%rbp, %rdi
 2329              	.LVL232:
 2330              		.loc 8 219 6 view .LVU678
 2331 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 2331      00
 2332              	.LVL233:
 2333              	.LBB582:
 2334              	.LBI582:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2335              		.loc 10 178 7 is_stmt 1 view .LVU679
 2336              	.LBB583:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2337              		.loc 10 179 9 is_stmt 0 view .LVU680
 2338 0074 48894500 		movq	%rax, 0(%rbp)
 2339              	.LVL234:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2340              		.loc 10 179 9 view .LVU681
 2341              	.LBE583:
 2342              	.LBE582:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2343              		.loc 8 220 6 view .LVU682
 2344 0078 488B0424 		movq	(%rsp), %rax
 2345              	.LVL235:
 2346              	.LBB584:
 2347              	.LBI584:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
GAS LISTING /tmp/cc4RI4t5.s 			page 126


 2348              		.loc 10 210 7 is_stmt 1 view .LVU683
 2349              	.LBB585:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2350              		.loc 10 211 9 is_stmt 0 view .LVU684
 2351 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2352              		.loc 10 211 45 view .LVU685
 2353 0080 EBB5     		jmp	.L150
 2354              	.LVL236:
 2355              	.L157:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2356              		.loc 10 211 45 view .LVU686
 2357              	.LBE585:
 2358              	.LBE584:
 2359              	.LBB586:
 2360              	.LBB581:
 2361              	.LBB580:
 2362              	.LBB578:
 2363              	.LBI578:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 2364              		.loc 4 412 7 is_stmt 1 view .LVU687
 2365              	.LBB579:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2366              		.loc 4 413 9 view .LVU688
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2367              		.loc 4 413 16 is_stmt 0 view .LVU689
 2368 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2369              		.loc 4 413 14 view .LVU690
 2370 0086 8907     		movl	%eax, (%rdi)
 2371              	.LVL237:
 2372              	.L152:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2373              		.loc 4 413 14 view .LVU691
 2374              	.LBE579:
 2375              	.LBE578:
 2376              	.LBE580:
 2377              	.LBE581:
 2378              	.LBE586:
 221:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 222:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 223:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 225:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 227:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 228:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 229:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 231:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 2379              		.loc 8 232 2 view .LVU692
 2380 0088 488B0424 		movq	(%rsp), %rax
 2381              	.LVL238:
 2382              	.LBB587:
 2383              	.LBI587:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/cc4RI4t5.s 			page 127


 2384              		.loc 10 214 7 is_stmt 1 view .LVU693
 2385              	.LBB588:
 2386              	.LBB589:
 2387              	.LBI589:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 2388              		.loc 10 182 7 view .LVU694
 2389              	.LBB590:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2390              		.loc 10 183 9 is_stmt 0 view .LVU695
 2391 008c 48894508 		movq	%rax, 8(%rbp)
 2392              	.LVL239:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2393              		.loc 10 183 9 view .LVU696
 2394              	.LBE590:
 2395              	.LBE589:
 2396              	.LBB591:
 2397              	.LBI591:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2398              		.loc 10 186 7 is_stmt 1 view .LVU697
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2399              		.loc 10 186 7 is_stmt 0 view .LVU698
 2400              	.LBE591:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2401              		.loc 10 217 31 view .LVU699
 2402 0090 48C1E002 		salq	$2, %rax
 2403              	.LVL240:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2404              		.loc 10 217 31 view .LVU700
 2405 0094 48034500 		addq	0(%rbp), %rax
 2406              	.LVL241:
 2407              	.LBB592:
 2408              	.LBI592:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 2409              		.loc 4 412 7 is_stmt 1 view .LVU701
 2410              	.LBB593:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2411              		.loc 4 413 9 view .LVU702
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2412              		.loc 4 413 14 is_stmt 0 view .LVU703
 2413 0098 C7000000 		movl	$0, (%rax)
 2413      0000
 2414              	.LVL242:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2415              		.loc 4 413 14 view .LVU704
 2416              	.LBE593:
 2417              	.LBE592:
 2418              	.LBE588:
 2419              	.LBE587:
 233:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 2420              		.loc 8 233 7 view .LVU705
 2421 009e 488B4424 		movq	8(%rsp), %rax
 2421      08
 2422 00a3 64483304 		xorq	%fs:40, %rax
 2422      25280000 
 2422      00
 2423 00ac 7509     		jne	.L158
 2424 00ae 4883C410 		addq	$16, %rsp
GAS LISTING /tmp/cc4RI4t5.s 			page 128


 2425              		.cfi_remember_state
 2426              		.cfi_def_cfa_offset 32
 2427 00b2 5B       		popq	%rbx
 2428              		.cfi_def_cfa_offset 24
 2429 00b3 5D       		popq	%rbp
 2430              		.cfi_def_cfa_offset 16
 2431              	.LVL243:
 2432              		.loc 8 233 7 view .LVU706
 2433 00b4 415C     		popq	%r12
 2434              		.cfi_def_cfa_offset 8
 2435              	.LVL244:
 2436              		.loc 8 233 7 view .LVU707
 2437 00b6 C3       		ret
 2438              	.LVL245:
 2439              	.L158:
 2440              		.cfi_restore_state
 2441              		.loc 8 233 7 view .LVU708
 2442 00b7 E8000000 		call	__stack_chk_fail@PLT
 2442      00
 2443              	.LVL246:
 2444              		.cfi_endproc
 2445              	.LFE2836:
 2447              		.section	.rodata.str4.4,"aMS",@progbits,4
 2448              		.align 4
 2449              	.LC35:
 2450 0000 3000     		.string	"0"
 2451 0002 00       		.string	""
 2452 0003 00       		.string	""
 2453 0004 00       		.string	""
 2454 0005 00       		.string	""
 2455 0006 00       		.string	""
 2456 0007 00       		.string	""
 2457              		.align 4
 2458              	.LC36:
 2459 0008 3100     		.string	"1"
 2460 000a 00       		.string	""
 2461 000b 00       		.string	""
 2462 000c 00       		.string	""
 2463 000d 00       		.string	""
 2464 000e 00       		.string	""
 2465 000f 00       		.string	""
 2466              		.align 4
 2467              	.LC37:
 2468 0010 3200     		.string	"2"
 2469 0012 00       		.string	""
 2470 0013 00       		.string	""
 2471 0014 00       		.string	""
 2472 0015 00       		.string	""
 2473 0016 00       		.string	""
 2474 0017 00       		.string	""
 2475              		.align 4
 2476              	.LC38:
 2477 0018 3300     		.string	"3"
 2478 001a 00       		.string	""
 2479 001b 00       		.string	""
 2480 001c 00       		.string	""
 2481 001d 00       		.string	""
GAS LISTING /tmp/cc4RI4t5.s 			page 129


 2482 001e 00       		.string	""
 2483 001f 00       		.string	""
 2484              		.text
 2485              		.globl	_Z12drawObstaclePK8obstacle
 2487              	_Z12drawObstaclePK8obstacle:
 2488              	.LVL247:
 2489              	.LFB2494:
 346:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2490              		.loc 1 346 1 is_stmt 1 view -0
 2491              		.cfi_startproc
 2492              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2493              		.cfi_lsda 0x1b,.LLSDA2494
 346:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2494              		.loc 1 346 1 is_stmt 0 view .LVU710
 2495 0d0a 55       		pushq	%rbp
 2496              		.cfi_def_cfa_offset 16
 2497              		.cfi_offset 6, -16
 2498 0d0b 53       		pushq	%rbx
 2499              		.cfi_def_cfa_offset 24
 2500              		.cfi_offset 3, -24
 2501 0d0c 4883EC48 		subq	$72, %rsp
 2502              		.cfi_def_cfa_offset 96
 2503 0d10 4889FB   		movq	%rdi, %rbx
 346:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2504              		.loc 1 346 1 view .LVU711
 2505 0d13 64488B04 		movq	%fs:40, %rax
 2505      25280000 
 2505      00
 2506 0d1c 48894424 		movq	%rax, 56(%rsp)
 2506      38
 2507 0d21 31C0     		xorl	%eax, %eax
 348:Src/main.cpp  **** 	// drawQuad(o->c->x, o->c->y, o->a);
 2508              		.loc 1 348 2 is_stmt 1 view .LVU712
 348:Src/main.cpp  **** 	// drawQuad(o->c->x, o->c->y, o->a);
 2509              		.loc 1 348 12 is_stmt 0 view .LVU713
 2510 0d23 BF0000FF 		movl	$16711680, %edi
 2510      00
 2511              	.LVL248:
 2512              	.LEHB0:
 348:Src/main.cpp  **** 	// drawQuad(o->c->x, o->c->y, o->a);
 2513              		.loc 1 348 12 view .LVU714
 2514 0d28 E8000000 		call	_Z10glSetColorj@PLT
 2514      00
 2515              	.LVL249:
 350:Src/main.cpp  **** 	glSetColor(DATA_COLOR);
 2516              		.loc 1 350 2 is_stmt 1 view .LVU715
 350:Src/main.cpp  **** 	glSetColor(DATA_COLOR);
 2517              		.loc 1 350 23 is_stmt 0 view .LVU716
 2518 0d2d 488B03   		movq	(%rbx), %rax
 350:Src/main.cpp  **** 	glSetColor(DATA_COLOR);
 2519              		.loc 1 350 10 view .LVU717
 2520 0d30 F30F105B 		movss	44(%rbx), %xmm3
 2520      2C
 2521 0d35 F30F1053 		movss	40(%rbx), %xmm2
 2521      28
 2522 0d3a F30F1048 		movss	4(%rax), %xmm1
 2522      04
GAS LISTING /tmp/cc4RI4t5.s 			page 130


 2523 0d3f F30F1000 		movss	(%rax), %xmm0
 2524 0d43 E8000000 		call	_Z8drawRectffff@PLT
 2524      00
 2525              	.LVL250:
 351:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 2526              		.loc 1 351 2 is_stmt 1 view .LVU718
 351:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 2527              		.loc 1 351 12 is_stmt 0 view .LVU719
 2528 0d48 BFFFFFFF 		movl	$16777215, %edi
 2528      00
 2529 0d4d E8000000 		call	_Z10glSetColorj@PLT
 2529      00
 2530              	.LVL251:
 352:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 2531              		.loc 1 352 2 is_stmt 1 view .LVU720
 352:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 2532              		.loc 1 352 33 is_stmt 0 view .LVU721
 2533 0d52 488B03   		movq	(%rbx), %rax
 352:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 2534              		.loc 1 352 36 view .LVU722
 2535 0d55 F30F1068 		movss	4(%rax), %xmm5
 2535      04
 2536 0d5a F30F116C 		movss	%xmm5, 8(%rsp)
 2536      2408
 352:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 2537              		.loc 1 352 27 view .LVU723
 2538 0d60 F30F1030 		movss	(%rax), %xmm6
 2539 0d64 F30F1174 		movss	%xmm6, 12(%rsp)
 2539      240C
 2540              	.LVL252:
 2541              	.LBB814:
 2542              	.LBI814:
 2543              		.file 11 "/usr/include/c++/9.2.0/bits/allocator.h"
   1:/usr/include/c++/9.2.0/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/allocator.h **** 
   3:/usr/include/c++/9.2.0/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/allocator.h **** //
   5:/usr/include/c++/9.2.0/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/allocator.h **** 
  11:/usr/include/c++/9.2.0/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/allocator.h **** 
  16:/usr/include/c++/9.2.0/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/allocator.h **** 
  20:/usr/include/c++/9.2.0/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/allocator.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 131


  25:/usr/include/c++/9.2.0/bits/allocator.h **** /*
  26:/usr/include/c++/9.2.0/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/9.2.0/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/9.2.0/bits/allocator.h ****  *
  29:/usr/include/c++/9.2.0/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/9.2.0/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/9.2.0/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/9.2.0/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/9.2.0/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/9.2.0/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/9.2.0/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  37:/usr/include/c++/9.2.0/bits/allocator.h **** 
  38:/usr/include/c++/9.2.0/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/9.2.0/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/9.2.0/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  42:/usr/include/c++/9.2.0/bits/allocator.h **** 
  43:/usr/include/c++/9.2.0/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/9.2.0/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/9.2.0/bits/allocator.h **** 
  46:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/9.2.0/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  51:/usr/include/c++/9.2.0/bits/allocator.h **** 
  52:/usr/include/c++/9.2.0/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/9.2.0/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  56:/usr/include/c++/9.2.0/bits/allocator.h **** 
  57:/usr/include/c++/9.2.0/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/9.2.0/bits/allocator.h **** {
  59:/usr/include/c++/9.2.0/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/9.2.0/bits/allocator.h **** 
  61:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
  62:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @{
  64:/usr/include/c++/9.2.0/bits/allocator.h ****    */
  65:/usr/include/c++/9.2.0/bits/allocator.h **** 
  66:/usr/include/c++/9.2.0/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/9.2.0/bits/allocator.h ****   template<>
  68:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/9.2.0/bits/allocator.h ****     {
  70:/usr/include/c++/9.2.0/bits/allocator.h ****     public:
  71:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/9.2.0/bits/allocator.h **** 
  77:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/9.2.0/bits/allocator.h **** 
  81:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/cc4RI4t5.s 			page 132


  82:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/9.2.0/bits/allocator.h **** 
  86:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/9.2.0/bits/allocator.h **** 
  88:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  90:/usr/include/c++/9.2.0/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/usr/include/c++/9.2.0/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/usr/include/c++/9.2.0/bits/allocator.h **** 
  95:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up>
  96:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  97:/usr/include/c++/9.2.0/bits/allocator.h **** 	destroy(_Up* __p)
  98:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 101:/usr/include/c++/9.2.0/bits/allocator.h ****     };
 102:/usr/include/c++/9.2.0/bits/allocator.h **** 
 103:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
 104:/usr/include/c++/9.2.0/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 106:/usr/include/c++/9.2.0/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/usr/include/c++/9.2.0/bits/allocator.h ****    *  for further details.
 108:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 109:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/usr/include/c++/9.2.0/bits/allocator.h ****    */
 111:/usr/include/c++/9.2.0/bits/allocator.h ****   template<typename _Tp>
 112:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/usr/include/c++/9.2.0/bits/allocator.h ****     {
 114:/usr/include/c++/9.2.0/bits/allocator.h ****    public:
 115:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t     size_type;
 116:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp&       reference;
 120:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp        value_type;
 122:/usr/include/c++/9.2.0/bits/allocator.h **** 
 123:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 124:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
 125:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/usr/include/c++/9.2.0/bits/allocator.h **** 
 127:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/usr/include/c++/9.2.0/bits/allocator.h **** 
 132:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 134:/usr/include/c++/9.2.0/bits/allocator.h **** 
 135:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
GAS LISTING /tmp/cc4RI4t5.s 			page 133


 2544              		.loc 11 138 7 is_stmt 1 view .LVU724
 2545              	.LBB815:
 2546              	.LBI815:
 2547              		.file 12 "/usr/include/c++/9.2.0/ext/new_allocator.h"
   1:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
   3:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/new_allocator.h **** //
   5:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  11:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  16:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  20:/usr/include/c++/9.2.0/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  25:/usr/include/c++/9.2.0/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/9.2.0/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/new_allocator.h ****  */
  28:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  29:/usr/include/c++/9.2.0/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/9.2.0/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  32:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  39:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  40:/usr/include/c++/9.2.0/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/9.2.0/ext/new_allocator.h **** {
  42:/usr/include/c++/9.2.0/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  44:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  47:/usr/include/c++/9.2.0/ext/new_allocator.h ****   /**
  48:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  51:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all deallocation calls operator delete
GAS LISTING /tmp/cc4RI4t5.s 			page 134


  54:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  55:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/9.2.0/ext/new_allocator.h ****    */
  57:/usr/include/c++/9.2.0/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/9.2.0/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/9.2.0/ext/new_allocator.h ****     {
  60:/usr/include/c++/9.2.0/ext/new_allocator.h ****     public:
  61:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  69:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  73:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  78:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  79:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 2548              		.loc 12 80 7 view .LVU725
 2549              		.loc 12 80 7 is_stmt 0 view .LVU726
 2550              	.LBE815:
 2551              	.LBE814:
 2552              	.LBB816:
 2553              	.LBI816:
 397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 400:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
 401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 403:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 405:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 410:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 412:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 413:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 414:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 416:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 417:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 420:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
GAS LISTING /tmp/cc4RI4t5.s 			page 135


 421:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 423:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 424:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 431:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
 432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 436:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 437:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 439:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 440:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 448:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 453:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 461:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 469:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 470:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 471:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 476:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n)
GAS LISTING /tmp/cc4RI4t5.s 			page 136


 478:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 480:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 484:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 492:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 500:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 501:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 510:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 515:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 516:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 520:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 2554              		.loc 10 525 7 is_stmt 1 view .LVU727
 2555              	.LBB817:
 2556              	.LBB818:
 2557              	.LBB819:
 2558              	.LBI819:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2559              		.loc 10 190 7 view .LVU728
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2560              		.loc 10 190 7 is_stmt 0 view .LVU729
GAS LISTING /tmp/cc4RI4t5.s 			page 137


 2561              	.LBE819:
 2562              	.LBB820:
 2563              	.LBI820:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2564              		.loc 10 156 2 is_stmt 1 view .LVU730
 2565              	.LBB821:
 2566              	.LBB822:
 2567              	.LBB823:
 2568              	.LBI823:
 139:/usr/include/c++/9.2.0/bits/allocator.h **** 
 140:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 2569              		.loc 11 141 7 view .LVU731
 2570              	.LBB824:
 2571              	.LBI824:
  81:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  82:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 2572              		.loc 12 83 7 view .LVU732
 2573              		.loc 12 83 7 is_stmt 0 view .LVU733
 2574              	.LBE824:
 2575              	.LBE823:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2576              		.loc 10 157 35 view .LVU734
 2577 0d6a 488D6C24 		leaq	16(%rsp), %rbp
 2577      10
 2578              	.LVL253:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2579              		.loc 10 157 35 view .LVU735
 2580 0d6f 488D4424 		leaq	32(%rsp), %rax
 2580      20
 2581              	.LVL254:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2582              		.loc 10 157 35 view .LVU736
 2583 0d74 48894424 		movq	%rax, 16(%rsp)
 2583      10
 2584              	.LVL255:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2585              		.loc 10 157 35 view .LVU737
 2586              	.LBE822:
 2587              	.LBE821:
 2588              	.LBE820:
 2589              	.LBB825:
 2590              	.LBI825:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2591              		.loc 4 438 7 is_stmt 1 view .LVU738
 2592              	.LBB826:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2593              		.loc 4 444 2 view .LVU739
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2594              		.loc 4 444 15 is_stmt 0 view .LVU740
 2595 0d79 488D3D00 		leaq	.LC35(%rip), %rdi
 2595      000000
 2596 0d80 E8000000 		call	wcslen@PLT
 2596      00
 2597              	.LVL256:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
GAS LISTING /tmp/cc4RI4t5.s 			page 138


 2598              		.loc 4 444 15 view .LVU741
 2599              	.LBE826:
 2600              	.LBE825:
 526:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 2601              		.loc 10 527 9 view .LVU742
 2602 0d85 488D3500 		leaq	.LC35(%rip), %rsi
 2602      000000
 2603 0d8c 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2604              	.LVL257:
 2605              	.LBB827:
 2606              	.LBI827:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2607              		.loc 10 263 9 is_stmt 1 view .LVU743
 2608              	.LBB828:
 2609              	.LBB829:
 2610              	.LBI829:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2611              		.loc 10 243 9 view .LVU744
 2612              	.LBB830:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2613              		.loc 10 247 11 is_stmt 0 view .LVU745
 2614 0d90 4889EF   		movq	%rbp, %rdi
 2615 0d93 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2615      00
 2616              	.LVL258:
 2617              	.LEHE0:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2618              		.loc 10 247 11 view .LVU746
 2619              	.LBE830:
 2620              	.LBE829:
 2621              	.LBE828:
 2622              	.LBE827:
 2623              	.LBE818:
 2624              	.LBE817:
 2625              	.LBE816:
 352:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->b);
 2626              		.loc 1 352 10 view .LVU747
 2627 0d98 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2627      2408
 2628 0d9e F30F2C54 		cvttss2sil	12(%rsp), %edx
 2628      240C
 2629 0da4 BE0A0000 		movl	$10, %esi
 2629      00
 2630 0da9 4889EF   		movq	%rbp, %rdi
 2631              	.LEHB1:
 2632 0dac E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2632      00
 2633              	.LVL259:
 2634              	.LEHE1:
 2635              	.LBB831:
 2636              	.LBI831:
 528:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 529:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
GAS LISTING /tmp/cc4RI4t5.s 			page 139


 533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 535:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 540:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 544:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 552:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 557:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 560:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 561:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 562:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 566:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__str.length());
 570:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 579:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 587:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
GAS LISTING /tmp/cc4RI4t5.s 			page 140


 590:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 591:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 593:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 607:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 608:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 610:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 611:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 613:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 623:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 625:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 630:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 638:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
GAS LISTING /tmp/cc4RI4t5.s 			page 141


 647:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 648:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
 650:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 653:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 654:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string()
 2637              		.loc 10 657 7 is_stmt 1 view .LVU748
 2638              	.LBB832:
 2639              	.LBI832:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2640              		.loc 10 229 7 view .LVU749
 2641              	.LBB833:
 2642              	.LBB834:
 2643              	.LBI834:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2644              		.loc 10 221 7 view .LVU750
 2645              	.LBB835:
 2646              	.LBI835:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2647              		.loc 10 186 7 view .LVU751
 2648              	.LBB836:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2649              		.loc 10 187 28 is_stmt 0 view .LVU752
 2650 0db1 488B7C24 		movq	16(%rsp), %rdi
 2650      10
 2651              	.LVL260:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2652              		.loc 10 187 28 view .LVU753
 2653              	.LBE836:
 2654              	.LBE835:
 2655              	.LBB837:
 2656              	.LBI837:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2657              		.loc 10 200 7 is_stmt 1 view .LVU754
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2658              		.loc 10 200 7 is_stmt 0 view .LVU755
 2659              	.LBE837:
 2660              	.LBE834:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2661              		.loc 10 231 2 view .LVU756
 2662 0db6 488D4424 		leaq	32(%rsp), %rax
 2662      20
 2663 0dbb 4839C7   		cmpq	%rax, %rdi
 2664 0dbe 7405     		je	.L160
 2665              	.LVL261:
 2666              	.LBB838:
 2667              	.LBI838:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2668              		.loc 10 236 7 is_stmt 1 view .LVU757
 2669              	.LBB839:
 2670              	.LBB840:
 2671              	.LBI840:
GAS LISTING /tmp/cc4RI4t5.s 			page 142


 2672              		.file 13 "/usr/include/c++/9.2.0/bits/alloc_traits.h"
   1:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/alloc_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  33:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  35:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  41:/usr/include/c++/9.2.0/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/alloc_traits.h **** {
  43:/usr/include/c++/9.2.0/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  45:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   {
  47:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  50:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  55:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
GAS LISTING /tmp/cc4RI4t5.s 			page 143


  57:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   };
  73:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  74:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  78:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   */
  82:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
  85:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  90:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
  93:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
  95:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  97:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 105:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 111:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff
GAS LISTING /tmp/cc4RI4t5.s 			page 144


 114:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 120:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 124:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 128:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 132:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 135:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 140:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 143:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 145:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 148:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 151:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 153:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 156:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 159:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 161:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 164:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 167:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 169:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
GAS LISTING /tmp/cc4RI4t5.s 			page 145


 171:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 172:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 175:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 178:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 179:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 181:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 184:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 187:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 190:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 193:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 196:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 199:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 202:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 205:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 210:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 217:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
GAS LISTING /tmp/cc4RI4t5.s 			page 146


 228:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 230:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 233:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 236:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 240:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 246:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static
 248:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 255:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 257:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 262:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void
 264:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 268:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 270:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 274:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static size_type
 276:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 278:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	}
 283:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 284:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
GAS LISTING /tmp/cc4RI4t5.s 			page 147


 285:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 286:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 290:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Alloc2
 292:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a; }
 294:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 295:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 296:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 297:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 298:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 302:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 304:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 308:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 309:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 315:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 316:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 319:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 323:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 324:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 329:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 331:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 332:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 335:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 341:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
GAS LISTING /tmp/cc4RI4t5.s 			page 148


 342:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 346:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 353:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 354:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 358:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 361:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 362:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 366:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 371:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 374:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 377:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 378:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 382:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 385:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static _Alloc
 386:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     };
 389:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Tp>
 392:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
 394:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
 395:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
 397:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 149


 399:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 402:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 405:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 408:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 414:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's size type
 415:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 417:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 420:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 426:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 429:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 430:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 432:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 433:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 435:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 436:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 440:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 442:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 446:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 447:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 453:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 454:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 150


 456:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 460:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 461:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 466:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 468:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 469:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 2673              		.loc 13 469 7 view .LVU758
 2674              	.LBB841:
 2675              	.LBI841:
  84:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  85:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  86:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  89:/usr/include/c++/9.2.0/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  91:/usr/include/c++/9.2.0/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  95:/usr/include/c++/9.2.0/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  99:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/usr/include/c++/9.2.0/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 104:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 107:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 110:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 113:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 114:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/usr/include/c++/9.2.0/ext/new_allocator.h ****       }
 116:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 117:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/usr/include/c++/9.2.0/ext/new_allocator.h ****       void
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 2676              		.loc 12 119 7 view .LVU759
 2677              	.LBB842:
 120:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 121:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
GAS LISTING /tmp/cc4RI4t5.s 			page 151


 122:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 124:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return;
 126:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 127:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 128:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	::operator delete(__p);
 2678              		.loc 12 128 19 is_stmt 0 view .LVU760
 2679 0dc0 E8000000 		call	_ZdlPv@PLT
 2679      00
 2680              	.LVL262:
 2681              	.L160:
 2682              		.loc 12 128 19 view .LVU761
 2683              	.LBE842:
 2684              	.LBE841:
 2685              	.LBE840:
 2686              	.LBE839:
 2687              	.LBE838:
 2688              	.LBE833:
 2689              	.LBE832:
 2690              	.LBB843:
 2691              	.LBI843:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2692              		.loc 10 150 14 is_stmt 1 view .LVU762
 2693              	.LBB844:
 2694              	.LBI844:
 142:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/usr/include/c++/9.2.0/bits/allocator.h **** 
 144:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/usr/include/c++/9.2.0/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 148:/usr/include/c++/9.2.0/bits/allocator.h **** 
 149:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 150:/usr/include/c++/9.2.0/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/usr/include/c++/9.2.0/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/usr/include/c++/9.2.0/bits/allocator.h **** 
 153:/usr/include/c++/9.2.0/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 2695              		.loc 11 153 7 view .LVU763
 2696              	.LBB845:
 2697              	.LBI845:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2698              		.loc 12 89 7 view .LVU764
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2699              		.loc 12 89 7 is_stmt 0 view .LVU765
 2700              	.LBE845:
 2701              	.LBE844:
 2702              	.LBE843:
 2703              	.LBE831:
 2704              	.LBB846:
 2705              	.LBI846:
 2706              		.loc 11 153 7 is_stmt 1 view .LVU766
 2707              	.LBB847:
 2708              	.LBI847:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2709              		.loc 12 89 7 view .LVU767
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 152


 2710              		.loc 12 89 7 is_stmt 0 view .LVU768
 2711              	.LBE847:
 2712              	.LBE846:
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2713              		.loc 1 353 2 is_stmt 1 view .LVU769
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2714              		.loc 1 353 33 is_stmt 0 view .LVU770
 2715 0dc5 488B03   		movq	(%rbx), %rax
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2716              		.loc 1 353 43 view .LVU771
 2717 0dc8 F30F1043 		movss	44(%rbx), %xmm0
 2717      2C
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2718              		.loc 1 353 38 view .LVU772
 2719 0dcd F30F5840 		addss	4(%rax), %xmm0
 2719      04
 2720 0dd2 F30F1144 		movss	%xmm0, 8(%rsp)
 2720      2408
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2721              		.loc 1 353 27 view .LVU773
 2722 0dd8 F30F1038 		movss	(%rax), %xmm7
 2723 0ddc F30F117C 		movss	%xmm7, 12(%rsp)
 2723      240C
 2724              	.LVL263:
 2725              	.LBB848:
 2726              	.LBI848:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2727              		.loc 11 138 7 is_stmt 1 view .LVU774
 2728              	.LBB849:
 2729              	.LBI849:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2730              		.loc 12 80 7 view .LVU775
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2731              		.loc 12 80 7 is_stmt 0 view .LVU776
 2732              	.LBE849:
 2733              	.LBE848:
 2734              	.LBB850:
 2735              	.LBI850:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2736              		.loc 10 525 7 is_stmt 1 view .LVU777
 2737              	.LBB851:
 2738              	.LBB852:
 2739              	.LBB853:
 2740              	.LBI853:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2741              		.loc 10 190 7 view .LVU778
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2742              		.loc 10 190 7 is_stmt 0 view .LVU779
 2743              	.LBE853:
 2744              	.LBB854:
 2745              	.LBI854:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2746              		.loc 10 156 2 is_stmt 1 view .LVU780
 2747              	.LBB855:
 2748              	.LBB856:
 2749              	.LBB857:
 2750              	.LBI857:
GAS LISTING /tmp/cc4RI4t5.s 			page 153


 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2751              		.loc 11 141 7 view .LVU781
 2752              	.LBB858:
 2753              	.LBI858:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2754              		.loc 12 83 7 view .LVU782
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2755              		.loc 12 83 7 is_stmt 0 view .LVU783
 2756              	.LBE858:
 2757              	.LBE857:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2758              		.loc 10 157 35 view .LVU784
 2759 0de2 488D6C24 		leaq	16(%rsp), %rbp
 2759      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2760              		.loc 10 157 35 view .LVU785
 2761 0de7 488D4424 		leaq	32(%rsp), %rax
 2761      20
 2762              	.LVL264:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2763              		.loc 10 157 35 view .LVU786
 2764 0dec 48894424 		movq	%rax, 16(%rsp)
 2764      10
 2765              	.LVL265:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2766              		.loc 10 157 35 view .LVU787
 2767              	.LBE856:
 2768              	.LBE855:
 2769              	.LBE854:
 2770              	.LBB859:
 2771              	.LBI859:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2772              		.loc 4 438 7 is_stmt 1 view .LVU788
 2773              	.LBB860:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2774              		.loc 4 444 2 view .LVU789
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2775              		.loc 4 444 15 is_stmt 0 view .LVU790
 2776 0df1 488D3D00 		leaq	.LC36(%rip), %rdi
 2776      000000
 2777 0df8 E8000000 		call	wcslen@PLT
 2777      00
 2778              	.LVL266:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2779              		.loc 4 444 15 view .LVU791
 2780              	.LBE860:
 2781              	.LBE859:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2782              		.loc 10 527 9 view .LVU792
 2783 0dfd 488D3500 		leaq	.LC36(%rip), %rsi
 2783      000000
 2784 0e04 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2785              	.LVL267:
 2786              	.LBB861:
 2787              	.LBI861:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2788              		.loc 10 263 9 is_stmt 1 view .LVU793
GAS LISTING /tmp/cc4RI4t5.s 			page 154


 2789              	.LBB862:
 2790              	.LBB863:
 2791              	.LBI863:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2792              		.loc 10 243 9 view .LVU794
 2793              	.LBB864:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2794              		.loc 10 247 11 is_stmt 0 view .LVU795
 2795 0e08 4889EF   		movq	%rbp, %rdi
 2796              	.LEHB2:
 2797 0e0b E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2797      00
 2798              	.LVL268:
 2799              	.LEHE2:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2800              		.loc 10 247 11 view .LVU796
 2801              	.LBE864:
 2802              	.LBE863:
 2803              	.LBE862:
 2804              	.LBE861:
 2805              	.LBE852:
 2806              	.LBE851:
 2807              	.LBE850:
 353:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->b);
 2808              		.loc 1 353 10 view .LVU797
 2809 0e10 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2809      2408
 2810 0e16 F30F2C54 		cvttss2sil	12(%rsp), %edx
 2810      240C
 2811 0e1c BE0A0000 		movl	$10, %esi
 2811      00
 2812 0e21 4889EF   		movq	%rbp, %rdi
 2813              	.LEHB3:
 2814 0e24 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2814      00
 2815              	.LVL269:
 2816              	.LEHE3:
 2817              	.LBB865:
 2818              	.LBI865:
 2819              		.loc 10 657 7 is_stmt 1 view .LVU798
 2820              	.LBB866:
 2821              	.LBI866:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2822              		.loc 10 229 7 view .LVU799
 2823              	.LBB867:
 2824              	.LBB868:
 2825              	.LBI868:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2826              		.loc 10 221 7 view .LVU800
 2827              	.LBB869:
 2828              	.LBI869:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2829              		.loc 10 186 7 view .LVU801
 2830              	.LBB870:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2831              		.loc 10 187 28 is_stmt 0 view .LVU802
 2832 0e29 488B7C24 		movq	16(%rsp), %rdi
GAS LISTING /tmp/cc4RI4t5.s 			page 155


 2832      10
 2833              	.LVL270:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2834              		.loc 10 187 28 view .LVU803
 2835              	.LBE870:
 2836              	.LBE869:
 2837              	.LBB871:
 2838              	.LBI871:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2839              		.loc 10 200 7 is_stmt 1 view .LVU804
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2840              		.loc 10 200 7 is_stmt 0 view .LVU805
 2841              	.LBE871:
 2842              	.LBE868:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2843              		.loc 10 231 2 view .LVU806
 2844 0e2e 488D4424 		leaq	32(%rsp), %rax
 2844      20
 2845 0e33 4839C7   		cmpq	%rax, %rdi
 2846 0e36 7405     		je	.L161
 2847              	.LVL271:
 2848              	.LBB872:
 2849              	.LBI872:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2850              		.loc 10 236 7 is_stmt 1 view .LVU807
 2851              	.LBB873:
 2852              	.LBB874:
 2853              	.LBI874:
 2854              		.loc 13 469 7 view .LVU808
 2855              	.LBB875:
 2856              	.LBI875:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 2857              		.loc 12 119 7 view .LVU809
 2858              	.LBB876:
 2859              		.loc 12 128 19 is_stmt 0 view .LVU810
 2860 0e38 E8000000 		call	_ZdlPv@PLT
 2860      00
 2861              	.LVL272:
 2862              	.L161:
 2863              		.loc 12 128 19 view .LVU811
 2864              	.LBE876:
 2865              	.LBE875:
 2866              	.LBE874:
 2867              	.LBE873:
 2868              	.LBE872:
 2869              	.LBE867:
 2870              	.LBE866:
 2871              	.LBB877:
 2872              	.LBI877:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2873              		.loc 10 150 14 is_stmt 1 view .LVU812
 2874              	.LBB878:
 2875              	.LBI878:
 2876              		.loc 11 153 7 view .LVU813
 2877              	.LBB879:
 2878              	.LBI879:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 156


 2879              		.loc 12 89 7 view .LVU814
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2880              		.loc 12 89 7 is_stmt 0 view .LVU815
 2881              	.LBE879:
 2882              	.LBE878:
 2883              	.LBE877:
 2884              	.LBE865:
 2885              	.LBB880:
 2886              	.LBI880:
 2887              		.loc 11 153 7 is_stmt 1 view .LVU816
 2888              	.LBB881:
 2889              	.LBI881:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2890              		.loc 12 89 7 view .LVU817
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2891              		.loc 12 89 7 is_stmt 0 view .LVU818
 2892              	.LBE881:
 2893              	.LBE880:
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2894              		.loc 1 354 2 is_stmt 1 view .LVU819
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2895              		.loc 1 354 40 is_stmt 0 view .LVU820
 2896 0e3d 488B03   		movq	(%rbx), %rax
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2897              		.loc 1 354 50 view .LVU821
 2898 0e40 F30F1043 		movss	44(%rbx), %xmm0
 2898      2C
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2899              		.loc 1 354 45 view .LVU822
 2900 0e45 F30F5840 		addss	4(%rax), %xmm0
 2900      04
 2901 0e4a F30F1144 		movss	%xmm0, 8(%rsp)
 2901      2408
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2902              		.loc 1 354 34 view .LVU823
 2903 0e50 F30F1043 		movss	40(%rbx), %xmm0
 2903      28
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2904              		.loc 1 354 29 view .LVU824
 2905 0e55 0F28E0   		movaps	%xmm0, %xmm4
 2906 0e58 F30F5820 		addss	(%rax), %xmm4
 2907 0e5c F30F1164 		movss	%xmm4, 12(%rsp)
 2907      240C
 2908              	.LVL273:
 2909              	.LBB882:
 2910              	.LBI882:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2911              		.loc 11 138 7 is_stmt 1 view .LVU825
 2912              	.LBB883:
 2913              	.LBI883:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2914              		.loc 12 80 7 view .LVU826
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2915              		.loc 12 80 7 is_stmt 0 view .LVU827
 2916              	.LBE883:
 2917              	.LBE882:
 2918              	.LBB884:
GAS LISTING /tmp/cc4RI4t5.s 			page 157


 2919              	.LBI884:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2920              		.loc 10 525 7 is_stmt 1 view .LVU828
 2921              	.LBB885:
 2922              	.LBB886:
 2923              	.LBB887:
 2924              	.LBI887:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2925              		.loc 10 190 7 view .LVU829
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2926              		.loc 10 190 7 is_stmt 0 view .LVU830
 2927              	.LBE887:
 2928              	.LBB888:
 2929              	.LBI888:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2930              		.loc 10 156 2 is_stmt 1 view .LVU831
 2931              	.LBB889:
 2932              	.LBB890:
 2933              	.LBB891:
 2934              	.LBI891:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2935              		.loc 11 141 7 view .LVU832
 2936              	.LBB892:
 2937              	.LBI892:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2938              		.loc 12 83 7 view .LVU833
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2939              		.loc 12 83 7 is_stmt 0 view .LVU834
 2940              	.LBE892:
 2941              	.LBE891:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2942              		.loc 10 157 35 view .LVU835
 2943 0e62 488D6C24 		leaq	16(%rsp), %rbp
 2943      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2944              		.loc 10 157 35 view .LVU836
 2945 0e67 488D4424 		leaq	32(%rsp), %rax
 2945      20
 2946              	.LVL274:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2947              		.loc 10 157 35 view .LVU837
 2948 0e6c 48894424 		movq	%rax, 16(%rsp)
 2948      10
 2949              	.LVL275:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2950              		.loc 10 157 35 view .LVU838
 2951              	.LBE890:
 2952              	.LBE889:
 2953              	.LBE888:
 2954              	.LBB893:
 2955              	.LBI893:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2956              		.loc 4 438 7 is_stmt 1 view .LVU839
 2957              	.LBB894:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2958              		.loc 4 444 2 view .LVU840
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
GAS LISTING /tmp/cc4RI4t5.s 			page 158


 2959              		.loc 4 444 15 is_stmt 0 view .LVU841
 2960 0e71 488D3D00 		leaq	.LC37(%rip), %rdi
 2960      000000
 2961 0e78 E8000000 		call	wcslen@PLT
 2961      00
 2962              	.LVL276:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2963              		.loc 4 444 15 view .LVU842
 2964              	.LBE894:
 2965              	.LBE893:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2966              		.loc 10 527 9 view .LVU843
 2967 0e7d 488D3500 		leaq	.LC37(%rip), %rsi
 2967      000000
 2968 0e84 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2969              	.LVL277:
 2970              	.LBB895:
 2971              	.LBI895:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2972              		.loc 10 263 9 is_stmt 1 view .LVU844
 2973              	.LBB896:
 2974              	.LBB897:
 2975              	.LBI897:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2976              		.loc 10 243 9 view .LVU845
 2977              	.LBB898:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2978              		.loc 10 247 11 is_stmt 0 view .LVU846
 2979 0e88 4889EF   		movq	%rbp, %rdi
 2980              	.LEHB4:
 2981 0e8b E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2981      00
 2982              	.LVL278:
 2983              	.LEHE4:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2984              		.loc 10 247 11 view .LVU847
 2985              	.LBE898:
 2986              	.LBE897:
 2987              	.LBE896:
 2988              	.LBE895:
 2989              	.LBE886:
 2990              	.LBE885:
 2991              	.LBE884:
 354:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2992              		.loc 1 354 10 view .LVU848
 2993 0e90 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2993      2408
 2994 0e96 F30F2C54 		cvttss2sil	12(%rsp), %edx
 2994      240C
 2995 0e9c BE0A0000 		movl	$10, %esi
 2995      00
 2996 0ea1 4889EF   		movq	%rbp, %rdi
 2997              	.LEHB5:
 2998 0ea4 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2998      00
 2999              	.LVL279:
 3000              	.LEHE5:
GAS LISTING /tmp/cc4RI4t5.s 			page 159


 3001              	.LBB899:
 3002              	.LBI899:
 3003              		.loc 10 657 7 is_stmt 1 view .LVU849
 3004              	.LBB900:
 3005              	.LBI900:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3006              		.loc 10 229 7 view .LVU850
 3007              	.LBB901:
 3008              	.LBB902:
 3009              	.LBI902:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3010              		.loc 10 221 7 view .LVU851
 3011              	.LBB903:
 3012              	.LBI903:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3013              		.loc 10 186 7 view .LVU852
 3014              	.LBB904:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3015              		.loc 10 187 28 is_stmt 0 view .LVU853
 3016 0ea9 488B7C24 		movq	16(%rsp), %rdi
 3016      10
 3017              	.LVL280:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3018              		.loc 10 187 28 view .LVU854
 3019              	.LBE904:
 3020              	.LBE903:
 3021              	.LBB905:
 3022              	.LBI905:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3023              		.loc 10 200 7 is_stmt 1 view .LVU855
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3024              		.loc 10 200 7 is_stmt 0 view .LVU856
 3025              	.LBE905:
 3026              	.LBE902:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3027              		.loc 10 231 2 view .LVU857
 3028 0eae 488D4424 		leaq	32(%rsp), %rax
 3028      20
 3029 0eb3 4839C7   		cmpq	%rax, %rdi
 3030 0eb6 7405     		je	.L162
 3031              	.LVL281:
 3032              	.LBB906:
 3033              	.LBI906:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3034              		.loc 10 236 7 is_stmt 1 view .LVU858
 3035              	.LBB907:
 3036              	.LBB908:
 3037              	.LBI908:
 3038              		.loc 13 469 7 view .LVU859
 3039              	.LBB909:
 3040              	.LBI909:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3041              		.loc 12 119 7 view .LVU860
 3042              	.LBB910:
 3043              		.loc 12 128 19 is_stmt 0 view .LVU861
 3044 0eb8 E8000000 		call	_ZdlPv@PLT
 3044      00
GAS LISTING /tmp/cc4RI4t5.s 			page 160


 3045              	.LVL282:
 3046              	.L162:
 3047              		.loc 12 128 19 view .LVU862
 3048              	.LBE910:
 3049              	.LBE909:
 3050              	.LBE908:
 3051              	.LBE907:
 3052              	.LBE906:
 3053              	.LBE901:
 3054              	.LBE900:
 3055              	.LBB911:
 3056              	.LBI911:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3057              		.loc 10 150 14 is_stmt 1 view .LVU863
 3058              	.LBB912:
 3059              	.LBI912:
 3060              		.loc 11 153 7 view .LVU864
 3061              	.LBB913:
 3062              	.LBI913:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3063              		.loc 12 89 7 view .LVU865
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3064              		.loc 12 89 7 is_stmt 0 view .LVU866
 3065              	.LBE913:
 3066              	.LBE912:
 3067              	.LBE911:
 3068              	.LBE899:
 3069              	.LBB914:
 3070              	.LBI914:
 3071              		.loc 11 153 7 is_stmt 1 view .LVU867
 3072              	.LBB915:
 3073              	.LBI915:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3074              		.loc 12 89 7 view .LVU868
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3075              		.loc 12 89 7 is_stmt 0 view .LVU869
 3076              	.LBE915:
 3077              	.LBE914:
 355:Src/main.cpp  **** }
 3078              		.loc 1 355 2 is_stmt 1 view .LVU870
 355:Src/main.cpp  **** }
 3079              		.loc 1 355 40 is_stmt 0 view .LVU871
 3080 0ebd 488B03   		movq	(%rbx), %rax
 355:Src/main.cpp  **** }
 3081              		.loc 1 355 43 view .LVU872
 3082 0ec0 F30F1048 		movss	4(%rax), %xmm1
 3082      04
 3083 0ec5 F30F114C 		movss	%xmm1, 8(%rsp)
 3083      2408
 355:Src/main.cpp  **** }
 3084              		.loc 1 355 34 view .LVU873
 3085 0ecb F30F1043 		movss	40(%rbx), %xmm0
 3085      28
 355:Src/main.cpp  **** }
 3086              		.loc 1 355 29 view .LVU874
 3087 0ed0 F30F5800 		addss	(%rax), %xmm0
 3088 0ed4 F30F1144 		movss	%xmm0, 12(%rsp)
GAS LISTING /tmp/cc4RI4t5.s 			page 161


 3088      240C
 3089              	.LVL283:
 3090              	.LBB916:
 3091              	.LBI916:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3092              		.loc 11 138 7 is_stmt 1 view .LVU875
 3093              	.LBB917:
 3094              	.LBI917:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3095              		.loc 12 80 7 view .LVU876
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3096              		.loc 12 80 7 is_stmt 0 view .LVU877
 3097              	.LBE917:
 3098              	.LBE916:
 3099              	.LBB918:
 3100              	.LBI918:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3101              		.loc 10 525 7 is_stmt 1 view .LVU878
 3102              	.LBB919:
 3103              	.LBB920:
 3104              	.LBB921:
 3105              	.LBI921:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3106              		.loc 10 190 7 view .LVU879
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3107              		.loc 10 190 7 is_stmt 0 view .LVU880
 3108              	.LBE921:
 3109              	.LBB922:
 3110              	.LBI922:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3111              		.loc 10 156 2 is_stmt 1 view .LVU881
 3112              	.LBB923:
 3113              	.LBB924:
 3114              	.LBB925:
 3115              	.LBI925:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3116              		.loc 11 141 7 view .LVU882
 3117              	.LBB926:
 3118              	.LBI926:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3119              		.loc 12 83 7 view .LVU883
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3120              		.loc 12 83 7 is_stmt 0 view .LVU884
 3121              	.LBE926:
 3122              	.LBE925:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3123              		.loc 10 157 35 view .LVU885
 3124 0eda 488D5C24 		leaq	16(%rsp), %rbx
 3124      10
 3125              	.LVL284:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3126              		.loc 10 157 35 view .LVU886
 3127 0edf 488D4424 		leaq	32(%rsp), %rax
 3127      20
 3128              	.LVL285:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3129              		.loc 10 157 35 view .LVU887
GAS LISTING /tmp/cc4RI4t5.s 			page 162


 3130 0ee4 48894424 		movq	%rax, 16(%rsp)
 3130      10
 3131              	.LVL286:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3132              		.loc 10 157 35 view .LVU888
 3133              	.LBE924:
 3134              	.LBE923:
 3135              	.LBE922:
 3136              	.LBB927:
 3137              	.LBI927:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3138              		.loc 4 438 7 is_stmt 1 view .LVU889
 3139              	.LBB928:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3140              		.loc 4 444 2 view .LVU890
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3141              		.loc 4 444 15 is_stmt 0 view .LVU891
 3142 0ee9 488D3D00 		leaq	.LC38(%rip), %rdi
 3142      000000
 3143 0ef0 E8000000 		call	wcslen@PLT
 3143      00
 3144              	.LVL287:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3145              		.loc 4 444 15 view .LVU892
 3146              	.LBE928:
 3147              	.LBE927:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3148              		.loc 10 527 9 view .LVU893
 3149 0ef5 488D3500 		leaq	.LC38(%rip), %rsi
 3149      000000
 3150 0efc 488D1486 		leaq	(%rsi,%rax,4), %rdx
 3151              	.LVL288:
 3152              	.LBB929:
 3153              	.LBI929:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3154              		.loc 10 263 9 is_stmt 1 view .LVU894
 3155              	.LBB930:
 3156              	.LBB931:
 3157              	.LBI931:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3158              		.loc 10 243 9 view .LVU895
 3159              	.LBB932:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3160              		.loc 10 247 11 is_stmt 0 view .LVU896
 3161 0f00 4889DF   		movq	%rbx, %rdi
 3162              	.LEHB6:
 3163 0f03 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 3163      00
 3164              	.LVL289:
 3165              	.LEHE6:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3166              		.loc 10 247 11 view .LVU897
 3167              	.LBE932:
 3168              	.LBE931:
 3169              	.LBE930:
 3170              	.LBE929:
 3171              	.LBE920:
GAS LISTING /tmp/cc4RI4t5.s 			page 163


 3172              	.LBE919:
 3173              	.LBE918:
 355:Src/main.cpp  **** }
 3174              		.loc 1 355 10 view .LVU898
 3175 0f08 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 3175      2408
 3176 0f0e F30F2C54 		cvttss2sil	12(%rsp), %edx
 3176      240C
 3177 0f14 BE0A0000 		movl	$10, %esi
 3177      00
 3178 0f19 4889DF   		movq	%rbx, %rdi
 3179              	.LEHB7:
 3180 0f1c E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 3180      00
 3181              	.LVL290:
 3182              	.LEHE7:
 3183              	.LBB933:
 3184              	.LBI933:
 3185              		.loc 10 657 7 is_stmt 1 view .LVU899
 3186              	.LBB934:
 3187              	.LBI934:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3188              		.loc 10 229 7 view .LVU900
 3189              	.LBB935:
 3190              	.LBB936:
 3191              	.LBI936:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3192              		.loc 10 221 7 view .LVU901
 3193              	.LBB937:
 3194              	.LBI937:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3195              		.loc 10 186 7 view .LVU902
 3196              	.LBB938:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3197              		.loc 10 187 28 is_stmt 0 view .LVU903
 3198 0f21 488B7C24 		movq	16(%rsp), %rdi
 3198      10
 3199              	.LVL291:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3200              		.loc 10 187 28 view .LVU904
 3201              	.LBE938:
 3202              	.LBE937:
 3203              	.LBB939:
 3204              	.LBI939:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3205              		.loc 10 200 7 is_stmt 1 view .LVU905
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3206              		.loc 10 200 7 is_stmt 0 view .LVU906
 3207              	.LBE939:
 3208              	.LBE936:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3209              		.loc 10 231 2 view .LVU907
 3210 0f26 488D4424 		leaq	32(%rsp), %rax
 3210      20
 3211 0f2b 4839C7   		cmpq	%rax, %rdi
 3212 0f2e 7405     		je	.L159
 3213              	.LVL292:
GAS LISTING /tmp/cc4RI4t5.s 			page 164


 3214              	.LBB940:
 3215              	.LBI940:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3216              		.loc 10 236 7 is_stmt 1 view .LVU908
 3217              	.LBB941:
 3218              	.LBB942:
 3219              	.LBI942:
 3220              		.loc 13 469 7 view .LVU909
 3221              	.LBB943:
 3222              	.LBI943:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3223              		.loc 12 119 7 view .LVU910
 3224              	.LBB944:
 3225              		.loc 12 128 19 is_stmt 0 view .LVU911
 3226 0f30 E8000000 		call	_ZdlPv@PLT
 3226      00
 3227              	.LVL293:
 3228              		.loc 12 128 19 view .LVU912
 3229              	.LBE944:
 3230              	.LBE943:
 3231              	.LBE942:
 3232              	.LBE941:
 3233              	.LBE940:
 3234              	.LBE935:
 3235              	.LBE934:
 3236              	.LBB945:
 3237              	.LBI945:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3238              		.loc 10 150 14 is_stmt 1 view .LVU913
 3239              	.LBB946:
 3240              	.LBI946:
 3241              		.loc 11 153 7 view .LVU914
 3242              	.LBB947:
 3243              	.LBI947:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3244              		.loc 12 89 7 view .LVU915
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3245              		.loc 12 89 7 is_stmt 0 view .LVU916
 3246              	.LBE947:
 3247              	.LBE946:
 3248              	.LBE945:
 3249              	.LBE933:
 3250              	.LBB948:
 3251              	.LBI948:
 3252              		.loc 11 153 7 is_stmt 1 view .LVU917
 3253              	.LBB949:
 3254              	.LBI949:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3255              		.loc 12 89 7 view .LVU918
 3256              	.L159:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3257              		.loc 12 89 7 is_stmt 0 view .LVU919
 3258              	.LBE949:
 3259              	.LBE948:
 356:Src/main.cpp  **** 
 3260              		.loc 1 356 1 view .LVU920
 3261 0f35 488B4424 		movq	56(%rsp), %rax
GAS LISTING /tmp/cc4RI4t5.s 			page 165


 3261      38
 3262 0f3a 64483304 		xorq	%fs:40, %rax
 3262      25280000 
 3262      00
 3263 0f43 0F858300 		jne	.L178
 3263      0000
 3264 0f49 4883C448 		addq	$72, %rsp
 3265              		.cfi_remember_state
 3266              		.cfi_def_cfa_offset 24
 3267 0f4d 5B       		popq	%rbx
 3268              		.cfi_def_cfa_offset 16
 3269 0f4e 5D       		popq	%rbp
 3270              		.cfi_def_cfa_offset 8
 3271 0f4f C3       		ret
 3272              	.LVL294:
 3273              	.L173:
 3274              		.cfi_restore_state
 356:Src/main.cpp  **** 
 3275              		.loc 1 356 1 view .LVU921
 3276 0f50 4889C3   		movq	%rax, %rbx
 3277              	.LVL295:
 3278              	.LBB950:
 3279              	.LBI950:
 3280              		.loc 10 657 7 is_stmt 1 view .LVU922
 3281              	.LBB951:
 3282              	.LBI951:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3283              		.loc 10 229 7 view .LVU923
 3284              	.LBB952:
 3285              	.LBB953:
 3286              	.LBI953:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3287              		.loc 10 221 7 view .LVU924
 3288              	.LBB954:
 3289              	.LBI954:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3290              		.loc 10 186 7 view .LVU925
 3291              	.LBB955:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3292              		.loc 10 187 28 is_stmt 0 view .LVU926
 3293 0f53 488B7C24 		movq	16(%rsp), %rdi
 3293      10
 3294              	.LVL296:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3295              		.loc 10 187 28 view .LVU927
 3296              	.LBE955:
 3297              	.LBE954:
 3298              	.LBB956:
 3299              	.LBI956:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3300              		.loc 10 200 7 is_stmt 1 view .LVU928
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3301              		.loc 10 200 7 is_stmt 0 view .LVU929
 3302              	.LBE956:
 3303              	.LBE953:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3304              		.loc 10 231 2 view .LVU930
GAS LISTING /tmp/cc4RI4t5.s 			page 166


 3305 0f58 488D4424 		leaq	32(%rsp), %rax
 3305      20
 3306 0f5d 4839C7   		cmpq	%rax, %rdi
 3307 0f60 7405     		je	.L165
 3308              	.LVL297:
 3309              	.LBB957:
 3310              	.LBI957:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3311              		.loc 10 236 7 is_stmt 1 view .LVU931
 3312              	.LBB958:
 3313              	.LBB959:
 3314              	.LBI959:
 3315              		.loc 13 469 7 view .LVU932
 3316              	.LBB960:
 3317              	.LBI960:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3318              		.loc 12 119 7 view .LVU933
 3319              	.LBB961:
 3320              		.loc 12 128 19 is_stmt 0 view .LVU934
 3321 0f62 E8000000 		call	_ZdlPv@PLT
 3321      00
 3322              	.LVL298:
 3323              	.L165:
 3324              		.loc 12 128 19 view .LVU935
 3325              	.LBE961:
 3326              	.LBE960:
 3327              	.LBE959:
 3328              	.LBE958:
 3329              	.LBE957:
 3330              	.LBE952:
 3331              	.LBE951:
 3332              	.LBB962:
 3333              	.LBI962:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3334              		.loc 10 150 14 is_stmt 1 view .LVU936
 3335              	.LBB963:
 3336              	.LBI963:
 3337              		.loc 11 153 7 view .LVU937
 3338              	.LBB964:
 3339              	.LBI964:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3340              		.loc 12 89 7 view .LVU938
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3341              		.loc 12 89 7 is_stmt 0 view .LVU939
 3342 0f67 4889DF   		movq	%rbx, %rdi
 3343              	.LEHB8:
 3344 0f6a E8000000 		call	_Unwind_Resume@PLT
 3344      00
 3345              	.LVL299:
 3346              	.L174:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3347              		.loc 12 89 7 view .LVU940
 3348 0f6f 4889C3   		movq	%rax, %rbx
 3349              	.LVL300:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3350              		.loc 12 89 7 view .LVU941
 3351              	.LBE964:
GAS LISTING /tmp/cc4RI4t5.s 			page 167


 3352              	.LBE963:
 3353              	.LBE962:
 3354              	.LBE950:
 3355              	.LBB965:
 3356              	.LBI965:
 3357              		.loc 10 657 7 is_stmt 1 view .LVU942
 3358              	.LBB966:
 3359              	.LBI966:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3360              		.loc 10 229 7 view .LVU943
 3361              	.LBB967:
 3362              	.LBB968:
 3363              	.LBI968:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3364              		.loc 10 221 7 view .LVU944
 3365              	.LBB969:
 3366              	.LBI969:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3367              		.loc 10 186 7 view .LVU945
 3368              	.LBB970:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3369              		.loc 10 187 28 is_stmt 0 view .LVU946
 3370 0f72 488B7C24 		movq	16(%rsp), %rdi
 3370      10
 3371              	.LVL301:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3372              		.loc 10 187 28 view .LVU947
 3373              	.LBE970:
 3374              	.LBE969:
 3375              	.LBB971:
 3376              	.LBI971:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3377              		.loc 10 200 7 is_stmt 1 view .LVU948
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3378              		.loc 10 200 7 is_stmt 0 view .LVU949
 3379              	.LBE971:
 3380              	.LBE968:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3381              		.loc 10 231 2 view .LVU950
 3382 0f77 488D4424 		leaq	32(%rsp), %rax
 3382      20
 3383 0f7c 4839C7   		cmpq	%rax, %rdi
 3384 0f7f 7405     		je	.L167
 3385              	.LVL302:
 3386              	.LBB972:
 3387              	.LBI972:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3388              		.loc 10 236 7 is_stmt 1 view .LVU951
 3389              	.LBB973:
 3390              	.LBB974:
 3391              	.LBI974:
 3392              		.loc 13 469 7 view .LVU952
 3393              	.LBB975:
 3394              	.LBI975:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3395              		.loc 12 119 7 view .LVU953
 3396              	.LBB976:
GAS LISTING /tmp/cc4RI4t5.s 			page 168


 3397              		.loc 12 128 19 is_stmt 0 view .LVU954
 3398 0f81 E8000000 		call	_ZdlPv@PLT
 3398      00
 3399              	.LVL303:
 3400              	.L167:
 3401              		.loc 12 128 19 view .LVU955
 3402              	.LBE976:
 3403              	.LBE975:
 3404              	.LBE974:
 3405              	.LBE973:
 3406              	.LBE972:
 3407              	.LBE967:
 3408              	.LBE966:
 3409              	.LBB977:
 3410              	.LBI977:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3411              		.loc 10 150 14 is_stmt 1 view .LVU956
 3412              	.LBB978:
 3413              	.LBI978:
 3414              		.loc 11 153 7 view .LVU957
 3415              	.LBB979:
 3416              	.LBI979:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3417              		.loc 12 89 7 view .LVU958
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3418              		.loc 12 89 7 is_stmt 0 view .LVU959
 3419 0f86 4889DF   		movq	%rbx, %rdi
 3420 0f89 E8000000 		call	_Unwind_Resume@PLT
 3420      00
 3421              	.LVL304:
 3422              	.L175:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3423              		.loc 12 89 7 view .LVU960
 3424 0f8e 4889C3   		movq	%rax, %rbx
 3425              	.LVL305:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3426              		.loc 12 89 7 view .LVU961
 3427              	.LBE979:
 3428              	.LBE978:
 3429              	.LBE977:
 3430              	.LBE965:
 3431              	.LBB980:
 3432              	.LBI980:
 3433              		.loc 10 657 7 is_stmt 1 view .LVU962
 3434              	.LBB981:
 3435              	.LBI981:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3436              		.loc 10 229 7 view .LVU963
 3437              	.LBB982:
 3438              	.LBB983:
 3439              	.LBI983:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3440              		.loc 10 221 7 view .LVU964
 3441              	.LBB984:
 3442              	.LBI984:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3443              		.loc 10 186 7 view .LVU965
GAS LISTING /tmp/cc4RI4t5.s 			page 169


 3444              	.LBB985:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3445              		.loc 10 187 28 is_stmt 0 view .LVU966
 3446 0f91 488B7C24 		movq	16(%rsp), %rdi
 3446      10
 3447              	.LVL306:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3448              		.loc 10 187 28 view .LVU967
 3449              	.LBE985:
 3450              	.LBE984:
 3451              	.LBB986:
 3452              	.LBI986:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3453              		.loc 10 200 7 is_stmt 1 view .LVU968
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3454              		.loc 10 200 7 is_stmt 0 view .LVU969
 3455              	.LBE986:
 3456              	.LBE983:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3457              		.loc 10 231 2 view .LVU970
 3458 0f96 488D4424 		leaq	32(%rsp), %rax
 3458      20
 3459 0f9b 4839C7   		cmpq	%rax, %rdi
 3460 0f9e 7405     		je	.L169
 3461              	.LVL307:
 3462              	.LBB987:
 3463              	.LBI987:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3464              		.loc 10 236 7 is_stmt 1 view .LVU971
 3465              	.LBB988:
 3466              	.LBB989:
 3467              	.LBI989:
 3468              		.loc 13 469 7 view .LVU972
 3469              	.LBB990:
 3470              	.LBI990:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3471              		.loc 12 119 7 view .LVU973
 3472              	.LBB991:
 3473              		.loc 12 128 19 is_stmt 0 view .LVU974
 3474 0fa0 E8000000 		call	_ZdlPv@PLT
 3474      00
 3475              	.LVL308:
 3476              	.L169:
 3477              		.loc 12 128 19 view .LVU975
 3478              	.LBE991:
 3479              	.LBE990:
 3480              	.LBE989:
 3481              	.LBE988:
 3482              	.LBE987:
 3483              	.LBE982:
 3484              	.LBE981:
 3485              	.LBB992:
 3486              	.LBI992:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3487              		.loc 10 150 14 is_stmt 1 view .LVU976
 3488              	.LBB993:
 3489              	.LBI993:
GAS LISTING /tmp/cc4RI4t5.s 			page 170


 3490              		.loc 11 153 7 view .LVU977
 3491              	.LBB994:
 3492              	.LBI994:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3493              		.loc 12 89 7 view .LVU978
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3494              		.loc 12 89 7 is_stmt 0 view .LVU979
 3495 0fa5 4889DF   		movq	%rbx, %rdi
 3496 0fa8 E8000000 		call	_Unwind_Resume@PLT
 3496      00
 3497              	.LVL309:
 3498              	.L176:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3499              		.loc 12 89 7 view .LVU980
 3500 0fad 4889C3   		movq	%rax, %rbx
 3501              	.LVL310:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3502              		.loc 12 89 7 view .LVU981
 3503              	.LBE994:
 3504              	.LBE993:
 3505              	.LBE992:
 3506              	.LBE980:
 3507              	.LBB995:
 3508              	.LBI995:
 3509              		.loc 10 657 7 is_stmt 1 view .LVU982
 3510              	.LBB996:
 3511              	.LBI996:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3512              		.loc 10 229 7 view .LVU983
 3513              	.LBB997:
 3514              	.LBB998:
 3515              	.LBI998:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3516              		.loc 10 221 7 view .LVU984
 3517              	.LBB999:
 3518              	.LBI999:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3519              		.loc 10 186 7 view .LVU985
 3520              	.LBB1000:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3521              		.loc 10 187 28 is_stmt 0 view .LVU986
 3522 0fb0 488B7C24 		movq	16(%rsp), %rdi
 3522      10
 3523              	.LVL311:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3524              		.loc 10 187 28 view .LVU987
 3525              	.LBE1000:
 3526              	.LBE999:
 3527              	.LBB1001:
 3528              	.LBI1001:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3529              		.loc 10 200 7 is_stmt 1 view .LVU988
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3530              		.loc 10 200 7 is_stmt 0 view .LVU989
 3531              	.LBE1001:
 3532              	.LBE998:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
GAS LISTING /tmp/cc4RI4t5.s 			page 171


 3533              		.loc 10 231 2 view .LVU990
 3534 0fb5 488D4424 		leaq	32(%rsp), %rax
 3534      20
 3535 0fba 4839C7   		cmpq	%rax, %rdi
 3536 0fbd 7405     		je	.L171
 3537              	.LVL312:
 3538              	.LBB1002:
 3539              	.LBI1002:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3540              		.loc 10 236 7 is_stmt 1 view .LVU991
 3541              	.LBB1003:
 3542              	.LBB1004:
 3543              	.LBI1004:
 3544              		.loc 13 469 7 view .LVU992
 3545              	.LBB1005:
 3546              	.LBI1005:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3547              		.loc 12 119 7 view .LVU993
 3548              	.LBB1006:
 3549              		.loc 12 128 19 is_stmt 0 view .LVU994
 3550 0fbf E8000000 		call	_ZdlPv@PLT
 3550      00
 3551              	.LVL313:
 3552              	.L171:
 3553              		.loc 12 128 19 view .LVU995
 3554              	.LBE1006:
 3555              	.LBE1005:
 3556              	.LBE1004:
 3557              	.LBE1003:
 3558              	.LBE1002:
 3559              	.LBE997:
 3560              	.LBE996:
 3561              	.LBB1007:
 3562              	.LBI1007:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3563              		.loc 10 150 14 is_stmt 1 view .LVU996
 3564              	.LBB1008:
 3565              	.LBI1008:
 3566              		.loc 11 153 7 view .LVU997
 3567              	.LBB1009:
 3568              	.LBI1009:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3569              		.loc 12 89 7 view .LVU998
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3570              		.loc 12 89 7 is_stmt 0 view .LVU999
 3571 0fc4 4889DF   		movq	%rbx, %rdi
 3572 0fc7 E8000000 		call	_Unwind_Resume@PLT
 3572      00
 3573              	.LVL314:
 3574              	.LEHE8:
 3575              	.L178:
 3576              	.LBE1009:
 3577              	.LBE1008:
 3578              	.LBE1007:
 3579              	.LBE995:
 356:Src/main.cpp  **** 
 3580              		.loc 1 356 1 view .LVU1000
GAS LISTING /tmp/cc4RI4t5.s 			page 172


 3581 0fcc E8000000 		call	__stack_chk_fail@PLT
 3581      00
 3582              	.LVL315:
 3583              		.cfi_endproc
 3584              	.LFE2494:
 3585              		.globl	__gxx_personality_v0
 3586              		.section	.gcc_except_table,"a",@progbits
 3587              	.LLSDA2494:
 3588 0000 FF       		.byte	0xff
 3589 0001 FF       		.byte	0xff
 3590 0002 01       		.byte	0x1
 3591 0003 30       		.uleb128 .LLSDACSE2494-.LLSDACSB2494
 3592              	.LLSDACSB2494:
 3593 0004 1E       		.uleb128 .LEHB0-.LFB2494
 3594 0005 70       		.uleb128 .LEHE0-.LEHB0
 3595 0006 00       		.uleb128 0
 3596 0007 00       		.uleb128 0
 3597 0008 A201     		.uleb128 .LEHB1-.LFB2494
 3598 000a 05       		.uleb128 .LEHE1-.LEHB1
 3599 000b C604     		.uleb128 .L173-.LFB2494
 3600 000d 00       		.uleb128 0
 3601 000e 8102     		.uleb128 .LEHB2-.LFB2494
 3602 0010 05       		.uleb128 .LEHE2-.LEHB2
 3603 0011 00       		.uleb128 0
 3604 0012 00       		.uleb128 0
 3605 0013 9A02     		.uleb128 .LEHB3-.LFB2494
 3606 0015 05       		.uleb128 .LEHE3-.LEHB3
 3607 0016 E504     		.uleb128 .L174-.LFB2494
 3608 0018 00       		.uleb128 0
 3609 0019 8103     		.uleb128 .LEHB4-.LFB2494
 3610 001b 05       		.uleb128 .LEHE4-.LEHB4
 3611 001c 00       		.uleb128 0
 3612 001d 00       		.uleb128 0
 3613 001e 9A03     		.uleb128 .LEHB5-.LFB2494
 3614 0020 05       		.uleb128 .LEHE5-.LEHB5
 3615 0021 8405     		.uleb128 .L175-.LFB2494
 3616 0023 00       		.uleb128 0
 3617 0024 F903     		.uleb128 .LEHB6-.LFB2494
 3618 0026 05       		.uleb128 .LEHE6-.LEHB6
 3619 0027 00       		.uleb128 0
 3620 0028 00       		.uleb128 0
 3621 0029 9204     		.uleb128 .LEHB7-.LFB2494
 3622 002b 05       		.uleb128 .LEHE7-.LEHB7
 3623 002c A305     		.uleb128 .L176-.LFB2494
 3624 002e 00       		.uleb128 0
 3625 002f E004     		.uleb128 .LEHB8-.LFB2494
 3626 0031 62       		.uleb128 .LEHE8-.LEHB8
 3627 0032 00       		.uleb128 0
 3628 0033 00       		.uleb128 0
 3629              	.LLSDACSE2494:
 3630              		.text
 3632              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20f
 3633              		.align 2
 3634              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_it
 3636              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_
 3637              	.LVL316:
 3638              	.LFB2841:
GAS LISTING /tmp/cc4RI4t5.s 			page 173


 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3639              		.loc 8 206 7 is_stmt 1 view -0
 3640              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3641              		.loc 8 206 7 is_stmt 0 view .LVU1002
 3642 0000 4154     		pushq	%r12
 3643              		.cfi_def_cfa_offset 16
 3644              		.cfi_offset 12, -16
 3645 0002 55       		pushq	%rbp
 3646              		.cfi_def_cfa_offset 24
 3647              		.cfi_offset 6, -24
 3648 0003 53       		pushq	%rbx
 3649              		.cfi_def_cfa_offset 32
 3650              		.cfi_offset 3, -32
 3651 0004 4883EC10 		subq	$16, %rsp
 3652              		.cfi_def_cfa_offset 48
 3653 0008 4889FD   		movq	%rdi, %rbp
 3654 000b 4989F4   		movq	%rsi, %r12
 3655 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3656              		.loc 8 206 7 view .LVU1003
 3657 0011 64488B04 		movq	%fs:40, %rax
 3657      25280000 
 3657      00
 3658 001a 48894424 		movq	%rax, 8(%rsp)
 3658      08
 3659 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3660              		.loc 8 211 42 view .LVU1004
 3661 0021 4885F6   		testq	%rsi, %rsi
 3662 0024 742D     		je	.L186
 3663              	.L180:
 3664              	.LVL317:
 3665              	.LBB1010:
 3666              	.LBI1010:
 3667              		.loc 9 138 5 is_stmt 1 view .LVU1005
 3668              	.LBB1011:
 3669              	.LBI1011:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 3670              		.loc 9 98 5 view .LVU1006
 3671              	.LBB1012:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3672              		.loc 9 104 21 is_stmt 0 view .LVU1007
 3673 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3674              		.loc 9 104 23 view .LVU1008
 3675 0029 48C1FB02 		sarq	$2, %rbx
 3676              	.LVL318:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3677              		.loc 9 104 23 view .LVU1009
 3678              	.LBE1012:
 3679              	.LBE1011:
 3680              	.LBE1010:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 3681              		.loc 8 215 12 view .LVU1010
 3682 002d 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
GAS LISTING /tmp/cc4RI4t5.s 			page 174


 3683              		.loc 8 217 2 view .LVU1011
 3684 0031 4883FB03 		cmpq	$3, %rbx
 3685 0035 772D     		ja	.L187
 3686              	.LVL319:
 3687              	.L181:
 3688              	.LBB1013:
 3689              	.LBI1013:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3690              		.loc 10 186 7 is_stmt 1 view .LVU1012
 3691              	.LBB1014:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3692              		.loc 10 187 28 is_stmt 0 view .LVU1013
 3693 0037 488B7D00 		movq	0(%rbp), %rdi
 3694              	.LVL320:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3695              		.loc 10 187 28 view .LVU1014
 3696              	.LBE1014:
 3697              	.LBE1013:
 3698              	.LBB1015:
 3699              	.LBI1015:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3700              		.loc 10 392 7 is_stmt 1 view .LVU1015
 3701              	.LBB1016:
 3702              	.LBI1016:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3703              		.loc 10 346 7 view .LVU1016
 3704              	.LBB1017:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3705              		.loc 10 348 2 is_stmt 0 view .LVU1017
 3706 003b 4883FB01 		cmpq	$1, %rbx
 3707 003f 7441     		je	.L188
 3708              	.LVL321:
 3709              	.LBB1018:
 3710              	.LBI1018:
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3711              		.loc 4 470 7 is_stmt 1 view .LVU1018
 3712              	.LBB1019:
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 3713              		.loc 4 472 2 view .LVU1019
 3714 0041 4885DB   		testq	%rbx, %rbx
 3715 0044 7442     		je	.L183
 3716              		.loc 4 474 2 view .LVU1020
 3717              		.loc 4 474 16 is_stmt 0 view .LVU1021
 3718 0046 4889DA   		movq	%rbx, %rdx
 3719 0049 4C89E6   		movq	%r12, %rsi
 3720 004c E8000000 		call	wmemcpy@PLT
 3720      00
 3721              	.LVL322:
 3722              		.loc 4 474 32 view .LVU1022
 3723 0051 EB35     		jmp	.L183
 3724              	.LVL323:
 3725              	.L186:
 3726              		.loc 4 474 32 view .LVU1023
 3727              	.LBE1019:
 3728              	.LBE1018:
 3729              	.LBE1017:
 3730              	.LBE1016:
GAS LISTING /tmp/cc4RI4t5.s 			page 175


 3731              	.LBE1015:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3732              		.loc 8 211 42 discriminator 1 view .LVU1024
 3733 0053 4839D6   		cmpq	%rdx, %rsi
 3734 0056 74CE     		je	.L180
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3735              		.loc 8 212 28 view .LVU1025
 3736 0058 488D3D00 		leaq	.LC34(%rip), %rdi
 3736      000000
 3737              	.LVL324:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3738              		.loc 8 212 28 view .LVU1026
 3739 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 3739      00
 3740              	.LVL325:
 3741              	.L187:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3742              		.loc 8 219 6 view .LVU1027
 3743 0064 4889E6   		movq	%rsp, %rsi
 3744              	.LVL326:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3745              		.loc 8 219 6 view .LVU1028
 3746 0067 BA000000 		movl	$0, %edx
 3746      00
 3747              	.LVL327:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3748              		.loc 8 219 6 view .LVU1029
 3749 006c 4889EF   		movq	%rbp, %rdi
 3750              	.LVL328:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3751              		.loc 8 219 6 view .LVU1030
 3752 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 3752      00
 3753              	.LVL329:
 3754              	.LBB1024:
 3755              	.LBI1024:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3756              		.loc 10 178 7 is_stmt 1 view .LVU1031
 3757              	.LBB1025:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3758              		.loc 10 179 9 is_stmt 0 view .LVU1032
 3759 0074 48894500 		movq	%rax, 0(%rbp)
 3760              	.LVL330:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3761              		.loc 10 179 9 view .LVU1033
 3762              	.LBE1025:
 3763              	.LBE1024:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 3764              		.loc 8 220 6 view .LVU1034
 3765 0078 488B0424 		movq	(%rsp), %rax
 3766              	.LVL331:
 3767              	.LBB1026:
 3768              	.LBI1026:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3769              		.loc 10 210 7 is_stmt 1 view .LVU1035
 3770              	.LBB1027:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 176


 3771              		.loc 10 211 9 is_stmt 0 view .LVU1036
 3772 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3773              		.loc 10 211 45 view .LVU1037
 3774 0080 EBB5     		jmp	.L181
 3775              	.LVL332:
 3776              	.L188:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3777              		.loc 10 211 45 view .LVU1038
 3778              	.LBE1027:
 3779              	.LBE1026:
 3780              	.LBB1028:
 3781              	.LBB1023:
 3782              	.LBB1022:
 3783              	.LBB1020:
 3784              	.LBI1020:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3785              		.loc 4 412 7 is_stmt 1 view .LVU1039
 3786              	.LBB1021:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3787              		.loc 4 413 9 view .LVU1040
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3788              		.loc 4 413 16 is_stmt 0 view .LVU1041
 3789 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3790              		.loc 4 413 14 view .LVU1042
 3791 0086 8907     		movl	%eax, (%rdi)
 3792              	.LVL333:
 3793              	.L183:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3794              		.loc 4 413 14 view .LVU1043
 3795              	.LBE1021:
 3796              	.LBE1020:
 3797              	.LBE1022:
 3798              	.LBE1023:
 3799              	.LBE1028:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 3800              		.loc 8 232 2 view .LVU1044
 3801 0088 488B0424 		movq	(%rsp), %rax
 3802              	.LVL334:
 3803              	.LBB1029:
 3804              	.LBI1029:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3805              		.loc 10 214 7 is_stmt 1 view .LVU1045
 3806              	.LBB1030:
 3807              	.LBB1031:
 3808              	.LBI1031:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 3809              		.loc 10 182 7 view .LVU1046
 3810              	.LBB1032:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3811              		.loc 10 183 9 is_stmt 0 view .LVU1047
 3812 008c 48894508 		movq	%rax, 8(%rbp)
 3813              	.LVL335:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3814              		.loc 10 183 9 view .LVU1048
 3815              	.LBE1032:
GAS LISTING /tmp/cc4RI4t5.s 			page 177


 3816              	.LBE1031:
 3817              	.LBB1033:
 3818              	.LBI1033:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3819              		.loc 10 186 7 is_stmt 1 view .LVU1049
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3820              		.loc 10 186 7 is_stmt 0 view .LVU1050
 3821              	.LBE1033:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3822              		.loc 10 217 31 view .LVU1051
 3823 0090 48C1E002 		salq	$2, %rax
 3824              	.LVL336:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3825              		.loc 10 217 31 view .LVU1052
 3826 0094 48034500 		addq	0(%rbp), %rax
 3827              	.LVL337:
 3828              	.LBB1034:
 3829              	.LBI1034:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3830              		.loc 4 412 7 is_stmt 1 view .LVU1053
 3831              	.LBB1035:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3832              		.loc 4 413 9 view .LVU1054
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3833              		.loc 4 413 14 is_stmt 0 view .LVU1055
 3834 0098 C7000000 		movl	$0, (%rax)
 3834      0000
 3835              	.LVL338:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3836              		.loc 4 413 14 view .LVU1056
 3837              	.LBE1035:
 3838              	.LBE1034:
 3839              	.LBE1030:
 3840              	.LBE1029:
 3841              		.loc 8 233 7 view .LVU1057
 3842 009e 488B4424 		movq	8(%rsp), %rax
 3842      08
 3843 00a3 64483304 		xorq	%fs:40, %rax
 3843      25280000 
 3843      00
 3844 00ac 7509     		jne	.L189
 3845 00ae 4883C410 		addq	$16, %rsp
 3846              		.cfi_remember_state
 3847              		.cfi_def_cfa_offset 32
 3848 00b2 5B       		popq	%rbx
 3849              		.cfi_def_cfa_offset 24
 3850 00b3 5D       		popq	%rbp
 3851              		.cfi_def_cfa_offset 16
 3852              	.LVL339:
 3853              		.loc 8 233 7 view .LVU1058
 3854 00b4 415C     		popq	%r12
 3855              		.cfi_def_cfa_offset 8
 3856              	.LVL340:
 3857              		.loc 8 233 7 view .LVU1059
 3858 00b6 C3       		ret
 3859              	.LVL341:
 3860              	.L189:
GAS LISTING /tmp/cc4RI4t5.s 			page 178


 3861              		.cfi_restore_state
 3862              		.loc 8 233 7 view .LVU1060
 3863 00b7 E8000000 		call	__stack_chk_fail@PLT
 3863      00
 3864              	.LVL342:
 3865              		.cfi_endproc
 3866              	.LFE2841:
 3868              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEE
 3869              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_
 3871              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P
 3872              	.LVL343:
 3873              	.LFB2657:
 3874              		.file 14 "/usr/include/c++/9.2.0/ext/string_conversions.h"
   1:/usr/include/c++/9.2.0/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
   3:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/string_conversions.h **** //
   5:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/string_conversions.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  11:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  16:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  20:/usr/include/c++/9.2.0/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  25:/usr/include/c++/9.2.0/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/usr/include/c++/9.2.0/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/string_conversions.h ****  */
  28:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  29:/usr/include/c++/9.2.0/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/usr/include/c++/9.2.0/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  32:/usr/include/c++/9.2.0/ext/string_conversions.h **** #pragma GCC system_header
  33:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  34:/usr/include/c++/9.2.0/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/9.2.0/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/9.2.0/ext/string_conversions.h **** #else
  37:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  38:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdlib>
  42:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cwchar>
  43:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdio>
  44:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cerrno>
GAS LISTING /tmp/cc4RI4t5.s 			page 179


  45:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  46:/usr/include/c++/9.2.0/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/ext/string_conversions.h **** {
  48:/usr/include/c++/9.2.0/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  50:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   typename... _Base>
  53:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _Ret
  54:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   _Base... __base)
  57:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
  58:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _Ret __ret;
  59:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  60:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __endptr;
  61:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  62:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Save_errno {
  63:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	int _M_errno;
  66:/usr/include/c++/9.2.0/ext/string_conversions.h ****       } const __save_errno;
  67:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  68:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Range_chk {
  69:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  70:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  72:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  73:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  {
  75:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  }
  78:/usr/include/c++/9.2.0/ext/string_conversions.h ****       };
  79:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  80:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  82:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__endptr == __str)
  83:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else
  88:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	__ret = __tmp;
  89:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  90:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__idx)
  91:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  93:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return __ret;
  94:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
  95:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  96:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _String
  99:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 3875              		.loc 14 99 5 is_stmt 1 view -0
 3876              		.cfi_startproc
GAS LISTING /tmp/cc4RI4t5.s 			page 180


 3877              		.loc 14 99 5 is_stmt 0 view .LVU1062
 3878 0000 55       		pushq	%rbp
 3879              		.cfi_def_cfa_offset 16
 3880              		.cfi_offset 6, -16
 3881 0001 4889E5   		movq	%rsp, %rbp
 3882              		.cfi_def_cfa_register 6
 3883 0004 4155     		pushq	%r13
 3884 0006 4154     		pushq	%r12
 3885 0008 53       		pushq	%rbx
 3886 0009 4881ECD8 		subq	$216, %rsp
 3886      000000
 3887              		.cfi_offset 13, -24
 3888              		.cfi_offset 12, -32
 3889              		.cfi_offset 3, -40
 3890 0010 4889FB   		movq	%rdi, %rbx
 3891 0013 4989F2   		movq	%rsi, %r10
 3892 0016 4889D6   		movq	%rdx, %rsi
 3893              	.LVL344:
 3894              		.loc 14 99 5 view .LVU1063
 3895 0019 4889CA   		movq	%rcx, %rdx
 3896              	.LVL345:
 3897              		.loc 14 99 5 view .LVU1064
 3898 001c 4C898550 		movq	%r8, -176(%rbp)
 3898      FFFFFF
 3899 0023 4C898D58 		movq	%r9, -168(%rbp)
 3899      FFFFFF
 3900 002a 84C0     		testb	%al, %al
 3901 002c 7426     		je	.L191
 3902 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 3902      FFFFFF
 3903 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 3903      FFFFFF
 3904 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 3905 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
 3906 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 3907 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 3908 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 3909 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 3910              	.L191:
 3911              		.loc 14 99 5 view .LVU1065
 3912 0054 41BD2800 		movl	$40, %r13d
 3912      0000
 3913 005a 64498B45 		movq	%fs:0(%r13), %rax
 3913      00
 3914 005f 48898528 		movq	%rax, -216(%rbp)
 3914      FFFFFF
 3915 0066 31C0     		xorl	%eax, %eax
 100:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/usr/include/c++/9.2.0/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
 103:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 3916              		.loc 14 105 58 view .LVU1066
 3917 0068 488D04B5 		leaq	23(,%rsi,4), %rax
 3917      17000000 
 3918 0070 4883E0F0 		andq	$-16, %rax
GAS LISTING /tmp/cc4RI4t5.s 			page 181


 3919 0074 4829C4   		subq	%rax, %rsp
 3920 0077 4C8D6424 		leaq	15(%rsp), %r12
 3920      0F
 3921 007c 4983E4F0 		andq	$-16, %r12
 3922              	.LVL346:
 106:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 107:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 108:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 3923              		.loc 14 109 25 view .LVU1067
 3924 0080 C78510FF 		movl	$32, -240(%rbp)
 3924      FFFF2000 
 3924      0000
 3925 008a C78514FF 		movl	$48, -236(%rbp)
 3925      FFFF3000 
 3925      0000
 3926 0094 488D4510 		leaq	16(%rbp), %rax
 3927 0098 48898518 		movq	%rax, -232(%rbp)
 3927      FFFFFF
 3928 009f 488D8530 		leaq	-208(%rbp), %rax
 3928      FFFFFF
 3929 00a6 48898520 		movq	%rax, -224(%rbp)
 3929      FFFFFF
 110:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 111:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 3930              		.loc 14 111 32 view .LVU1068
 3931 00ad 488D8D10 		leaq	-240(%rbp), %rcx
 3931      FFFFFF
 3932              	.LVL347:
 3933              		.loc 14 111 32 view .LVU1069
 3934 00b4 4C89E7   		movq	%r12, %rdi
 3935              	.LVL348:
 3936              		.loc 14 111 32 view .LVU1070
 3937 00b7 41FFD2   		call	*%r10
 3938              	.LVL349:
 3939              	.LBB1036:
 3940              	.LBI1036:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3941              		.loc 11 138 7 is_stmt 1 view .LVU1071
 3942              	.LBB1037:
 3943              	.LBI1037:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3944              		.loc 12 80 7 view .LVU1072
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3945              		.loc 12 80 7 is_stmt 0 view .LVU1073
 3946              	.LBE1037:
 3947              	.LBE1036:
 112:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 113:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return _String(__s, __s + __len);
 3948              		.loc 14 115 33 view .LVU1074
 3949 00ba 4898     		cltq
 3950              		.loc 14 115 38 view .LVU1075
 3951 00bc 498D1484 		leaq	(%r12,%rax,4), %rdx
 3952              	.LVL350:
 3953              	.LBB1038:
GAS LISTING /tmp/cc4RI4t5.s 			page 182


 3954              	.LBI1038:
 625:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 3955              		.loc 10 625 9 is_stmt 1 view .LVU1076
 3956              	.LBB1039:
 3957              	.LBI1039:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3958              		.loc 10 190 7 view .LVU1077
 3959              	.LBB1040:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3960              		.loc 10 193 51 is_stmt 0 view .LVU1078
 3961 00c0 488D4310 		leaq	16(%rbx), %rax
 3962              	.LVL351:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3963              		.loc 10 193 51 view .LVU1079
 3964              	.LBE1040:
 3965              	.LBE1039:
 3966              	.LBB1041:
 3967              	.LBI1041:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3968              		.loc 10 156 2 is_stmt 1 view .LVU1080
 3969              	.LBB1042:
 3970              	.LBB1043:
 3971              	.LBI1043:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3972              		.loc 11 141 7 view .LVU1081
 3973              	.LBB1044:
 3974              	.LBI1044:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3975              		.loc 12 83 7 view .LVU1082
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3976              		.loc 12 83 7 is_stmt 0 view .LVU1083
 3977              	.LBE1044:
 3978              	.LBE1043:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3979              		.loc 10 157 35 view .LVU1084
 3980 00c4 488903   		movq	%rax, (%rbx)
 3981              	.LVL352:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3982              		.loc 10 157 35 view .LVU1085
 3983              	.LBE1042:
 3984              	.LBE1041:
 3985              	.LBB1045:
 3986              	.LBI1045:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3987              		.loc 10 263 9 is_stmt 1 view .LVU1086
 3988              	.LBB1046:
 3989              	.LBB1047:
 3990              	.LBI1047:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3991              		.loc 10 243 9 view .LVU1087
 3992              	.LBB1048:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3993              		.loc 10 247 11 is_stmt 0 view .LVU1088
 3994 00c7 4C89E6   		movq	%r12, %rsi
 3995 00ca 4889DF   		movq	%rbx, %rdi
 3996 00cd E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_ite
 3996      00
GAS LISTING /tmp/cc4RI4t5.s 			page 183


 3997              	.LVL353:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3998              		.loc 10 247 11 view .LVU1089
 3999              	.LBE1048:
 4000              	.LBE1047:
 4001              	.LBE1046:
 4002              	.LBE1045:
 4003              	.LBE1038:
 4004              	.LBB1049:
 4005              	.LBI1049:
 4006              		.loc 11 153 7 is_stmt 1 view .LVU1090
 4007              	.LBB1050:
 4008              	.LBI1050:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4009              		.loc 12 89 7 view .LVU1091
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4010              		.loc 12 89 7 is_stmt 0 view .LVU1092
 4011              	.LBE1050:
 4012              	.LBE1049:
 116:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 4013              		.loc 14 116 5 view .LVU1093
 4014 00d2 488B8528 		movq	-216(%rbp), %rax
 4014      FFFFFF
 4015 00d9 64493345 		xorq	%fs:0(%r13), %rax
 4015      00
 4016 00de 750E     		jne	.L194
 4017 00e0 4889D8   		movq	%rbx, %rax
 4018 00e3 488D65E8 		leaq	-24(%rbp), %rsp
 4019 00e7 5B       		popq	%rbx
 4020              	.LVL354:
 4021              		.loc 14 116 5 view .LVU1094
 4022 00e8 415C     		popq	%r12
 4023              	.LVL355:
 4024              		.loc 14 116 5 view .LVU1095
 4025 00ea 415D     		popq	%r13
 4026 00ec 5D       		popq	%rbp
 4027              		.cfi_remember_state
 4028              		.cfi_def_cfa 7, 8
 4029 00ed C3       		ret
 4030              	.LVL356:
 4031              	.L194:
 4032              		.cfi_restore_state
 4033              		.loc 14 116 5 view .LVU1096
 4034 00ee E8000000 		call	__stack_chk_fail@PLT
 4034      00
 4035              	.LVL357:
 4036              		.cfi_endproc
 4037              	.LFE2657:
 4039              		.section	.rodata.str4.4
 4040              		.align 4
 4041              	.LC40:
 4042 0020 2500     		.string	"%"
 4043 0022 00       		.string	""
 4044 0023 00       		.string	""
 4045 0024 6C00     		.string	"l"
 4046 0026 00       		.string	""
 4047 0027 00       		.string	""
GAS LISTING /tmp/cc4RI4t5.s 			page 184


 4048 0028 7500     		.string	"u"
 4049 002a 00       		.string	""
 4050 002b 00       		.string	""
 4051 002c 00       		.string	""
 4052 002d 00       		.string	""
 4053 002e 00       		.string	""
 4054 002f 00       		.string	""
 4055              		.text
 4056              		.globl	_Z11renderScenev
 4058              	_Z11renderScenev:
 4059              	.LFB2496:
 371:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 4060              		.loc 1 371 1 is_stmt 1 view -0
 4061              		.cfi_startproc
 4062              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4063              		.cfi_lsda 0x1b,.LLSDA2496
 4064 0fd1 55       		pushq	%rbp
 4065              		.cfi_def_cfa_offset 16
 4066              		.cfi_offset 6, -16
 4067 0fd2 53       		pushq	%rbx
 4068              		.cfi_def_cfa_offset 24
 4069              		.cfi_offset 3, -24
 4070 0fd3 4883EC48 		subq	$72, %rsp
 4071              		.cfi_def_cfa_offset 96
 371:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 4072              		.loc 1 371 1 is_stmt 0 view .LVU1098
 4073 0fd7 64488B04 		movq	%fs:40, %rax
 4073      25280000 
 4073      00
 4074 0fe0 48894424 		movq	%rax, 56(%rsp)
 4074      38
 4075 0fe5 31C0     		xorl	%eax, %eax
 372:Src/main.cpp  **** 
 4076              		.loc 1 372 2 is_stmt 1 view .LVU1099
 372:Src/main.cpp  **** 
 4077              		.loc 1 372 9 is_stmt 0 view .LVU1100
 4078 0fe7 BF004000 		movl	$16384, %edi
 4078      00
 4079              	.LEHB9:
 4080 0fec E8000000 		call	glClear@PLT
 4080      00
 4081              	.LVL358:
 374:Src/main.cpp  **** 		{
 4082              		.loc 1 374 3 is_stmt 1 view .LVU1101
 4083              	.LBB1051:
 374:Src/main.cpp  **** 		{
 4084              		.loc 1 374 14 is_stmt 0 view .LVU1102
 4085 0ff1 BD000000 		movl	$0, %ebp
 4085      00
 4086 0ff6 EB18     		jmp	.L198
 4087              	.LVL359:
 4088              	.L207:
 4089              	.LBB1052:
 4090              	.LBI1052:
 4091              		.loc 10 657 7 is_stmt 1 view .LVU1103
 4092              	.LBB1053:
 4093              	.LBI1053:
GAS LISTING /tmp/cc4RI4t5.s 			page 185


 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4094              		.loc 10 229 7 view .LVU1104
 4095              	.LBB1054:
 4096              	.LBB1055:
 4097              	.LBI1055:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4098              		.loc 10 221 7 view .LVU1105
 4099              	.LBB1056:
 4100              	.LBI1056:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4101              		.loc 10 186 7 view .LVU1106
 4102              	.LBB1057:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4103              		.loc 10 187 28 is_stmt 0 view .LVU1107
 4104 0ff8 488B7C24 		movq	16(%rsp), %rdi
 4104      10
 4105              	.LVL360:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4106              		.loc 10 187 28 view .LVU1108
 4107              	.LBE1057:
 4108              	.LBE1056:
 4109              	.LBB1058:
 4110              	.LBI1058:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4111              		.loc 10 200 7 is_stmt 1 view .LVU1109
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4112              		.loc 10 200 7 is_stmt 0 view .LVU1110
 4113              	.LBE1058:
 4114              	.LBE1055:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4115              		.loc 10 231 2 view .LVU1111
 4116 0ffd 488D4424 		leaq	32(%rsp), %rax
 4116      20
 4117 1002 4839C7   		cmpq	%rax, %rdi
 4118 1005 7405     		je	.L197
 4119              	.LVL361:
 4120              	.LBB1059:
 4121              	.LBI1059:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4122              		.loc 10 236 7 is_stmt 1 view .LVU1112
 4123              	.LBB1060:
 4124              	.LBB1061:
 4125              	.LBI1061:
 4126              		.loc 13 469 7 view .LVU1113
 4127              	.LBB1062:
 4128              	.LBI1062:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4129              		.loc 12 119 7 view .LVU1114
 4130              	.LBB1063:
 4131              		.loc 12 128 19 is_stmt 0 view .LVU1115
 4132 1007 E8000000 		call	_ZdlPv@PLT
 4132      00
 4133              	.LVL362:
 4134              	.L197:
 4135              		.loc 12 128 19 view .LVU1116
 4136              	.LBE1063:
 4137              	.LBE1062:
GAS LISTING /tmp/cc4RI4t5.s 			page 186


 4138              	.LBE1061:
 4139              	.LBE1060:
 4140              	.LBE1059:
 4141              	.LBE1054:
 4142              	.LBE1053:
 4143              	.LBB1064:
 4144              	.LBI1064:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4145              		.loc 10 150 14 is_stmt 1 view .LVU1117
 4146              	.LBB1065:
 4147              	.LBI1065:
 4148              		.loc 11 153 7 view .LVU1118
 4149              	.LBB1066:
 4150              	.LBI1066:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4151              		.loc 12 89 7 view .LVU1119
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4152              		.loc 12 89 7 is_stmt 0 view .LVU1120
 4153              	.LBE1066:
 4154              	.LBE1065:
 4155              	.LBE1064:
 4156              	.LBE1052:
 374:Src/main.cpp  **** 		{
 4157              		.loc 1 374 3 is_stmt 1 view .LVU1121
 4158 100c 4883C501 		addq	$1, %rbp
 4159              	.LVL363:
 4160              	.L198:
 374:Src/main.cpp  **** 		{
 4161              		.loc 1 374 23 discriminator 2 view .LVU1122
 4162 1010 48392D00 		cmpq	%rbp, numOfObstacles(%rip)
 4162      000000
 4163 1017 0F86A200 		jbe	.L203
 4163      0000
 376:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 4164              		.loc 1 376 4 view .LVU1123
 376:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 4165              		.loc 1 376 29 is_stmt 0 view .LVU1124
 4166 101d 488D446D 		leaq	0(%rbp,%rbp,2), %rax
 4166      00
 4167 1022 48C1E004 		salq	$4, %rax
 4168 1026 4889C3   		movq	%rax, %rbx
 376:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 4169              		.loc 1 376 17 view .LVU1125
 4170 1029 4889C7   		movq	%rax, %rdi
 4171 102c 48033D00 		addq	obstacles(%rip), %rdi
 4171      000000
 376:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 4172              		.loc 1 376 16 view .LVU1126
 4173 1033 E8000000 		call	_Z12drawObstaclePK8obstacle
 4173      00
 4174              	.LVL364:
 377:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 4175              		.loc 1 377 4 is_stmt 1 view .LVU1127
 377:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 4176              		.loc 1 377 14 is_stmt 0 view .LVU1128
 4177 1038 BFFFFFFF 		movl	$16777215, %edi
 4177      00
GAS LISTING /tmp/cc4RI4t5.s 			page 187


 4178 103d E8000000 		call	_Z10glSetColorj@PLT
 4178      00
 4179              	.LVL365:
 378:Src/main.cpp  **** 		}
 4180              		.loc 1 378 4 is_stmt 1 view .LVU1129
 378:Src/main.cpp  **** 		}
 4181              		.loc 1 378 83 is_stmt 0 view .LVU1130
 4182 1042 4889D8   		movq	%rbx, %rax
 4183 1045 48030500 		addq	obstacles(%rip), %rax
 4183      000000
 378:Src/main.cpp  **** 		}
 4184              		.loc 1 378 85 view .LVU1131
 4185 104c 488B10   		movq	(%rax), %rdx
 378:Src/main.cpp  **** 		}
 4186              		.loc 1 378 107 view .LVU1132
 4187 104f F30F1005 		movss	.LC39(%rip), %xmm0
 4187      00000000 
 4188 1057 0F28C8   		movaps	%xmm0, %xmm1
 4189 105a F30F5948 		mulss	44(%rax), %xmm1
 4189      2C
 378:Src/main.cpp  **** 		}
 4190              		.loc 1 378 90 view .LVU1133
 4191 105f F30F584A 		addss	4(%rdx), %xmm1
 4191      04
 4192 1064 F30F114C 		movss	%xmm1, 8(%rsp)
 4192      2408
 378:Src/main.cpp  **** 		}
 4193              		.loc 1 378 67 view .LVU1134
 4194 106a F30F5940 		mulss	40(%rax), %xmm0
 4194      28
 378:Src/main.cpp  **** 		}
 4195              		.loc 1 378 50 view .LVU1135
 4196 106f F30F5802 		addss	(%rdx), %xmm0
 4197 1073 F30F1144 		movss	%xmm0, 12(%rsp)
 4197      240C
 4198              	.LVL366:
 4199              	.LBB1067:
 4200              	.LBI1067:
 658:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 660:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 664:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 665:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 667:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 670:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/usr/include/c++/9.2.0/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 673:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
GAS LISTING /tmp/cc4RI4t5.s 			page 188


 677:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(0);
 680:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 681:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else
 682:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 683:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 692:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 693:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 695:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 696:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__str);
 697:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 698:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 699:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
 706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 714:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 715:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c)
 716:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 717:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c);
 718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 719:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 720:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 721:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 729:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
GAS LISTING /tmp/cc4RI4t5.s 			page 189


 734:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 739:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(0);
 743:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 744:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 747:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__str.size())
 751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    size_type __capacity;
 761:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 763:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 765:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __data = _M_data();
 767:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 769:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__data)
 777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 778:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_data(__data);
 779:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    else
 782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  assign(__str);
 786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str.clear();
 787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 788:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 789:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 790:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/cc4RI4t5.s 			page 190


 791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 794:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 795:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 799:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 800:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 802:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 806:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 807:/usr/include/c++/9.2.0/bits/basic_string.h ****      template<typename _Tp>
 808:/usr/include/c++/9.2.0/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/usr/include/c++/9.2.0/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/usr/include/c++/9.2.0/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 812:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
 815:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 816:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 819:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 820:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
 821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.
 824:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 826:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 829:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 832:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 833:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 834:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 837:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 840:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 841:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 842:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 845:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
GAS LISTING /tmp/cc4RI4t5.s 			page 191


 848:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 849:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 850:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 853:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.
 857:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 858:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 859:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 862:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 866:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 867:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 868:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.
 875:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 876:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 877:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 884:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 885:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 886:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 889:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 893:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 894:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 895:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
 896:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 898:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 901:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 902:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 903:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
 904:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
GAS LISTING /tmp/cc4RI4t5.s 			page 192


 905:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 906:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 910:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 911:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 912:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
 913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 919:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 920:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 921:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
 922:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 924:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 925:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 926:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
 927:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 929:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 931:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 932:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 933:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 935:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 936:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 938:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 939:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 941:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 954:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 955:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 957:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
GAS LISTING /tmp/cc4RI4t5.s 			page 193


 962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
 966:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 967:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 968:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
 969:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 971:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 974:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 976:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
 977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
 978:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
 980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
 981:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
 982:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
 983:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 984:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 985:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 986:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 987:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 988:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 989:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 992:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 993:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 998:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 999:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
1002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
1015:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1016:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1017:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 194


1019:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1022:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1023:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
1025:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1026:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1030:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
1033:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1034:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
1035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1045:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1061:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1062:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1063:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
1064:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1065:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
1067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
GAS LISTING /tmp/cc4RI4t5.s 			page 195


1076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1083:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1084:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
1085:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
1087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1092:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1093:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1094:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1095:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1100:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1104:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1105:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
1106:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1107:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
1108:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1113:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1114:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1115:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1117:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1119:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1120:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1121:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() noexcept
1122:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1123:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1125:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1126:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1127:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1128:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1130:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1131:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1132:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
GAS LISTING /tmp/cc4RI4t5.s 			page 196


1133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1136:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1141:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1142:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1143:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() noexcept
1144:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1145:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1149:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
1152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1153:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1154:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
1155:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1159:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1161:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
1162:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1167:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
1170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1171:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1176:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
1178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
1179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1180:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
1182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1185:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1186:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
1189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
GAS LISTING /tmp/cc4RI4t5.s 			page 197


1190:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1194:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1198:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1199:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1202:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1203:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1209:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1214:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1215:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1220:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str)
1222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1224:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1232:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1237:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1238:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1243:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1244:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
GAS LISTING /tmp/cc4RI4t5.s 			page 198


1247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1249:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1250:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1251:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
1255:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1257:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1258:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
1264:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
1269:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1270:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1271:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1279:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1280:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1283:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1289:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1290:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1302:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
GAS LISTING /tmp/cc4RI4t5.s 			page 199


1304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1306:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1308:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1309:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1312:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1318:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1319:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1322:/usr/include/c++/9.2.0/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
1325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1326:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1333:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1334:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1337:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1342:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1343:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1344:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1348:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1349:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
1350:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
GAS LISTING /tmp/cc4RI4t5.s 			page 200


1361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1363:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1364:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1368:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1369:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1370:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1372:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1379:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1387:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1388:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1389:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1402:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1403:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1408:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/cc4RI4t5.s 			page 201


1418:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1419:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1421:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1424:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1425:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
1433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1442:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1451:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1452:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1463:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1467:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1469:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1470:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1473:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/cc4RI4t5.s 			page 202


1475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1479:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1483:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1484:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1490:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1494:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1497:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1498:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1505:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1509:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1515:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1517:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1519:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
GAS LISTING /tmp/cc4RI4t5.s 			page 203


1532:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1533:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1534:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1536:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1541:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1542:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1555:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1556:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1559:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1560:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1575:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/c++/9.2.0/bits/basic_string.h **** 	iterator
1578:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1580:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1585:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1586:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
GAS LISTING /tmp/cc4RI4t5.s 			page 204


1589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
1600:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1603:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1604:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1611:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1612:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1615:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/c++/9.2.0/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1618:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1620:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1623:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1625:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1626:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1638:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1639:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
GAS LISTING /tmp/cc4RI4t5.s 			page 205


1646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1661:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1662:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1684:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1688:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 206


1703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1704:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1706:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1710:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1711:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1727:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1732:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1745:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1746:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1753:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1754:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/cc4RI4t5.s 			page 207


1760:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1761:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1768:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1769:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
1775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1778:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1789:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1790:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1791:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1805:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1806:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1807:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1809:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == npos)
1811:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__n != 0)
1813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1815:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1816:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 208


1817:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1826:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1828:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < end());
1830:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1834:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1835:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1844:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1845:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1847:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __last <= end());
1849:/usr/include/c++/9.2.0/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__last == end())
1851:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
1853:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1856:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1857:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
1862:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1863:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1864:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() noexcept
1865:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1866:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1869:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
GAS LISTING /tmp/cc4RI4t5.s 			page 209


1874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
1887:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1888:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1889:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
1902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1910:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1911:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1917:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
GAS LISTING /tmp/cc4RI4t5.s 			page 210


1931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1934:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1935:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1936:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2)
1938:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1939:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1960:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1961:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1963:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1983:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
GAS LISTING /tmp/cc4RI4t5.s 			page 211


1988:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1989:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2002:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2003:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string& __str)
2005:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2007:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2016:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2021:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2022:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2026:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2028:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2030:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2031:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2044:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/cc4RI4t5.s 			page 212


2045:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2050:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2051:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2052:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2065:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2066:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __c)
2068:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2073:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2074:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2088:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2089:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
2091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2093:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2096:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   std::__false_type());
2101:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
GAS LISTING /tmp/cc4RI4t5.s 			page 213


2102:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2103:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2104:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/usr/include/c++/9.2.0/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2107:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2108:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2109:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2114:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2118:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2119:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2120:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2123:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2126:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2132:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2133:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2134:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2137:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2144:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2145:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2148:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2155:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2156:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/cc4RI4t5.s 			page 214


2159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2161:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2166:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2175:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2180:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2181:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
2185:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2186:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2188:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2194:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2201:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2202:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2211:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/cc4RI4t5.s 			page 215


2216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
2219:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2223:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2224:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
2227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
2229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2232:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2233:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2236:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2239:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2241:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
2242:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
2243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2244:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2248:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2249:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2250:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __false_type);
2253:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2255:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
2257:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2258:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2259:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const size_type __len2);
2261:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2263:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2265:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
2266:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2267:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
GAS LISTING /tmp/cc4RI4t5.s 			page 216


2273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2279:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2280:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
2288:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2289:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
2290:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2292:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
2293:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2294:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
2298:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2299:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2300:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2302:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2303:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2304:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2306:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2311:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2314:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2315:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2319:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
2323:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
2324:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2325:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2327:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 217


2330:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
2331:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2334:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2345:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2346:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2347:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2350:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2351:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
2359:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2360:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2361:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2365:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2367:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2372:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2373:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2377:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2380:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2382:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2383:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
GAS LISTING /tmp/cc4RI4t5.s 			page 218


2387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2392:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2393:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2395:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2398:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2399:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2409:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2410:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2412:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2422:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2423:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2427:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2434:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2439:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2442:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 219


2444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2451:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2455:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2456:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2457:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2460:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2466:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2470:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2471:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2473:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2476:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2477:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2483:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2487:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2488:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2490:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2500:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 220


2501:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2502:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2506:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2514:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2522:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2523:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2524:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2535:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2536:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2537:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2540:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2550:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2551:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2554:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2557:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 221


2558:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2570:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2571:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2584:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2585:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2586:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2590:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2606:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2607:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2608:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 222


2615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2619:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2620:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2621:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2624:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2634:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2635:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2638:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2642:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2654:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2655:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2658:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2668:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2669:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
GAS LISTING /tmp/cc4RI4t5.s 			page 223


2672:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2673:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2681:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2682:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2686:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2689:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2703:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2704:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2717:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2718:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2724:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2725:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
GAS LISTING /tmp/cc4RI4t5.s 			page 224


2729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2735:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2736:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2750:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2751:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2755:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2763:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2768:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2771:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2773:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2784:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2785:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/cc4RI4t5.s 			page 225


2786:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2798:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2799:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2800:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2803:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2806:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2807:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2817:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2818:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
2826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2833:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
2834:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
2836:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2838:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 226


2843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2852:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2853:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2855:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2859:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
2861:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
2863:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2864:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2865:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2871:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2872:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2876:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2881:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
2883:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
2885:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2886:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2887:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2895:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2896:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/cc4RI4t5.s 			page 227


2900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2904:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2914:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2915:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2924:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2925:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2926:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
2941:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2945:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2946:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2948:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 228


2957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
2967:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2971:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2972:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2975:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
2988:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2989:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2990:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2992:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3012:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3013:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
GAS LISTING /tmp/cc4RI4t5.s 			page 229


3014:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3016:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
3039:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3040:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3041:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
3043:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3044:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3046:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3049:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3050:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3053:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3054:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3057:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3058:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3061:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3062:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3065:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3066:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
3069:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3070:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
GAS LISTING /tmp/cc4RI4t5.s 			page 230


3071:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/usr/include/c++/9.2.0/bits/basic_string.h ****     };
3073:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/usr/include/c++/9.2.0/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/usr/include/c++/9.2.0/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3077:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
3078:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3081:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
3082:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
3083:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3084:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3089:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3095:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @doctodo
3096:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3097:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3098:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3101:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  A string looks like this:
3102:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3103:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @code
3104:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        [_Rep]
3105:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        _M_length
3106:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @endcode
3110:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3111:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  pointer to the header.
3114:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3115:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  object at the front.
3122:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3123:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string length.)
GAS LISTING /tmp/cc4RI4t5.s 			page 231


3128:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3129:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/usr/include/c++/9.2.0/bits/basic_string.h ****   */
3138:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
3141:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
3142:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3144:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
3145:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3146:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3155:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3158:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/usr/include/c++/9.2.0/bits/basic_string.h ****                                                             const_iterator;
3163:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3166:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
3167:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3170:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3171:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _Rep: string representation
3172:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   Invariants:
3173:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/usr/include/c++/9.2.0/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/usr/include/c++/9.2.0/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 232


3185:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep_base
3186:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3187:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_length;
3188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3192:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3194:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Types:
3195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// (Public) Data members:
3198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// look like this:
3206:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Solving for m:
3208:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/usr/include/c++/9.2.0/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/usr/include/c++/9.2.0/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3217:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _Rep&
3218:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/usr/include/c++/9.2.0/bits/basic_string.h ****         { 
3220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3226:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3227:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3228:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3230:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/usr/include/c++/9.2.0/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/usr/include/c++/9.2.0/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3237:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3239:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3241:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
GAS LISTING /tmp/cc4RI4t5.s 			page 233


3242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3244:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/usr/include/c++/9.2.0/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/usr/include/c++/9.2.0/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_dispose.
3250:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3252:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3254:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3255:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3256:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3257:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3260:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3261:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3267:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3270:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3271:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3278:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3279:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3280:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refdata() throw()
3281:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3283:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3284:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3286:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/usr/include/c++/9.2.0/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3289:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Create & Destroy
3291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static _Rep*
3292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3294:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3295:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3297:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
GAS LISTING /tmp/cc4RI4t5.s 			page 234


3299:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/usr/include/c++/9.2.0/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   all the previous decrements.
3308:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/usr/include/c++/9.2.0/bits/basic_string.h **** 							 -1) <= 0)
3313:/usr/include/c++/9.2.0/bits/basic_string.h **** 		{
3314:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/usr/include/c++/9.2.0/bits/basic_string.h **** 		}
3317:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3318:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3319:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3320:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3326:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3329:/usr/include/c++/9.2.0/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_refdata();
3331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3332:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3333:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3334:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3336:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3337:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3343:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3345:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3346:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3347:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (public):
3348:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/usr/include/c++/9.2.0/bits/basic_string.h ****       // size that the allocator can hold.
3350:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3353:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3354:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (private):
3355:/usr/include/c++/9.2.0/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
GAS LISTING /tmp/cc4RI4t5.s 			page 235


3356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3357:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3358:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3361:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3365:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Rep*
3366:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3369:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/usr/include/c++/9.2.0/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3372:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3375:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3376:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3379:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3380:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_leak_hard();
3384:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3386:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3389:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
3390:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
3394:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3395:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3396:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3402:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3403:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3405:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3410:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3411:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
GAS LISTING /tmp/cc4RI4t5.s 			page 236


3413:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3415:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3418:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3422:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3424:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3425:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3427:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3429:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3430:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3431:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3433:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3439:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3440:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3442:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3443:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3445:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3447:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3448:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
3451:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
3452:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3454:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3457:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3458:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3459:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3462:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3463:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3467:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3468:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
GAS LISTING /tmp/cc4RI4t5.s 			page 237


3470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3471:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3472:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3476:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
3477:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3486:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
3487:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3488:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3489:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3490:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3492:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3493:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak_hard();
3494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3495:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _Rep&
3496:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3499:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3503:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
3509:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3510:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
3512:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
3514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3515:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
3519:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
3520:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3524:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3525:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
GAS LISTING /tmp/cc4RI4t5.s 			page 238


3527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
3528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3531:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3536:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3541:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3544:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
3545:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3549:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3551:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3552:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3553:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3554:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3556:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3557:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3559:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3564:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3566:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3574:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3577:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
GAS LISTING /tmp/cc4RI4t5.s 			page 239


3584:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n);
3585:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3592:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3595:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3601:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
3603:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3604:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3611:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3620:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3628:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3632:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3634:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3637:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3639:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3640:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 240


3641:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3646:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3648:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3651:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3652:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3657:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3660:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3662:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3664:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3666:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3674:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
3675:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3678:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3686:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3696:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
GAS LISTING /tmp/cc4RI4t5.s 			page 241


3698:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3701:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3705:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3708:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3712:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3713:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str); }
3715:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3716:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3720:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3721:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
3723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
3734:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3736:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3737:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3738:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3746:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3747:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// NB: DR 1204.
3751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
3752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3753:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 242


3755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3759:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3760:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3764:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3765:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3766:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3767:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3769:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3772:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
3773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3777:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
3780:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3781:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3785:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
3786:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3790:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3791:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3793:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data());
3795:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3796:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3797:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3800:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3801:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3802:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3805:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3809:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3810:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/cc4RI4t5.s 			page 243


3812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3815:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3816:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3817:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3819:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3820:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3821:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3829:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3830:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3833:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3837:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3838:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3839:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3842:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3847:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3848:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3851:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3855:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3856:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3857:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3860:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3864:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3865:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3866:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
3867:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 244


3869:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3872:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3873:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3874:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
3875:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3877:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3881:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3882:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3883:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
3884:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3886:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3890:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3891:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3892:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
3893:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3895:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3896:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3897:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
3898:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3900:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3901:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3904:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3906:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3907:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3910:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3912:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3925:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
GAS LISTING /tmp/cc4RI4t5.s 			page 245


3926:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3928:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
3937:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3938:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3939:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
3940:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3945:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3947:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
3948:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
3949:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3950:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
3951:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
3952:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
3953:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
3954:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3955:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3956:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3957:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3959:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3963:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3964:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
3970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
3977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
GAS LISTING /tmp/cc4RI4t5.s 			page 246


3983:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3984:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3985:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3987:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3988:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3990:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3992:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3994:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3999:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
4000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4002:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
4003:/usr/include/c++/9.2.0/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4005:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear()
4006:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4008:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4009:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4013:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
4016:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4017:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
4018:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
4027:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4028:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4029:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4031:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4034:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 247


4040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4045:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
4047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4048:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
4050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4054:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4057:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4067:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4068:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
4069:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
4071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4075:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4076:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4077:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4078:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  unsharing the string.
4088:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4089:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4090:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
4091:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
4093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
GAS LISTING /tmp/cc4RI4t5.s 			page 248


4097:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4099:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4100:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4101:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4103:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4105:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4106:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4107:/usr/include/c++/9.2.0/bits/basic_string.h ****       front()
4108:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4109:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4111:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4113:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4114:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4116:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4117:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4118:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
4119:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4122:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4123:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4124:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4125:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4127:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4128:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4129:/usr/include/c++/9.2.0/bits/basic_string.h ****       back()
4130:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4131:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4135:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4136:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
4138:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4139:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4140:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
4141:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4145:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4146:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4147:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
4148:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4149:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4153:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/cc4RI4t5.s 			page 249


4154:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
4156:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4157:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4158:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4162:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4163:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
4165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4166:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
4168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4171:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4172:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
4175:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4176:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4177:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4178:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4184:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4185:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4189:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4195:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4200:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4201:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4206:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4207:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str);
4208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4209:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4210:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
GAS LISTING /tmp/cc4RI4t5.s 			page 250


4211:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4222:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4223:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4231:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4232:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4234:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4239:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4240:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
4241:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4245:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4246:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4255:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4257:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4263:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4264:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4267:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 251


4268:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4276:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4277:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4278:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4281:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4287:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4295:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *               from.
4299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4304:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return append(__sv.data()
4309:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4312:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4313:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4314:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4318:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4319:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
4320:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->reserve(__len);
4324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
GAS LISTING /tmp/cc4RI4t5.s 			page 252


4325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4327:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4328:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4333:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4334:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4336:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4345:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4346:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
4350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4351:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4352:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4354:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4367:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4368:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4373:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4379:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
GAS LISTING /tmp/cc4RI4t5.s 			page 253


4382:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4383:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4384:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4386:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
4394:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4395:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4398:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4401:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4402:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
4410:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4411:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4412:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4415:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4423:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4424:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4425:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4428:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 254


4439:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4445:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4446:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4449:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4453:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4460:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4461:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4469:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4471:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4483:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4484:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4485:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
4493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
GAS LISTING /tmp/cc4RI4t5.s 			page 255


4496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4500:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4501:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
4502:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4505:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4512:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4513:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4518:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4519:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4520:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4531:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4533:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4536:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4537:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
GAS LISTING /tmp/cc4RI4t5.s 			page 256


4553:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4554:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4555:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4577:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4578:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4580:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4594:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4595:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4596:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4601:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4602:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4603:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
GAS LISTING /tmp/cc4RI4t5.s 			page 257


4610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4617:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4619:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4623:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4635:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4636:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4637:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4646:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4653:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4654:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4657:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4660:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4661:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
GAS LISTING /tmp/cc4RI4t5.s 			page 258


4667:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4670:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4671:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4675:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4680:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4682:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4697:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4698:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4700:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4703:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4704:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4705:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4713:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4714:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __position)
4715:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 259


4724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4733:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4734:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/usr/include/c++/9.2.0/bits/basic_string.h ****  
4736:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
4741:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4742:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4743:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/usr/include/c++/9.2.0/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4748:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4749:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4750:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4751:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
4766:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4767:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4768:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4771:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
GAS LISTING /tmp/cc4RI4t5.s 			page 260


4781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4789:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4790:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4796:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4813:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4814:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4815:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2);
4817:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4818:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4833:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4834:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4835:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4837:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
GAS LISTING /tmp/cc4RI4t5.s 			page 261


4838:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4840:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4841:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4857:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4858:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4859:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4863:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4876:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4877:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4894:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 262


4895:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4902:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4903:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4916:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4917:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4922:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4923:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4937:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4944:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4945:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/cc4RI4t5.s 			page 263


4952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4960:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4961:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4962:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
4965:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4971:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4972:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4975:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4983:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4994:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4995:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4996:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5004:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5005:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5006:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/cc4RI4t5.s 			page 264


5009:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5016:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
5030:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5031:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
5035:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5036:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5044:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5045:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5061:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5062:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/cc4RI4t5.s 			page 265


5066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
5069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
5077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
5079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5082:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5083:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5089:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5090:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5091:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
5092:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5094:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5098:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
5099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5100:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5103:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5104:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
5106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5107:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5108:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      size_type __n2);
5110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5111:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5114:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5115:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5118:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/usr/include/c++/9.2.0/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5121:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5122:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
GAS LISTING /tmp/cc4RI4t5.s 			page 266


5123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5125:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5126:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/usr/include/c++/9.2.0/bits/basic_string.h **** 				    __end, __a); }
5130:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5131:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5132:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5135:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5136:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5137:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
5142:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5143:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5145:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5146:/usr/include/c++/9.2.0/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      input_iterator_tag);
5148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _FwdIterator>
5152:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5153:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5156:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5157:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5159:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
5160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5161:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5162:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5173:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5174:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5176:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 267


5180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
5182:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5183:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
5184:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s)
5185:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5187:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
5188:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
5193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5194:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5195:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5197:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5198:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5199:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5201:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5206:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5207:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5210:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5217:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
5218:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
5219:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
5221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data();
5222:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5223:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
5224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5228:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
5229:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
5231:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5232:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
GAS LISTING /tmp/cc4RI4t5.s 			page 268


5237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5239:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5243:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5244:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5245:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5248:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5254:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
5257:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5258:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5259:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5263:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5264:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5273:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5274:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5279:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5280:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5281:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5290:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5291:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5293:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
GAS LISTING /tmp/cc4RI4t5.s 			page 269


5294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5300:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5308:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5309:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5310:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5311:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5320:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5321:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5325:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5326:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5332:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5336:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5337:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5338:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5341:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5347:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 270


5351:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5352:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5368:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5369:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5371:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5378:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5386:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5387:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5388:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5398:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5399:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5400:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5404:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
GAS LISTING /tmp/cc4RI4t5.s 			page 271


5408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5415:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5416:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5417:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5420:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5430:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5431:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5437:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5438:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5439:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5450:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5451:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5454:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5462:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
GAS LISTING /tmp/cc4RI4t5.s 			page 272


5465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5470:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5471:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5472:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5482:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5483:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5484:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5500:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5501:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5504:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5514:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5515:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 273


5522:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5534:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5535:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5538:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5546:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5547:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5551:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5554:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5556:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5557:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5566:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5567:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5571:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
GAS LISTING /tmp/cc4RI4t5.s 			page 274


5579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5583:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5584:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5587:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5597:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5598:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5604:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5615:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5616:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5621:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5627:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5632:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5635:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
GAS LISTING /tmp/cc4RI4t5.s 			page 275


5636:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5637:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5638:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5647:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5648:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5649:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5653:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5664:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5665:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5666:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5678:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5679:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5680:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5686:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5687:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/cc4RI4t5.s 			page 276


5693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5697:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5698:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5701:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5709:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5710:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5714:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5717:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5718:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5719:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
5724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
5732:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
5734:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5736:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/cc4RI4t5.s 			page 277


5750:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5751:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
5759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
5761:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5762:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5763:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5769:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
5781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
5783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5785:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
5791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5793:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5802:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
GAS LISTING /tmp/cc4RI4t5.s 			page 278


5807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                 against.
5808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5812:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5818:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5822:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
5839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5843:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5844:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5846:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
GAS LISTING /tmp/cc4RI4t5.s 			page 279


5864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
5865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5869:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5870:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5873:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
5886:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5887:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5888:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5890:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5910:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5911:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5912:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5914:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5915:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
GAS LISTING /tmp/cc4RI4t5.s 			page 280


5921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
5937:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5938:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5939:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
5941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5944:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5947:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5948:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5951:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5952:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5955:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5956:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5959:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5960:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5963:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5964:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
5967:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5968:/usr/include/c++/9.2.0/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5970:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    void* exc);
5972:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend const char*
5973:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5975:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5977:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
GAS LISTING /tmp/cc4RI4t5.s 			page 281


5978:/usr/include/c++/9.2.0/bits/basic_string.h **** # endif
5979:/usr/include/c++/9.2.0/bits/basic_string.h ****   };
5980:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5982:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5992:/usr/include/c++/9.2.0/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6000:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6010:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6011:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator+
6012:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6013:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6018:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6023:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6025:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6026:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6027:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6028:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6029:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6034:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
GAS LISTING /tmp/cc4RI4t5.s 			page 282


6035:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6039:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6040:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6045:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6049:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6050:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6055:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6060:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6062:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6063:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6065:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6066:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6071:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6075:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/usr/include/c++/9.2.0/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6080:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6081:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6082:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6089:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
GAS LISTING /tmp/cc4RI4t5.s 			page 283


6092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6095:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6100:/usr/include/c++/9.2.0/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/usr/include/c++/9.2.0/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/usr/include/c++/9.2.0/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/usr/include/c++/9.2.0/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6107:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6113:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6119:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6125:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __rhs)
6129:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6131:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6132:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator ==
6133:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6141:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6146:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT>
6147:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline
6148:/usr/include/c++/9.2.0/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
GAS LISTING /tmp/cc4RI4t5.s 			page 284


6149:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/usr/include/c++/9.2.0/bits/basic_string.h **** 						    __lhs.size())); }
6154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6155:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6156:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6159:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6161:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6163:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6167:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6168:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6170:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6173:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6175:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6176:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6178:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6179:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator !=
6180:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6181:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6186:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6188:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6193:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6194:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6197:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6198:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6199:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6201:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6205:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
GAS LISTING /tmp/cc4RI4t5.s 			page 285


6206:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6208:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6211:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6213:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6217:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <
6218:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6219:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6224:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6231:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6232:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6234:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6237:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6239:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6243:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6244:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6247:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6249:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6251:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6255:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >
6256:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6257:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6262:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
GAS LISTING /tmp/cc4RI4t5.s 			page 286


6263:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6264:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6267:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6269:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6270:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6272:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6275:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6277:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6281:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6282:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6283:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6287:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6293:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <=
6294:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6295:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6300:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6302:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6307:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6308:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6310:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6312:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6313:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6315:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6319:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
GAS LISTING /tmp/cc4RI4t5.s 			page 287


6320:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6322:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6323:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6324:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6325:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6327:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6331:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >=
6332:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6333:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6338:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6340:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6345:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6346:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6348:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6351:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6353:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6357:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6358:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6361:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6363:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6365:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6369:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6370:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6374:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6376:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
GAS LISTING /tmp/cc4RI4t5.s 			page 288


6377:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline void
6378:/usr/include/c++/9.2.0/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6381:/usr/include/c++/9.2.0/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6383:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6384:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6385:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6390:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6396:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6397:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6401:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6402:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6403:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6405:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6406:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6411:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  writing a C string.
6413:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6414:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6423:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6424:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6425:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6426:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6431:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
GAS LISTING /tmp/cc4RI4t5.s 			page 289


6434:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6436:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6437:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6438:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6442:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6443:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6448:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6453:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6454:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6460:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6468:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6476:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6477:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6478:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    char __delim);
6480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6481:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6483:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    wchar_t __delim);
6486:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  
6487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6488:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/usr/include/c++/9.2.0/bits/basic_string.h **** } // namespace
6490:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/cc4RI4t5.s 			page 290


6491:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6493:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6495:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/usr/include/c++/9.2.0/bits/basic_string.h **** {
6497:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6500:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int
6503:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6506:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6507:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long
6508:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6511:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6512:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6513:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6517:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6518:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6522:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6523:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6526:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6527:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6529:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6532:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6533:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6536:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6537:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6541:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6544:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6545:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(int __val)
6547:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
GAS LISTING /tmp/cc4RI4t5.s 			page 291


6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
6549:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6550:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6551:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned __val)
6552:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6553:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%u", __val); }
6555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6556:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6557:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long __val)
6558:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
6559:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%ld", __val); }
6560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6561:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long __val)
6563:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6564:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lu", __val); }
6566:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6567:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6568:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long long __val)
6569:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6570:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(long long),
6571:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lld", __val); }
6572:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6573:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6574:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long long __val)
6575:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6576:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long long),
6577:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%llu", __val); }
6578:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6579:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(float __val)
6581:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6583:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6584:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6585:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
6586:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6587:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6588:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6589:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(double __val)
6590:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6591:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6592:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6593:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6594:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
6595:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6596:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6597:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6598:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long double __val)
6599:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6600:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6601:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6602:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6603:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%Lf", __val);
6604:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
GAS LISTING /tmp/cc4RI4t5.s 			page 292


6605:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDIO
6606:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6607:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR
6608:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int 
6609:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)
6610:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::wcstol, "stoi", __str.c_str(),
6611:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6613:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long 
6614:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const wstring& __str, size_t* __idx = 0, int __base = 10)
6615:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(),
6616:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6617:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6618:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6619:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)
6620:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(),
6621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6623:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6624:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)
6625:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
6626:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6627:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6628:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6629:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)
6630:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
6631:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6632:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6633:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: wcstof vs wcstod.
6634:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6635:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const wstring& __str, size_t* __idx = 0)
6636:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
6637:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6638:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6639:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const wstring& __str, size_t* __idx = 0)
6640:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
6641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6642:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6643:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const wstring& __str, size_t* __idx = 0)
6644:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
6645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6646:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6647:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6648:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6649:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(int __val)
6650:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
6651:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%d", __val); }
6652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6653:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6654:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned __val)
6655:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6656:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned),
6657:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%u", __val); }
6658:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6659:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6660:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(long __val)
6661:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
GAS LISTING /tmp/cc4RI4t5.s 			page 293


6662:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%ld", __val); }
6663:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6664:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6665:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned long __val)
 4201              		.loc 10 6665 3 is_stmt 1 view .LVU1136
 4202              	.LBB1068:
6666:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
 4203              		.loc 10 6666 5 view .LVU1137
6667:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long),
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%lu", __val); }
 4204              		.loc 10 6668 23 is_stmt 0 view .LVU1138
 4205 1079 488D5C24 		leaq	16(%rsp), %rbx
 4205      10
 4206 107e 4989E8   		movq	%rbp, %r8
 4207 1081 488D0D00 		leaq	.LC40(%rip), %rcx
 4207      000000
 4208 1088 BA200000 		movl	$32, %edx
 4208      00
 4209 108d 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 4209      000000
 4210 1094 4889DF   		movq	%rbx, %rdi
 4211 1097 B8000000 		movl	$0, %eax
 4211      00
 4212 109c E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 4212      00
 4213              	.LVL367:
 4214              	.LEHE9:
 4215              		.loc 10 6668 23 view .LVU1139
 4216              	.LBE1068:
 4217              	.LBE1067:
 378:Src/main.cpp  **** 		}
 4218              		.loc 1 378 12 view .LVU1140
 4219 10a1 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 4219      2408
 4220 10a7 F30F2C54 		cvttss2sil	12(%rsp), %edx
 4220      240C
 4221 10ad BE0C0000 		movl	$12, %esi
 4221      00
 4222 10b2 4889DF   		movq	%rbx, %rdi
 4223              	.LEHB10:
 4224 10b5 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 4224      00
 4225              	.LVL368:
 4226              	.LEHE10:
 4227 10ba E939FFFF 		jmp	.L207
 4227      FF
 4228              	.L203:
 4229              	.LBE1051:
 4230              	.LBB1084:
 380:Src/main.cpp  **** 		{
 4231              		.loc 1 380 14 view .LVU1141
 4232 10bf BB000000 		movl	$0, %ebx
 4232      00
 4233              	.L196:
 4234              	.LVL369:
 380:Src/main.cpp  **** 		{
 4235              		.loc 1 380 23 is_stmt 1 discriminator 3 view .LVU1142
GAS LISTING /tmp/cc4RI4t5.s 			page 294


 4236 10c4 48391D00 		cmpq	%rbx, graphSize(%rip)
 4236      000000
 4237 10cb 7623     		jbe	.L199
 382:Src/main.cpp  **** 			drawEdges(graph[i]);
 4238              		.loc 1 382 4 discriminator 2 view .LVU1143
 382:Src/main.cpp  **** 			drawEdges(graph[i]);
 4239              		.loc 1 382 15 is_stmt 0 discriminator 2 view .LVU1144
 4240 10cd F30F1005 		movss	.LC16(%rip), %xmm0
 4240      00000000 
 4241              	.LEHB11:
 4242 10d5 E8000000 		call	glLineWidth@PLT
 4242      00
 4243              	.LVL370:
 383:Src/main.cpp  **** 		}
 4244              		.loc 1 383 4 is_stmt 1 discriminator 2 view .LVU1145
 383:Src/main.cpp  **** 		}
 4245              		.loc 1 383 13 is_stmt 0 discriminator 2 view .LVU1146
 4246 10da 488B0500 		movq	graph(%rip), %rax
 4246      000000
 4247 10e1 488B3CD8 		movq	(%rax,%rbx,8), %rdi
 4248 10e5 E8000000 		call	_Z9drawEdgesP10graphPoint
 4248      00
 4249              	.LVL371:
 380:Src/main.cpp  **** 		{
 4250              		.loc 1 380 3 is_stmt 1 discriminator 2 view .LVU1147
 4251 10ea 4883C301 		addq	$1, %rbx
 4252              	.LVL372:
 380:Src/main.cpp  **** 		{
 4253              		.loc 1 380 3 is_stmt 0 discriminator 2 view .LVU1148
 4254 10ee EBD4     		jmp	.L196
 4255              	.L199:
 380:Src/main.cpp  **** 		{
 4256              		.loc 1 380 3 discriminator 2 view .LVU1149
 4257              	.LBE1084:
 386:Src/main.cpp  **** 		glSetColor(0x00FF99);
 4258              		.loc 1 386 3 is_stmt 1 view .LVU1150
 386:Src/main.cpp  **** 		glSetColor(0x00FF99);
 4259              		.loc 1 386 14 is_stmt 0 view .LVU1151
 4260 10f0 F30F1005 		movss	.LC41(%rip), %xmm0
 4260      00000000 
 4261 10f8 E8000000 		call	glLineWidth@PLT
 4261      00
 4262              	.LVL373:
 387:Src/main.cpp  **** 		drawWay(home, target);
 4263              		.loc 1 387 3 is_stmt 1 view .LVU1152
 387:Src/main.cpp  **** 		drawWay(home, target);
 4264              		.loc 1 387 13 is_stmt 0 view .LVU1153
 4265 10fd BF99FF00 		movl	$65433, %edi
 4265      00
 4266 1102 E8000000 		call	_Z10glSetColorj@PLT
 4266      00
 4267              	.LVL374:
 388:Src/main.cpp  **** 
 4268              		.loc 1 388 3 is_stmt 1 view .LVU1154
 388:Src/main.cpp  **** 
 4269              		.loc 1 388 10 is_stmt 0 view .LVU1155
 4270 1107 488B3500 		movq	target(%rip), %rsi
GAS LISTING /tmp/cc4RI4t5.s 			page 295


 4270      000000
 4271 110e 488B3D00 		movq	home(%rip), %rdi
 4271      000000
 4272 1115 E8000000 		call	_Z7drawWaymm
 4272      00
 4273              	.LVL375:
 390:Src/main.cpp  **** }
 4274              		.loc 1 390 5 is_stmt 1 view .LVU1156
 390:Src/main.cpp  **** }
 4275              		.loc 1 390 20 is_stmt 0 view .LVU1157
 4276 111a E8000000 		call	glutSwapBuffers@PLT
 4276      00
 4277              	.LVL376:
 391:Src/main.cpp  **** 
 4278              		.loc 1 391 1 view .LVU1158
 4279 111f 488B4424 		movq	56(%rsp), %rax
 4279      38
 4280 1124 64483304 		xorq	%fs:40, %rax
 4280      25280000 
 4280      00
 4281 112d 7526     		jne	.L208
 4282 112f 4883C448 		addq	$72, %rsp
 4283              		.cfi_remember_state
 4284              		.cfi_def_cfa_offset 24
 4285 1133 5B       		popq	%rbx
 4286              		.cfi_def_cfa_offset 16
 4287              	.LVL377:
 391:Src/main.cpp  **** 
 4288              		.loc 1 391 1 view .LVU1159
 4289 1134 5D       		popq	%rbp
 4290              		.cfi_def_cfa_offset 8
 4291              	.LVL378:
 391:Src/main.cpp  **** 
 4292              		.loc 1 391 1 view .LVU1160
 4293 1135 C3       		ret
 4294              	.LVL379:
 4295              	.L204:
 4296              		.cfi_restore_state
 391:Src/main.cpp  **** 
 4297              		.loc 1 391 1 view .LVU1161
 4298 1136 4889C3   		movq	%rax, %rbx
 4299              	.LVL380:
 4300              	.LBB1085:
 4301              	.LBB1069:
 4302              	.LBI1069:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4303              		.loc 10 657 7 is_stmt 1 view .LVU1162
 4304              	.LBB1070:
 4305              	.LBI1070:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4306              		.loc 10 229 7 view .LVU1163
 4307              	.LBB1071:
 4308              	.LBB1072:
 4309              	.LBI1072:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4310              		.loc 10 221 7 view .LVU1164
 4311              	.LBB1073:
GAS LISTING /tmp/cc4RI4t5.s 			page 296


 4312              	.LBI1073:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4313              		.loc 10 186 7 view .LVU1165
 4314              	.LBB1074:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4315              		.loc 10 187 28 is_stmt 0 view .LVU1166
 4316 1139 488B7C24 		movq	16(%rsp), %rdi
 4316      10
 4317              	.LVL381:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4318              		.loc 10 187 28 view .LVU1167
 4319              	.LBE1074:
 4320              	.LBE1073:
 4321              	.LBB1075:
 4322              	.LBI1075:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4323              		.loc 10 200 7 is_stmt 1 view .LVU1168
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4324              		.loc 10 200 7 is_stmt 0 view .LVU1169
 4325              	.LBE1075:
 4326              	.LBE1072:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4327              		.loc 10 231 2 view .LVU1170
 4328 113e 488D4424 		leaq	32(%rsp), %rax
 4328      20
 4329 1143 4839C7   		cmpq	%rax, %rdi
 4330 1146 7405     		je	.L201
 4331              	.LVL382:
 4332              	.LBB1076:
 4333              	.LBI1076:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4334              		.loc 10 236 7 is_stmt 1 view .LVU1171
 4335              	.LBB1077:
 4336              	.LBB1078:
 4337              	.LBI1078:
 4338              		.loc 13 469 7 view .LVU1172
 4339              	.LBB1079:
 4340              	.LBI1079:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4341              		.loc 12 119 7 view .LVU1173
 4342              	.LBB1080:
 4343              		.loc 12 128 19 is_stmt 0 view .LVU1174
 4344 1148 E8000000 		call	_ZdlPv@PLT
 4344      00
 4345              	.LVL383:
 4346              	.L201:
 4347              		.loc 12 128 19 view .LVU1175
 4348              	.LBE1080:
 4349              	.LBE1079:
 4350              	.LBE1078:
 4351              	.LBE1077:
 4352              	.LBE1076:
 4353              	.LBE1071:
 4354              	.LBE1070:
 4355              	.LBB1081:
 4356              	.LBI1081:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/cc4RI4t5.s 			page 297


 4357              		.loc 10 150 14 is_stmt 1 view .LVU1176
 4358              	.LBB1082:
 4359              	.LBI1082:
 4360              		.loc 11 153 7 view .LVU1177
 4361              	.LBB1083:
 4362              	.LBI1083:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4363              		.loc 12 89 7 view .LVU1178
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4364              		.loc 12 89 7 is_stmt 0 view .LVU1179
 4365 114d 4889DF   		movq	%rbx, %rdi
 4366 1150 E8000000 		call	_Unwind_Resume@PLT
 4366      00
 4367              	.LVL384:
 4368              	.LEHE11:
 4369              	.L208:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4370              		.loc 12 89 7 view .LVU1180
 4371              	.LBE1083:
 4372              	.LBE1082:
 4373              	.LBE1081:
 4374              	.LBE1069:
 4375              	.LBE1085:
 391:Src/main.cpp  **** 
 4376              		.loc 1 391 1 view .LVU1181
 4377 1155 E8000000 		call	__stack_chk_fail@PLT
 4377      00
 4378              	.LVL385:
 4379              		.cfi_endproc
 4380              	.LFE2496:
 4381              		.section	.gcc_except_table
 4382              	.LLSDA2496:
 4383 0034 FF       		.byte	0xff
 4384 0035 FF       		.byte	0xff
 4385 0036 01       		.byte	0x1
 4386 0037 11       		.uleb128 .LLSDACSE2496-.LLSDACSB2496
 4387              	.LLSDACSB2496:
 4388 0038 1B       		.uleb128 .LEHB9-.LFB2496
 4389 0039 B501     		.uleb128 .LEHE9-.LEHB9
 4390 003b 00       		.uleb128 0
 4391 003c 00       		.uleb128 0
 4392 003d E401     		.uleb128 .LEHB10-.LFB2496
 4393 003f 05       		.uleb128 .LEHE10-.LEHB10
 4394 0040 E502     		.uleb128 .L204-.LFB2496
 4395 0042 00       		.uleb128 0
 4396 0043 8402     		.uleb128 .LEHB11-.LFB2496
 4397 0045 8001     		.uleb128 .LEHE11-.LEHB11
 4398 0047 00       		.uleb128 0
 4399 0048 00       		.uleb128 0
 4400              	.LLSDACSE2496:
 4401              		.text
 4404              	_GLOBAL__sub_I_watchRadius:
 4405              	.LFB2870:
 4406              		.loc 1 531 1 is_stmt 1 view -0
 4407              		.cfi_startproc
 4408 115a 4883EC08 		subq	$8, %rsp
 4409              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/cc4RI4t5.s 			page 298


 4410              		.loc 1 531 1 is_stmt 0 view .LVU1183
 4411 115e BEFFFF00 		movl	$65535, %esi
 4411      00
 4412 1163 BF010000 		movl	$1, %edi
 4412      00
 4413 1168 E830EFFF 		call	_Z41__static_initialization_and_destruction_0ii
 4413      FF
 4414              	.LVL386:
 4415 116d 4883C408 		addq	$8, %rsp
 4416              		.cfi_def_cfa_offset 8
 4417 1171 C3       		ret
 4418              		.cfi_endproc
 4419              	.LFE2870:
 4421              		.section	.init_array,"aw"
 4422              		.align 8
 4423 0000 00000000 		.quad	_GLOBAL__sub_I_watchRadius
 4423      00000000 
 4424              		.globl	home
 4425              		.data
 4426              		.align 8
 4429              	home:
 4430 0000 01000000 		.quad	1
 4430      00000000 
 4431              		.globl	target
 4432              		.align 8
 4435              	target:
 4436 0008 01000000 		.quad	1
 4436      00000000 
 4437              		.globl	ways
 4438              		.bss
 4439              		.align 8
 4442              	ways:
 4443 0000 00000000 		.zero	8
 4443      00000000 
 4444              		.globl	graph
 4445              		.align 8
 4448              	graph:
 4449 0008 00000000 		.zero	8
 4449      00000000 
 4450              		.globl	endway
 4451              		.align 8
 4454              	endway:
 4455 0010 00000000 		.zero	8
 4455      00000000 
 4456              		.globl	startway
 4457              		.align 8
 4460              	startway:
 4461 0018 00000000 		.zero	8
 4461      00000000 
 4462              		.globl	obstacles
 4463              		.align 8
 4466              	obstacles:
 4467 0020 00000000 		.zero	8
 4467      00000000 
 4468              		.globl	calculatedPoints
 4469              		.align 8
 4472              	calculatedPoints:
GAS LISTING /tmp/cc4RI4t5.s 			page 299


 4473 0028 00000000 		.zero	8
 4473      00000000 
 4474              		.globl	graphSize
 4475              		.align 8
 4478              	graphSize:
 4479 0030 00000000 		.zero	8
 4479      00000000 
 4480              		.globl	numOfObstacles
 4481              		.align 8
 4484              	numOfObstacles:
 4485 0038 00000000 		.zero	8
 4485      00000000 
 4486              		.globl	terminated
 4489              	terminated:
 4490 0040 00       		.zero	1
 4491              		.globl	watchRadius
 4492              		.data
 4493              		.align 8
 4496              	watchRadius:
 4497 0010 D0070000 		.quad	2000
 4497      00000000 
 4498              		.local	_ZStL8__ioinit
 4499              		.comm	_ZStL8__ioinit,1,1
 4500              		.section	.rodata.cst8,"aM",@progbits,8
 4501              		.align 8
 4502              	.LC3:
 4503 0000 00000000 		.long	0
 4504 0004 00806640 		.long	1080459264
 4505              		.align 8
 4506              	.LC4:
 4507 0008 6E861BF0 		.long	4028335726
 4508 000c F9210940 		.long	1074340345
 4509              		.align 8
 4510              	.LC5:
 4511 0010 00000000 		.long	0
 4512 0014 0088D340 		.long	1087604736
 4513              		.section	.rodata.cst16,"aM",@progbits,16
 4514              		.align 16
 4515              	.LC6:
 4516 0000 FFFFFF7F 		.long	2147483647
 4517 0004 00000000 		.long	0
 4518 0008 00000000 		.long	0
 4519 000c 00000000 		.long	0
 4520              		.section	.rodata.cst4,"aM",@progbits,4
 4521              		.align 4
 4522              	.LC7:
 4523 0000 00003443 		.long	1127481344
 4524              		.align 4
 4525              	.LC8:
 4526 0004 00000000 		.long	0
 4527              		.section	.rodata.cst16
 4528              		.align 16
 4529              	.LC9:
 4530 0010 00000080 		.long	2147483648
 4531 0014 00000000 		.long	0
 4532 0018 00000000 		.long	0
 4533 001c 00000000 		.long	0
GAS LISTING /tmp/cc4RI4t5.s 			page 300


 4534              		.section	.rodata.cst4
 4535              		.align 4
 4536              	.LC10:
 4537 0008 0000B4C2 		.long	3266576384
 4538              		.align 4
 4539              	.LC11:
 4540 000c 0000B442 		.long	1119092736
 4541              		.align 4
 4542              	.LC12:
 4543 0010 00008C43 		.long	1133248512
 4544              		.align 4
 4545              	.LC13:
 4546 0014 0000E143 		.long	1138819072
 4547              		.section	.rodata.cst8
 4548              		.align 8
 4549              	.LC15:
 4550 0018 9A999999 		.long	2576980378
 4551 001c 9999D93F 		.long	1071225241
 4552              		.section	.rodata.cst4
 4553              		.align 4
 4554              	.LC16:
 4555 0018 0000803F 		.long	1065353216
 4556              		.align 4
 4557              	.LC17:
 4558 001c 00004843 		.long	1128792064
 4559              		.align 4
 4560              	.LC18:
 4561 0020 0000C842 		.long	1120403456
 4562              		.align 4
 4563              	.LC19:
 4564 0024 0000AF43 		.long	1135542272
 4565              		.align 4
 4566              	.LC20:
 4567 0028 0000DC42 		.long	1121714176
 4568              		.align 4
 4569              	.LC21:
 4570 002c 0000FF43 		.long	1140785152
 4571              		.align 4
 4572              	.LC25:
 4573 0030 00001643 		.long	1125515264
 4574              		.align 4
 4575              	.LC39:
 4576 0034 0000003F 		.long	1056964608
 4577              		.align 4
 4578              	.LC41:
 4579 0038 0000A040 		.long	1084227584
 4580              		.text
 4581              	.Letext0:
 4582              		.file 15 "/usr/include/c++/9.2.0/cwchar"
 4583              		.file 16 "/usr/include/c++/9.2.0/new"
 4584              		.file 17 "/usr/include/c++/9.2.0/bits/exception_ptr.h"
 4585              		.file 18 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/c++config.h"
 4586              		.file 19 "/usr/include/c++/9.2.0/type_traits"
 4587              		.file 20 "/usr/include/c++/9.2.0/bits/stl_pair.h"
 4588              		.file 21 "/usr/include/c++/9.2.0/bits/cpp_type_traits.h"
 4589              		.file 22 "/usr/include/c++/9.2.0/bits/stl_iterator_base_types.h"
 4590              		.file 23 "/usr/include/c++/9.2.0/debug/debug.h"
GAS LISTING /tmp/cc4RI4t5.s 			page 301


 4591              		.file 24 "/usr/include/c++/9.2.0/cstdint"
 4592              		.file 25 "/usr/include/c++/9.2.0/clocale"
 4593              		.file 26 "/usr/include/c++/9.2.0/cstdlib"
 4594              		.file 27 "/usr/include/c++/9.2.0/cstdio"
 4595              		.file 28 "/usr/include/c++/9.2.0/initializer_list"
 4596              		.file 29 "/usr/include/c++/9.2.0/bits/stringfwd.h"
 4597              		.file 30 "/usr/include/c++/9.2.0/system_error"
 4598              		.file 31 "/usr/include/c++/9.2.0/bits/ios_base.h"
 4599              		.file 32 "/usr/include/c++/9.2.0/cwctype"
 4600              		.file 33 "/usr/include/c++/9.2.0/bits/ostream.tcc"
 4601              		.file 34 "/usr/include/c++/9.2.0/iosfwd"
 4602              		.file 35 "/usr/include/c++/9.2.0/cmath"
 4603              		.file 36 "/usr/include/c++/9.2.0/bits/ptr_traits.h"
 4604              		.file 37 "/usr/include/c++/9.2.0/bits/move.h"
 4605              		.file 38 "/usr/include/c++/9.2.0/bits/functexcept.h"
 4606              		.file 39 "/usr/include/c++/9.2.0/bits/ostream_insert.h"
 4607              		.file 40 "/usr/include/c++/9.2.0/bits/predefined_ops.h"
 4608              		.file 41 "/usr/include/c++/9.2.0/ext/numeric_traits.h"
 4609              		.file 42 "/usr/include/c++/9.2.0/ext/alloc_traits.h"
 4610              		.file 43 "/usr/include/c++/9.2.0/bits/stl_iterator.h"
 4611              		.file 44 "/usr/include/c++/9.2.0/ext/type_traits.h"
 4612              		.file 45 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/stddef.h"
 4613              		.file 46 "<built-in>"
 4614              		.file 47 "/usr/include/bits/types/wint_t.h"
 4615              		.file 48 "/usr/include/bits/types/__mbstate_t.h"
 4616              		.file 49 "/usr/include/bits/types/mbstate_t.h"
 4617              		.file 50 "/usr/include/bits/types/__FILE.h"
 4618              		.file 51 "/usr/include/bits/types/struct_FILE.h"
 4619              		.file 52 "/usr/include/bits/types/FILE.h"
 4620              		.file 53 "/usr/include/wchar.h"
 4621              		.file 54 "/usr/include/bits/types/struct_tm.h"
 4622              		.file 55 "/usr/include/bits/types.h"
 4623              		.file 56 "/usr/include/bits/stdint-intn.h"
 4624              		.file 57 "/usr/include/bits/stdint-uintn.h"
 4625              		.file 58 "/usr/include/stdint.h"
 4626              		.file 59 "/usr/include/locale.h"
 4627              		.file 60 "/usr/include/time.h"
 4628              		.file 61 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 4629              		.file 62 "/usr/include/stdlib.h"
 4630              		.file 63 "/usr/include/bits/stdlib-float.h"
 4631              		.file 64 "/usr/include/bits/stdlib-bsearch.h"
 4632              		.file 65 "/usr/include/bits/types/__fpos_t.h"
 4633              		.file 66 "/usr/include/stdio.h"
 4634              		.file 67 "/usr/include/bits/sys_errlist.h"
 4635              		.file 68 "/usr/include/bits/stdio.h"
 4636              		.file 69 "/usr/include/errno.h"
 4637              		.file 70 "/usr/include/bits/wctype-wchar.h"
 4638              		.file 71 "/usr/include/wctype.h"
 4639              		.file 72 "/usr/include/c++/9.2.0/stdlib.h"
 4640              		.file 73 "/usr/include/unistd.h"
 4641              		.file 74 "/usr/include/bits/getopt_core.h"
 4642              		.file 75 "/usr/include/signal.h"
 4643              		.file 76 "/usr/include/GL/glew.h"
 4644              		.file 77 "/usr/include/GL/freeglut_std.h"
 4645              		.file 78 "/usr/include/FTGL/ftgl.h"
 4646              		.file 79 "/usr/include/math.h"
 4647              		.file 80 "/usr/include/c++/9.2.0/math.h"
GAS LISTING /tmp/cc4RI4t5.s 			page 302


 4648              		.file 81 "/usr/include/bits/mathcalls.h"
 4649              		.file 82 "Includes/findwayBases.hpp"
 4650              		.file 83 "/usr/include/GL/glu.h"
 4651              		.file 84 "Includes/routines.hpp"
 104895              		.align 8
 104898              	DW.ref.__gxx_personality_v0:
 104899 0000 00000000 		.quad	__gxx_personality_v0
 104899      00000000 
 104900              		.hidden	__dso_handle
 104901              		.ident	"GCC: (GNU) 9.2.0"
 104902              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/cc4RI4t5.s 			page 303


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc4RI4t5.s:6      .text:0000000000000000 _Z7reshapeii
     /tmp/cc4RI4t5.s:80     .text:000000000000005f _Z4timfi
     /tmp/cc4RI4t5.s:4489   .bss:0000000000000040 terminated
     /tmp/cc4RI4t5.s:124    .text:000000000000009d _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000041 _ZStL8__ioinit
     /tmp/cc4RI4t5.s:169    .text:00000000000000da _Z14handleKeypresshii
     /tmp/cc4RI4t5.s:376    .text:000000000000018f _Z17getMinDatasetSizev
     /tmp/cc4RI4t5.s:4484   .bss:0000000000000038 numOfObstacles
     /tmp/cc4RI4t5.s:415    .text:00000000000001b0 _Z10createVectPK6coordsf
     /tmp/cc4RI4t5.s:572    .text:00000000000002cf _Z10createVectPK6coordsS1_
     /tmp/cc4RI4t5.s:642    .text:0000000000000327 _Z10createVectPK8obstaclehf
     /tmp/cc4RI4t5.s:704    .text:000000000000036e _Z16getPointsDataSetPK6coords
     /tmp/cc4RI4t5.s:4478   .bss:0000000000000030 graphSize
     /tmp/cc4RI4t5.s:4448   .bss:0000000000000008 graph
     /tmp/cc4RI4t5.s:963    .text:00000000000004d0 _Z16hasIntersectionsPK4vect
     /tmp/cc4RI4t5.s:4466   .bss:0000000000000020 obstacles
     /tmp/cc4RI4t5.s:1029   .text:0000000000000514 _Z11isDotInsidePK6coords
     /tmp/cc4RI4t5.s:1113   .text:00000000000005d1 _Z9initPointP10graphPoint
     /tmp/cc4RI4t5.s:4472   .bss:0000000000000028 calculatedPoints
     /tmp/cc4RI4t5.s:1309   .text:0000000000000709 _Z16getCoordsOfPointP10graphPoint
     /tmp/cc4RI4t5.s:1324   .text:000000000000070f _Z21hasUncalculatedPointsPK10graphPoint
     /tmp/cc4RI4t5.s:1374   .text:0000000000000739 _Z12getMinTargetPK10graphPoint
     /tmp/cc4RI4t5.s:1438   .text:0000000000000782 _Z12calculateWaym
     /tmp/cc4RI4t5.s:4442   .bss:0000000000000000 ways
     /tmp/cc4RI4t5.s:1578   .text:0000000000000862 _Z8drawLineP6coordsS0_
     /tmp/cc4RI4t5.s:1603   .text:0000000000000882 _Z8drawLineP10graphPointS0_
     /tmp/cc4RI4t5.s:1630   .text:0000000000000898 _Z9drawEdgesP10graphPoint
     /tmp/cc4RI4t5.s:1710   .text:00000000000008e6 _Z7drawWaymm
     /tmp/cc4RI4t5.s:1788   .text:000000000000092e main
     /tmp/cc4RI4t5.s:4435   .data:0000000000000008 target
     /tmp/cc4RI4t5.s:4429   .data:0000000000000000 home
     /tmp/cc4RI4t5.s:4460   .bss:0000000000000018 startway
     /tmp/cc4RI4t5.s:4454   .bss:0000000000000010 endway
     /tmp/cc4RI4t5.s:4058   .text:0000000000000fd1 _Z11renderScenev
     /tmp/cc4RI4t5.s:2212   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag
     /tmp/cc4RI4t5.s:2487   .text:0000000000000d0a _Z12drawObstaclePK8obstacle
     /tmp/cc4RI4t5.s:104898  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/cc4RI4t5.s:3636   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag
     /tmp/cc4RI4t5.s:3871   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/cc4RI4t5.s:4404   .text:000000000000115a _GLOBAL__sub_I_watchRadius
     /tmp/cc4RI4t5.s:4496   .data:0000000000000010 watchRadius
     /tmp/cc4RI4t5.s:162    .rodata.str1.1:0000000000000000 .LC1
     /tmp/cc4RI4t5.s:164    .rodata.str1.1:0000000000000009 .LC2
     /tmp/cc4RI4t5.s:4502   .rodata.cst8:0000000000000000 .LC3
     /tmp/cc4RI4t5.s:4506   .rodata.cst8:0000000000000008 .LC4
     /tmp/cc4RI4t5.s:4510   .rodata.cst8:0000000000000010 .LC5
     /tmp/cc4RI4t5.s:4515   .rodata.cst16:0000000000000000 .LC6
     /tmp/cc4RI4t5.s:4522   .rodata.cst4:0000000000000000 .LC7
     /tmp/cc4RI4t5.s:4529   .rodata.cst16:0000000000000010 .LC9
     /tmp/cc4RI4t5.s:4536   .rodata.cst4:0000000000000008 .LC10
     /tmp/cc4RI4t5.s:4539   .rodata.cst4:000000000000000c .LC11
     /tmp/cc4RI4t5.s:4542   .rodata.cst4:0000000000000010 .LC12
     /tmp/cc4RI4t5.s:4545   .rodata.cst4:0000000000000014 .LC13
     /tmp/cc4RI4t5.s:699    .rodata.str1.1:000000000000000e .LC14
     /tmp/cc4RI4t5.s:4549   .rodata.cst8:0000000000000018 .LC15
GAS LISTING /tmp/cc4RI4t5.s 			page 304


     /tmp/cc4RI4t5.s:4525   .rodata.cst4:0000000000000004 .LC8
     /tmp/cc4RI4t5.s:4554   .rodata.cst4:0000000000000018 .LC16
     /tmp/cc4RI4t5.s:4557   .rodata.cst4:000000000000001c .LC17
     /tmp/cc4RI4t5.s:4560   .rodata.cst4:0000000000000020 .LC18
     /tmp/cc4RI4t5.s:4563   .rodata.cst4:0000000000000024 .LC19
     /tmp/cc4RI4t5.s:4566   .rodata.cst4:0000000000000028 .LC20
     /tmp/cc4RI4t5.s:4569   .rodata.cst4:000000000000002c .LC21
     /tmp/cc4RI4t5.s:4572   .rodata.cst4:0000000000000030 .LC25
     /tmp/cc4RI4t5.s:1769   .rodata.str1.1:0000000000000021 .LC26
     /tmp/cc4RI4t5.s:1771   .rodata.str1.1:000000000000002c .LC27
     /tmp/cc4RI4t5.s:1773   .rodata.str1.1:0000000000000036 .LC28
     /tmp/cc4RI4t5.s:1775   .rodata.str1.1:000000000000003f .LC29
     /tmp/cc4RI4t5.s:1777   .rodata.str1.1:0000000000000048 .LC30
     /tmp/cc4RI4t5.s:1779   .rodata.str1.1:0000000000000052 .LC31
     /tmp/cc4RI4t5.s:1781   .rodata.str1.1:000000000000005b .LC32
     /tmp/cc4RI4t5.s:1783   .rodata.str1.1:0000000000000062 .LC33
     /tmp/cc4RI4t5.s:2449   .rodata.str4.4:0000000000000000 .LC35
     /tmp/cc4RI4t5.s:2458   .rodata.str4.4:0000000000000008 .LC36
     /tmp/cc4RI4t5.s:2467   .rodata.str4.4:0000000000000010 .LC37
     /tmp/cc4RI4t5.s:2476   .rodata.str4.4:0000000000000018 .LC38
     /tmp/cc4RI4t5.s:4575   .rodata.cst4:0000000000000034 .LC39
     /tmp/cc4RI4t5.s:4041   .rodata.str4.4:0000000000000020 .LC40
     /tmp/cc4RI4t5.s:4578   .rodata.cst4:0000000000000038 .LC41
     /tmp/cc4RI4t5.s:2206   .rodata._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag.str1.8:0000000000000000 .LC34

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
glViewport
glMatrixMode
glLoadIdentity
gluOrtho2D
glutPostRedisplay
glutTimerFunc
exit
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZSt4cout
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSolsEi
_ZNSo3putEc
_ZNSo5flushEv
_ZSt16__throw_bad_castv
_ZNKSt5ctypeIcE13_M_widen_initEv
malloc
tan
_Z17getCoordsOfCornerPK8obstacleh
free
_Z15hasIntersectionPK8obstaclePK4vect
_Z9addTargetP10graphPointS0_
__stack_chk_fail
_Z11getWayPriceP10graphPointS0_
_Z8drawLineffff
_Z10glSetColorj
_Z14createObstaclefff
_Z14createObstacleffff
GAS LISTING /tmp/cc4RI4t5.s 			page 305


_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
glutInit
glutInitDisplayMode
glutCreateWindow
glutReshapeFunc
glutDisplayFunc
glutKeyboardFunc
glutMainLoop
wmemcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm
_Z8drawRectffff
wcslen
_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
glClear
vswprintf
glLineWidth
glutSwapBuffers
