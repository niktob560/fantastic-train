GAS LISTING /tmp/ccvlKtfa.s 			page 1


   1              		.file	"main.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.globl	_Z7reshapeii
   6              	_Z7reshapeii:
   7              	.LVL0:
   8              	.LFB2500:
   9              		.file 1 "Src/main.cpp"
   1:Src/main.cpp  **** #include <iostream>
   2:Src/main.cpp  **** #include <stdio.h>      // standard input / output functions
   3:Src/main.cpp  **** #include <stdlib.h>
   4:Src/main.cpp  **** #include <string.h>     // string function definitions
   5:Src/main.cpp  **** #include <unistd.h>     // UNIX standard function definitions
   6:Src/main.cpp  **** #include <fcntl.h>      // File control definitions
   7:Src/main.cpp  **** #include <errno.h>      // Error number definitions
   8:Src/main.cpp  **** #include <termios.h>    // POSIX terminal control definitions
   9:Src/main.cpp  **** #include <signal.h>
  10:Src/main.cpp  **** #include <GL/glew.h>
  11:Src/main.cpp  **** #include <GL/glut.h>
  12:Src/main.cpp  **** #include <GL/gl.h>
  13:Src/main.cpp  **** #include <GL/glu.h>
  14:Src/main.cpp  **** #include <FTGL/ftgl.h>
  15:Src/main.cpp  **** #include <FTGL/FTGLPixmapFont.h>
  16:Src/main.cpp  **** 
  17:Src/main.cpp  **** #include "routines.hpp"
  18:Src/main.cpp  **** #include "findwayBases.hpp"
  19:Src/main.cpp  **** 
  20:Src/main.cpp  **** #define GL_TIMER_DELAY	400
  21:Src/main.cpp  **** #define RETURN_CODE_OK 0
  22:Src/main.cpp  **** #define OBST_COLOR 0xFF0000
  23:Src/main.cpp  **** #define GRAPH_COLOR 0x00FFFF
  24:Src/main.cpp  **** #define DATA_COLOR	0xFFFFFF
  25:Src/main.cpp  **** 
  26:Src/main.cpp  **** // #define VECTORS_PER_CHECK	50
  27:Src/main.cpp  **** 
  28:Src/main.cpp  **** #define ZERO_QUAD_CHECK_SIDE 2000;
  29:Src/main.cpp  **** size_t watchRadius = ZERO_QUAD_CHECK_SIDE;
  30:Src/main.cpp  **** 
  31:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_A	0.0
  32:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_B	0.0
  33:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_C	numOfObstacles
  34:Src/main.cpp  **** 
  35:Src/main.cpp  **** #define FIELD_MAX_LEN		2000
  36:Src/main.cpp  **** 
  37:Src/main.cpp  **** using namespace std;
  38:Src/main.cpp  **** 
  39:Src/main.cpp  **** 
  40:Src/main.cpp  **** bool terminated = false;
  41:Src/main.cpp  **** size_t numOfObstacles = 0;
  42:Src/main.cpp  **** size_t graphSize = 0;
  43:Src/main.cpp  **** size_t calculatedPoints = 0;
  44:Src/main.cpp  **** 
  45:Src/main.cpp  **** 
  46:Src/main.cpp  **** struct obstacle *obstacles;
  47:Src/main.cpp  **** struct coords	startway,
  48:Src/main.cpp  **** 				endway;
  49:Src/main.cpp  **** struct graphPoint **graph;
GAS LISTING /tmp/ccvlKtfa.s 			page 2


  50:Src/main.cpp  **** size_t *ways;
  51:Src/main.cpp  **** 
  52:Src/main.cpp  **** size_t 	target = 1,
  53:Src/main.cpp  **** 		home = 1;
  54:Src/main.cpp  **** 
  55:Src/main.cpp  **** 
  56:Src/main.cpp  **** struct array
  57:Src/main.cpp  **** {
  58:Src/main.cpp  **** 	void *items;
  59:Src/main.cpp  **** 	size_t size;
  60:Src/main.cpp  **** };
  61:Src/main.cpp  **** 
  62:Src/main.cpp  **** 
  63:Src/main.cpp  **** uint8_t getMinDatasetSize()
  64:Src/main.cpp  **** {
  65:Src/main.cpp  **** 	// int ret = ((MIN_DATASEIZE_FUNC_A * pow((double)calculatedPoints, 2)) + (MIN_DATASEIZE_FUNC_B * 
  66:Src/main.cpp  **** 	int ret = numOfObstacles;
  67:Src/main.cpp  **** 	if(ret < 2)
  68:Src/main.cpp  **** 		ret = 2;
  69:Src/main.cpp  **** 	if(ret >= numOfObstacles)
  70:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
  71:Src/main.cpp  **** 
  72:Src/main.cpp  **** 	// cout << "min size for " << (int)(calculatedPoints) << ": " << (int)ret << endl;
  73:Src/main.cpp  **** 	return ret;
  74:Src/main.cpp  **** }
  75:Src/main.cpp  **** 
  76:Src/main.cpp  **** 
  77:Src/main.cpp  **** 
  78:Src/main.cpp  **** 
  79:Src/main.cpp  **** void initObst(const struct obstacle *obst);
  80:Src/main.cpp  **** void initPoint(struct graphPoint *p, const struct coords *c);
  81:Src/main.cpp  **** 
  82:Src/main.cpp  **** 
  83:Src/main.cpp  **** 
  84:Src/main.cpp  **** /*
  85:Src/main.cpp  ****  *	-------+----->	0
  86:Src/main.cpp  ****  *	<------+------	180
  87:Src/main.cpp  ****  *		  /|\
  88:Src/main.cpp  ****  *         |		90
  89:Src/main.cpp  ****  *		   +
  90:Src/main.cpp  ****  */
  91:Src/main.cpp  **** struct vect createVect(const struct coords *c, const COORDS_DATATYPE angle)
  92:Src/main.cpp  **** {
  93:Src/main.cpp  **** 	struct vect ret;
  94:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
  95:Src/main.cpp  **** 	ret.c->x = c->x;
  96:Src/main.cpp  **** 	ret.c->y = c->y;
  97:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  98:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
  99:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 100:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
 101:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 102:Src/main.cpp  **** 		ret.dy *= -1;
 103:Src/main.cpp  **** 
 104:Src/main.cpp  **** 	if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 105:Src/main.cpp  **** 		ret.dx *= -1;
 106:Src/main.cpp  **** 	return ret;
GAS LISTING /tmp/ccvlKtfa.s 			page 3


 107:Src/main.cpp  **** }
 108:Src/main.cpp  **** 
 109:Src/main.cpp  **** struct vect createVect(const struct coords *start, const struct coords *end)
 110:Src/main.cpp  **** {
 111:Src/main.cpp  **** 	struct vect ret;
 112:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
 113:Src/main.cpp  **** 	ret.c->x = start->x;
 114:Src/main.cpp  **** 	ret.c->y = start->y;
 115:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 116:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 117:Src/main.cpp  **** 	return ret;
 118:Src/main.cpp  **** }
 119:Src/main.cpp  **** 
 120:Src/main.cpp  **** 
 121:Src/main.cpp  **** struct vect createVect(const struct obstacle *obst, const uint8_t corner, const COORDS_DATATYPE ang
 122:Src/main.cpp  **** {
 123:Src/main.cpp  **** 	struct vect ret;
 124:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 125:Src/main.cpp  **** 	ret = createVect(c, angle);
 126:Src/main.cpp  **** 	free(c);
 127:Src/main.cpp  **** 	return ret;
 128:Src/main.cpp  **** }
 129:Src/main.cpp  **** 
 130:Src/main.cpp  **** 
 131:Src/main.cpp  **** // struct array* getDataSet(const struct coords *c)
 132:Src/main.cpp  **** // {
 133:Src/main.cpp  **** // 	size_t size = 0;
 134:Src/main.cpp  **** // 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 135:Src/main.cpp  **** // 	while (size < getMinDatasetSize()) {
 136:Src/main.cpp  **** // 		size = 0;
 137:Src/main.cpp  **** // 		for(size_t i = 0; i < numOfObstacles; i++)
 138:Src/main.cpp  **** // 		{
 139:Src/main.cpp  **** // 			if(obstacles[i].c->x + obstacles[i].a >= c->x - watchRadius
 140:Src/main.cpp  **** // 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 141:Src/main.cpp  **** // 			&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 142:Src/main.cpp  **** // 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 143:Src/main.cpp  **** // 				size++;
 144:Src/main.cpp  **** // 		}
 145:Src/main.cpp  **** // 		if(size < getMinDatasetSize())
 146:Src/main.cpp  **** // 		{
 147:Src/main.cpp  **** // 			cout << "Increacing radius\n";
 148:Src/main.cpp  **** // 			watchRadius += 100;
 149:Src/main.cpp  **** // 		}
 150:Src/main.cpp  **** // 	}
 151:Src/main.cpp  **** // 	// cout << "Size: " << size << endl;
 152:Src/main.cpp  **** // 	size_t iter = 0;
 153:Src/main.cpp  **** // 	struct obstacle **obsts = (struct obstacle**)malloc(sizeof(struct obstacle*) * size);
 154:Src/main.cpp  **** // 	for(size_t i = 0; i < numOfObstacles; i++)
 155:Src/main.cpp  **** // 	{
 156:Src/main.cpp  **** // 		if(obstacles[i].c->x + obstacles[i].a >= c->x - watchRadius
 157:Src/main.cpp  **** // 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 158:Src/main.cpp  **** // 		&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 159:Src/main.cpp  **** // 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 160:Src/main.cpp  **** // 			obsts[iter++] = &(obstacles[i]);
 161:Src/main.cpp  **** // 	}
 162:Src/main.cpp  **** // 	struct array *ret = (struct array*)malloc(sizeof(struct array));
 163:Src/main.cpp  **** // 	ret->items = *obsts;
GAS LISTING /tmp/ccvlKtfa.s 			page 4


 164:Src/main.cpp  **** // 	ret->size = size;
 165:Src/main.cpp  **** // 	return ret;
 166:Src/main.cpp  **** // }
 167:Src/main.cpp  **** 
 168:Src/main.cpp  **** 
 169:Src/main.cpp  **** struct array* getPointsDataSet(const struct coords *c)
 170:Src/main.cpp  **** {
 171:Src/main.cpp  **** 	size_t size = 0;
 172:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 173:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 174:Src/main.cpp  **** 		size = 0;
 175:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 176:Src/main.cpp  **** 		{
 177:Src/main.cpp  **** 			if(graph[i]->c.x >= c->x - watchRadius
 178:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 179:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 180:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 181:Src/main.cpp  **** 				size++;
 182:Src/main.cpp  **** 		}
 183:Src/main.cpp  **** 		if(size < getMinDatasetSize())
 184:Src/main.cpp  **** 		{
 185:Src/main.cpp  **** 			cout << "Increacing radius\n";
 186:Src/main.cpp  **** 			watchRadius += 100;
 187:Src/main.cpp  **** 		}
 188:Src/main.cpp  **** 	}
 189:Src/main.cpp  **** 	// cout << "Size: " << size << endl;
 190:Src/main.cpp  **** 	size_t iter = 0;
 191:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 192:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 193:Src/main.cpp  **** 	{
 194:Src/main.cpp  **** 		if(graph[i]->c.x >= c->x - watchRadius
 195:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 196:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 197:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 198:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 199:Src/main.cpp  **** 	}
 200:Src/main.cpp  **** 	struct array *ret = (struct array*)malloc(sizeof(struct array));
 201:Src/main.cpp  **** 	ret->items = dataset;
 202:Src/main.cpp  **** 	ret->size = size;
 203:Src/main.cpp  **** 	return ret;
 204:Src/main.cpp  **** }
 205:Src/main.cpp  **** 
 206:Src/main.cpp  **** 
 207:Src/main.cpp  **** 
 208:Src/main.cpp  **** bool hasIntersections(const struct vect *v)
 209:Src/main.cpp  **** {
 210:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 211:Src/main.cpp  **** 	{
 212:Src/main.cpp  **** 		if(hasIntersection(&obstacles[i], v))
 213:Src/main.cpp  **** 			return true;
 214:Src/main.cpp  **** 	}
 215:Src/main.cpp  **** 	return false;
 216:Src/main.cpp  **** }
 217:Src/main.cpp  **** 
 218:Src/main.cpp  **** 
 219:Src/main.cpp  **** #define CONST 0.4
 220:Src/main.cpp  **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 5


 221:Src/main.cpp  **** bool isDotInside(const struct coords *c)
 222:Src/main.cpp  **** {
 223:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 224:Src/main.cpp  **** 	{
 225:Src/main.cpp  **** 		if(	(c->x - CONST > obstacles[i].c->x)
 226:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 227:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 228:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 229:Src/main.cpp  **** 			return true;
 230:Src/main.cpp  **** 	}
 231:Src/main.cpp  **** 	return false;
 232:Src/main.cpp  **** }
 233:Src/main.cpp  **** 
 234:Src/main.cpp  **** 
 235:Src/main.cpp  **** 
 236:Src/main.cpp  **** 
 237:Src/main.cpp  **** 
 238:Src/main.cpp  **** void initPoint(struct graphPoint *p)
 239:Src/main.cpp  **** {
 240:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 241:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 242:Src/main.cpp  **** 	struct vect v;
 243:Src/main.cpp  **** 	struct coords *tgt;
 244:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 245:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 246:Src/main.cpp  **** 	{
 247:Src/main.cpp  **** 		currP = ((struct graphPoint**)(points->items))[i];
 248:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 249:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 250:Src/main.cpp  **** 		{
 251:Src/main.cpp  **** 			if(p->numOfTargets == 0)
 252:Src/main.cpp  **** 				calculatedPoints++;
 253:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 254:Src/main.cpp  **** 				calculatedPoints++;
 255:Src/main.cpp  **** 			addTarget(p, currP);
 256:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 257:Src/main.cpp  **** 				initPoint(currP);
 258:Src/main.cpp  **** 		}
 259:Src/main.cpp  **** 	}
 260:Src/main.cpp  **** 	free(points);
 261:Src/main.cpp  **** }
 262:Src/main.cpp  **** 
 263:Src/main.cpp  **** 
 264:Src/main.cpp  **** 
 265:Src/main.cpp  **** 
 266:Src/main.cpp  **** 
 267:Src/main.cpp  **** 
 268:Src/main.cpp  **** 
 269:Src/main.cpp  **** 
 270:Src/main.cpp  **** 
 271:Src/main.cpp  **** 
 272:Src/main.cpp  **** 
 273:Src/main.cpp  **** 
 274:Src/main.cpp  **** 
 275:Src/main.cpp  **** struct coords getCoordsOfPoint(struct graphPoint *p)
 276:Src/main.cpp  **** {
 277:Src/main.cpp  **** 	return (p->c);
GAS LISTING /tmp/ccvlKtfa.s 			page 6


 278:Src/main.cpp  **** }
 279:Src/main.cpp  **** 
 280:Src/main.cpp  **** 
 281:Src/main.cpp  **** 
 282:Src/main.cpp  **** 
 283:Src/main.cpp  **** 
 284:Src/main.cpp  **** bool hasUncalculatedPoints(const struct graphPoint *p)
 285:Src/main.cpp  **** {
 286:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 287:Src/main.cpp  **** 	{
 288:Src/main.cpp  **** 		if(!(p->targets[i]->calculated))
 289:Src/main.cpp  **** 			return true;
 290:Src/main.cpp  **** 	}
 291:Src/main.cpp  **** 	return false;
 292:Src/main.cpp  **** }
 293:Src/main.cpp  **** 
 294:Src/main.cpp  **** struct graphPoint* getMinTarget(const struct graphPoint *p)
 295:Src/main.cpp  **** {
 296:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 297:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 298:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 299:Src/main.cpp  **** 	{
 300:Src/main.cpp  **** 		if(!p->targets[i]->calculated && p->targets[i]->weight <= w)
 301:Src/main.cpp  **** 		{
 302:Src/main.cpp  **** 			w = p->targets[i]->weight;
 303:Src/main.cpp  **** 			pp = p->targets[i];
 304:Src/main.cpp  **** 		}
 305:Src/main.cpp  **** 	}
 306:Src/main.cpp  **** 	return pp;
 307:Src/main.cpp  **** }
 308:Src/main.cpp  **** 
 309:Src/main.cpp  **** void calculateWay(size_t index) 
 310:Src/main.cpp  **** {
 311:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 312:Src/main.cpp  **** 		return;
 313:Src/main.cpp  **** 	graph[index]->calculated = true;
 314:Src/main.cpp  **** 	
 315:Src/main.cpp  **** 	if(graph[index]->numOfTargets == 0)
 316:Src/main.cpp  **** 		return;
 317:Src/main.cpp  **** 
 318:Src/main.cpp  **** 	struct graphPoint * watch;
 319:Src/main.cpp  **** 	COORDS_DATATYPE w;
 320:Src/main.cpp  **** 
 321:Src/main.cpp  **** 	for(size_t i = 0; i < graph[index]->numOfTargets; i++)
 322:Src/main.cpp  **** 	{
 323:Src/main.cpp  **** 		watch = graph[index]->targets[i];
 324:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 325:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 326:Src/main.cpp  **** 		{
 327:Src/main.cpp  **** 			// cout << "\t>new weight\n"; 
 328:Src/main.cpp  **** 			watch->weight = w + graph[index]->weight;
 329:Src/main.cpp  **** 			ways[watch->i] = index;
 330:Src/main.cpp  **** 		}
 331:Src/main.cpp  **** 	}
 332:Src/main.cpp  **** 
 333:Src/main.cpp  **** 	while (hasUncalculatedPoints(graph[index]))
 334:Src/main.cpp  **** 	{
GAS LISTING /tmp/ccvlKtfa.s 			page 7


 335:Src/main.cpp  **** 		watch = getMinTarget(graph[index]);
 336:Src/main.cpp  **** 		calculateWay(watch->i);
 337:Src/main.cpp  **** 	}
 338:Src/main.cpp  **** }
 339:Src/main.cpp  **** 
 340:Src/main.cpp  **** 
 341:Src/main.cpp  **** 
 342:Src/main.cpp  **** void drawLine(struct coords *start, struct coords *end)
 343:Src/main.cpp  **** {
 344:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 345:Src/main.cpp  **** }
 346:Src/main.cpp  **** 
 347:Src/main.cpp  **** void drawLine(struct graphPoint *start, struct graphPoint *end)
 348:Src/main.cpp  **** {
 349:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 350:Src/main.cpp  **** }
 351:Src/main.cpp  **** 
 352:Src/main.cpp  **** 
 353:Src/main.cpp  **** void drawWeight(struct graphPoint *start, struct graphPoint *end)
 354:Src/main.cpp  **** {
 355:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 356:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 357:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 358:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 359:Src/main.cpp  **** }
 360:Src/main.cpp  **** 
 361:Src/main.cpp  **** 
 362:Src/main.cpp  **** void drawWeight(struct coords *start, struct coords *end)
 363:Src/main.cpp  **** {
 364:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 365:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 366:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 367:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 368:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 369:Src/main.cpp  **** }
 370:Src/main.cpp  **** 
 371:Src/main.cpp  **** 
 372:Src/main.cpp  **** 
 373:Src/main.cpp  **** void drawEdges(struct graphPoint *p)
 374:Src/main.cpp  **** {
 375:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 376:Src/main.cpp  **** 	{
 377:Src/main.cpp  **** 		// cout << "SHIT\n";
 378:Src/main.cpp  **** 		return;
 379:Src/main.cpp  **** 	}
 380:Src/main.cpp  **** 
 381:Src/main.cpp  **** 	// struct coords start, end;
 382:Src/main.cpp  **** 	// start = getCoordsOfPoint(p);
 383:Src/main.cpp  **** 	// for(size_t i = 0; i < p->numOfTargets; i++)
 384:Src/main.cpp  **** 	// {
 385:Src/main.cpp  **** 	// 	end = getCoordsOfPoint(p->targets[i]);
 386:Src/main.cpp  **** 	// 	glSetColor(GRAPH_COLOR);
 387:Src/main.cpp  **** 	// 	drawLine(&start, &end);
 388:Src/main.cpp  **** 	// 	// drawWeight(&start, &end);
 389:Src/main.cpp  **** 
 390:Src/main.cpp  **** 	// 	// cout 	<< "\tLine: " << endl
 391:Src/main.cpp  **** 	// 	// 		<< "\t\t" << start.x << ":" << start.y << " -> " << end.x << ":" << end.y << endl;
GAS LISTING /tmp/ccvlKtfa.s 			page 8


 392:Src/main.cpp  **** 	// }
 393:Src/main.cpp  **** 
 394:Src/main.cpp  **** 	glSetColor(GRAPH_COLOR);
 395:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 396:Src/main.cpp  **** 	{
 397:Src/main.cpp  **** 		drawLine(&p->c, &p->targets[i]->c);
 398:Src/main.cpp  **** 	}
 399:Src/main.cpp  **** }
 400:Src/main.cpp  **** 
 401:Src/main.cpp  **** 
 402:Src/main.cpp  **** 
 403:Src/main.cpp  **** 
 404:Src/main.cpp  **** void drawObstacle(const struct obstacle *o)
 405:Src/main.cpp  **** {
 406:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 407:Src/main.cpp  **** 	glSetColor(OBST_COLOR);
 408:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 409:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 410:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 411:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 412:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 413:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 414:Src/main.cpp  **** }
 415:Src/main.cpp  **** 
 416:Src/main.cpp  **** 
 417:Src/main.cpp  **** void drawWay(size_t pointNum, size_t target)
 418:Src/main.cpp  **** {
 419:Src/main.cpp  **** 	size_t curr = pointNum;
 420:Src/main.cpp  **** 	while(curr != target)
 421:Src/main.cpp  **** 	{
 422:Src/main.cpp  **** 		drawLine(graph[curr], graph[ways[curr]]);
 423:Src/main.cpp  **** 		curr = ways[curr];
 424:Src/main.cpp  **** 	}
 425:Src/main.cpp  **** }
 426:Src/main.cpp  **** 
 427:Src/main.cpp  **** 
 428:Src/main.cpp  **** void renderScene(void)
 429:Src/main.cpp  **** {
 430:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 431:Src/main.cpp  **** 
 432:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 433:Src/main.cpp  **** 		{
 434:Src/main.cpp  **** 			drawObstacle(&obstacles[i]);
 435:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 436:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 437:Src/main.cpp  **** 		}
 438:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 439:Src/main.cpp  **** 		{
 440:Src/main.cpp  **** 			glLineWidth(1);
 441:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 442:Src/main.cpp  **** 			drawEdges(graph[i]);
 443:Src/main.cpp  **** 		}
 444:Src/main.cpp  **** 
 445:Src/main.cpp  **** 		// cout << "{";
 446:Src/main.cpp  **** 		// for(int i = 0; i < graphSize; i++)
 447:Src/main.cpp  **** 		// 	cout << i << ((i < graphSize - 1)? ", " : " ");
 448:Src/main.cpp  **** 		// cout << "}\n";
GAS LISTING /tmp/ccvlKtfa.s 			page 9


 449:Src/main.cpp  **** 		// cout << "{";
 450:Src/main.cpp  **** 		// for(int i = 0; i < graphSize; i++)
 451:Src/main.cpp  **** 		// 	cout << ways[i] << ((i < graphSize - 1)? ", " : " ");
 452:Src/main.cpp  **** 		// cout << "}\n";
 453:Src/main.cpp  **** 
 454:Src/main.cpp  **** 		glLineWidth(5);
 455:Src/main.cpp  **** 		glSetColor(0x00FF99);
 456:Src/main.cpp  **** 		// drawWay(home, target);
 457:Src/main.cpp  **** 		// struct coords ss[] = {{120.000000, 770.000000}, {120.000000, 770.000000}, {109.599998, 349.600
 458:Src/main.cpp  **** 		// {300.399994, 300.399994}, {99.599998, 99.599998}, {109.599998, 349.600006}, {120.000000, 770.0
 459:Src/main.cpp  **** 
 460:Src/main.cpp  **** 		// for(int i = 0; i < sizeof(ss); i++)
 461:Src/main.cpp  **** 		// {
 462:Src/main.cpp  **** 		// 	drawCircleFilled(ss[i].x, ss[i].y, 4, 10);
 463:Src/main.cpp  **** 		// }
 464:Src/main.cpp  **** 
 465:Src/main.cpp  **** 		// drawText(to_wstring(graph[home]->weight), 12, 10, 10);
 466:Src/main.cpp  **** 
 467:Src/main.cpp  **** 		// drawCircleFilled(283.913025, 550.000000, 10, 100);
 468:Src/main.cpp  **** 
 469:Src/main.cpp  ****     glutSwapBuffers();
 470:Src/main.cpp  **** }
 471:Src/main.cpp  **** 
 472:Src/main.cpp  **** 
 473:Src/main.cpp  **** void handleKeypress(unsigned char key, //The key that was pressed
 474:Src/main.cpp  ****                                         int x, int y) //The current mouse coordinates
 475:Src/main.cpp  **** {
 476:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 477:Src/main.cpp  ****     if(key == 27) //ESC
 478:Src/main.cpp  ****     {
 479:Src/main.cpp  **** 	    cout << "ESC\n";
 480:Src/main.cpp  **** 		terminated = true;
 481:Src/main.cpp  ****     }
 482:Src/main.cpp  **** }
 483:Src/main.cpp  **** 
 484:Src/main.cpp  **** 
 485:Src/main.cpp  **** 
 486:Src/main.cpp  **** 
 487:Src/main.cpp  **** 
 488:Src/main.cpp  **** void reshape(int w, int h)
 489:Src/main.cpp  **** {
  10              		.loc 1 489 1 view -0
  11              		.cfi_startproc
  12              		.loc 1 489 1 is_stmt 0 view .LVU1
  13 0000 55       		pushq	%rbp
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0001 53       		pushq	%rbx
  17              		.cfi_def_cfa_offset 24
  18              		.cfi_offset 3, -24
  19 0002 4883EC08 		subq	$8, %rsp
  20              		.cfi_def_cfa_offset 32
  21 0006 89FB     		movl	%edi, %ebx
  22 0008 89F5     		movl	%esi, %ebp
 490:Src/main.cpp  **** 	glViewport(0, 0, w, h);
  23              		.loc 1 490 2 is_stmt 1 view .LVU2
  24              		.loc 1 490 12 is_stmt 0 view .LVU3
GAS LISTING /tmp/ccvlKtfa.s 			page 10


  25 000a 89F1     		movl	%esi, %ecx
  26 000c 89FA     		movl	%edi, %edx
  27 000e BE000000 		movl	$0, %esi
  27      00
  28              	.LVL1:
  29              		.loc 1 490 12 view .LVU4
  30 0013 BF000000 		movl	$0, %edi
  30      00
  31              	.LVL2:
  32              		.loc 1 490 12 view .LVU5
  33 0018 E8000000 		call	glViewport@PLT
  33      00
  34              	.LVL3:
 491:Src/main.cpp  **** 
 492:Src/main.cpp  **** 	glMatrixMode(GL_PROJECTION);
  35              		.loc 1 492 2 is_stmt 1 view .LVU6
  36              		.loc 1 492 14 is_stmt 0 view .LVU7
  37 001d BF011700 		movl	$5889, %edi
  37      00
  38 0022 E8000000 		call	glMatrixMode@PLT
  38      00
  39              	.LVL4:
 493:Src/main.cpp  **** 	glLoadIdentity();
  40              		.loc 1 493 2 is_stmt 1 view .LVU8
  41              		.loc 1 493 16 is_stmt 0 view .LVU9
  42 0027 E8000000 		call	glLoadIdentity@PLT
  42      00
  43              	.LVL5:
 494:Src/main.cpp  **** 	gluOrtho2D(0, w, 0, h);
  44              		.loc 1 494 2 is_stmt 1 view .LVU10
  45              		.loc 1 494 12 is_stmt 0 view .LVU11
  46 002c 660FEFDB 		pxor	%xmm3, %xmm3
  47 0030 F20F2ADD 		cvtsi2sdl	%ebp, %xmm3
  48 0034 660FEFD2 		pxor	%xmm2, %xmm2
  49 0038 660FEFC9 		pxor	%xmm1, %xmm1
  50 003c F20F2ACB 		cvtsi2sdl	%ebx, %xmm1
  51 0040 660F28C2 		movapd	%xmm2, %xmm0
  52 0044 E8000000 		call	gluOrtho2D@PLT
  52      00
  53              	.LVL6:
 495:Src/main.cpp  **** 
 496:Src/main.cpp  **** 	glMatrixMode(GL_MODELVIEW);
  54              		.loc 1 496 2 is_stmt 1 view .LVU12
  55              		.loc 1 496 14 is_stmt 0 view .LVU13
  56 0049 BF001700 		movl	$5888, %edi
  56      00
  57 004e E8000000 		call	glMatrixMode@PLT
  57      00
  58              	.LVL7:
 497:Src/main.cpp  **** 	glLoadIdentity();
  59              		.loc 1 497 2 is_stmt 1 view .LVU14
  60              		.loc 1 497 16 is_stmt 0 view .LVU15
  61 0053 E8000000 		call	glLoadIdentity@PLT
  61      00
  62              	.LVL8:
 498:Src/main.cpp  **** }
  63              		.loc 1 498 1 view .LVU16
GAS LISTING /tmp/ccvlKtfa.s 			page 11


  64 0058 4883C408 		addq	$8, %rsp
  65              		.cfi_def_cfa_offset 24
  66 005c 5B       		popq	%rbx
  67              		.cfi_def_cfa_offset 16
  68              	.LVL9:
  69              		.loc 1 498 1 view .LVU17
  70 005d 5D       		popq	%rbp
  71              		.cfi_def_cfa_offset 8
  72              	.LVL10:
  73              		.loc 1 498 1 view .LVU18
  74 005e C3       		ret
  75              		.cfi_endproc
  76              	.LFE2500:
  78              		.globl	_Z4timfi
  80              	_Z4timfi:
  81              	.LVL11:
  82              	.LFB2501:
 499:Src/main.cpp  **** 
 500:Src/main.cpp  **** 
 501:Src/main.cpp  **** 
 502:Src/main.cpp  **** 
 503:Src/main.cpp  **** void timf(int value)				// Timer function
 504:Src/main.cpp  **** {
  83              		.loc 1 504 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		.loc 1 504 1 is_stmt 0 view .LVU20
  86 005f 4883EC08 		subq	$8, %rsp
  87              		.cfi_def_cfa_offset 16
 505:Src/main.cpp  **** 	if(!terminated)					//if don't wanna terminate
  88              		.loc 1 505 2 is_stmt 1 view .LVU21
  89 0063 803D0000 		cmpb	$0, terminated(%rip)
  89      000000
  90 006a 7520     		jne	.L4
 506:Src/main.cpp  **** 	{
 507:Src/main.cpp  **** 		glutPostRedisplay();		//Redraw windows
  91              		.loc 1 507 3 view .LVU22
  92              		.loc 1 507 20 is_stmt 0 view .LVU23
  93 006c E8000000 		call	glutPostRedisplay@PLT
  93      00
  94              	.LVL12:
 508:Src/main.cpp  **** 		glutTimerFunc(GL_TIMER_DELAY, timf, 0);	//Setup next timer
  95              		.loc 1 508 3 is_stmt 1 view .LVU24
  96              		.loc 1 508 16 is_stmt 0 view .LVU25
  97 0071 BA000000 		movl	$0, %edx
  97      00
  98 0076 488D3500 		leaq	_Z4timfi(%rip), %rsi
  98      000000
  99 007d BF900100 		movl	$400, %edi
  99      00
 100 0082 E8000000 		call	glutTimerFunc@PLT
 100      00
 101              	.LVL13:
 509:Src/main.cpp  **** 	}
 510:Src/main.cpp  **** 	else							//if wanna terminate
 511:Src/main.cpp  **** 	{
 512:Src/main.cpp  **** 		terminated = false;			//set terminated flag
 513:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
GAS LISTING /tmp/ccvlKtfa.s 			page 12


 514:Src/main.cpp  **** 	}
 515:Src/main.cpp  **** }
 102              		.loc 1 515 1 view .LVU26
 103 0087 4883C408 		addq	$8, %rsp
 104              		.cfi_remember_state
 105              		.cfi_def_cfa_offset 8
 106 008b C3       		ret
 107              	.LVL14:
 108              	.L4:
 109              		.cfi_restore_state
 512:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 110              		.loc 1 512 3 is_stmt 1 view .LVU27
 512:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 111              		.loc 1 512 14 is_stmt 0 view .LVU28
 112 008c C6050000 		movb	$0, terminated(%rip)
 112      000000
 513:Src/main.cpp  **** 	}
 113              		.loc 1 513 3 is_stmt 1 view .LVU29
 513:Src/main.cpp  **** 	}
 114              		.loc 1 513 7 is_stmt 0 view .LVU30
 115 0093 BF000000 		movl	$0, %edi
 115      00
 116              	.LVL15:
 513:Src/main.cpp  **** 	}
 117              		.loc 1 513 7 view .LVU31
 118 0098 E8000000 		call	exit@PLT
 118      00
 119              	.LVL16:
 120              		.cfi_endproc
 121              	.LFE2501:
 124              	_Z41__static_initialization_and_destruction_0ii:
 125              	.LVL17:
 126              	.LFB2877:
 516:Src/main.cpp  **** 
 517:Src/main.cpp  **** 
 518:Src/main.cpp  **** 
 519:Src/main.cpp  **** 
 520:Src/main.cpp  **** int main(int argc, char **argv)
 521:Src/main.cpp  **** {
 522:Src/main.cpp  **** 	numOfObstacles = 30;
 523:Src/main.cpp  **** 	size_t iter = 0;
 524:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 525:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 526:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 527:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 528:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(80, 330, 50);
 529:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(120, 340, 50);
 530:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(60, 400, 30);
 531:Src/main.cpp  **** 	numOfObstacles = iter;
 532:Src/main.cpp  **** 
 533:Src/main.cpp  **** 	graphSize = numOfObstacles * 4 + 2;
 534:Src/main.cpp  **** 
 535:Src/main.cpp  **** 	struct graphPoint *p = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 536:Src/main.cpp  **** 
 537:Src/main.cpp  **** 	struct coords c;
 538:Src/main.cpp  **** 	c.x = 350;
 539:Src/main.cpp  **** 	c.y = 10;
GAS LISTING /tmp/ccvlKtfa.s 			page 13


 540:Src/main.cpp  **** 	p->c = c;
 541:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 542:Src/main.cpp  **** 
 543:Src/main.cpp  **** 	struct coords c2;
 544:Src/main.cpp  **** 	c2.x = 120;
 545:Src/main.cpp  **** 	c2.y = 770;
 546:Src/main.cpp  **** 	p2->c = c2;
 547:Src/main.cpp  **** 
 548:Src/main.cpp  **** 	graph = (struct graphPoint**)malloc(graphSize * sizeof(struct graphPoint*));
 549:Src/main.cpp  **** 	target = numOfObstacles * 4;
 550:Src/main.cpp  **** 	home = target + 1;
 551:Src/main.cpp  **** 	p2->i = home;
 552:Src/main.cpp  **** 	p->i = target;
 553:Src/main.cpp  **** 	graph[target] = p;
 554:Src/main.cpp  **** 	graph[home] = p2;
 555:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 556:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 557:Src/main.cpp  **** 
 558:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 559:Src/main.cpp  **** 	{
 560:Src/main.cpp  **** 		graph[i]->i = i;
 561:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 562:Src/main.cpp  **** 	}
 563:Src/main.cpp  **** 	graph[target]->weight = 0;
 564:Src/main.cpp  **** 
 565:Src/main.cpp  **** 	ways = (size_t*)malloc(graphSize * sizeof(size_t));
 566:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 567:Src/main.cpp  **** 		ways[i] = target;
 568:Src/main.cpp  **** 
 569:Src/main.cpp  **** 	startway.x 	= 0;
 570:Src/main.cpp  **** 	startway.y 	= 0;
 571:Src/main.cpp  **** 	endway.x	= 150;
 572:Src/main.cpp  **** 	endway.y	= 150;
 573:Src/main.cpp  **** 
 574:Src/main.cpp  **** 
 575:Src/main.cpp  **** 	struct coords c3;
 576:Src/main.cpp  **** 	c3.x = 200;
 577:Src/main.cpp  **** 	c3.y = 0;
 578:Src/main.cpp  **** 
 579:Src/main.cpp  **** 
 580:Src/main.cpp  **** 	// initGraph(p);
 581:Src/main.cpp  **** 	// calculatedPoints = 0;
 582:Src/main.cpp  **** 	// initGraph(p);
 583:Src/main.cpp  **** 	initPoint(p);
 584:Src/main.cpp  **** 	
 585:Src/main.cpp  **** 	
 586:Src/main.cpp  **** 
 587:Src/main.cpp  **** 	struct graphPoint startp, endp;
 588:Src/main.cpp  **** 	startp = *graph[7];
 589:Src/main.cpp  **** 	endp = *graph[1];
 590:Src/main.cpp  **** 
 591:Src/main.cpp  **** 	// startp.c.x = obstacles[2].c->x;
 592:Src/main.cpp  **** 	// startp.c.y = obstacles[2].c->y;
 593:Src/main.cpp  **** 	// endp.c.x = obstacles[1].c->x + obstacles[1].a / 2;
 594:Src/main.cpp  **** 	// endp.c.y = obstacles[1].c->y + obstacles[1].a / 2;
 595:Src/main.cpp  **** 	// struct vect v = createVect(&startp.c, &endp.c);
 596:Src/main.cpp  **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 14


 597:Src/main.cpp  **** 	// struct graphPoint tgt;
 598:Src/main.cpp  **** 
 599:Src/main.cpp  **** 	// startp.c = *getCoordsOfCorner(&obstacles[2], 0);
 600:Src/main.cpp  **** 	// endp.c = *getCoordsOfCorner(&obstacles[1], 2);
 601:Src/main.cpp  **** 	
 602:Src/main.cpp  **** 	// tgt = &((struct obstacle*)obsts->items)[i].corners[j]->c;
 603:Src/main.cpp  **** 	
 604:Src/main.cpp  **** 	struct vect v = createVect(&startp.c, &endp.c);
 605:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 606:Src/main.cpp  **** 
 607:Src/main.cpp  **** 	cout << "start: " << startp.c.toString() << "\tend: " << endp.c.toString() << endl;
 608:Src/main.cpp  **** 	int shit = 1;
 609:Src/main.cpp  **** 	
 610:Src/main.cpp  **** 	// struct vect v = createVect(&obstacles[1].corners[2]->c, &obstacles[1].corners[3]->c);
 611:Src/main.cpp  **** 	
 612:Src/main.cpp  **** 	cout << v.toString() << endl << v.c->toString() << endl << "{" << (v.dx + v.c->x) << ":" << (v.dy 
 613:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 614:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 615:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 616:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 617:Src/main.cpp  **** 
 618:Src/main.cpp  **** 	
 619:Src/main.cpp  **** 
 620:Src/main.cpp  **** 	// struct coords cc = {150, 150};
 621:Src/main.cpp  **** 
 622:Src/main.cpp  **** 	// cout << isDotInside(&cc) << endl;
 623:Src/main.cpp  **** 
 624:Src/main.cpp  **** 	if(argc == 1)
 625:Src/main.cpp  **** 		exit(0);
 626:Src/main.cpp  **** 	// initGraph(p);
 627:Src/main.cpp  **** 	// calculatedPoints = 0;
 628:Src/main.cpp  **** 	// initGraph(p2);
 629:Src/main.cpp  **** 	// calculateWay(target);
 630:Src/main.cpp  **** 	// return 0;
 631:Src/main.cpp  **** 
 632:Src/main.cpp  **** 	
 633:Src/main.cpp  **** 
 634:Src/main.cpp  **** 
 635:Src/main.cpp  ****  	cout << "glut init\n";
 636:Src/main.cpp  **** 	glutInit(&argc, argv);
 637:Src/main.cpp  **** 	cout << "dispmode\n";
 638:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 639:Src/main.cpp  **** 	glutCreateWindow("floating");
 640:Src/main.cpp  **** 	cout << "reshape\n";
 641:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 642:Src/main.cpp  **** 	cout << "dispfunc\n";
 643:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 644:Src/main.cpp  ****     cout << "keyfunc\n";
 645:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 646:Src/main.cpp  **** 	cout << "timer\n";
 647:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 648:Src/main.cpp  **** 	cout << "mainloop\n";
 649:Src/main.cpp  **** 	glutMainLoop();
 650:Src/main.cpp  **** 
 651:Src/main.cpp  **** 
 652:Src/main.cpp  **** 	return 0;
 653:Src/main.cpp  **** }
GAS LISTING /tmp/ccvlKtfa.s 			page 15


 127              		.loc 1 653 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		.loc 1 653 1 is_stmt 0 view .LVU33
 130 009d 83FF01   		cmpl	$1, %edi
 131 00a0 7401     		je	.L13
 132              	.L10:
 133 00a2 C3       		ret
 134              	.L13:
 135              		.loc 1 653 1 discriminator 1 view .LVU34
 136 00a3 81FEFFFF 		cmpl	$65535, %esi
 136      0000
 137 00a9 75F7     		jne	.L10
 138              		.loc 1 653 1 view .LVU35
 139 00ab 4883EC08 		subq	$8, %rsp
 140              		.cfi_def_cfa_offset 16
 141              		.file 2 "/usr/include/c++/9.2.0/iostream"
   1:/usr/include/c++/9.2.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.2.0/iostream **** 
   3:/usr/include/c++/9.2.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/iostream **** //
   5:/usr/include/c++/9.2.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/iostream **** // any later version.
  10:/usr/include/c++/9.2.0/iostream **** 
  11:/usr/include/c++/9.2.0/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/iostream **** 
  16:/usr/include/c++/9.2.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/iostream **** 
  20:/usr/include/c++/9.2.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/iostream **** 
  25:/usr/include/c++/9.2.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.2.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/iostream ****  */
  28:/usr/include/c++/9.2.0/iostream **** 
  29:/usr/include/c++/9.2.0/iostream **** //
  30:/usr/include/c++/9.2.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.2.0/iostream **** //
  32:/usr/include/c++/9.2.0/iostream **** 
  33:/usr/include/c++/9.2.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.2.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.2.0/iostream **** 
  36:/usr/include/c++/9.2.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/iostream **** 
  38:/usr/include/c++/9.2.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/iostream **** #include <ostream>
  40:/usr/include/c++/9.2.0/iostream **** #include <istream>
  41:/usr/include/c++/9.2.0/iostream **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 16


  42:/usr/include/c++/9.2.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.2.0/iostream **** {
  44:/usr/include/c++/9.2.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.2.0/iostream **** 
  46:/usr/include/c++/9.2.0/iostream ****   /**
  47:/usr/include/c++/9.2.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.2.0/iostream ****    *
  49:/usr/include/c++/9.2.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/9.2.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.2.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.2.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.2.0/iostream ****    *
  54:/usr/include/c++/9.2.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.2.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.2.0/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/9.2.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.2.0/iostream ****   */
  59:/usr/include/c++/9.2.0/iostream ****   //@{
  60:/usr/include/c++/9.2.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.2.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.2.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.2.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.2.0/iostream **** 
  65:/usr/include/c++/9.2.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.2.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.2.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.2.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/9.2.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.2.0/iostream **** #endif
  71:/usr/include/c++/9.2.0/iostream ****   //@}
  72:/usr/include/c++/9.2.0/iostream **** 
  73:/usr/include/c++/9.2.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.2.0/iostream ****   static ios_base::Init __ioinit;
 142              		.loc 2 74 25 view .LVU36
 143 00af 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 143      000000
 144              	.LVL18:
 145              		.loc 2 74 25 view .LVU37
 146 00b6 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 146      00
 147              	.LVL19:
 148              		.loc 2 74 25 view .LVU38
 149 00bb 488D1500 		leaq	__dso_handle(%rip), %rdx
 149      000000
 150 00c2 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 150      000000
 151 00c9 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 151      000000
 152 00d0 E8000000 		call	__cxa_atexit@PLT
 152      00
 153              	.LVL20:
 154              		.loc 1 653 1 view .LVU39
 155 00d5 4883C408 		addq	$8, %rsp
 156              		.cfi_def_cfa_offset 8
 157 00d9 C3       		ret
 158              		.cfi_endproc
 159              	.LFE2877:
GAS LISTING /tmp/ccvlKtfa.s 			page 17


 161              		.section	.rodata.str1.1,"aMS",@progbits,1
 162              	.LC1:
 163 0000 50524553 		.string	"PRESSED\n"
 163      5345440A 
 163      00
 164              	.LC2:
 165 0009 4553430A 		.string	"ESC\n"
 165      00
 166              		.text
 167              		.globl	_Z14handleKeypresshii
 169              	_Z14handleKeypresshii:
 170              	.LVL21:
 171              	.LFB2499:
 475:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 172              		.loc 1 475 1 is_stmt 1 view -0
 173              		.cfi_startproc
 475:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 174              		.loc 1 475 1 is_stmt 0 view .LVU41
 175 00da 4154     		pushq	%r12
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 12, -16
 178 00dc 55       		pushq	%rbp
 179              		.cfi_def_cfa_offset 24
 180              		.cfi_offset 6, -24
 181 00dd 53       		pushq	%rbx
 182              		.cfi_def_cfa_offset 32
 183              		.cfi_offset 3, -32
 184 00de 89FD     		movl	%edi, %ebp
 476:Src/main.cpp  ****     if(key == 27) //ESC
 185              		.loc 1 476 5 is_stmt 1 view .LVU42
 186              	.LVL22:
 187              	.LBB1408:
 188              	.LBI1408:
 189              		.file 3 "/usr/include/c++/9.2.0/ostream"
   1:/usr/include/c++/9.2.0/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/9.2.0/ostream **** 
   3:/usr/include/c++/9.2.0/ostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ostream **** //
   5:/usr/include/c++/9.2.0/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ostream **** // any later version.
  10:/usr/include/c++/9.2.0/ostream **** 
  11:/usr/include/c++/9.2.0/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ostream **** 
  16:/usr/include/c++/9.2.0/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ostream **** 
  20:/usr/include/c++/9.2.0/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ostream **** // <http://www.gnu.org/licenses/>.
GAS LISTING /tmp/ccvlKtfa.s 			page 18


  24:/usr/include/c++/9.2.0/ostream **** 
  25:/usr/include/c++/9.2.0/ostream **** /** @file include/ostream
  26:/usr/include/c++/9.2.0/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/ostream ****  */
  28:/usr/include/c++/9.2.0/ostream **** 
  29:/usr/include/c++/9.2.0/ostream **** //
  30:/usr/include/c++/9.2.0/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/9.2.0/ostream **** //
  32:/usr/include/c++/9.2.0/ostream **** 
  33:/usr/include/c++/9.2.0/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/9.2.0/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/9.2.0/ostream **** 
  36:/usr/include/c++/9.2.0/ostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/ostream **** 
  38:/usr/include/c++/9.2.0/ostream **** #include <ios>
  39:/usr/include/c++/9.2.0/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/9.2.0/ostream **** 
  41:/usr/include/c++/9.2.0/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/ostream **** {
  43:/usr/include/c++/9.2.0/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/ostream **** 
  45:/usr/include/c++/9.2.0/ostream ****   /**
  46:/usr/include/c++/9.2.0/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/9.2.0/ostream ****    *  @ingroup io
  48:/usr/include/c++/9.2.0/ostream ****    *
  49:/usr/include/c++/9.2.0/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/9.2.0/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/9.2.0/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/9.2.0/ostream ****    *
  53:/usr/include/c++/9.2.0/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/9.2.0/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/9.2.0/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/9.2.0/ostream ****   */
  57:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/9.2.0/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/9.2.0/ostream ****     {
  60:/usr/include/c++/9.2.0/ostream ****     public:
  61:/usr/include/c++/9.2.0/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/9.2.0/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/9.2.0/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/9.2.0/ostream **** 
  68:/usr/include/c++/9.2.0/ostream ****       // Non-standard Types:
  69:/usr/include/c++/9.2.0/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/9.2.0/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/9.2.0/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/9.2.0/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/9.2.0/ostream ****       							__num_put_type;
  74:/usr/include/c++/9.2.0/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/9.2.0/ostream **** 
  76:/usr/include/c++/9.2.0/ostream ****       /**
  77:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/9.2.0/ostream ****        *
  79:/usr/include/c++/9.2.0/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/9.2.0/ostream ****        *  derived classes' initialization lists, which pass a pointer to
GAS LISTING /tmp/ccvlKtfa.s 			page 19


  81:/usr/include/c++/9.2.0/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/9.2.0/ostream ****       */
  83:/usr/include/c++/9.2.0/ostream ****       explicit
  84:/usr/include/c++/9.2.0/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/9.2.0/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/9.2.0/ostream **** 
  87:/usr/include/c++/9.2.0/ostream ****       /**
  88:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/9.2.0/ostream ****        *
  90:/usr/include/c++/9.2.0/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/9.2.0/ostream ****       */
  92:/usr/include/c++/9.2.0/ostream ****       virtual
  93:/usr/include/c++/9.2.0/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/9.2.0/ostream **** 
  95:/usr/include/c++/9.2.0/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/9.2.0/ostream ****       class sentry;
  97:/usr/include/c++/9.2.0/ostream ****       friend class sentry;
  98:/usr/include/c++/9.2.0/ostream **** 
  99:/usr/include/c++/9.2.0/ostream ****       //@{
 100:/usr/include/c++/9.2.0/ostream ****       /**
 101:/usr/include/c++/9.2.0/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/9.2.0/ostream ****        *
 103:/usr/include/c++/9.2.0/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/9.2.0/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/9.2.0/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/9.2.0/ostream ****       */
 107:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 108:/usr/include/c++/9.2.0/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/9.2.0/ostream ****       {
 110:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/9.2.0/ostream **** 	return __pf(*this);
 114:/usr/include/c++/9.2.0/ostream ****       }
 115:/usr/include/c++/9.2.0/ostream **** 
 116:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 117:/usr/include/c++/9.2.0/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/9.2.0/ostream ****       {
 119:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 123:/usr/include/c++/9.2.0/ostream **** 	return *this;
 124:/usr/include/c++/9.2.0/ostream ****       }
 125:/usr/include/c++/9.2.0/ostream **** 
 126:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 127:/usr/include/c++/9.2.0/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/9.2.0/ostream ****       {
 129:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 133:/usr/include/c++/9.2.0/ostream **** 	return *this;
 134:/usr/include/c++/9.2.0/ostream ****       }
 135:/usr/include/c++/9.2.0/ostream ****       //@}
 136:/usr/include/c++/9.2.0/ostream **** 
 137:/usr/include/c++/9.2.0/ostream ****       //@{
GAS LISTING /tmp/ccvlKtfa.s 			page 20


 138:/usr/include/c++/9.2.0/ostream ****       /**
 139:/usr/include/c++/9.2.0/ostream ****        *  @name Inserters
 140:/usr/include/c++/9.2.0/ostream ****        *
 141:/usr/include/c++/9.2.0/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/9.2.0/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/9.2.0/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/9.2.0/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/9.2.0/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/9.2.0/ostream ****        *
 147:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/9.2.0/ostream ****        *
 150:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/9.2.0/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/9.2.0/ostream ****        *  be rethrown.
 154:/usr/include/c++/9.2.0/ostream ****       */
 155:/usr/include/c++/9.2.0/ostream **** 
 156:/usr/include/c++/9.2.0/ostream ****       //@{
 157:/usr/include/c++/9.2.0/ostream ****       /**
 158:/usr/include/c++/9.2.0/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/9.2.0/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/9.2.0/ostream ****        *
 162:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/9.2.0/ostream ****       */
 165:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 166:/usr/include/c++/9.2.0/ostream ****       operator<<(long __n)
 167:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/9.2.0/ostream **** 
 169:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 170:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/9.2.0/ostream **** 
 173:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 174:/usr/include/c++/9.2.0/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/9.2.0/ostream **** 
 177:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 178:/usr/include/c++/9.2.0/ostream ****       operator<<(short __n);
 179:/usr/include/c++/9.2.0/ostream **** 
 180:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 181:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/9.2.0/ostream ****       {
 183:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/9.2.0/ostream ****       }
 187:/usr/include/c++/9.2.0/ostream **** 
 188:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 189:/usr/include/c++/9.2.0/ostream ****       operator<<(int __n);
 190:/usr/include/c++/9.2.0/ostream **** 
 191:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 192:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/9.2.0/ostream ****       {
 194:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
GAS LISTING /tmp/ccvlKtfa.s 			page 21


 195:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/9.2.0/ostream ****       }
 198:/usr/include/c++/9.2.0/ostream **** 
 199:/usr/include/c++/9.2.0/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 201:/usr/include/c++/9.2.0/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/9.2.0/ostream **** 
 204:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 205:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/9.2.0/ostream **** #endif
 208:/usr/include/c++/9.2.0/ostream ****       //@}
 209:/usr/include/c++/9.2.0/ostream **** 
 210:/usr/include/c++/9.2.0/ostream ****       //@{
 211:/usr/include/c++/9.2.0/ostream ****       /**
 212:/usr/include/c++/9.2.0/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/9.2.0/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/9.2.0/ostream ****        *
 216:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/9.2.0/ostream ****       */
 219:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 220:/usr/include/c++/9.2.0/ostream ****       operator<<(double __f)
 221:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/9.2.0/ostream **** 
 223:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 224:/usr/include/c++/9.2.0/ostream ****       operator<<(float __f)
 225:/usr/include/c++/9.2.0/ostream ****       {
 226:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/9.2.0/ostream ****       }
 230:/usr/include/c++/9.2.0/ostream **** 
 231:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 232:/usr/include/c++/9.2.0/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/9.2.0/ostream ****       //@}
 235:/usr/include/c++/9.2.0/ostream **** 
 236:/usr/include/c++/9.2.0/ostream ****       /**
 237:/usr/include/c++/9.2.0/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/9.2.0/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/9.2.0/ostream ****        *
 241:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/9.2.0/ostream ****       */
 244:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 245:/usr/include/c++/9.2.0/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/9.2.0/ostream **** 
 248:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 250:/usr/include/c++/9.2.0/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/9.2.0/ostream ****       { return *this << "nullptr"; }
GAS LISTING /tmp/ccvlKtfa.s 			page 22


 252:/usr/include/c++/9.2.0/ostream **** #endif
 253:/usr/include/c++/9.2.0/ostream **** 
 254:/usr/include/c++/9.2.0/ostream ****       /**
 255:/usr/include/c++/9.2.0/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/9.2.0/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/9.2.0/ostream ****        *
 258:/usr/include/c++/9.2.0/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/9.2.0/ostream ****        *  in that it also constructs a sentry object and has the same error
 260:/usr/include/c++/9.2.0/ostream ****        *  handling behavior.
 261:/usr/include/c++/9.2.0/ostream ****        *
 262:/usr/include/c++/9.2.0/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/9.2.0/ostream ****        *
 264:/usr/include/c++/9.2.0/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/9.2.0/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/9.2.0/ostream ****        *
 267:/usr/include/c++/9.2.0/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/9.2.0/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/9.2.0/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/9.2.0/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/9.2.0/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/9.2.0/ostream ****        *
 273:/usr/include/c++/9.2.0/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/9.2.0/ostream ****       */
 275:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 276:/usr/include/c++/9.2.0/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/9.2.0/ostream ****       //@}
 278:/usr/include/c++/9.2.0/ostream **** 
 279:/usr/include/c++/9.2.0/ostream ****       //@{
 280:/usr/include/c++/9.2.0/ostream ****       /**
 281:/usr/include/c++/9.2.0/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/9.2.0/ostream ****        *
 283:/usr/include/c++/9.2.0/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/9.2.0/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/9.2.0/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/9.2.0/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/9.2.0/ostream ****        *  for more.
 288:/usr/include/c++/9.2.0/ostream ****        *
 289:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/9.2.0/ostream ****        *
 292:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/9.2.0/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/9.2.0/ostream ****        *  without completing its actions.
 296:/usr/include/c++/9.2.0/ostream ****       */
 297:/usr/include/c++/9.2.0/ostream **** 
 298:/usr/include/c++/9.2.0/ostream ****       /**
 299:/usr/include/c++/9.2.0/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/9.2.0/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 302:/usr/include/c++/9.2.0/ostream ****        *
 303:/usr/include/c++/9.2.0/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/9.2.0/ostream ****        *
 305:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 307:/usr/include/c++/9.2.0/ostream ****       */
 308:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
GAS LISTING /tmp/ccvlKtfa.s 			page 23


 309:/usr/include/c++/9.2.0/ostream ****       put(char_type __c);
 310:/usr/include/c++/9.2.0/ostream **** 
 311:/usr/include/c++/9.2.0/ostream ****       /**
 312:/usr/include/c++/9.2.0/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/9.2.0/ostream ****       */
 316:/usr/include/c++/9.2.0/ostream ****       void
 317:/usr/include/c++/9.2.0/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/9.2.0/ostream ****       {
 319:/usr/include/c++/9.2.0/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/9.2.0/ostream **** 	if (__put != __n)
 321:/usr/include/c++/9.2.0/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/9.2.0/ostream ****       }
 323:/usr/include/c++/9.2.0/ostream **** 
 324:/usr/include/c++/9.2.0/ostream ****       /**
 325:/usr/include/c++/9.2.0/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 329:/usr/include/c++/9.2.0/ostream ****        *
 330:/usr/include/c++/9.2.0/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/9.2.0/ostream ****        *  one of the following happens:
 332:/usr/include/c++/9.2.0/ostream ****        *
 333:/usr/include/c++/9.2.0/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/9.2.0/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/9.2.0/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/9.2.0/ostream ****        *
 337:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 339:/usr/include/c++/9.2.0/ostream ****       */
 340:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 341:/usr/include/c++/9.2.0/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/9.2.0/ostream ****       //@}
 343:/usr/include/c++/9.2.0/ostream **** 
 344:/usr/include/c++/9.2.0/ostream ****       /**
 345:/usr/include/c++/9.2.0/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 347:/usr/include/c++/9.2.0/ostream ****        *
 348:/usr/include/c++/9.2.0/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/9.2.0/ostream ****        *
 350:/usr/include/c++/9.2.0/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/9.2.0/ostream ****        *  sets badbit.
 352:/usr/include/c++/9.2.0/ostream ****       */
 353:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 354:/usr/include/c++/9.2.0/ostream ****       flush();
 355:/usr/include/c++/9.2.0/ostream **** 
 356:/usr/include/c++/9.2.0/ostream ****       /**
 357:/usr/include/c++/9.2.0/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/9.2.0/ostream ****        *  @return  A file position object.
 359:/usr/include/c++/9.2.0/ostream ****        *
 360:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/9.2.0/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/9.2.0/ostream ****       */
 363:/usr/include/c++/9.2.0/ostream ****       pos_type
 364:/usr/include/c++/9.2.0/ostream ****       tellp();
 365:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 24


 366:/usr/include/c++/9.2.0/ostream ****       /**
 367:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/9.2.0/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 370:/usr/include/c++/9.2.0/ostream ****        *
 371:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/9.2.0/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/9.2.0/ostream ****       */
 374:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 375:/usr/include/c++/9.2.0/ostream ****       seekp(pos_type);
 376:/usr/include/c++/9.2.0/ostream **** 
 377:/usr/include/c++/9.2.0/ostream ****       /**
 378:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/9.2.0/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/9.2.0/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 382:/usr/include/c++/9.2.0/ostream ****        *
 383:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/9.2.0/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/9.2.0/ostream ****       */
 386:/usr/include/c++/9.2.0/ostream ****        __ostream_type&
 387:/usr/include/c++/9.2.0/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/9.2.0/ostream **** 
 389:/usr/include/c++/9.2.0/ostream ****     protected:
 390:/usr/include/c++/9.2.0/ostream ****       basic_ostream()
 391:/usr/include/c++/9.2.0/ostream ****       { this->init(0); }
 392:/usr/include/c++/9.2.0/ostream **** 
 393:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/9.2.0/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/9.2.0/ostream **** 
 397:/usr/include/c++/9.2.0/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/9.2.0/ostream **** 
 399:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/9.2.0/ostream ****       : __ios_type()
 401:/usr/include/c++/9.2.0/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/9.2.0/ostream **** 
 403:/usr/include/c++/9.2.0/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/9.2.0/ostream **** 
 405:/usr/include/c++/9.2.0/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/9.2.0/ostream **** 
 407:/usr/include/c++/9.2.0/ostream ****       basic_ostream&
 408:/usr/include/c++/9.2.0/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/9.2.0/ostream ****       {
 410:/usr/include/c++/9.2.0/ostream **** 	swap(__rhs);
 411:/usr/include/c++/9.2.0/ostream **** 	return *this;
 412:/usr/include/c++/9.2.0/ostream ****       }
 413:/usr/include/c++/9.2.0/ostream **** 
 414:/usr/include/c++/9.2.0/ostream ****       void
 415:/usr/include/c++/9.2.0/ostream ****       swap(basic_ostream& __rhs)
 416:/usr/include/c++/9.2.0/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/9.2.0/ostream **** #endif
 418:/usr/include/c++/9.2.0/ostream **** 
 419:/usr/include/c++/9.2.0/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/9.2.0/ostream **** 	__ostream_type&
 421:/usr/include/c++/9.2.0/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/9.2.0/ostream ****     };
GAS LISTING /tmp/ccvlKtfa.s 			page 25


 423:/usr/include/c++/9.2.0/ostream **** 
 424:/usr/include/c++/9.2.0/ostream ****   /**
 425:/usr/include/c++/9.2.0/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/9.2.0/ostream ****    *
 427:/usr/include/c++/9.2.0/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/9.2.0/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/9.2.0/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/9.2.0/ostream ****   */
 431:/usr/include/c++/9.2.0/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/9.2.0/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/9.2.0/ostream ****     {
 434:/usr/include/c++/9.2.0/ostream ****       // Data Members.
 435:/usr/include/c++/9.2.0/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/9.2.0/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/9.2.0/ostream **** 
 438:/usr/include/c++/9.2.0/ostream ****     public:
 439:/usr/include/c++/9.2.0/ostream ****       /**
 440:/usr/include/c++/9.2.0/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/9.2.0/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/9.2.0/ostream ****        *
 443:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/9.2.0/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/9.2.0/ostream ****        *  is called to synchronize the output sequences.
 446:/usr/include/c++/9.2.0/ostream ****        *
 447:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/9.2.0/ostream ****        *  true (@a okay).
 449:/usr/include/c++/9.2.0/ostream ****       */
 450:/usr/include/c++/9.2.0/ostream ****       explicit
 451:/usr/include/c++/9.2.0/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/9.2.0/ostream **** 
 453:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic push
 454:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/9.2.0/ostream ****       /**
 456:/usr/include/c++/9.2.0/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/9.2.0/ostream ****        *
 458:/usr/include/c++/9.2.0/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/9.2.0/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/9.2.0/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/9.2.0/ostream ****       */
 462:/usr/include/c++/9.2.0/ostream ****       ~sentry()
 463:/usr/include/c++/9.2.0/ostream ****       {
 464:/usr/include/c++/9.2.0/ostream **** 	// XXX MT
 465:/usr/include/c++/9.2.0/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/9.2.0/ostream **** 	  {
 467:/usr/include/c++/9.2.0/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:/usr/include/c++/9.2.0/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/9.2.0/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/9.2.0/ostream **** 	  }
 471:/usr/include/c++/9.2.0/ostream ****       }
 472:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic pop
 473:/usr/include/c++/9.2.0/ostream **** 
 474:/usr/include/c++/9.2.0/ostream ****       /**
 475:/usr/include/c++/9.2.0/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/9.2.0/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/9.2.0/ostream ****        *
 478:/usr/include/c++/9.2.0/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/9.2.0/ostream ****        *  return value is that of the sentry state (true == okay).
GAS LISTING /tmp/ccvlKtfa.s 			page 26


 480:/usr/include/c++/9.2.0/ostream ****       */
 481:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/9.2.0/ostream ****       explicit
 483:/usr/include/c++/9.2.0/ostream **** #endif
 484:/usr/include/c++/9.2.0/ostream ****       operator bool() const
 485:/usr/include/c++/9.2.0/ostream ****       { return _M_ok; }
 486:/usr/include/c++/9.2.0/ostream ****     };
 487:/usr/include/c++/9.2.0/ostream **** 
 488:/usr/include/c++/9.2.0/ostream ****   //@{
 489:/usr/include/c++/9.2.0/ostream ****   /**
 490:/usr/include/c++/9.2.0/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/9.2.0/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 494:/usr/include/c++/9.2.0/ostream ****    *
 495:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/9.2.0/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/9.2.0/ostream ****    *  called.
 500:/usr/include/c++/9.2.0/ostream ****    *
 501:/usr/include/c++/9.2.0/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/9.2.0/ostream ****    *  @c char, the character is widened before insertion.
 503:/usr/include/c++/9.2.0/ostream ****   */
 504:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/9.2.0/ostream **** 
 509:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/9.2.0/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/9.2.0/ostream **** 
 514:/usr/include/c++/9.2.0/ostream ****   // Specialization
 515:/usr/include/c++/9.2.0/ostream ****   template <class _Traits>
 516:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/9.2.0/ostream **** 
 520:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 521:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 522:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 525:/usr/include/c++/9.2.0/ostream **** 
 526:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 527:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 530:/usr/include/c++/9.2.0/ostream ****   //@}
 531:/usr/include/c++/9.2.0/ostream **** 
 532:/usr/include/c++/9.2.0/ostream ****   //@{
 533:/usr/include/c++/9.2.0/ostream ****   /**
 534:/usr/include/c++/9.2.0/ostream ****    *  @brief  String inserters
 535:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 536:/usr/include/c++/9.2.0/ostream ****    *  @param  __s  A character string.
GAS LISTING /tmp/ccvlKtfa.s 			page 27


 537:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 538:/usr/include/c++/9.2.0/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 539:/usr/include/c++/9.2.0/ostream ****    *
 540:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 541:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 542:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 543:/usr/include/c++/9.2.0/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 544:/usr/include/c++/9.2.0/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 545:/usr/include/c++/9.2.0/ostream ****   */
 546:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 547:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 548:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 549:/usr/include/c++/9.2.0/ostream ****     {
 550:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 551:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 552:/usr/include/c++/9.2.0/ostream ****       else
 553:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 554:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 555:/usr/include/c++/9.2.0/ostream ****       return __out;
 556:/usr/include/c++/9.2.0/ostream ****     }
 557:/usr/include/c++/9.2.0/ostream **** 
 558:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/9.2.0/ostream ****     basic_ostream<_CharT, _Traits> &
 560:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 561:/usr/include/c++/9.2.0/ostream **** 
 562:/usr/include/c++/9.2.0/ostream ****   // Partial specializations
 563:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 564:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 565:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 190              		.loc 3 565 5 view .LVU43
 191              		.loc 3 565 5 is_stmt 0 view .LVU44
 192              	.LBE1408:
 193              		.file 4 "/usr/include/c++/9.2.0/bits/char_traits.h"
   1:/usr/include/c++/9.2.0/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/char_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/char_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/char_traits.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 28


  25:/usr/include/c++/9.2.0/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/char_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  31:/usr/include/c++/9.2.0/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  33:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  34:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/9.2.0/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  37:/usr/include/c++/9.2.0/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  43:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/c++/9.2.0/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
  46:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  47:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/9.2.0/bits/char_traits.h **** {
  49:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  51:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  52:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  54:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  64:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
  69:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  70:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  71:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  72:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  74:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
GAS LISTING /tmp/ccvlKtfa.s 			page 29


  82:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
  86:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits
  88:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  89:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  95:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  99:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 103:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 107:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 110:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s);
 112:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 113:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 117:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 119:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 120:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 122:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 123:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 125:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 129:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 133:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof()
GAS LISTING /tmp/ccvlKtfa.s 			page 30


 139:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 141:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
 145:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 146:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 147:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/c++/9.2.0/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 151:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return -1;
 154:/usr/include/c++/9.2.0/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 1;
 156:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 157:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 158:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 159:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/c++/9.2.0/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 164:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/c++/9.2.0/bits/char_traits.h ****         ++__i;
 167:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i;
 168:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 169:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 170:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/c++/9.2.0/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 175:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/c++/9.2.0/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/c++/9.2.0/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 179:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 180:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 181:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/c++/9.2.0/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 186:/usr/include/c++/9.2.0/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __s1;
 188:/usr/include/c++/9.2.0/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/c++/9.2.0/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 191:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 192:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/c++/9.2.0/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
GAS LISTING /tmp/ccvlKtfa.s 			page 31


 196:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 197:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s1;
 200:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 201:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 202:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 205:/usr/include/c++/9.2.0/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 207:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s;
 210:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 211:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 212:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/c++/9.2.0/bits/char_traits.h **** } // namespace
 214:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 215:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/c++/9.2.0/bits/char_traits.h **** {
 217:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 219:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/c++/9.2.0/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 223:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __s  The string.
 226:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 227:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 229:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 233:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __s;
 235:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 238:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__s++;
 240:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 242:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 243:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 244:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 245:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 250:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 252:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
GAS LISTING /tmp/ccvlKtfa.s 			page 32


 253:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 256:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __a;
 258:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __n;
 259:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 262:/usr/include/c++/9.2.0/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__i++;
 265:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 267:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 268:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 269:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 270:/usr/include/c++/9.2.0/bits/char_traits.h ****   // 21.1
 271:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 272:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 274:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 279:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/c++/9.2.0/bits/char_traits.h ****   */
 283:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<class _CharT>
 284:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/c++/9.2.0/bits/char_traits.h ****     { };
 286:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 287:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 288:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 290:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 292:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 298:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 302:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 306:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 309:/usr/include/c++/9.2.0/bits/char_traits.h **** 	// LWG 467.
GAS LISTING /tmp/ccvlKtfa.s 			page 33


 310:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/c++/9.2.0/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 313:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 314:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 317:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 318:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 319:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 325:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 327:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 328:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 331:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 335:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_strlen(__s);
 194              		.loc 4 335 2 is_stmt 1 view .LVU45
 195              	.LBB1410:
 196              	.LBB1409:
 566:/usr/include/c++/9.2.0/ostream ****     {
 567:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 568:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 569:/usr/include/c++/9.2.0/ostream ****       else
 570:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 197              		.loc 3 570 18 is_stmt 0 view .LVU46
 198 00e0 BA080000 		movl	$8, %edx
 198      00
 199              	.LVL23:
 200              		.loc 3 570 18 view .LVU47
 201 00e5 488D3500 		leaq	.LC1(%rip), %rsi
 201      000000
 202              	.LVL24:
 203              		.loc 3 570 18 view .LVU48
 204 00ec 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 204      000000
 205              	.LVL25:
 206              		.loc 3 570 18 view .LVU49
 207 00f3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 207      00
 208              	.LVL26:
 209              		.loc 3 570 18 view .LVU50
 210              	.LBE1409:
 211              	.LBE1410:
 476:Src/main.cpp  ****     if(key == 27) //ESC
 212              		.loc 1 476 33 view .LVU51
 213 00f8 400FB6F5 		movzbl	%bpl, %esi
 214 00fc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
GAS LISTING /tmp/ccvlKtfa.s 			page 34


 214      000000
 215 0103 E8000000 		call	_ZNSolsEi@PLT
 215      00
 216              	.LVL27:
 217 0108 4889C3   		movq	%rax, %rbx
 218              	.LVL28:
 219              	.LBB1411:
 220              	.LBI1411:
 108:/usr/include/c++/9.2.0/ostream ****       {
 221              		.loc 3 108 7 is_stmt 1 view .LVU52
 222              	.LBB1412:
 223              	.LBI1412:
 571:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 572:/usr/include/c++/9.2.0/ostream ****       return __out;
 573:/usr/include/c++/9.2.0/ostream ****     }
 574:/usr/include/c++/9.2.0/ostream **** 
 575:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 576:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 577:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 578:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 579:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 580:/usr/include/c++/9.2.0/ostream **** 
 581:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 582:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits> &
 583:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 584:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 585:/usr/include/c++/9.2.0/ostream ****   //@}
 586:/usr/include/c++/9.2.0/ostream **** 
 587:/usr/include/c++/9.2.0/ostream ****   // Standard basic_ostream manipulators
 588:/usr/include/c++/9.2.0/ostream **** 
 589:/usr/include/c++/9.2.0/ostream ****   /**
 590:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a newline and flush the stream.
 591:/usr/include/c++/9.2.0/ostream ****    *
 592:/usr/include/c++/9.2.0/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 593:/usr/include/c++/9.2.0/ostream ****    *  desired, leading to poor buffering performance.  See
 594:/usr/include/c++/9.2.0/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 595:/usr/include/c++/9.2.0/ostream ****    *  for more on this subject.
 596:/usr/include/c++/9.2.0/ostream ****   */
 597:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 598:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 599:/usr/include/c++/9.2.0/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 224              		.loc 3 599 5 view .LVU53
 225              	.LBB1413:
 600:/usr/include/c++/9.2.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 226              		.loc 3 600 19 is_stmt 0 view .LVU54
 227 010b 488B00   		movq	(%rax), %rax
 228              	.LVL29:
 229              		.loc 3 600 19 view .LVU55
 230 010e 4889D9   		movq	%rbx, %rcx
 231 0111 480348E8 		addq	-24(%rax), %rcx
 232              	.LVL30:
 233              	.LBB1414:
 234              	.LBI1414:
 235              		.file 5 "/usr/include/c++/9.2.0/bits/basic_ios.h"
   1:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
GAS LISTING /tmp/ccvlKtfa.s 			page 35


   4:/usr/include/c++/9.2.0/bits/basic_ios.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/9.2.0/bits/basic_ios.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/9.2.0/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  33:/usr/include/c++/9.2.0/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  35:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  41:/usr/include/c++/9.2.0/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/basic_ios.h **** {
  43:/usr/include/c++/9.2.0/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  45:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/9.2.0/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  49:/usr/include/c++/9.2.0/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
  51:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/9.2.0/bits/basic_ios.h ****     }
  53:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  54:/usr/include/c++/9.2.0/bits/basic_ios.h ****   /**
  55:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  59:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
GAS LISTING /tmp/ccvlKtfa.s 			page 36


  61:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  63:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/9.2.0/bits/basic_ios.h ****   */
  66:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/9.2.0/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  69:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
  70:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  72:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  76:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  82:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  85:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  87:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_get_type;
  92:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  94:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/9.2.0/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 101:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 108:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
 109:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 111:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 113:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 116:/usr/include/c++/9.2.0/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit operator bool() const
GAS LISTING /tmp/ccvlKtfa.s 			page 37


 118:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/9.2.0/bits/basic_ios.h **** #else
 120:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/9.2.0/bits/basic_ios.h **** #endif
 123:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 124:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 125:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator!() const
 126:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 129:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 130:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 133:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 136:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf_state; }
 139:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 140:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 141:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 144:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 147:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 148:/usr/include/c++/9.2.0/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 149:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 150:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 151:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 154:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 156:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 157:/usr/include/c++/9.2.0/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 160:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 164:/usr/include/c++/9.2.0/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 166:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 172:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 173:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 174:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
GAS LISTING /tmp/ccvlKtfa.s 			page 38


 175:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 177:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 179:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 180:/usr/include/c++/9.2.0/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 183:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 184:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 187:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 189:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 190:/usr/include/c++/9.2.0/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 193:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 194:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 197:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 200:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 201:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 204:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 205:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 206:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 208:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 210:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 211:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 214:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 215:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 218:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 221:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 225:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 226:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 229:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in the error flags, then an exception of type
GAS LISTING /tmp/ccvlKtfa.s 			page 39


 232:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 234:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <fstream>
 240:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 242:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 246:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 248:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 251:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 256:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 257:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 259:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/9.2.0/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 262:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 263:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 265:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 267:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 269:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/9.2.0/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 276:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 278:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 281:/usr/include/c++/9.2.0/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/9.2.0/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 284:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 286:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           not tied.
GAS LISTING /tmp/ccvlKtfa.s 			page 40


 289:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 290:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 294:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_tie; }
 297:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 298:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 299:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 304:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 306:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 309:/usr/include/c++/9.2.0/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/9.2.0/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 313:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 314:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 315:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 318:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 320:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 324:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 325:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 329:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 332:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 339:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 343:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 41


 346:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 349:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 350:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 354:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 360:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios&
 361:/usr/include/c++/9.2.0/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 364:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 367:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 369:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 370:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 372:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  }
 377:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 379:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 380:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 381:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 385:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 389:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 392:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 396:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 397:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 399:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
GAS LISTING /tmp/ccvlKtfa.s 			page 42


 403:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 406:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 409:/usr/include/c++/9.2.0/bits/basic_ios.h ****       locale
 410:/usr/include/c++/9.2.0/bits/basic_ios.h ****       imbue(const locale& __loc);
 411:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 412:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 413:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 418:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 421:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 426:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 427:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 429:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char
 430:/usr/include/c++/9.2.0/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 433:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 434:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 438:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 440:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 445:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 448:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/9.2.0/bits/basic_ios.h ****       widen(char __c) const
 236              		.loc 5 449 7 is_stmt 1 view .LVU56
 237              	.LBB1415:
 450:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 238              		.loc 5 450 30 is_stmt 0 view .LVU57
 239 0115 4C8BA1F0 		movq	240(%rcx), %r12
 239      000000
 240              	.LVL31:
 241              	.LBB1416:
 242              	.LBI1416:
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
GAS LISTING /tmp/ccvlKtfa.s 			page 43


 243              		.loc 5 47 5 is_stmt 1 view .LVU58
 244              	.LBB1417:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 245              		.loc 5 49 7 is_stmt 0 view .LVU59
 246 011c 4D85E4   		testq	%r12, %r12
 247 011f 742D     		je	.L20
 248              	.LVL32:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 249              		.loc 5 49 7 view .LVU60
 250              	.LBE1417:
 251              	.LBE1416:
 252              	.LBB1419:
 253              	.LBI1419:
 254              		.file 6 "/usr/include/c++/9.2.0/bits/locale_facets.h"
   1:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
   3:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
   5:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  11:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  16:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  20:/usr/include/c++/9.2.0/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  25:/usr/include/c++/9.2.0/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/9.2.0/bits/locale_facets.h ****  */
  29:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  30:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  31:/usr/include/c++/9.2.0/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  33:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  34:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/9.2.0/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  37:/usr/include/c++/9.2.0/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  39:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
GAS LISTING /tmp/ccvlKtfa.s 			page 44


  44:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  50:/usr/include/c++/9.2.0/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/9.2.0/bits/locale_facets.h **** {
  52:/usr/include/c++/9.2.0/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  54:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  59:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  62:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  65:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  67:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  68:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _Tp>
  72:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  73:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  75:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  76:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  79:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  82:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  84:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  87:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  89:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  92:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/9.2.0/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
  97:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static void
  98:/usr/include/c++/9.2.0/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
GAS LISTING /tmp/ccvlKtfa.s 			page 45


 101:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 102:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _CharT*
 109:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 113:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 118:/usr/include/c++/9.2.0/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 121:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 124:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 125:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 128:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _OutIter
 129:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 131:/usr/include/c++/9.2.0/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 135:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 136:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 137:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 140:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 141:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 143:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 146:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 149:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 152:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 153:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 157:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
GAS LISTING /tmp/ccvlKtfa.s 			page 46


 158:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 160:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 164:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 166:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 168:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool
 169:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 172:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 173:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 175:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 180:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 185:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 186:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 189:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 190:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 192:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 196:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 201:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 205:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 206:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 208:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 212:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
GAS LISTING /tmp/ccvlKtfa.s 			page 47


 215:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 217:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 221:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 222:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 223:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 224:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 228:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 229:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 231:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 234:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 235:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 236:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 238:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 242:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 246:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 250:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 251:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 253:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 257:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 260:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 264:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 265:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 267:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 271:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
GAS LISTING /tmp/ccvlKtfa.s 			page 48


 272:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 275:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 279:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 280:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 282:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 286:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 289:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type.
 291:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 292:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 296:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 297:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 299:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 303:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 306:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 311:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 315:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 316:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 318:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 323:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 326:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
GAS LISTING /tmp/ccvlKtfa.s 			page 49


 329:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 330:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char
 331:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 334:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 335:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 337:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 343:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 346:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 352:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 357:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 361:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 364:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 365:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 367:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 369:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 373:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 377:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 380:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 381:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 383:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the input.
GAS LISTING /tmp/ccvlKtfa.s 			page 50


 386:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 387:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 391:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 396:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 400:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 401:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 403:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 406:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 410:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 415:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 419:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 420:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 422:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 425:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 429:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 434:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 438:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 439:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 441:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
GAS LISTING /tmp/ccvlKtfa.s 			page 51


 443:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 445:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 449:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 452:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 455:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 456:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 458:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 461:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 465:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 469:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 472:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 473:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 474:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 475:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 478:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 482:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 485:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 488:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 489:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 491:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 494:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 498:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
GAS LISTING /tmp/ccvlKtfa.s 			page 52


 500:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 502:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 505:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 506:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 508:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 511:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 514:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 515:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 518:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 519:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 521:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 524:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 525:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 527:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 530:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 534:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 537:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 542:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 545:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 546:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 548:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 552:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 556:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
GAS LISTING /tmp/ccvlKtfa.s 			page 53


 557:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 559:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 563:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 566:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 567:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 569:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 575:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 579:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 582:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 588:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 592:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 593:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 594:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 597:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 601:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 608:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 611:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
GAS LISTING /tmp/ccvlKtfa.s 			page 54


 614:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 615:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 619:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 622:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 625:/usr/include/c++/9.2.0/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~ctype();
 628:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 629:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 632:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 633:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 635:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 638:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 642:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 645:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 648:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 651:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 654:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 657:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 660:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 663:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 667:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 668:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/9.2.0/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 55


 671:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 672:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 675:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  optimizations as well.
 679:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 680:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 683:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 684:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 685:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 688:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Data Members:
 690:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:/usr/include/c++/9.2.0/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 701:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 702:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 707:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 708:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 710:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 712:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 717:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 720:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 721:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 723:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 725:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
GAS LISTING /tmp/ccvlKtfa.s 			page 56


 728:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 730:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 734:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 735:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char classification.
 736:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 737:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 739:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 743:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 746:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 747:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 749:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 753:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 758:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 759:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 761:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 762:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 764:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 767:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 772:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 775:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 776:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 778:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 781:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
GAS LISTING /tmp/ccvlKtfa.s 			page 57


 785:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 786:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 789:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 790:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 792:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 795:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 798:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 799:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 801:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 804:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 805:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 806:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 808:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 811:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 814:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 818:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 822:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 823:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 825:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 828:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 831:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 834:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 838:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 839:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 841:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
GAS LISTING /tmp/ccvlKtfa.s 			page 58


 842:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 844:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 847:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 850:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 851:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 855:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 856:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 858:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument will be returned unchanged.
 861:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 862:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 865:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 868:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted character.
 870:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 871:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 255              		.loc 6 872 7 is_stmt 1 view .LVU61
 256              	.LBB1420:
 873:/usr/include/c++/9.2.0/bits/locale_facets.h ****       {
 874:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	if (_M_widen_ok)
 257              		.loc 6 874 2 view .LVU62
 258 0121 41807C24 		cmpb	$0, 56(%r12)
 258      3800
 259 0127 742A     		je	.L16
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 260              		.loc 6 875 4 view .LVU63
 261              		.loc 6 875 51 is_stmt 0 view .LVU64
 262 0129 410FB674 		movzbl	67(%r12), %esi
 262      2443
 263              	.LVL33:
 264              	.L17:
 265              		.loc 6 875 51 view .LVU65
 266              	.LBE1420:
 267              	.LBE1419:
 268              	.LBE1415:
 269              	.LBE1414:
 270              		.loc 3 600 19 view .LVU66
 271 012f 400FBEF6 		movsbl	%sil, %esi
 272 0133 4889DF   		movq	%rbx, %rdi
 273 0136 E8000000 		call	_ZNSo3putEc@PLT
 273      00
 274              	.LVL34:
GAS LISTING /tmp/ccvlKtfa.s 			page 59


 275 013b 4889C7   		movq	%rax, %rdi
 276              	.LVL35:
 277              	.LBB1425:
 278              	.LBI1425:
 601:/usr/include/c++/9.2.0/ostream **** 
 602:/usr/include/c++/9.2.0/ostream ****   /**
 603:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a null character into the output sequence.
 604:/usr/include/c++/9.2.0/ostream ****    *
 605:/usr/include/c++/9.2.0/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 606:/usr/include/c++/9.2.0/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 607:/usr/include/c++/9.2.0/ostream ****    *  string terminator.
 608:/usr/include/c++/9.2.0/ostream ****   */
 609:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 610:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 611:/usr/include/c++/9.2.0/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 612:/usr/include/c++/9.2.0/ostream ****     { return __os.put(_CharT()); }
 613:/usr/include/c++/9.2.0/ostream **** 
 614:/usr/include/c++/9.2.0/ostream ****   /**
 615:/usr/include/c++/9.2.0/ostream ****    *  @brief  Flushes the output stream.
 616:/usr/include/c++/9.2.0/ostream ****    *
 617:/usr/include/c++/9.2.0/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 618:/usr/include/c++/9.2.0/ostream ****   */
 619:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 620:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 621:/usr/include/c++/9.2.0/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 279              		.loc 3 621 5 is_stmt 1 view .LVU67
 280              	.LBB1426:
 622:/usr/include/c++/9.2.0/ostream ****     { return __os.flush(); }
 281              		.loc 3 622 25 is_stmt 0 view .LVU68
 282 013e E8000000 		call	_ZNSo5flushEv@PLT
 282      00
 283              	.LVL36:
 284              		.loc 3 622 25 view .LVU69
 285              	.LBE1426:
 286              	.LBE1425:
 287              	.LBE1413:
 288              	.LBE1412:
 289              	.LBE1411:
 477:Src/main.cpp  ****     {
 290              		.loc 1 477 5 is_stmt 1 view .LVU70
 291 0143 4080FD1B 		cmpb	$27, %bpl
 292 0147 7425     		je	.L21
 293              	.L14:
 482:Src/main.cpp  **** 
 294              		.loc 1 482 1 is_stmt 0 view .LVU71
 295 0149 5B       		popq	%rbx
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 24
 298 014a 5D       		popq	%rbp
 299              		.cfi_def_cfa_offset 16
 300 014b 415C     		popq	%r12
 301              		.cfi_def_cfa_offset 8
 302 014d C3       		ret
 303              	.LVL37:
 304              	.L20:
 305              		.cfi_restore_state
 306              	.LBB1430:
GAS LISTING /tmp/ccvlKtfa.s 			page 60


 307              	.LBB1429:
 308              	.LBB1428:
 309              	.LBB1427:
 310              	.LBB1424:
 311              	.LBB1422:
 312              	.LBB1418:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 313              		.loc 5 50 18 view .LVU72
 314 014e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 314      00
 315              	.LVL38:
 316              	.L16:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 317              		.loc 5 50 18 view .LVU73
 318              	.LBE1418:
 319              	.LBE1422:
 320              	.LBB1423:
 321              	.LBB1421:
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 322              		.loc 6 876 2 is_stmt 1 view .LVU74
 323              		.loc 6 876 21 is_stmt 0 view .LVU75
 324 0153 4C89E7   		movq	%r12, %rdi
 325 0156 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 325      00
 326              	.LVL39:
 877:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 327              		.loc 6 877 2 is_stmt 1 view .LVU76
 328              		.loc 6 877 27 is_stmt 0 view .LVU77
 329 015b 498B0424 		movq	(%r12), %rax
 330              		.loc 6 877 23 view .LVU78
 331 015f BE0A0000 		movl	$10, %esi
 331      00
 332 0164 4C89E7   		movq	%r12, %rdi
 333 0167 FF5030   		call	*48(%rax)
 334              	.LVL40:
 335 016a 89C6     		movl	%eax, %esi
 336              		.loc 6 877 27 view .LVU79
 337 016c EBC1     		jmp	.L17
 338              	.LVL41:
 339              	.L21:
 340              		.loc 6 877 27 view .LVU80
 341              	.LBE1421:
 342              	.LBE1423:
 343              	.LBE1424:
 344              	.LBE1427:
 345              	.LBE1428:
 346              	.LBE1429:
 347              	.LBE1430:
 479:Src/main.cpp  **** 		terminated = true;
 348              		.loc 1 479 6 is_stmt 1 view .LVU81
 349              	.LBB1431:
 350              	.LBI1431:
 565:/usr/include/c++/9.2.0/ostream ****     {
 351              		.loc 3 565 5 view .LVU82
 565:/usr/include/c++/9.2.0/ostream ****     {
 352              		.loc 3 565 5 is_stmt 0 view .LVU83
 353              	.LBE1431:
GAS LISTING /tmp/ccvlKtfa.s 			page 61


 354              		.loc 4 335 2 is_stmt 1 view .LVU84
 355              	.LBB1433:
 356              	.LBB1432:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 357              		.loc 3 570 18 is_stmt 0 view .LVU85
 358 016e BA040000 		movl	$4, %edx
 358      00
 359 0173 488D3500 		leaq	.LC2(%rip), %rsi
 359      000000
 360 017a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 360      000000
 361 0181 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 361      00
 362              	.LVL42:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 363              		.loc 3 570 18 view .LVU86
 364              	.LBE1432:
 365              	.LBE1433:
 480:Src/main.cpp  ****     }
 366              		.loc 1 480 3 is_stmt 1 view .LVU87
 480:Src/main.cpp  ****     }
 367              		.loc 1 480 14 is_stmt 0 view .LVU88
 368 0186 C6050000 		movb	$1, terminated(%rip)
 368      000001
 482:Src/main.cpp  **** 
 369              		.loc 1 482 1 view .LVU89
 370 018d EBBA     		jmp	.L14
 371              		.cfi_endproc
 372              	.LFE2499:
 374              		.globl	_Z17getMinDatasetSizev
 376              	_Z17getMinDatasetSizev:
 377              	.LFB2476:
  64:Src/main.cpp  **** 	// int ret = ((MIN_DATASEIZE_FUNC_A * pow((double)calculatedPoints, 2)) + (MIN_DATASEIZE_FUNC_B * 
 378              		.loc 1 64 1 is_stmt 1 view -0
 379              		.cfi_startproc
  66:Src/main.cpp  **** 	if(ret < 2)
 380              		.loc 1 66 2 view .LVU91
  66:Src/main.cpp  **** 	if(ret < 2)
 381              		.loc 1 66 6 is_stmt 0 view .LVU92
 382 018f 488B1500 		movq	numOfObstacles(%rip), %rdx
 382      000000
 383 0196 89D0     		movl	%edx, %eax
 384              	.LVL43:
  67:Src/main.cpp  **** 		ret = 2;
 385              		.loc 1 67 2 is_stmt 1 view .LVU93
 386 0198 83FA01   		cmpl	$1, %edx
 387 019b 7E0C     		jle	.L26
 388              	.LVL44:
 389              	.L23:
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 390              		.loc 1 69 2 view .LVU94
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 391              		.loc 1 69 5 is_stmt 0 view .LVU95
 392 019d 4863C8   		movslq	%eax, %rcx
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 393              		.loc 1 69 2 view .LVU96
 394 01a0 4839CA   		cmpq	%rcx, %rdx
GAS LISTING /tmp/ccvlKtfa.s 			page 62


 395 01a3 7703     		ja	.L24
  70:Src/main.cpp  **** 
 396              		.loc 1 70 3 is_stmt 1 view .LVU97
  70:Src/main.cpp  **** 
 397              		.loc 1 70 7 is_stmt 0 view .LVU98
 398 01a5 8D42FF   		leal	-1(%rdx), %eax
 399              	.LVL45:
 400              	.L24:
  73:Src/main.cpp  **** }
 401              		.loc 1 73 2 is_stmt 1 view .LVU99
  74:Src/main.cpp  **** 
 402              		.loc 1 74 1 is_stmt 0 view .LVU100
 403 01a8 C3       		ret
 404              	.L26:
  68:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 405              		.loc 1 68 7 view .LVU101
 406 01a9 B8020000 		movl	$2, %eax
 406      00
 407              	.LVL46:
  68:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 408              		.loc 1 68 7 view .LVU102
 409 01ae EBED     		jmp	.L23
 410              		.cfi_endproc
 411              	.LFE2476:
 413              		.globl	_Z10createVectPK6coordsf
 415              	_Z10createVectPK6coordsf:
 416              	.LVL47:
 417              	.LFB2477:
  92:Src/main.cpp  **** 	struct vect ret;
 418              		.loc 1 92 1 is_stmt 1 view -0
 419              		.cfi_startproc
  92:Src/main.cpp  **** 	struct vect ret;
 420              		.loc 1 92 1 is_stmt 0 view .LVU104
 421 01b0 55       		pushq	%rbp
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 6, -16
 424 01b1 53       		pushq	%rbx
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 3, -24
 427 01b2 4883EC18 		subq	$24, %rsp
 428              		.cfi_def_cfa_offset 48
 429 01b6 4889FD   		movq	%rdi, %rbp
 430 01b9 F30F1144 		movss	%xmm0, 12(%rsp)
 430      240C
  93:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
 431              		.loc 1 93 2 is_stmt 1 view .LVU105
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 432              		.loc 1 94 2 view .LVU106
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 433              		.loc 1 94 33 is_stmt 0 view .LVU107
 434 01bf BF080000 		movl	$8, %edi
 434      00
 435              	.LVL48:
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 436              		.loc 1 94 33 view .LVU108
 437 01c4 E8000000 		call	malloc@PLT
 437      00
GAS LISTING /tmp/ccvlKtfa.s 			page 63


 438              	.LVL49:
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 439              		.loc 1 94 33 view .LVU109
 440 01c9 4889C3   		movq	%rax, %rbx
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 441              		.loc 1 95 2 is_stmt 1 view .LVU110
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 442              		.loc 1 95 16 is_stmt 0 view .LVU111
 443 01cc F30F1045 		movss	0(%rbp), %xmm0
 443      00
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 444              		.loc 1 95 11 view .LVU112
 445 01d1 F30F1100 		movss	%xmm0, (%rax)
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 446              		.loc 1 96 2 is_stmt 1 view .LVU113
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 447              		.loc 1 96 16 is_stmt 0 view .LVU114
 448 01d5 F30F1045 		movss	4(%rbp), %xmm0
 448      04
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 449              		.loc 1 96 11 view .LVU115
 450 01da F30F1140 		movss	%xmm0, 4(%rax)
 450      04
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 451              		.loc 1 97 2 is_stmt 1 view .LVU116
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 452              		.loc 1 97 38 is_stmt 0 view .LVU117
 453 01df 660FEFC0 		pxor	%xmm0, %xmm0
 454 01e3 F30F5A44 		cvtss2sd	12(%rsp), %xmm0
 454      240C
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 455              		.loc 1 97 44 view .LVU118
 456 01e9 F20F5E05 		divsd	.LC3(%rip), %xmm0
 456      00000000 
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 457              		.loc 1 97 37 view .LVU119
 458 01f1 F20F5905 		mulsd	.LC4(%rip), %xmm0
 458      00000000 
 459 01f9 E8000000 		call	tan@PLT
 459      00
 460              	.LVL50:
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 461              		.loc 1 97 32 view .LVU120
 462 01fe F20F100D 		movsd	.LC5(%rip), %xmm1
 462      00000000 
 463 0206 F20F5EC8 		divsd	%xmm0, %xmm1
 464 020a F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 465              		.loc 1 98 2 is_stmt 1 view .LVU121
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 466              		.loc 1 98 15 is_stmt 0 view .LVU122
 467 020e 660FEFD2 		pxor	%xmm2, %xmm2
 468 0212 F30F5AD1 		cvtss2sd	%xmm1, %xmm2
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 469              		.loc 1 98 18 view .LVU123
 470 0216 F20F59C2 		mulsd	%xmm2, %xmm0
 471 021a F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
GAS LISTING /tmp/ccvlKtfa.s 			page 64


  99:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
 472              		.loc 1 99 2 is_stmt 1 view .LVU124
 473              	.LVL51:
 474              	.LBB1434:
 475              	.LBI1434:
 476              		.file 7 "/usr/include/c++/9.2.0/bits/std_abs.h"
   1:/usr/include/c++/9.2.0/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/c++/9.2.0/bits/std_abs.h **** 
   3:/usr/include/c++/9.2.0/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/std_abs.h **** //
   5:/usr/include/c++/9.2.0/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/std_abs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  11:/usr/include/c++/9.2.0/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  16:/usr/include/c++/9.2.0/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  20:/usr/include/c++/9.2.0/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  25:/usr/include/c++/9.2.0/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/c++/9.2.0/bits/std_abs.h ****  */
  29:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  30:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  33:/usr/include/c++/9.2.0/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  35:/usr/include/c++/9.2.0/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  37:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/c++/9.2.0/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/c++/9.2.0/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  42:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  44:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef abs
  45:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  46:/usr/include/c++/9.2.0/bits/std_abs.h **** extern "C++"
  47:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  48:/usr/include/c++/9.2.0/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  50:/usr/include/c++/9.2.0/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/c++/9.2.0/bits/std_abs.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 65


  52:/usr/include/c++/9.2.0/bits/std_abs.h ****   using ::abs;
  53:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  54:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long
  56:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  58:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  59:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long long
  61:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  63:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  64:/usr/include/c++/9.2.0/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  69:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  74:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(float __x)
 477              		.loc 7 75 3 view .LVU125
 478              	.LBB1435:
  76:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 479              		.loc 7 76 5 view .LVU126
 480              		.loc 7 76 31 is_stmt 0 view .LVU127
 481 021e F30F1015 		movss	.LC6(%rip), %xmm2
 481      00000000 
 482 0226 0F54CA   		andps	%xmm2, %xmm1
 483              	.LVL52:
 484              		.loc 7 76 31 view .LVU128
 485              	.LBE1435:
 486              	.LBE1434:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 487              		.loc 1 100 2 is_stmt 1 view .LVU129
 488              	.LBB1436:
 489              	.LBI1436:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 490              		.loc 7 75 3 view .LVU130
 491              	.LBB1437:
 492              		.loc 7 76 5 view .LVU131
 493              		.loc 7 76 31 is_stmt 0 view .LVU132
 494 0229 0F54C2   		andps	%xmm2, %xmm0
 495              	.LVL53:
 496              		.loc 7 76 31 view .LVU133
 497              	.LBE1437:
 498              	.LBE1436:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 499              		.loc 1 100 9 view .LVU134
 500 022c 660F7EC0 		movd	%xmm0, %eax
 501 0230 48C1E020 		salq	$32, %rax
 502 0234 660F7ECA 		movd	%xmm1, %edx
 503              	.LVL54:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
GAS LISTING /tmp/ccvlKtfa.s 			page 66


 504              		.loc 1 100 9 view .LVU135
 505 0238 4809C2   		orq	%rax, %rdx
 101:Src/main.cpp  **** 		ret.dy *= -1;
 506              		.loc 1 101 2 is_stmt 1 view .LVU136
 507 023b F30F1064 		movss	12(%rsp), %xmm4
 507      240C
 508 0241 0F2F2500 		comiss	.LC7(%rip), %xmm4
 508      000000
 509 0248 770C     		ja	.L28
 510 024a 4889D1   		movq	%rdx, %rcx
 101:Src/main.cpp  **** 		ret.dy *= -1;
 511              		.loc 1 101 17 is_stmt 0 discriminator 1 view .LVU137
 512 024d 660FEFD2 		pxor	%xmm2, %xmm2
 513 0251 0F2FD4   		comiss	%xmm4, %xmm2
 514 0254 7614     		jbe	.L29
 515              	.L28:
 102:Src/main.cpp  **** 
 516              		.loc 1 102 3 is_stmt 1 view .LVU138
 102:Src/main.cpp  **** 
 517              		.loc 1 102 10 is_stmt 0 view .LVU139
 518 0256 0F570500 		xorps	.LC9(%rip), %xmm0
 518      000000
 519 025d 660F7EC0 		movd	%xmm0, %eax
 520 0261 48C1E020 		salq	$32, %rax
 521 0265 89D1     		movl	%edx, %ecx
 102:Src/main.cpp  **** 
 522              		.loc 1 102 10 view .LVU140
 523 0267 4809C1   		orq	%rax, %rcx
 524              	.L29:
 104:Src/main.cpp  **** 		ret.dx *= -1;
 525              		.loc 1 104 2 is_stmt 1 view .LVU141
 526 026a F30F106C 		movss	12(%rsp), %xmm5
 526      240C
 527 0270 0F2F2D00 		comiss	.LC10(%rip), %xmm5
 527      000000
 528 0277 720D     		jb	.L31
 104:Src/main.cpp  **** 		ret.dx *= -1;
 529              		.loc 1 104 21 is_stmt 0 discriminator 2 view .LVU142
 530 0279 F30F1005 		movss	.LC11(%rip), %xmm0
 530      00000000 
 531 0281 0F2FC5   		comiss	%xmm5, %xmm0
 532 0284 733A     		jnb	.L33
 533              	.L31:
 104:Src/main.cpp  **** 		ret.dx *= -1;
 534              		.loc 1 104 5 discriminator 3 view .LVU143
 535 0286 F30F1074 		movss	12(%rsp), %xmm6
 535      240C
 536 028c 0F2F3500 		comiss	.LC12(%rip), %xmm6
 536      000000
 537 0293 720D     		jb	.L34
 104:Src/main.cpp  **** 		ret.dx *= -1;
 538              		.loc 1 104 59 discriminator 4 view .LVU144
 539 0295 F30F1005 		movss	.LC13(%rip), %xmm0
 539      00000000 
 540 029d 0F2FC6   		comiss	%xmm6, %xmm0
 541 02a0 731E     		jnb	.L33
 542              	.L34:
GAS LISTING /tmp/ccvlKtfa.s 			page 67


 105:Src/main.cpp  **** 	return ret;
 543              		.loc 1 105 3 is_stmt 1 view .LVU145
 105:Src/main.cpp  **** 	return ret;
 544              		.loc 1 105 10 is_stmt 0 view .LVU146
 545 02a2 0F570D00 		xorps	.LC9(%rip), %xmm1
 545      000000
 546 02a9 660F7ECA 		movd	%xmm1, %edx
 547 02ad 48B80000 		movabsq	$-4294967296, %rax
 547      0000FFFF 
 547      FFFF
 105:Src/main.cpp  **** 	return ret;
 548              		.loc 1 105 10 view .LVU147
 549 02b7 4821C8   		andq	%rcx, %rax
 550 02ba 4809D0   		orq	%rdx, %rax
 551 02bd 4889C1   		movq	%rax, %rcx
 552              	.L33:
 106:Src/main.cpp  **** }
 553              		.loc 1 106 2 is_stmt 1 view .LVU148
 107:Src/main.cpp  **** 
 554              		.loc 1 107 1 is_stmt 0 view .LVU149
 555 02c0 4889D8   		movq	%rbx, %rax
 107:Src/main.cpp  **** 
 556              		.loc 1 107 1 view .LVU150
 557 02c3 66480F6E 		movq	%rcx, %xmm0
 557      C1
 558 02c8 4883C418 		addq	$24, %rsp
 559              		.cfi_def_cfa_offset 24
 560 02cc 5B       		popq	%rbx
 561              		.cfi_def_cfa_offset 16
 562 02cd 5D       		popq	%rbp
 563              		.cfi_def_cfa_offset 8
 564              	.LVL55:
 107:Src/main.cpp  **** 
 565              		.loc 1 107 1 view .LVU151
 566 02ce C3       		ret
 567              		.cfi_endproc
 568              	.LFE2477:
 570              		.globl	_Z10createVectPK6coordsS1_
 572              	_Z10createVectPK6coordsS1_:
 573              	.LVL56:
 574              	.LFB2481:
 110:Src/main.cpp  **** 	struct vect ret;
 575              		.loc 1 110 1 is_stmt 1 view -0
 576              		.cfi_startproc
 110:Src/main.cpp  **** 	struct vect ret;
 577              		.loc 1 110 1 is_stmt 0 view .LVU153
 578 02cf 55       		pushq	%rbp
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 6, -16
 581 02d0 53       		pushq	%rbx
 582              		.cfi_def_cfa_offset 24
 583              		.cfi_offset 3, -24
 584 02d1 4883EC08 		subq	$8, %rsp
 585              		.cfi_def_cfa_offset 32
 586 02d5 4889FD   		movq	%rdi, %rbp
 587 02d8 4889F3   		movq	%rsi, %rbx
 111:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
GAS LISTING /tmp/ccvlKtfa.s 			page 68


 588              		.loc 1 111 2 is_stmt 1 view .LVU154
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 589              		.loc 1 112 2 view .LVU155
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 590              		.loc 1 112 32 is_stmt 0 view .LVU156
 591 02db BF080000 		movl	$8, %edi
 591      00
 592              	.LVL57:
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 593              		.loc 1 112 32 view .LVU157
 594 02e0 E8000000 		call	malloc@PLT
 594      00
 595              	.LVL58:
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 596              		.loc 1 113 2 is_stmt 1 view .LVU158
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 597              		.loc 1 113 20 is_stmt 0 view .LVU159
 598 02e5 F30F1055 		movss	0(%rbp), %xmm2
 598      00
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 599              		.loc 1 113 11 view .LVU160
 600 02ea F30F1110 		movss	%xmm2, (%rax)
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 601              		.loc 1 114 2 is_stmt 1 view .LVU161
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 602              		.loc 1 114 20 is_stmt 0 view .LVU162
 603 02ee F30F104D 		movss	4(%rbp), %xmm1
 603      04
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 604              		.loc 1 114 11 view .LVU163
 605 02f3 F30F1148 		movss	%xmm1, 4(%rax)
 605      04
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 606              		.loc 1 115 2 is_stmt 1 view .LVU164
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 607              		.loc 1 115 16 is_stmt 0 view .LVU165
 608 02f8 F30F1003 		movss	(%rbx), %xmm0
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 609              		.loc 1 115 9 view .LVU166
 610 02fc F30F5CC2 		subss	%xmm2, %xmm0
 116:Src/main.cpp  **** 	return ret;
 611              		.loc 1 116 2 is_stmt 1 view .LVU167
 116:Src/main.cpp  **** 	return ret;
 612              		.loc 1 116 16 is_stmt 0 view .LVU168
 613 0300 F30F1053 		movss	4(%rbx), %xmm2
 613      04
 116:Src/main.cpp  **** 	return ret;
 614              		.loc 1 116 9 view .LVU169
 615 0305 F30F5CD1 		subss	%xmm1, %xmm2
 616 0309 660F7ED2 		movd	%xmm2, %edx
 617 030d 4889D1   		movq	%rdx, %rcx
 618 0310 48C1E120 		salq	$32, %rcx
 619 0314 660F7EC2 		movd	%xmm0, %edx
 620              	.LVL59:
 116:Src/main.cpp  **** 	return ret;
 621              		.loc 1 116 9 view .LVU170
 622 0318 4809CA   		orq	%rcx, %rdx
GAS LISTING /tmp/ccvlKtfa.s 			page 69


 117:Src/main.cpp  **** }
 623              		.loc 1 117 2 is_stmt 1 view .LVU171
 118:Src/main.cpp  **** 
 624              		.loc 1 118 1 is_stmt 0 view .LVU172
 625 031b 66480F6E 		movq	%rdx, %xmm0
 625      C2
 626 0320 4883C408 		addq	$8, %rsp
 627              		.cfi_def_cfa_offset 24
 628 0324 5B       		popq	%rbx
 629              		.cfi_def_cfa_offset 16
 630              	.LVL60:
 118:Src/main.cpp  **** 
 631              		.loc 1 118 1 view .LVU173
 632 0325 5D       		popq	%rbp
 633              		.cfi_def_cfa_offset 8
 634              	.LVL61:
 118:Src/main.cpp  **** 
 635              		.loc 1 118 1 view .LVU174
 636 0326 C3       		ret
 637              		.cfi_endproc
 638              	.LFE2481:
 640              		.globl	_Z10createVectPK8obstaclehf
 642              	_Z10createVectPK8obstaclehf:
 643              	.LVL62:
 644              	.LFB2482:
 122:Src/main.cpp  **** 	struct vect ret;
 645              		.loc 1 122 1 is_stmt 1 view -0
 646              		.cfi_startproc
 122:Src/main.cpp  **** 	struct vect ret;
 647              		.loc 1 122 1 is_stmt 0 view .LVU176
 648 0327 55       		pushq	%rbp
 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 6, -16
 651 0328 53       		pushq	%rbx
 652              		.cfi_def_cfa_offset 24
 653              		.cfi_offset 3, -24
 654 0329 4883EC18 		subq	$24, %rsp
 655              		.cfi_def_cfa_offset 48
 656 032d F30F1144 		movss	%xmm0, 8(%rsp)
 656      2408
 123:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 657              		.loc 1 123 2 is_stmt 1 view .LVU177
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 658              		.loc 1 124 2 view .LVU178
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 659              		.loc 1 124 38 is_stmt 0 view .LVU179
 660 0333 400FB6F6 		movzbl	%sil, %esi
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 661              		.loc 1 124 38 view .LVU180
 662 0337 E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh@PLT
 662      00
 663              	.LVL63:
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 664              		.loc 1 124 38 view .LVU181
 665 033c 4889C3   		movq	%rax, %rbx
 666              	.LVL64:
 125:Src/main.cpp  **** 	free(c);
GAS LISTING /tmp/ccvlKtfa.s 			page 70


 667              		.loc 1 125 2 is_stmt 1 view .LVU182
 125:Src/main.cpp  **** 	free(c);
 668              		.loc 1 125 27 is_stmt 0 view .LVU183
 669 033f F30F1044 		movss	8(%rsp), %xmm0
 669      2408
 670 0345 4889C7   		movq	%rax, %rdi
 671 0348 E8000000 		call	_Z10createVectPK6coordsf
 671      00
 672              	.LVL65:
 125:Src/main.cpp  **** 	free(c);
 673              		.loc 1 125 27 view .LVU184
 674 034d 4889C5   		movq	%rax, %rbp
 675 0350 660FD644 		movq	%xmm0, 8(%rsp)
 675      2408
 676              	.LVL66:
 126:Src/main.cpp  **** 	return ret;
 677              		.loc 1 126 2 is_stmt 1 view .LVU185
 126:Src/main.cpp  **** 	return ret;
 678              		.loc 1 126 6 is_stmt 0 view .LVU186
 679 0356 4889DF   		movq	%rbx, %rdi
 680 0359 E8000000 		call	free@PLT
 680      00
 681              	.LVL67:
 127:Src/main.cpp  **** }
 682              		.loc 1 127 2 is_stmt 1 view .LVU187
 128:Src/main.cpp  **** 
 683              		.loc 1 128 1 is_stmt 0 view .LVU188
 684 035e 4889E8   		movq	%rbp, %rax
 685 0361 F30F7E44 		movq	8(%rsp), %xmm0
 685      2408
 686 0367 4883C418 		addq	$24, %rsp
 687              		.cfi_def_cfa_offset 24
 688 036b 5B       		popq	%rbx
 689              		.cfi_def_cfa_offset 16
 690              	.LVL68:
 128:Src/main.cpp  **** 
 691              		.loc 1 128 1 view .LVU189
 692 036c 5D       		popq	%rbp
 693              		.cfi_def_cfa_offset 8
 694 036d C3       		ret
 695              		.cfi_endproc
 696              	.LFE2482:
 698              		.section	.rodata.str1.1
 699              	.LC14:
 700 000e 496E6372 		.string	"Increacing radius\n"
 700      65616369 
 700      6E672072 
 700      61646975 
 700      730A00
 701              		.text
 702              		.globl	_Z16getPointsDataSetPK6coords
 704              	_Z16getPointsDataSetPK6coords:
 705              	.LVL69:
 706              	.LFB2483:
 170:Src/main.cpp  **** 	size_t size = 0;
 707              		.loc 1 170 1 is_stmt 1 view -0
 708              		.cfi_startproc
GAS LISTING /tmp/ccvlKtfa.s 			page 71


 170:Src/main.cpp  **** 	size_t size = 0;
 709              		.loc 1 170 1 is_stmt 0 view .LVU191
 710 036e 4155     		pushq	%r13
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 13, -16
 713 0370 4154     		pushq	%r12
 714              		.cfi_def_cfa_offset 24
 715              		.cfi_offset 12, -24
 716 0372 55       		pushq	%rbp
 717              		.cfi_def_cfa_offset 32
 718              		.cfi_offset 6, -32
 719 0373 53       		pushq	%rbx
 720              		.cfi_def_cfa_offset 40
 721              		.cfi_offset 3, -40
 722 0374 4883EC08 		subq	$8, %rsp
 723              		.cfi_def_cfa_offset 48
 724 0378 4889FB   		movq	%rdi, %rbx
 171:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 725              		.loc 1 171 2 is_stmt 1 view .LVU192
 726              	.LVL70:
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 727              		.loc 1 172 2 view .LVU193
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 728              		.loc 1 172 11 is_stmt 0 view .LVU194
 729 037b BDD00700 		movl	$2000, %ebp
 729      00
 171:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 730              		.loc 1 171 9 view .LVU195
 731 0380 41BC0000 		movl	$0, %r12d
 731      0000
 732 0386 EB6B     		jmp	.L44
 733              	.LVL71:
 734              	.L47:
 735              	.LBB1451:
 736              	.LBB1452:
 175:Src/main.cpp  **** 		{
 737              		.loc 1 175 3 is_stmt 1 discriminator 2 view .LVU196
 738 0388 4883C101 		addq	$1, %rcx
 739              	.LVL72:
 740              	.L52:
 175:Src/main.cpp  **** 		{
 741              		.loc 1 175 23 discriminator 1 view .LVU197
 742 038c 48390D00 		cmpq	%rcx, graphSize(%rip)
 742      000000
 743 0393 7659     		jbe	.L46
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 744              		.loc 1 177 4 view .LVU198
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 745              		.loc 1 177 14 is_stmt 0 view .LVU199
 746 0395 488B1500 		movq	graph(%rip), %rdx
 746      000000
 747 039c 488B34CA 		movq	(%rdx,%rcx,8), %rsi
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 748              		.loc 1 177 19 view .LVU200
 749 03a0 F30F1056 		movss	16(%rsi), %xmm2
 749      10
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
GAS LISTING /tmp/ccvlKtfa.s 			page 72


 750              		.loc 1 177 27 view .LVU201
 751 03a5 F30F100B 		movss	(%rbx), %xmm1
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 752              		.loc 1 177 31 view .LVU202
 753 03a9 0FB7D5   		movzwl	%bp, %edx
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 754              		.loc 1 177 29 view .LVU203
 755 03ac 660FEFC0 		pxor	%xmm0, %xmm0
 756 03b0 F30F2AC2 		cvtsi2ssl	%edx, %xmm0
 757 03b4 0F28D9   		movaps	%xmm1, %xmm3
 758 03b7 F30F5CD8 		subss	%xmm0, %xmm3
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 759              		.loc 1 177 4 view .LVU204
 760 03bb 0F2FD3   		comiss	%xmm3, %xmm2
 761 03be 72C8     		jb	.L47
 178:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 762              		.loc 1 178 29 view .LVU205
 763 03c0 F30F58C8 		addss	%xmm0, %xmm1
 178:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 764              		.loc 1 178 4 view .LVU206
 765 03c4 0F2FCA   		comiss	%xmm2, %xmm1
 766 03c7 72BF     		jb	.L47
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 767              		.loc 1 179 19 view .LVU207
 768 03c9 F30F104E 		movss	20(%rsi), %xmm1
 768      14
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 769              		.loc 1 179 27 view .LVU208
 770 03ce F30F1053 		movss	4(%rbx), %xmm2
 770      04
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 771              		.loc 1 179 29 view .LVU209
 772 03d3 0F28DA   		movaps	%xmm2, %xmm3
 773 03d6 F30F5CD8 		subss	%xmm0, %xmm3
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 774              		.loc 1 179 4 view .LVU210
 775 03da 0F2FCB   		comiss	%xmm3, %xmm1
 776 03dd 72A9     		jb	.L47
 180:Src/main.cpp  **** 				size++;
 777              		.loc 1 180 29 view .LVU211
 778 03df F30F58C2 		addss	%xmm2, %xmm0
 180:Src/main.cpp  **** 				size++;
 779              		.loc 1 180 4 view .LVU212
 780 03e3 0F2FC1   		comiss	%xmm1, %xmm0
 781 03e6 72A0     		jb	.L47
 181:Src/main.cpp  **** 		}
 782              		.loc 1 181 5 is_stmt 1 view .LVU213
 181:Src/main.cpp  **** 		}
 783              		.loc 1 181 9 is_stmt 0 view .LVU214
 784 03e8 4983C401 		addq	$1, %r12
 785              	.LVL73:
 181:Src/main.cpp  **** 		}
 786              		.loc 1 181 9 view .LVU215
 787 03ec EB9A     		jmp	.L47
 788              	.L46:
 181:Src/main.cpp  **** 		}
 789              		.loc 1 181 9 view .LVU216
GAS LISTING /tmp/ccvlKtfa.s 			page 73


 790              	.LBE1452:
 183:Src/main.cpp  **** 		{
 791              		.loc 1 183 3 is_stmt 1 view .LVU217
 792 03ee 4C39E0   		cmpq	%r12, %rax
 793 03f1 771D     		ja	.L70
 794              	.LVL74:
 795              	.L44:
 183:Src/main.cpp  **** 		{
 796              		.loc 1 183 3 is_stmt 0 view .LVU218
 797              	.LBE1451:
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 798              		.loc 1 172 45 is_stmt 1 discriminator 1 view .LVU219
 173:Src/main.cpp  **** 		size = 0;
 799              		.loc 1 173 2 discriminator 1 view .LVU220
 173:Src/main.cpp  **** 		size = 0;
 800              		.loc 1 173 14 discriminator 1 view .LVU221
 173:Src/main.cpp  **** 		size = 0;
 801              		.loc 1 173 33 is_stmt 0 discriminator 1 view .LVU222
 802 03f3 E8000000 		call	_Z17getMinDatasetSizev
 802      00
 803              	.LVL75:
 804 03f8 0FB6C0   		movzbl	%al, %eax
 173:Src/main.cpp  **** 		size = 0;
 805              		.loc 1 173 14 discriminator 1 view .LVU223
 806 03fb 4C39E0   		cmpq	%r12, %rax
 807 03fe 762D     		jbe	.L45
 808              	.LBB1457:
 809              	.LBB1453:
 175:Src/main.cpp  **** 		{
 810              		.loc 1 175 14 view .LVU224
 811 0400 B9000000 		movl	$0, %ecx
 811      00
 812              	.LBE1453:
 174:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 813              		.loc 1 174 8 view .LVU225
 814 0405 41BC0000 		movl	$0, %r12d
 814      0000
 815              	.LVL76:
 174:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 816              		.loc 1 174 8 view .LVU226
 817 040b E97CFFFF 		jmp	.L52
 817      FF
 818              	.LVL77:
 819              	.L70:
 185:Src/main.cpp  **** 			watchRadius += 100;
 820              		.loc 1 185 4 is_stmt 1 view .LVU227
 821              	.LBB1454:
 822              	.LBI1454:
 565:/usr/include/c++/9.2.0/ostream ****     {
 823              		.loc 3 565 5 view .LVU228
 565:/usr/include/c++/9.2.0/ostream ****     {
 824              		.loc 3 565 5 is_stmt 0 view .LVU229
 825              	.LBE1454:
 826              	.LBE1457:
 827              		.loc 4 335 2 is_stmt 1 view .LVU230
 828              	.LBB1458:
 829              	.LBB1456:
GAS LISTING /tmp/ccvlKtfa.s 			page 74


 830              	.LBB1455:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 831              		.loc 3 570 18 is_stmt 0 view .LVU231
 832 0410 BA120000 		movl	$18, %edx
 832      00
 833 0415 488D3500 		leaq	.LC14(%rip), %rsi
 833      000000
 834 041c 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 834      000000
 835 0423 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 835      00
 836              	.LVL78:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 837              		.loc 3 570 18 view .LVU232
 838              	.LBE1455:
 839              	.LBE1456:
 186:Src/main.cpp  **** 		}
 840              		.loc 1 186 4 is_stmt 1 view .LVU233
 186:Src/main.cpp  **** 		}
 841              		.loc 1 186 16 is_stmt 0 view .LVU234
 842 0428 83C564   		addl	$100, %ebp
 843              	.LVL79:
 186:Src/main.cpp  **** 		}
 844              		.loc 1 186 16 view .LVU235
 845 042b EBC6     		jmp	.L44
 846              	.L45:
 186:Src/main.cpp  **** 		}
 847              		.loc 1 186 16 view .LVU236
 848              	.LBE1458:
 190:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 849              		.loc 1 190 2 is_stmt 1 view .LVU237
 850              	.LVL80:
 191:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 851              		.loc 1 191 2 view .LVU238
 191:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 852              		.loc 1 191 59 is_stmt 0 view .LVU239
 853 042d 4A8D3CE5 		leaq	0(,%r12,8), %rdi
 853      00000000 
 854 0435 E8000000 		call	malloc@PLT
 854      00
 855              	.LVL81:
 856 043a 4989C5   		movq	%rax, %r13
 857              	.LVL82:
 192:Src/main.cpp  **** 	{
 858              		.loc 1 192 2 is_stmt 1 view .LVU240
 859              	.LBB1459:
 192:Src/main.cpp  **** 	{
 860              		.loc 1 192 13 is_stmt 0 view .LVU241
 861 043d BA000000 		movl	$0, %edx
 861      00
 862              	.LBE1459:
 190:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 863              		.loc 1 190 9 view .LVU242
 864 0442 BE000000 		movl	$0, %esi
 864      00
 865 0447 EB04     		jmp	.L60
 866              	.LVL83:
GAS LISTING /tmp/ccvlKtfa.s 			page 75


 867              	.L55:
 868              	.LBB1460:
 192:Src/main.cpp  **** 	{
 869              		.loc 1 192 2 is_stmt 1 discriminator 2 view .LVU243
 870 0449 4883C201 		addq	$1, %rdx
 871              	.LVL84:
 872              	.L60:
 192:Src/main.cpp  **** 	{
 873              		.loc 1 192 22 discriminator 1 view .LVU244
 874 044d 48391500 		cmpq	%rdx, graphSize(%rip)
 874      000000
 875 0454 765E     		jbe	.L54
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 876              		.loc 1 194 3 view .LVU245
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 877              		.loc 1 194 13 is_stmt 0 view .LVU246
 878 0456 488B0500 		movq	graph(%rip), %rax
 878      000000
 879 045d 488B0CD0 		movq	(%rax,%rdx,8), %rcx
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 880              		.loc 1 194 18 view .LVU247
 881 0461 F30F1051 		movss	16(%rcx), %xmm2
 881      10
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 882              		.loc 1 194 26 view .LVU248
 883 0466 F30F100B 		movss	(%rbx), %xmm1
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 884              		.loc 1 194 30 view .LVU249
 885 046a 0FB7C5   		movzwl	%bp, %eax
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 886              		.loc 1 194 28 view .LVU250
 887 046d 660FEFC0 		pxor	%xmm0, %xmm0
 888 0471 F30F2AC0 		cvtsi2ssl	%eax, %xmm0
 889 0475 0F28D9   		movaps	%xmm1, %xmm3
 890 0478 F30F5CD8 		subss	%xmm0, %xmm3
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 891              		.loc 1 194 3 view .LVU251
 892 047c 0F2FD3   		comiss	%xmm3, %xmm2
 893 047f 72C8     		jb	.L55
 195:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 894              		.loc 1 195 28 view .LVU252
 895 0481 F30F58C8 		addss	%xmm0, %xmm1
 195:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 896              		.loc 1 195 3 view .LVU253
 897 0485 0F2FCA   		comiss	%xmm2, %xmm1
 898 0488 72BF     		jb	.L55
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 899              		.loc 1 196 18 view .LVU254
 900 048a F30F1049 		movss	20(%rcx), %xmm1
 900      14
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 901              		.loc 1 196 26 view .LVU255
 902 048f F30F1053 		movss	4(%rbx), %xmm2
 902      04
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 903              		.loc 1 196 28 view .LVU256
 904 0494 0F28DA   		movaps	%xmm2, %xmm3
GAS LISTING /tmp/ccvlKtfa.s 			page 76


 905 0497 F30F5CD8 		subss	%xmm0, %xmm3
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 906              		.loc 1 196 3 view .LVU257
 907 049b 0F2FCB   		comiss	%xmm3, %xmm1
 908 049e 72A9     		jb	.L55
 197:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 909              		.loc 1 197 28 view .LVU258
 910 04a0 F30F58C2 		addss	%xmm2, %xmm0
 197:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 911              		.loc 1 197 3 view .LVU259
 912 04a4 0F2FC1   		comiss	%xmm1, %xmm0
 913 04a7 72A0     		jb	.L55
 198:Src/main.cpp  **** 	}
 914              		.loc 1 198 4 is_stmt 1 view .LVU260
 915              	.LVL85:
 198:Src/main.cpp  **** 	}
 916              		.loc 1 198 20 is_stmt 0 view .LVU261
 917 04a9 49894CF5 		movq	%rcx, 0(%r13,%rsi,8)
 917      00
 198:Src/main.cpp  **** 	}
 918              		.loc 1 198 16 view .LVU262
 919 04ae 488D7601 		leaq	1(%rsi), %rsi
 920              	.LVL86:
 198:Src/main.cpp  **** 	}
 921              		.loc 1 198 16 view .LVU263
 922 04b2 EB95     		jmp	.L55
 923              	.L54:
 198:Src/main.cpp  **** 	}
 924              		.loc 1 198 16 view .LVU264
 925              	.LBE1460:
 200:Src/main.cpp  **** 	ret->items = dataset;
 926              		.loc 1 200 2 is_stmt 1 view .LVU265
 200:Src/main.cpp  **** 	ret->items = dataset;
 927              		.loc 1 200 43 is_stmt 0 view .LVU266
 928 04b4 BF100000 		movl	$16, %edi
 928      00
 929 04b9 E8000000 		call	malloc@PLT
 929      00
 930              	.LVL87:
 201:Src/main.cpp  **** 	ret->size = size;
 931              		.loc 1 201 2 is_stmt 1 view .LVU267
 201:Src/main.cpp  **** 	ret->size = size;
 932              		.loc 1 201 13 is_stmt 0 view .LVU268
 933 04be 4C8928   		movq	%r13, (%rax)
 202:Src/main.cpp  **** 	return ret;
 934              		.loc 1 202 2 is_stmt 1 view .LVU269
 202:Src/main.cpp  **** 	return ret;
 935              		.loc 1 202 12 is_stmt 0 view .LVU270
 936 04c1 4C896008 		movq	%r12, 8(%rax)
 203:Src/main.cpp  **** }
 937              		.loc 1 203 2 is_stmt 1 view .LVU271
 204:Src/main.cpp  **** 
 938              		.loc 1 204 1 is_stmt 0 view .LVU272
 939 04c5 4883C408 		addq	$8, %rsp
 940              		.cfi_def_cfa_offset 40
 941 04c9 5B       		popq	%rbx
 942              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccvlKtfa.s 			page 77


 943              	.LVL88:
 204:Src/main.cpp  **** 
 944              		.loc 1 204 1 view .LVU273
 945 04ca 5D       		popq	%rbp
 946              		.cfi_def_cfa_offset 24
 947              	.LVL89:
 204:Src/main.cpp  **** 
 948              		.loc 1 204 1 view .LVU274
 949 04cb 415C     		popq	%r12
 950              		.cfi_def_cfa_offset 16
 951              	.LVL90:
 204:Src/main.cpp  **** 
 952              		.loc 1 204 1 view .LVU275
 953 04cd 415D     		popq	%r13
 954              		.cfi_def_cfa_offset 8
 955              	.LVL91:
 204:Src/main.cpp  **** 
 956              		.loc 1 204 1 view .LVU276
 957 04cf C3       		ret
 958              		.cfi_endproc
 959              	.LFE2483:
 961              		.globl	_Z16hasIntersectionsPK4vect
 963              	_Z16hasIntersectionsPK4vect:
 964              	.LVL92:
 965              	.LFB2484:
 209:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 966              		.loc 1 209 1 is_stmt 1 view -0
 967              		.cfi_startproc
 209:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 968              		.loc 1 209 1 is_stmt 0 view .LVU278
 969 04d0 55       		pushq	%rbp
 970              		.cfi_def_cfa_offset 16
 971              		.cfi_offset 6, -16
 972 04d1 53       		pushq	%rbx
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 3, -24
 975 04d2 4883EC08 		subq	$8, %rsp
 976              		.cfi_def_cfa_offset 32
 977 04d6 4889FD   		movq	%rdi, %rbp
 210:Src/main.cpp  **** 	{
 978              		.loc 1 210 2 is_stmt 1 view .LVU279
 979              	.LVL93:
 980              	.LBB1461:
 210:Src/main.cpp  **** 	{
 981              		.loc 1 210 13 is_stmt 0 view .LVU280
 982 04d9 BB000000 		movl	$0, %ebx
 982      00
 983              	.LVL94:
 984              	.L73:
 210:Src/main.cpp  **** 	{
 985              		.loc 1 210 22 is_stmt 1 discriminator 1 view .LVU281
 986 04de 48391D00 		cmpq	%rbx, numOfObstacles(%rip)
 986      000000
 987 04e5 7621     		jbe	.L74
 212:Src/main.cpp  **** 			return true;
 988              		.loc 1 212 3 view .LVU282
 212:Src/main.cpp  **** 			return true;
GAS LISTING /tmp/ccvlKtfa.s 			page 78


 989              		.loc 1 212 34 is_stmt 0 view .LVU283
 990 04e7 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 991 04eb 48C1E704 		salq	$4, %rdi
 212:Src/main.cpp  **** 			return true;
 992              		.loc 1 212 22 view .LVU284
 993 04ef 48033D00 		addq	obstacles(%rip), %rdi
 993      000000
 212:Src/main.cpp  **** 			return true;
 994              		.loc 1 212 21 view .LVU285
 995 04f6 4889EE   		movq	%rbp, %rsi
 996 04f9 E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 996      00
 997              	.LVL95:
 212:Src/main.cpp  **** 			return true;
 998              		.loc 1 212 3 view .LVU286
 999 04fe 84C0     		testb	%al, %al
 1000 0500 750B     		jne	.L71
 210:Src/main.cpp  **** 	{
 1001              		.loc 1 210 2 is_stmt 1 discriminator 2 view .LVU287
 1002 0502 4883C301 		addq	$1, %rbx
 1003              	.LVL96:
 210:Src/main.cpp  **** 	{
 1004              		.loc 1 210 2 is_stmt 0 discriminator 2 view .LVU288
 1005 0506 EBD6     		jmp	.L73
 1006              	.L74:
 210:Src/main.cpp  **** 	{
 1007              		.loc 1 210 2 discriminator 2 view .LVU289
 1008              	.LBE1461:
 215:Src/main.cpp  **** }
 1009              		.loc 1 215 9 view .LVU290
 1010 0508 B8000000 		movl	$0, %eax
 1010      00
 1011              	.L71:
 216:Src/main.cpp  **** 
 1012              		.loc 1 216 1 view .LVU291
 1013 050d 4883C408 		addq	$8, %rsp
 1014              		.cfi_def_cfa_offset 24
 1015 0511 5B       		popq	%rbx
 1016              		.cfi_def_cfa_offset 16
 1017              	.LVL97:
 216:Src/main.cpp  **** 
 1018              		.loc 1 216 1 view .LVU292
 1019 0512 5D       		popq	%rbp
 1020              		.cfi_def_cfa_offset 8
 1021              	.LVL98:
 216:Src/main.cpp  **** 
 1022              		.loc 1 216 1 view .LVU293
 1023 0513 C3       		ret
 1024              		.cfi_endproc
 1025              	.LFE2484:
 1027              		.globl	_Z11isDotInsidePK6coords
 1029              	_Z11isDotInsidePK6coords:
 1030              	.LVL99:
 1031              	.LFB2485:
 222:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 1032              		.loc 1 222 1 is_stmt 1 view -0
 1033              		.cfi_startproc
GAS LISTING /tmp/ccvlKtfa.s 			page 79


 223:Src/main.cpp  **** 	{
 1034              		.loc 1 223 5 view .LVU295
 1035              	.LBB1462:
 223:Src/main.cpp  **** 	{
 1036              		.loc 1 223 16 is_stmt 0 view .LVU296
 1037 0514 BA000000 		movl	$0, %edx
 1037      00
 1038 0519 EB04     		jmp	.L82
 1039              	.LVL100:
 1040              	.L78:
 223:Src/main.cpp  **** 	{
 1041              		.loc 1 223 5 is_stmt 1 discriminator 2 view .LVU297
 1042 051b 4883C201 		addq	$1, %rdx
 1043              	.LVL101:
 1044              	.L82:
 223:Src/main.cpp  **** 	{
 1045              		.loc 1 223 25 discriminator 1 view .LVU298
 1046 051f 48391500 		cmpq	%rdx, numOfObstacles(%rip)
 1046      000000
 1047 0526 0F869F00 		jbe	.L83
 1047      0000
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1048              		.loc 1 225 3 view .LVU299
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1049              		.loc 1 225 11 is_stmt 0 view .LVU300
 1050 052c 660FEFC9 		pxor	%xmm1, %xmm1
 1051 0530 F30F5A0F 		cvtss2sd	(%rdi), %xmm1
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1052              		.loc 1 225 13 view .LVU301
 1053 0534 660F28D9 		movapd	%xmm1, %xmm3
 1054 0538 F20F5C1D 		subsd	.LC15(%rip), %xmm3
 1054      00000000 
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1055              		.loc 1 225 34 view .LVU302
 1056 0540 488D0452 		leaq	(%rdx,%rdx,2), %rax
 1057 0544 48C1E004 		salq	$4, %rax
 1058 0548 48030500 		addq	obstacles(%rip), %rax
 1058      000000
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1059              		.loc 1 225 36 view .LVU303
 1060 054f 488B08   		movq	(%rax), %rcx
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1061              		.loc 1 225 39 view .LVU304
 1062 0552 F30F1001 		movss	(%rcx), %xmm0
 1063 0556 660FEFD2 		pxor	%xmm2, %xmm2
 1064 055a F30F5AD0 		cvtss2sd	%xmm0, %xmm2
 225:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1065              		.loc 1 225 3 view .LVU305
 1066 055e 660F2FDA 		comisd	%xmm2, %xmm3
 1067 0562 76B7     		jbe	.L78
 226:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1068              		.loc 1 226 13 view .LVU306
 1069 0564 F20F580D 		addsd	.LC15(%rip), %xmm1
 1069      00000000 
 226:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1070              		.loc 1 226 56 view .LVU307
 1071 056c F30F1050 		movss	40(%rax), %xmm2
GAS LISTING /tmp/ccvlKtfa.s 			page 80


 1071      28
 226:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1072              		.loc 1 226 41 view .LVU308
 1073 0571 F30F58C2 		addss	%xmm2, %xmm0
 1074 0575 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 226:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1075              		.loc 1 226 3 view .LVU309
 1076 0579 660F2FC1 		comisd	%xmm1, %xmm0
 1077 057d 769C     		jbe	.L78
 227:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1078              		.loc 1 227 11 view .LVU310
 1079 057f 660FEFC0 		pxor	%xmm0, %xmm0
 1080 0583 F30F5A47 		cvtss2sd	4(%rdi), %xmm0
 1080      04
 227:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1081              		.loc 1 227 13 view .LVU311
 1082 0588 660F28E0 		movapd	%xmm0, %xmm4
 1083 058c F20F5C25 		subsd	.LC15(%rip), %xmm4
 1083      00000000 
 227:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1084              		.loc 1 227 39 view .LVU312
 1085 0594 F30F1049 		movss	4(%rcx), %xmm1
 1085      04
 1086 0599 660FEFDB 		pxor	%xmm3, %xmm3
 1087 059d F30F5AD9 		cvtss2sd	%xmm1, %xmm3
 227:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1088              		.loc 1 227 3 view .LVU313
 1089 05a1 660F2FE3 		comisd	%xmm3, %xmm4
 1090 05a5 0F8670FF 		jbe	.L78
 1090      FFFF
 228:Src/main.cpp  **** 			return true;
 1091              		.loc 1 228 13 view .LVU314
 1092 05ab F20F5805 		addsd	.LC15(%rip), %xmm0
 1092      00000000 
 228:Src/main.cpp  **** 			return true;
 1093              		.loc 1 228 41 view .LVU315
 1094 05b3 F30F58D1 		addss	%xmm1, %xmm2
 1095 05b7 F30F5AD2 		cvtss2sd	%xmm2, %xmm2
 228:Src/main.cpp  **** 			return true;
 1096              		.loc 1 228 3 view .LVU316
 1097 05bb 660F2FD0 		comisd	%xmm0, %xmm2
 1098 05bf 0F8656FF 		jbe	.L78
 1098      FFFF
 229:Src/main.cpp  **** 	}
 1099              		.loc 1 229 11 view .LVU317
 1100 05c5 B8010000 		movl	$1, %eax
 1100      00
 1101              	.LBE1462:
 232:Src/main.cpp  **** 
 1102              		.loc 1 232 1 view .LVU318
 1103 05ca C3       		ret
 1104              	.L83:
 231:Src/main.cpp  **** }
 1105              		.loc 1 231 9 view .LVU319
 1106 05cb B8000000 		movl	$0, %eax
 1106      00
 1107 05d0 C3       		ret
GAS LISTING /tmp/ccvlKtfa.s 			page 81


 1108              		.cfi_endproc
 1109              	.LFE2485:
 1111              		.globl	_Z9initPointP10graphPoint
 1113              	_Z9initPointP10graphPoint:
 1114              	.LVL102:
 1115              	.LFB2486:
 239:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1116              		.loc 1 239 1 is_stmt 1 view -0
 1117              		.cfi_startproc
 239:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1118              		.loc 1 239 1 is_stmt 0 view .LVU321
 1119 05d1 4157     		pushq	%r15
 1120              		.cfi_def_cfa_offset 16
 1121              		.cfi_offset 15, -16
 1122 05d3 4156     		pushq	%r14
 1123              		.cfi_def_cfa_offset 24
 1124              		.cfi_offset 14, -24
 1125 05d5 4155     		pushq	%r13
 1126              		.cfi_def_cfa_offset 32
 1127              		.cfi_offset 13, -32
 1128 05d7 4154     		pushq	%r12
 1129              		.cfi_def_cfa_offset 40
 1130              		.cfi_offset 12, -40
 1131 05d9 55       		pushq	%rbp
 1132              		.cfi_def_cfa_offset 48
 1133              		.cfi_offset 6, -48
 1134 05da 53       		pushq	%rbx
 1135              		.cfi_def_cfa_offset 56
 1136              		.cfi_offset 3, -56
 1137 05db 4883EC28 		subq	$40, %rsp
 1138              		.cfi_def_cfa_offset 96
 1139 05df 4989FD   		movq	%rdi, %r13
 239:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1140              		.loc 1 239 1 view .LVU322
 1141 05e2 64488B04 		movq	%fs:40, %rax
 1141      25280000 
 1141      00
 1142 05eb 48894424 		movq	%rax, 24(%rsp)
 1142      18
 1143 05f0 31C0     		xorl	%eax, %eax
 240:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1144              		.loc 1 240 2 is_stmt 1 view .LVU323
 240:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1145              		.loc 1 240 42 is_stmt 0 view .LVU324
 1146 05f2 4C8D6710 		leaq	16(%rdi), %r12
 240:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1147              		.loc 1 240 41 view .LVU325
 1148 05f6 4C89E7   		movq	%r12, %rdi
 1149              	.LVL103:
 240:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1150              		.loc 1 240 41 view .LVU326
 1151 05f9 E8000000 		call	_Z16getPointsDataSetPK6coords
 1151      00
 1152              	.LVL104:
 1153 05fe 4889C5   		movq	%rax, %rbp
 1154              	.LVL105:
 242:Src/main.cpp  **** 	struct coords *tgt;
GAS LISTING /tmp/ccvlKtfa.s 			page 82


 1155              		.loc 1 242 2 is_stmt 1 view .LVU327
 242:Src/main.cpp  **** 	struct coords *tgt;
 1156              		.loc 1 242 14 is_stmt 0 view .LVU328
 1157 0601 48C70424 		movq	$0, (%rsp)
 1157      00000000 
 1158 0609 C7442408 		movl	$0x00000000, 8(%rsp)
 1158      00000000 
 1159 0611 C744240C 		movl	$0x00000000, 12(%rsp)
 1159      00000000 
 243:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 1160              		.loc 1 243 2 is_stmt 1 view .LVU329
 244:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 1161              		.loc 1 244 2 view .LVU330
 1162              	.LVL106:
 245:Src/main.cpp  **** 	{
 1163              		.loc 1 245 2 view .LVU331
 1164              	.LBB1463:
 245:Src/main.cpp  **** 	{
 1165              		.loc 1 245 10 is_stmt 0 view .LVU332
 1166 0619 BB000000 		movl	$0, %ebx
 1166      00
 1167 061e EB0F     		jmp	.L95
 1168              	.LVL107:
 1169              	.L90:
 249:Src/main.cpp  **** 		{
 1170              		.loc 1 249 51 discriminator 3 view .LVU333
 1171 0620 4889E7   		movq	%rsp, %rdi
 1172 0623 E8000000 		call	_Z16hasIntersectionsPK4vect
 1172      00
 1173              	.LVL108:
 249:Src/main.cpp  **** 		{
 1174              		.loc 1 249 31 discriminator 3 view .LVU334
 1175 0628 84C0     		testb	%al, %al
 1176 062a 7458     		je	.L98
 1177              	.L91:
 245:Src/main.cpp  **** 	{
 1178              		.loc 1 245 2 is_stmt 1 discriminator 2 view .LVU335
 1179 062c 83C301   		addl	$1, %ebx
 1180              	.LVL109:
 1181              	.L95:
 245:Src/main.cpp  **** 	{
 1182              		.loc 1 245 19 discriminator 1 view .LVU336
 245:Src/main.cpp  **** 	{
 1183              		.loc 1 245 17 is_stmt 0 discriminator 1 view .LVU337
 1184 062f 4863C3   		movslq	%ebx, %rax
 245:Src/main.cpp  **** 	{
 1185              		.loc 1 245 19 discriminator 1 view .LVU338
 1186 0632 483B4508 		cmpq	8(%rbp), %rax
 1187 0636 0F83A100 		jnb	.L89
 1187      0000
 247:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1188              		.loc 1 247 3 is_stmt 1 view .LVU339
 247:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1189              		.loc 1 247 51 is_stmt 0 view .LVU340
 1190 063c 48C1E003 		salq	$3, %rax
 1191 0640 48034500 		addq	0(%rbp), %rax
 247:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
GAS LISTING /tmp/ccvlKtfa.s 			page 83


 1192              		.loc 1 247 9 view .LVU341
 1193 0644 4C8B30   		movq	(%rax), %r14
 1194              	.LVL110:
 248:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1195              		.loc 1 248 3 is_stmt 1 view .LVU342
 248:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1196              		.loc 1 248 25 is_stmt 0 view .LVU343
 1197 0647 4D8D7E10 		leaq	16(%r14), %r15
 248:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1198              		.loc 1 248 34 view .LVU344
 1199 064b 4C89FE   		movq	%r15, %rsi
 1200 064e 4C89E7   		movq	%r12, %rdi
 1201 0651 E8000000 		call	_Z10createVectPK6coordsS1_
 1201      00
 1202              	.LVL111:
 1203 0656 48890424 		movq	%rax, (%rsp)
 1204 065a 660FD644 		movq	%xmm0, 8(%rsp)
 1204      2408
 249:Src/main.cpp  **** 		{
 1205              		.loc 1 249 3 is_stmt 1 view .LVU345
 249:Src/main.cpp  **** 		{
 1206              		.loc 1 249 9 is_stmt 0 view .LVU346
 1207 0660 F30F1044 		movss	8(%rsp), %xmm0
 1207      2408
 249:Src/main.cpp  **** 		{
 1208              		.loc 1 249 79 view .LVU347
 1209 0666 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1209      000000
 1210 066d 7AB1     		jp	.L90
 1211 066f 75AF     		jne	.L90
 249:Src/main.cpp  **** 		{
 1212              		.loc 1 249 22 discriminator 2 view .LVU348
 1213 0671 F30F1044 		movss	12(%rsp), %xmm0
 1213      240C
 249:Src/main.cpp  **** 		{
 1214              		.loc 1 249 17 discriminator 2 view .LVU349
 1215 0677 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1215      000000
 1216 067e 7AA0     		jp	.L90
 1217 0680 74AA     		je	.L91
 1218 0682 EB9C     		jmp	.L90
 1219              	.L98:
 249:Src/main.cpp  **** 		{
 1220              		.loc 1 249 71 discriminator 6 view .LVU350
 1221 0684 4C89E7   		movq	%r12, %rdi
 1222 0687 E8000000 		call	_Z11isDotInsidePK6coords
 1222      00
 1223              	.LVL112:
 249:Src/main.cpp  **** 		{
 1224              		.loc 1 249 56 discriminator 6 view .LVU351
 1225 068c 84C0     		testb	%al, %al
 1226 068e 759C     		jne	.L91
 249:Src/main.cpp  **** 		{
 1227              		.loc 1 249 94 discriminator 8 view .LVU352
 1228 0690 4C89FF   		movq	%r15, %rdi
 1229 0693 E8000000 		call	_Z11isDotInsidePK6coords
 1229      00
GAS LISTING /tmp/ccvlKtfa.s 			page 84


 1230              	.LVL113:
 249:Src/main.cpp  **** 		{
 1231              		.loc 1 249 79 discriminator 8 view .LVU353
 1232 0698 84C0     		testb	%al, %al
 1233 069a 7590     		jne	.L91
 251:Src/main.cpp  **** 				calculatedPoints++;
 1234              		.loc 1 251 4 is_stmt 1 view .LVU354
 1235 069c 49837D08 		cmpq	$0, 8(%r13)
 1235      00
 1236 06a1 7508     		jne	.L93
 252:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1237              		.loc 1 252 5 view .LVU355
 252:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1238              		.loc 1 252 21 is_stmt 0 view .LVU356
 1239 06a3 48830500 		addq	$1, calculatedPoints(%rip)
 1239      00000001 
 1240              	.L93:
 253:Src/main.cpp  **** 				calculatedPoints++;
 1241              		.loc 1 253 4 is_stmt 1 view .LVU357
 1242 06ab 49837E08 		cmpq	$0, 8(%r14)
 1242      00
 1243 06b0 7508     		jne	.L94
 254:Src/main.cpp  **** 			addTarget(p, currP);
 1244              		.loc 1 254 5 view .LVU358
 254:Src/main.cpp  **** 			addTarget(p, currP);
 1245              		.loc 1 254 21 is_stmt 0 view .LVU359
 1246 06b2 48830500 		addq	$1, calculatedPoints(%rip)
 1246      00000001 
 1247              	.L94:
 255:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1248              		.loc 1 255 4 is_stmt 1 view .LVU360
 255:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1249              		.loc 1 255 13 is_stmt 0 view .LVU361
 1250 06ba 4C89F6   		movq	%r14, %rsi
 1251 06bd 4C89EF   		movq	%r13, %rdi
 1252 06c0 E8000000 		call	_Z9addTargetP10graphPointS0_@PLT
 1252      00
 1253              	.LVL114:
 256:Src/main.cpp  **** 				initPoint(currP);
 1254              		.loc 1 256 4 is_stmt 1 view .LVU362
 1255 06c5 49837E08 		cmpq	$1, 8(%r14)
 1255      01
 1256 06ca 0F855CFF 		jne	.L91
 1256      FFFF
 257:Src/main.cpp  **** 		}
 1257              		.loc 1 257 5 view .LVU363
 257:Src/main.cpp  **** 		}
 1258              		.loc 1 257 14 is_stmt 0 view .LVU364
 1259 06d0 4C89F7   		movq	%r14, %rdi
 1260 06d3 E8000000 		call	_Z9initPointP10graphPoint
 1260      00
 1261              	.LVL115:
 1262 06d8 E94FFFFF 		jmp	.L91
 1262      FF
 1263              	.LVL116:
 1264              	.L89:
 257:Src/main.cpp  **** 		}
GAS LISTING /tmp/ccvlKtfa.s 			page 85


 1265              		.loc 1 257 14 view .LVU365
 1266              	.LBE1463:
 260:Src/main.cpp  **** }
 1267              		.loc 1 260 2 is_stmt 1 view .LVU366
 260:Src/main.cpp  **** }
 1268              		.loc 1 260 6 is_stmt 0 view .LVU367
 1269 06dd 4889EF   		movq	%rbp, %rdi
 1270 06e0 E8000000 		call	free@PLT
 1270      00
 1271              	.LVL117:
 261:Src/main.cpp  **** 
 1272              		.loc 1 261 1 view .LVU368
 1273 06e5 488B4424 		movq	24(%rsp), %rax
 1273      18
 1274 06ea 64483304 		xorq	%fs:40, %rax
 1274      25280000 
 1274      00
 1275 06f3 750F     		jne	.L99
 1276 06f5 4883C428 		addq	$40, %rsp
 1277              		.cfi_remember_state
 1278              		.cfi_def_cfa_offset 56
 1279 06f9 5B       		popq	%rbx
 1280              		.cfi_def_cfa_offset 48
 1281              	.LVL118:
 261:Src/main.cpp  **** 
 1282              		.loc 1 261 1 view .LVU369
 1283 06fa 5D       		popq	%rbp
 1284              		.cfi_def_cfa_offset 40
 1285              	.LVL119:
 261:Src/main.cpp  **** 
 1286              		.loc 1 261 1 view .LVU370
 1287 06fb 415C     		popq	%r12
 1288              		.cfi_def_cfa_offset 32
 1289 06fd 415D     		popq	%r13
 1290              		.cfi_def_cfa_offset 24
 1291              	.LVL120:
 261:Src/main.cpp  **** 
 1292              		.loc 1 261 1 view .LVU371
 1293 06ff 415E     		popq	%r14
 1294              		.cfi_def_cfa_offset 16
 1295 0701 415F     		popq	%r15
 1296              		.cfi_def_cfa_offset 8
 1297 0703 C3       		ret
 1298              	.LVL121:
 1299              	.L99:
 1300              		.cfi_restore_state
 261:Src/main.cpp  **** 
 1301              		.loc 1 261 1 view .LVU372
 1302 0704 E8000000 		call	__stack_chk_fail@PLT
 1302      00
 1303              	.LVL122:
 1304              		.cfi_endproc
 1305              	.LFE2486:
 1307              		.globl	_Z16getCoordsOfPointP10graphPoint
 1309              	_Z16getCoordsOfPointP10graphPoint:
 1310              	.LVL123:
 1311              	.LFB2487:
GAS LISTING /tmp/ccvlKtfa.s 			page 86


 276:Src/main.cpp  **** 	return (p->c);
 1312              		.loc 1 276 1 is_stmt 1 view -0
 1313              		.cfi_startproc
 277:Src/main.cpp  **** }
 1314              		.loc 1 277 2 view .LVU374
 277:Src/main.cpp  **** }
 1315              		.loc 1 277 14 is_stmt 0 view .LVU375
 1316 0709 F30F7E47 		movq	16(%rdi), %xmm0
 1316      10
 278:Src/main.cpp  **** 
 1317              		.loc 1 278 1 view .LVU376
 1318 070e C3       		ret
 1319              		.cfi_endproc
 1320              	.LFE2487:
 1322              		.globl	_Z21hasUncalculatedPointsPK10graphPoint
 1324              	_Z21hasUncalculatedPointsPK10graphPoint:
 1325              	.LVL124:
 1326              	.LFB2488:
 285:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 1327              		.loc 1 285 1 is_stmt 1 view -0
 1328              		.cfi_startproc
 286:Src/main.cpp  **** 	{
 1329              		.loc 1 286 2 view .LVU378
 1330              	.LBB1464:
 286:Src/main.cpp  **** 	{
 1331              		.loc 1 286 13 is_stmt 0 view .LVU379
 1332 070f B8000000 		movl	$0, %eax
 1332      00
 1333              	.LVL125:
 1334              	.L103:
 286:Src/main.cpp  **** 	{
 1335              		.loc 1 286 22 is_stmt 1 discriminator 1 view .LVU380
 1336 0714 48394708 		cmpq	%rax, 8(%rdi)
 1337 0718 7613     		jbe	.L104
 288:Src/main.cpp  **** 			return true;
 1338              		.loc 1 288 3 view .LVU381
 288:Src/main.cpp  **** 			return true;
 1339              		.loc 1 288 11 is_stmt 0 view .LVU382
 1340 071a 488B17   		movq	(%rdi), %rdx
 288:Src/main.cpp  **** 			return true;
 1341              		.loc 1 288 20 view .LVU383
 1342 071d 488B14C2 		movq	(%rdx,%rax,8), %rdx
 288:Src/main.cpp  **** 			return true;
 1343              		.loc 1 288 3 view .LVU384
 1344 0721 807A1800 		cmpb	$0, 24(%rdx)
 1345 0725 740C     		je	.L105
 286:Src/main.cpp  **** 	{
 1346              		.loc 1 286 2 is_stmt 1 discriminator 2 view .LVU385
 1347 0727 4883C001 		addq	$1, %rax
 1348              	.LVL126:
 286:Src/main.cpp  **** 	{
 1349              		.loc 1 286 2 is_stmt 0 discriminator 2 view .LVU386
 1350 072b EBE7     		jmp	.L103
 1351              	.L104:
 286:Src/main.cpp  **** 	{
 1352              		.loc 1 286 2 discriminator 2 view .LVU387
 1353              	.LBE1464:
GAS LISTING /tmp/ccvlKtfa.s 			page 87


 291:Src/main.cpp  **** }
 1354              		.loc 1 291 9 view .LVU388
 1355 072d B8000000 		movl	$0, %eax
 1355      00
 1356              	.LVL127:
 291:Src/main.cpp  **** }
 1357              		.loc 1 291 9 view .LVU389
 1358 0732 C3       		ret
 1359              	.LVL128:
 1360              	.L105:
 1361              	.LBB1465:
 289:Src/main.cpp  **** 	}
 1362              		.loc 1 289 11 view .LVU390
 1363 0733 B8010000 		movl	$1, %eax
 1363      00
 1364              	.LVL129:
 289:Src/main.cpp  **** 	}
 1365              		.loc 1 289 11 view .LVU391
 1366              	.LBE1465:
 292:Src/main.cpp  **** 
 1367              		.loc 1 292 1 view .LVU392
 1368 0738 C3       		ret
 1369              		.cfi_endproc
 1370              	.LFE2488:
 1372              		.globl	_Z12getMinTargetPK10graphPoint
 1374              	_Z12getMinTargetPK10graphPoint:
 1375              	.LVL130:
 1376              	.LFB2489:
 295:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 1377              		.loc 1 295 1 is_stmt 1 view -0
 1378              		.cfi_startproc
 296:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 1379              		.loc 1 296 2 view .LVU394
 296:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 1380              		.loc 1 296 18 is_stmt 0 view .LVU395
 1381 0739 F30F100D 		movss	.LC16(%rip), %xmm1
 1381      00000000 
 1382 0741 F30F5E0D 		divss	.LC8(%rip), %xmm1
 1382      00000000 
 1383              	.LVL131:
 297:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1384              		.loc 1 297 2 is_stmt 1 view .LVU396
 298:Src/main.cpp  **** 	{
 1385              		.loc 1 298 2 view .LVU397
 1386              	.LBB1466:
 298:Src/main.cpp  **** 	{
 1387              		.loc 1 298 13 is_stmt 0 view .LVU398
 1388 0749 B8000000 		movl	$0, %eax
 1388      00
 1389              	.LBE1466:
 297:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1390              		.loc 1 297 22 view .LVU399
 1391 074e B9000000 		movl	$0, %ecx
 1391      00
 1392 0753 EB04     		jmp	.L109
 1393              	.LVL132:
 1394              	.L108:
GAS LISTING /tmp/ccvlKtfa.s 			page 88


 1395              	.LBB1467:
 298:Src/main.cpp  **** 	{
 1396              		.loc 1 298 2 is_stmt 1 discriminator 2 view .LVU400
 1397 0755 4883C001 		addq	$1, %rax
 1398              	.LVL133:
 1399              	.L109:
 298:Src/main.cpp  **** 	{
 1400              		.loc 1 298 22 discriminator 1 view .LVU401
 1401 0759 48394708 		cmpq	%rax, 8(%rdi)
 1402 075d 761F     		jbe	.L106
 300:Src/main.cpp  **** 		{
 1403              		.loc 1 300 3 view .LVU402
 300:Src/main.cpp  **** 		{
 1404              		.loc 1 300 10 is_stmt 0 view .LVU403
 1405 075f 488B17   		movq	(%rdi), %rdx
 300:Src/main.cpp  **** 		{
 1406              		.loc 1 300 19 view .LVU404
 1407 0762 488B14C2 		movq	(%rdx,%rax,8), %rdx
 300:Src/main.cpp  **** 		{
 1408              		.loc 1 300 3 view .LVU405
 1409 0766 807A1800 		cmpb	$0, 24(%rdx)
 1410 076a 75E9     		jne	.L108
 300:Src/main.cpp  **** 		{
 1411              		.loc 1 300 51 discriminator 1 view .LVU406
 1412 076c F30F1042 		movss	28(%rdx), %xmm0
 1412      1C
 300:Src/main.cpp  **** 		{
 1413              		.loc 1 300 33 discriminator 1 view .LVU407
 1414 0771 0F2FC8   		comiss	%xmm0, %xmm1
 1415 0774 72DF     		jb	.L108
 303:Src/main.cpp  **** 		}
 1416              		.loc 1 303 7 view .LVU408
 1417 0776 4889D1   		movq	%rdx, %rcx
 1418              	.LVL134:
 302:Src/main.cpp  **** 			pp = p->targets[i];
 1419              		.loc 1 302 6 view .LVU409
 1420 0779 0F28C8   		movaps	%xmm0, %xmm1
 1421              	.LVL135:
 302:Src/main.cpp  **** 			pp = p->targets[i];
 1422              		.loc 1 302 6 view .LVU410
 1423 077c EBD7     		jmp	.L108
 1424              	.LVL136:
 1425              	.L106:
 302:Src/main.cpp  **** 			pp = p->targets[i];
 1426              		.loc 1 302 6 view .LVU411
 1427              	.LBE1467:
 307:Src/main.cpp  **** 
 1428              		.loc 1 307 1 view .LVU412
 1429 077e 4889C8   		movq	%rcx, %rax
 1430              	.LVL137:
 307:Src/main.cpp  **** 
 1431              		.loc 1 307 1 view .LVU413
 1432 0781 C3       		ret
 1433              		.cfi_endproc
 1434              	.LFE2489:
 1436              		.globl	_Z12calculateWaym
 1438              	_Z12calculateWaym:
GAS LISTING /tmp/ccvlKtfa.s 			page 89


 1439              	.LVL138:
 1440              	.LFB2490:
 310:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 1441              		.loc 1 310 1 is_stmt 1 view -0
 1442              		.cfi_startproc
 310:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 1443              		.loc 1 310 1 is_stmt 0 view .LVU415
 1444 0782 4155     		pushq	%r13
 1445              		.cfi_def_cfa_offset 16
 1446              		.cfi_offset 13, -16
 1447 0784 4154     		pushq	%r12
 1448              		.cfi_def_cfa_offset 24
 1449              		.cfi_offset 12, -24
 1450 0786 55       		pushq	%rbp
 1451              		.cfi_def_cfa_offset 32
 1452              		.cfi_offset 6, -32
 1453 0787 53       		pushq	%rbx
 1454              		.cfi_def_cfa_offset 40
 1455              		.cfi_offset 3, -40
 1456 0788 4883EC08 		subq	$8, %rsp
 1457              		.cfi_def_cfa_offset 48
 311:Src/main.cpp  **** 		return;
 1458              		.loc 1 311 2 is_stmt 1 view .LVU416
 311:Src/main.cpp  **** 		return;
 1459              		.loc 1 311 16 is_stmt 0 view .LVU417
 1460 078c 4C8D24FD 		leaq	0(,%rdi,8), %r12
 1460      00000000 
 1461 0794 4C89E2   		movq	%r12, %rdx
 1462 0797 48031500 		addq	graph(%rip), %rdx
 1462      000000
 1463 079e 488B02   		movq	(%rdx), %rax
 311:Src/main.cpp  **** 		return;
 1464              		.loc 1 311 2 view .LVU418
 1465 07a1 4885C0   		testq	%rax, %rax
 1466 07a4 0F84AD00 		je	.L111
 1466      0000
 1467 07aa 4989FD   		movq	%rdi, %r13
 311:Src/main.cpp  **** 		return;
 1468              		.loc 1 311 26 discriminator 1 view .LVU419
 1469 07ad 80781800 		cmpb	$0, 24(%rax)
 1470 07b1 0F85A000 		jne	.L111
 1470      0000
 313:Src/main.cpp  **** 	
 1471              		.loc 1 313 2 is_stmt 1 view .LVU420
 313:Src/main.cpp  **** 	
 1472              		.loc 1 313 27 is_stmt 0 view .LVU421
 1473 07b7 C6401801 		movb	$1, 24(%rax)
 315:Src/main.cpp  **** 		return;
 1474              		.loc 1 315 2 is_stmt 1 view .LVU422
 315:Src/main.cpp  **** 		return;
 1475              		.loc 1 315 16 is_stmt 0 view .LVU423
 1476 07bb 488B02   		movq	(%rdx), %rax
 315:Src/main.cpp  **** 		return;
 1477              		.loc 1 315 2 view .LVU424
 1478 07be 48837808 		cmpq	$0, 8(%rax)
 1478      00
 1479 07c3 0F848E00 		je	.L111
GAS LISTING /tmp/ccvlKtfa.s 			page 90


 1479      0000
 1480              	.LBB1468:
 321:Src/main.cpp  **** 	{
 1481              		.loc 1 321 13 view .LVU425
 1482 07c9 BB000000 		movl	$0, %ebx
 1482      00
 1483 07ce EB04     		jmp	.L116
 1484              	.LVL139:
 1485              	.L114:
 321:Src/main.cpp  **** 	{
 1486              		.loc 1 321 2 is_stmt 1 discriminator 2 view .LVU426
 1487 07d0 4883C301 		addq	$1, %rbx
 1488              	.LVL140:
 1489              	.L116:
 321:Src/main.cpp  **** 	{
 1490              		.loc 1 321 22 discriminator 1 view .LVU427
 321:Src/main.cpp  **** 	{
 1491              		.loc 1 321 35 is_stmt 0 discriminator 1 view .LVU428
 1492 07d4 488B0500 		movq	graph(%rip), %rax
 1492      000000
 1493 07db 4A8B3C20 		movq	(%rax,%r12), %rdi
 321:Src/main.cpp  **** 	{
 1494              		.loc 1 321 22 discriminator 1 view .LVU429
 1495 07df 48395F08 		cmpq	%rbx, 8(%rdi)
 1496 07e3 7646     		jbe	.L113
 323:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1497              		.loc 1 323 3 is_stmt 1 view .LVU430
 323:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1498              		.loc 1 323 34 is_stmt 0 view .LVU431
 1499 07e5 488D04DD 		leaq	0(,%rbx,8), %rax
 1499      00000000 
 1500 07ed 480307   		addq	(%rdi), %rax
 323:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 1501              		.loc 1 323 9 view .LVU432
 1502 07f0 488B28   		movq	(%rax), %rbp
 1503              	.LVL141:
 324:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 1504              		.loc 1 324 3 is_stmt 1 view .LVU433
 324:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 1505              		.loc 1 324 18 is_stmt 0 view .LVU434
 1506 07f3 4889EE   		movq	%rbp, %rsi
 1507 07f6 E8000000 		call	_Z11getWayPriceP10graphPointS0_@PLT
 1507      00
 1508              	.LVL142:
 325:Src/main.cpp  **** 		{
 1509              		.loc 1 325 3 is_stmt 1 view .LVU435
 325:Src/main.cpp  **** 		{
 1510              		.loc 1 325 13 is_stmt 0 view .LVU436
 1511 07fb F30F104D 		movss	28(%rbp), %xmm1
 1511      1C
 325:Src/main.cpp  **** 		{
 1512              		.loc 1 325 33 view .LVU437
 1513 0800 488B0500 		movq	graph(%rip), %rax
 1513      000000
 1514 0807 4A8B0420 		movq	(%rax,%r12), %rax
 325:Src/main.cpp  **** 		{
 1515              		.loc 1 325 43 view .LVU438
GAS LISTING /tmp/ccvlKtfa.s 			page 91


 1516 080b F30F5840 		addss	28(%rax), %xmm0
 1516      1C
 1517              	.LVL143:
 325:Src/main.cpp  **** 		{
 1518              		.loc 1 325 3 view .LVU439
 1519 0810 0F2FC8   		comiss	%xmm0, %xmm1
 1520 0813 76BB     		jbe	.L114
 328:Src/main.cpp  **** 			ways[watch->i] = index;
 1521              		.loc 1 328 4 is_stmt 1 view .LVU440
 328:Src/main.cpp  **** 			ways[watch->i] = index;
 1522              		.loc 1 328 18 is_stmt 0 view .LVU441
 1523 0815 F30F1145 		movss	%xmm0, 28(%rbp)
 1523      1C
 329:Src/main.cpp  **** 		}
 1524              		.loc 1 329 4 is_stmt 1 view .LVU442
 329:Src/main.cpp  **** 		}
 1525              		.loc 1 329 16 is_stmt 0 view .LVU443
 1526 081a 488B5520 		movq	32(%rbp), %rdx
 329:Src/main.cpp  **** 		}
 1527              		.loc 1 329 19 view .LVU444
 1528 081e 488B0500 		movq	ways(%rip), %rax
 1528      000000
 1529 0825 4C892CD0 		movq	%r13, (%rax,%rdx,8)
 1530 0829 EBA5     		jmp	.L114
 1531              	.LVL144:
 1532              	.L113:
 329:Src/main.cpp  **** 		}
 1533              		.loc 1 329 19 view .LVU445
 1534              	.LBE1468:
 333:Src/main.cpp  **** 	{
 1535              		.loc 1 333 2 is_stmt 1 view .LVU446
 333:Src/main.cpp  **** 	{
 1536              		.loc 1 333 30 view .LVU447
 333:Src/main.cpp  **** 	{
 1537              		.loc 1 333 42 is_stmt 0 view .LVU448
 1538 082b 4C89E0   		movq	%r12, %rax
 1539 082e 48030500 		addq	graph(%rip), %rax
 1539      000000
 333:Src/main.cpp  **** 	{
 1540              		.loc 1 333 30 view .LVU449
 1541 0835 488B18   		movq	(%rax), %rbx
 1542 0838 4889DF   		movq	%rbx, %rdi
 1543 083b E8000000 		call	_Z21hasUncalculatedPointsPK10graphPoint
 1543      00
 1544              	.LVL145:
 1545 0840 84C0     		testb	%al, %al
 1546 0842 7413     		je	.L111
 335:Src/main.cpp  **** 		calculateWay(watch->i);
 1547              		.loc 1 335 3 is_stmt 1 view .LVU450
 335:Src/main.cpp  **** 		calculateWay(watch->i);
 1548              		.loc 1 335 23 is_stmt 0 view .LVU451
 1549 0844 4889DF   		movq	%rbx, %rdi
 1550 0847 E8000000 		call	_Z12getMinTargetPK10graphPoint
 1550      00
 1551              	.LVL146:
 336:Src/main.cpp  **** 	}
 1552              		.loc 1 336 3 is_stmt 1 view .LVU452
GAS LISTING /tmp/ccvlKtfa.s 			page 92


 336:Src/main.cpp  **** 	}
 1553              		.loc 1 336 15 is_stmt 0 view .LVU453
 1554 084c 488B7820 		movq	32(%rax), %rdi
 1555 0850 E8000000 		call	_Z12calculateWaym
 1555      00
 1556              	.LVL147:
 333:Src/main.cpp  **** 	{
 1557              		.loc 1 333 2 view .LVU454
 1558 0855 EBD4     		jmp	.L113
 1559              	.LVL148:
 1560              	.L111:
 338:Src/main.cpp  **** 
 1561              		.loc 1 338 1 view .LVU455
 1562 0857 4883C408 		addq	$8, %rsp
 1563              		.cfi_def_cfa_offset 40
 1564 085b 5B       		popq	%rbx
 1565              		.cfi_def_cfa_offset 32
 1566 085c 5D       		popq	%rbp
 1567              		.cfi_def_cfa_offset 24
 1568 085d 415C     		popq	%r12
 1569              		.cfi_def_cfa_offset 16
 1570 085f 415D     		popq	%r13
 1571              		.cfi_def_cfa_offset 8
 1572 0861 C3       		ret
 1573              		.cfi_endproc
 1574              	.LFE2490:
 1576              		.globl	_Z8drawLineP6coordsS0_
 1578              	_Z8drawLineP6coordsS0_:
 1579              	.LVL149:
 1580              	.LFB2491:
 343:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 1581              		.loc 1 343 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 343:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 1583              		.loc 1 343 1 is_stmt 0 view .LVU457
 1584 0862 4883EC08 		subq	$8, %rsp
 1585              		.cfi_def_cfa_offset 16
 344:Src/main.cpp  **** }
 1586              		.loc 1 344 2 is_stmt 1 view .LVU458
 344:Src/main.cpp  **** }
 1587              		.loc 1 344 10 is_stmt 0 view .LVU459
 1588 0866 F30F105E 		movss	4(%rsi), %xmm3
 1588      04
 1589 086b F30F1016 		movss	(%rsi), %xmm2
 1590 086f F30F104F 		movss	4(%rdi), %xmm1
 1590      04
 1591 0874 F30F1007 		movss	(%rdi), %xmm0
 1592 0878 E8000000 		call	_Z8drawLineffff@PLT
 1592      00
 1593              	.LVL150:
 345:Src/main.cpp  **** 
 1594              		.loc 1 345 1 view .LVU460
 1595 087d 4883C408 		addq	$8, %rsp
 1596              		.cfi_def_cfa_offset 8
 1597 0881 C3       		ret
 1598              		.cfi_endproc
 1599              	.LFE2491:
GAS LISTING /tmp/ccvlKtfa.s 			page 93


 1601              		.globl	_Z8drawLineP10graphPointS0_
 1603              	_Z8drawLineP10graphPointS0_:
 1604              	.LVL151:
 1605              	.LFB2492:
 348:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 1606              		.loc 1 348 1 is_stmt 1 view -0
 1607              		.cfi_startproc
 348:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 1608              		.loc 1 348 1 is_stmt 0 view .LVU462
 1609 0882 4883EC08 		subq	$8, %rsp
 1610              		.cfi_def_cfa_offset 16
 349:Src/main.cpp  **** }
 1611              		.loc 1 349 2 is_stmt 1 view .LVU463
 349:Src/main.cpp  **** }
 1612              		.loc 1 349 10 is_stmt 0 view .LVU464
 1613 0886 4883C610 		addq	$16, %rsi
 1614              	.LVL152:
 349:Src/main.cpp  **** }
 1615              		.loc 1 349 10 view .LVU465
 1616 088a 4883C710 		addq	$16, %rdi
 1617              	.LVL153:
 349:Src/main.cpp  **** }
 1618              		.loc 1 349 10 view .LVU466
 1619 088e E8000000 		call	_Z8drawLineP6coordsS0_
 1619      00
 1620              	.LVL154:
 350:Src/main.cpp  **** 
 1621              		.loc 1 350 1 view .LVU467
 1622 0893 4883C408 		addq	$8, %rsp
 1623              		.cfi_def_cfa_offset 8
 1624 0897 C3       		ret
 1625              		.cfi_endproc
 1626              	.LFE2492:
 1628              		.globl	_Z9drawEdgesP10graphPoint
 1630              	_Z9drawEdgesP10graphPoint:
 1631              	.LVL155:
 1632              	.LFB2495:
 374:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 1633              		.loc 1 374 1 is_stmt 1 view -0
 1634              		.cfi_startproc
 375:Src/main.cpp  **** 	{
 1635              		.loc 1 375 2 view .LVU469
 1636 0898 4885FF   		testq	%rdi, %rdi
 1637 089b 7448     		je	.L127
 374:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 1638              		.loc 1 374 1 is_stmt 0 discriminator 1 view .LVU470
 1639 089d 55       		pushq	%rbp
 1640              		.cfi_def_cfa_offset 16
 1641              		.cfi_offset 6, -16
 1642 089e 53       		pushq	%rbx
 1643              		.cfi_def_cfa_offset 24
 1644              		.cfi_offset 3, -24
 1645 089f 4883EC08 		subq	$8, %rsp
 1646              		.cfi_def_cfa_offset 32
 1647 08a3 4889FB   		movq	%rdi, %rbx
 375:Src/main.cpp  **** 	{
 1648              		.loc 1 375 15 discriminator 1 view .LVU471
GAS LISTING /tmp/ccvlKtfa.s 			page 94


 1649 08a6 48837F08 		cmpq	$0, 8(%rdi)
 1649      00
 1650 08ab 7507     		jne	.L130
 1651              	.LVL156:
 1652              	.L123:
 399:Src/main.cpp  **** 
 1653              		.loc 1 399 1 view .LVU472
 1654 08ad 4883C408 		addq	$8, %rsp
 1655              		.cfi_remember_state
 1656              		.cfi_def_cfa_offset 24
 1657 08b1 5B       		popq	%rbx
 1658              		.cfi_def_cfa_offset 16
 1659              	.LVL157:
 399:Src/main.cpp  **** 
 1660              		.loc 1 399 1 view .LVU473
 1661 08b2 5D       		popq	%rbp
 1662              		.cfi_def_cfa_offset 8
 1663 08b3 C3       		ret
 1664              	.LVL158:
 1665              	.L130:
 1666              		.cfi_restore_state
 394:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1667              		.loc 1 394 2 is_stmt 1 view .LVU474
 394:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 1668              		.loc 1 394 12 is_stmt 0 view .LVU475
 1669 08b4 BFFFFF00 		movl	$65535, %edi
 1669      00
 1670 08b9 E8000000 		call	_Z10glSetColorj@PLT
 1670      00
 1671              	.LVL159:
 395:Src/main.cpp  **** 	{
 1672              		.loc 1 395 2 is_stmt 1 view .LVU476
 1673              	.LBB1469:
 395:Src/main.cpp  **** 	{
 1674              		.loc 1 395 13 is_stmt 0 view .LVU477
 1675 08be BD000000 		movl	$0, %ebp
 1675      00
 1676 08c3 EB18     		jmp	.L125
 1677              	.LVL160:
 1678              	.L131:
 397:Src/main.cpp  **** 	}
 1679              		.loc 1 397 3 is_stmt 1 discriminator 2 view .LVU478
 397:Src/main.cpp  **** 	}
 1680              		.loc 1 397 23 is_stmt 0 discriminator 2 view .LVU479
 1681 08c5 488B03   		movq	(%rbx), %rax
 397:Src/main.cpp  **** 	}
 1682              		.loc 1 397 32 discriminator 2 view .LVU480
 1683 08c8 488B34E8 		movq	(%rax,%rbp,8), %rsi
 397:Src/main.cpp  **** 	}
 1684              		.loc 1 397 11 discriminator 2 view .LVU481
 1685 08cc 4883C610 		addq	$16, %rsi
 1686 08d0 488D7B10 		leaq	16(%rbx), %rdi
 1687 08d4 E8000000 		call	_Z8drawLineP6coordsS0_
 1687      00
 1688              	.LVL161:
 395:Src/main.cpp  **** 	{
 1689              		.loc 1 395 2 is_stmt 1 discriminator 2 view .LVU482
GAS LISTING /tmp/ccvlKtfa.s 			page 95


 1690 08d9 4883C501 		addq	$1, %rbp
 1691              	.LVL162:
 1692              	.L125:
 395:Src/main.cpp  **** 	{
 1693              		.loc 1 395 22 discriminator 3 view .LVU483
 1694 08dd 48396B08 		cmpq	%rbp, 8(%rbx)
 1695 08e1 77E2     		ja	.L131
 1696 08e3 EBC8     		jmp	.L123
 1697              	.LVL163:
 1698              	.L127:
 1699              		.cfi_def_cfa_offset 8
 1700              		.cfi_restore 3
 1701              		.cfi_restore 6
 395:Src/main.cpp  **** 	{
 1702              		.loc 1 395 22 is_stmt 0 discriminator 3 view .LVU484
 1703 08e5 C3       		ret
 1704              	.LBE1469:
 1705              		.cfi_endproc
 1706              	.LFE2495:
 1708              		.globl	_Z7drawWaymm
 1710              	_Z7drawWaymm:
 1711              	.LVL164:
 1712              	.LFB2497:
 418:Src/main.cpp  **** 	size_t curr = pointNum;
 1713              		.loc 1 418 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 418:Src/main.cpp  **** 	size_t curr = pointNum;
 1715              		.loc 1 418 1 is_stmt 0 view .LVU486
 1716 08e6 55       		pushq	%rbp
 1717              		.cfi_def_cfa_offset 16
 1718              		.cfi_offset 6, -16
 1719 08e7 53       		pushq	%rbx
 1720              		.cfi_def_cfa_offset 24
 1721              		.cfi_offset 3, -24
 1722 08e8 4883EC08 		subq	$8, %rsp
 1723              		.cfi_def_cfa_offset 32
 1724 08ec 4889F5   		movq	%rsi, %rbp
 419:Src/main.cpp  **** 	while(curr != target)
 1725              		.loc 1 419 2 is_stmt 1 view .LVU487
 1726              	.LVL165:
 1727              	.L134:
 420:Src/main.cpp  **** 	{
 1728              		.loc 1 420 2 view .LVU488
 420:Src/main.cpp  **** 	{
 1729              		.loc 1 420 13 view .LVU489
 1730 08ef 4839EF   		cmpq	%rbp, %rdi
 1731 08f2 7433     		je	.L132
 422:Src/main.cpp  **** 		curr = ways[curr];
 1732              		.loc 1 422 3 view .LVU490
 422:Src/main.cpp  **** 		curr = ways[curr];
 1733              		.loc 1 422 41 is_stmt 0 view .LVU491
 1734 08f4 488B0500 		movq	graph(%rip), %rax
 1734      000000
 422:Src/main.cpp  **** 		curr = ways[curr];
 1735              		.loc 1 422 40 view .LVU492
 1736 08fb 488D1CFD 		leaq	0(,%rdi,8), %rbx
 1736      00000000 
GAS LISTING /tmp/ccvlKtfa.s 			page 96


 1737 0903 488B1500 		movq	ways(%rip), %rdx
 1737      000000
 1738 090a 488B14FA 		movq	(%rdx,%rdi,8), %rdx
 422:Src/main.cpp  **** 		curr = ways[curr];
 1739              		.loc 1 422 11 view .LVU493
 1740 090e 488B34D0 		movq	(%rax,%rdx,8), %rsi
 1741 0912 488B3C18 		movq	(%rax,%rbx), %rdi
 1742              	.LVL166:
 422:Src/main.cpp  **** 		curr = ways[curr];
 1743              		.loc 1 422 11 view .LVU494
 1744 0916 E8000000 		call	_Z8drawLineP10graphPointS0_
 1744      00
 1745              	.LVL167:
 423:Src/main.cpp  **** 	}
 1746              		.loc 1 423 3 is_stmt 1 view .LVU495
 423:Src/main.cpp  **** 	}
 1747              		.loc 1 423 19 is_stmt 0 view .LVU496
 1748 091b 48031D00 		addq	ways(%rip), %rbx
 1748      000000
 423:Src/main.cpp  **** 	}
 1749              		.loc 1 423 8 view .LVU497
 1750 0922 488B3B   		movq	(%rbx), %rdi
 1751              	.LVL168:
 420:Src/main.cpp  **** 	{
 1752              		.loc 1 420 2 view .LVU498
 1753 0925 EBC8     		jmp	.L134
 1754              	.L132:
 425:Src/main.cpp  **** 
 1755              		.loc 1 425 1 view .LVU499
 1756 0927 4883C408 		addq	$8, %rsp
 1757              		.cfi_def_cfa_offset 24
 1758 092b 5B       		popq	%rbx
 1759              		.cfi_def_cfa_offset 16
 1760 092c 5D       		popq	%rbp
 1761              		.cfi_def_cfa_offset 8
 1762              	.LVL169:
 425:Src/main.cpp  **** 
 1763              		.loc 1 425 1 view .LVU500
 1764 092d C3       		ret
 1765              		.cfi_endproc
 1766              	.LFE2497:
 1768              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 1769              		.align 8
 1770              	.LC17:
 1771 0000 62617369 		.string	"basic_string::_M_construct null not valid"
 1771      635F7374 
 1771      72696E67 
 1771      3A3A5F4D 
 1771      5F636F6E 
 1772              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 1773              		.align 2
 1774              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_i
 1776              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 1777              	.LVL170:
 1778              	.LFB2843:
 1779              		.file 8 "/usr/include/c++/9.2.0/bits/basic_string.tcc"
   1:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
GAS LISTING /tmp/ccvlKtfa.s 			page 97


   2:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  42:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  44:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  46:/usr/include/c++/9.2.0/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/bits/basic_string.tcc **** {
  48:/usr/include/c++/9.2.0/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  50:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     void
  58:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
GAS LISTING /tmp/ccvlKtfa.s 			page 98


  59:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
  61:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	return;
  63:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  64:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  66:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (_M_is_local())
  67:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  69:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  71:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  79:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  81:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  86:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  87:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (length())
  88:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  89:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  94:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  95:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
  96:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	else
  97:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  98:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 105:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       else
 106:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 107:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 110:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 115:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  else
GAS LISTING /tmp/ccvlKtfa.s 			page 99


 116:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 117:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 122:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 124:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 125:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 129:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 130:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
 135:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 140:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 145:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 150:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 151:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // null char_type() element.
 153:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 155:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 156:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 163:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 167:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 170:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 172:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
GAS LISTING /tmp/ccvlKtfa.s 			page 100


 173:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    ++__beg;
 174:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 175:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 176:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 177:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 178:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
 180:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  {
 182:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_dispose();
 187:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  }
 190:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		++__beg;
 192:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
 193:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 194:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 195:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 196:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 197:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 199:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 200:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 202:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 203:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 1780              		.loc 8 206 7 is_stmt 1 view -0
 1781              		.cfi_startproc
 1782              		.loc 8 206 7 is_stmt 0 view .LVU502
 1783 0000 4154     		pushq	%r12
 1784              		.cfi_def_cfa_offset 16
 1785              		.cfi_offset 12, -16
 1786 0002 55       		pushq	%rbp
 1787              		.cfi_def_cfa_offset 24
 1788              		.cfi_offset 6, -24
 1789 0003 53       		pushq	%rbx
 1790              		.cfi_def_cfa_offset 32
 1791              		.cfi_offset 3, -32
 1792 0004 4883EC10 		subq	$16, %rsp
 1793              		.cfi_def_cfa_offset 48
 1794 0008 4889FD   		movq	%rdi, %rbp
 1795 000b 4989F4   		movq	%rsi, %r12
 1796 000e 4889D3   		movq	%rdx, %rbx
 1797              		.loc 8 206 7 view .LVU503
 1798 0011 64488B04 		movq	%fs:40, %rax
 1798      25280000 
 1798      00
 1799 001a 48894424 		movq	%rax, 8(%rsp)
 1799      08
GAS LISTING /tmp/ccvlKtfa.s 			page 101


 1800 001f 31C0     		xorl	%eax, %eax
 207:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 210:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 1801              		.loc 8 211 42 view .LVU504
 1802 0021 4885F6   		testq	%rsi, %rsi
 1803 0024 7429     		je	.L143
 1804              	.L137:
 1805              	.LVL171:
 1806              	.LBB1470:
 1807              	.LBI1470:
 1808              		.file 9 "/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h"
   1:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  16:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
GAS LISTING /tmp/ccvlKtfa.s 			page 102


  44:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  77:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
  83:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  86:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	{
  89:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	}
  92:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
  94:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  95:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
GAS LISTING /tmp/ccvlKtfa.s 			page 103


 101:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 106:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 107:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 115:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #endif
 121:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 122:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   /**
 123:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 128:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 132:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   */
 135:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 1809              		.loc 9 138 5 is_stmt 1 view .LVU505
 1810              	.LBB1471:
 1811              	.LBI1471:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 1812              		.loc 9 98 5 view .LVU506
 1813              	.LBB1472:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1814              		.loc 9 104 23 is_stmt 0 view .LVU507
 1815 0026 4C29E3   		subq	%r12, %rbx
 1816              	.LVL172:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1817              		.loc 9 104 23 view .LVU508
 1818              	.LBE1472:
 1819              	.LBE1471:
 1820              	.LBE1470:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
GAS LISTING /tmp/ccvlKtfa.s 			page 104


 1821              		.loc 8 215 12 view .LVU509
 1822 0029 48891C24 		movq	%rbx, (%rsp)
 216:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 1823              		.loc 8 217 2 view .LVU510
 1824 002d 4883FB0F 		cmpq	$15, %rbx
 1825 0031 772D     		ja	.L144
 1826              	.LVL173:
 1827              	.L138:
 1828              	.LBB1473:
 1829              	.LBI1473:
 1830              		.file 10 "/usr/include/c++/9.2.0/bits/basic_string.h"
   1:/usr/include/c++/9.2.0/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/9.2.0/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  37:/usr/include/c++/9.2.0/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  43:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
GAS LISTING /tmp/ccvlKtfa.s 			page 105


  46:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  47:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/9.2.0/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  50:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  51:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/9.2.0/bits/basic_string.h **** {
  54:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
  59:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  62:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  65:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  70:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
  76:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
  79:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
  85:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/9.2.0/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 100:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 106


 103:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
 104:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 108:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 111:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 112:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 116:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
 125:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 128:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
 132:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 144:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 145:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 152:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
GAS LISTING /tmp/ccvlKtfa.s 			page 107


 160:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 162:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 163:/usr/include/c++/9.2.0/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 166:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 169:/usr/include/c++/9.2.0/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 171:/usr/include/c++/9.2.0/bits/basic_string.h ****       union
 172:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 173:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 176:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 177:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 181:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 185:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const
 1831              		.loc 10 186 7 is_stmt 1 view .LVU511
 1832              	.LBB1474:
 187:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1833              		.loc 10 187 28 is_stmt 0 view .LVU512
 1834 0033 488B7D00 		movq	0(%rbp), %rdi
 1835              	.LVL174:
 1836              		.loc 10 187 28 view .LVU513
 1837              	.LBE1474:
 1838              	.LBE1473:
 1839              	.LBB1475:
 1840              	.LBI1475:
 188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 189:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 197:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 199:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_pointer
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 202:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
GAS LISTING /tmp/ccvlKtfa.s 			page 108


 207:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 209:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 213:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 219:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 220:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 224:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 226:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 228:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 234:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 235:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 239:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 243:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 246:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/c++/9.2.0/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 249:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 250:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 254:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 257:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 258:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 261:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 263:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
GAS LISTING /tmp/ccvlKtfa.s 			page 109


 264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
 268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 269:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 272:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 279:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 282:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 283:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 285:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type&
 286:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 289:/usr/include/c++/9.2.0/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 293:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 295:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/usr/include/c++/9.2.0/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/c++/9.2.0/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 308:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 309:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 310:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 312:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
 317:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 319:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
GAS LISTING /tmp/ccvlKtfa.s 			page 110


 321:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 327:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 329:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 334:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 335:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 337:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 343:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 354:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 355:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 357:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 360:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 362:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 364:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 369:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 371:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 372:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
 376:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
GAS LISTING /tmp/ccvlKtfa.s 			page 111


 378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 382:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 383:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 386:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 391:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 395:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 396:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 1841              		.loc 10 396 7 is_stmt 1 view .LVU514
 1842              	.LBB1476:
 1843              	.LBI1476:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1844              		.loc 10 346 7 view .LVU515
 1845              	.LBB1477:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1846              		.loc 10 348 2 is_stmt 0 view .LVU516
 1847 0037 4883FB01 		cmpq	$1, %rbx
 1848 003b 7441     		je	.L145
 1849              	.LVL175:
 1850              	.LBB1478:
 1851              	.LBI1478:
 336:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 337:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 338:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 341:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 342:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 343:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 349:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 351:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 352:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 353:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 355:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 356:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 357:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 359:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 360:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
GAS LISTING /tmp/ccvlKtfa.s 			page 112


 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 1852              		.loc 4 361 7 is_stmt 1 view .LVU517
 1853              	.LBB1479:
 362:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 1854              		.loc 4 363 2 view .LVU518
 1855 003d 4885DB   		testq	%rbx, %rbx
 1856 0040 7443     		je	.L140
 364:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 365:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 1857              		.loc 4 365 2 view .LVU519
 1858              		.loc 4 365 49 is_stmt 0 view .LVU520
 1859 0042 4889DA   		movq	%rbx, %rdx
 1860 0045 4C89E6   		movq	%r12, %rsi
 1861 0048 E8000000 		call	memcpy@PLT
 1861      00
 1862              	.LVL176:
 1863              		.loc 4 365 66 view .LVU521
 1864 004d EB36     		jmp	.L140
 1865              	.LVL177:
 1866              	.L143:
 1867              		.loc 4 365 66 view .LVU522
 1868              	.LBE1479:
 1869              	.LBE1478:
 1870              	.LBE1477:
 1871              	.LBE1476:
 1872              	.LBE1475:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1873              		.loc 8 211 42 discriminator 1 view .LVU523
 1874 004f 4839D6   		cmpq	%rdx, %rsi
 1875 0052 74D2     		je	.L137
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1876              		.loc 8 212 28 view .LVU524
 1877 0054 488D3D00 		leaq	.LC17(%rip), %rdi
 1877      000000
 1878              	.LVL178:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1879              		.loc 8 212 28 view .LVU525
 1880 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 1880      00
 1881              	.LVL179:
 1882              	.L144:
 218:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 1883              		.loc 8 219 6 view .LVU526
 1884 0060 4889E6   		movq	%rsp, %rsi
 1885              	.LVL180:
 1886              		.loc 8 219 6 view .LVU527
 1887 0063 BA000000 		movl	$0, %edx
 1887      00
 1888              	.LVL181:
 1889              		.loc 8 219 6 view .LVU528
 1890 0068 4889EF   		movq	%rbp, %rdi
 1891              	.LVL182:
 1892              		.loc 8 219 6 view .LVU529
 1893 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 1893      00
GAS LISTING /tmp/ccvlKtfa.s 			page 113


 1894              	.LVL183:
 1895              	.LBB1484:
 1896              	.LBI1484:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1897              		.loc 10 178 7 is_stmt 1 view .LVU530
 1898              	.LBB1485:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1899              		.loc 10 179 9 is_stmt 0 view .LVU531
 1900 0070 48894500 		movq	%rax, 0(%rbp)
 1901              	.LVL184:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1902              		.loc 10 179 9 view .LVU532
 1903              	.LBE1485:
 1904              	.LBE1484:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 1905              		.loc 8 220 6 view .LVU533
 1906 0074 488B0424 		movq	(%rsp), %rax
 1907              	.LVL185:
 1908              	.LBB1486:
 1909              	.LBI1486:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1910              		.loc 10 210 7 is_stmt 1 view .LVU534
 1911              	.LBB1487:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1912              		.loc 10 211 9 is_stmt 0 view .LVU535
 1913 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1914              		.loc 10 211 45 view .LVU536
 1915 007c EBB5     		jmp	.L138
 1916              	.LVL186:
 1917              	.L145:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1918              		.loc 10 211 45 view .LVU537
 1919              	.LBE1487:
 1920              	.LBE1486:
 1921              	.LBB1488:
 1922              	.LBB1483:
 1923              	.LBB1482:
 1924              	.LBB1480:
 1925              	.LBI1480:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 1926              		.loc 4 299 7 is_stmt 1 view .LVU538
 1927              	.LBB1481:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1928              		.loc 4 300 9 view .LVU539
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1929              		.loc 4 300 16 is_stmt 0 view .LVU540
 1930 007e 410FB604 		movzbl	(%r12), %eax
 1930      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1931              		.loc 4 300 14 view .LVU541
 1932 0083 8807     		movb	%al, (%rdi)
 1933              	.LVL187:
 1934              	.L140:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1935              		.loc 4 300 14 view .LVU542
 1936              	.LBE1481:
GAS LISTING /tmp/ccvlKtfa.s 			page 114


 1937              	.LBE1480:
 1938              	.LBE1482:
 1939              	.LBE1483:
 1940              	.LBE1488:
 221:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 222:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 223:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 225:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 227:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 228:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 229:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 231:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 1941              		.loc 8 232 2 view .LVU543
 1942 0085 488B0424 		movq	(%rsp), %rax
 1943              	.LVL188:
 1944              	.LBB1489:
 1945              	.LBI1489:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1946              		.loc 10 214 7 is_stmt 1 view .LVU544
 1947              	.LBB1490:
 1948              	.LBB1491:
 1949              	.LBI1491:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 1950              		.loc 10 182 7 view .LVU545
 1951              	.LBB1492:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1952              		.loc 10 183 9 is_stmt 0 view .LVU546
 1953 0089 48894508 		movq	%rax, 8(%rbp)
 1954              	.LVL189:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1955              		.loc 10 183 9 view .LVU547
 1956              	.LBE1492:
 1957              	.LBE1491:
 1958              	.LBB1493:
 1959              	.LBI1493:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1960              		.loc 10 186 7 is_stmt 1 view .LVU548
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1961              		.loc 10 186 7 is_stmt 0 view .LVU549
 1962              	.LBE1493:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 1963              		.loc 10 217 31 view .LVU550
 1964 008d 48034500 		addq	0(%rbp), %rax
 1965              	.LVL190:
 1966              	.LBB1494:
 1967              	.LBI1494:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 1968              		.loc 4 299 7 is_stmt 1 view .LVU551
 1969              	.LBB1495:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1970              		.loc 4 300 9 view .LVU552
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1971              		.loc 4 300 14 is_stmt 0 view .LVU553
GAS LISTING /tmp/ccvlKtfa.s 			page 115


 1972 0091 C60000   		movb	$0, (%rax)
 1973              	.LVL191:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1974              		.loc 4 300 14 view .LVU554
 1975              	.LBE1495:
 1976              	.LBE1494:
 1977              	.LBE1490:
 1978              	.LBE1489:
 233:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 1979              		.loc 8 233 7 view .LVU555
 1980 0094 488B4424 		movq	8(%rsp), %rax
 1980      08
 1981 0099 64483304 		xorq	%fs:40, %rax
 1981      25280000 
 1981      00
 1982 00a2 7509     		jne	.L146
 1983 00a4 4883C410 		addq	$16, %rsp
 1984              		.cfi_remember_state
 1985              		.cfi_def_cfa_offset 32
 1986 00a8 5B       		popq	%rbx
 1987              		.cfi_def_cfa_offset 24
 1988 00a9 5D       		popq	%rbp
 1989              		.cfi_def_cfa_offset 16
 1990              	.LVL192:
 1991              		.loc 8 233 7 view .LVU556
 1992 00aa 415C     		popq	%r12
 1993              		.cfi_def_cfa_offset 8
 1994              	.LVL193:
 1995              		.loc 8 233 7 view .LVU557
 1996 00ac C3       		ret
 1997              	.LVL194:
 1998              	.L146:
 1999              		.cfi_restore_state
 2000              		.loc 8 233 7 view .LVU558
 2001 00ad E8000000 		call	__stack_chk_fail@PLT
 2001      00
 2002              	.LVL195:
 2003              		.cfi_endproc
 2004              	.LFE2843:
 2006              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20
 2007              		.align 2
 2008              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_i
 2010              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator
 2011              	.LVL196:
 2012              	.LFB2844:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2013              		.loc 8 206 7 is_stmt 1 view -0
 2014              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2015              		.loc 8 206 7 is_stmt 0 view .LVU560
 2016 0000 4154     		pushq	%r12
 2017              		.cfi_def_cfa_offset 16
 2018              		.cfi_offset 12, -16
 2019 0002 55       		pushq	%rbp
 2020              		.cfi_def_cfa_offset 24
 2021              		.cfi_offset 6, -24
 2022 0003 53       		pushq	%rbx
GAS LISTING /tmp/ccvlKtfa.s 			page 116


 2023              		.cfi_def_cfa_offset 32
 2024              		.cfi_offset 3, -32
 2025 0004 4883EC10 		subq	$16, %rsp
 2026              		.cfi_def_cfa_offset 48
 2027 0008 4889FD   		movq	%rdi, %rbp
 2028 000b 4989F4   		movq	%rsi, %r12
 2029 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2030              		.loc 8 206 7 view .LVU561
 2031 0011 64488B04 		movq	%fs:40, %rax
 2031      25280000 
 2031      00
 2032 001a 48894424 		movq	%rax, 8(%rsp)
 2032      08
 2033 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2034              		.loc 8 211 42 view .LVU562
 2035 0021 4885F6   		testq	%rsi, %rsi
 2036 0024 742D     		je	.L154
 2037              	.L148:
 2038              	.LVL197:
 2039              	.LBB1496:
 2040              	.LBI1496:
 2041              		.loc 9 138 5 is_stmt 1 view .LVU563
 2042              	.LBB1497:
 2043              	.LBI1497:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2044              		.loc 9 98 5 view .LVU564
 2045              	.LBB1498:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2046              		.loc 9 104 21 is_stmt 0 view .LVU565
 2047 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2048              		.loc 9 104 23 view .LVU566
 2049 0029 48C1FB02 		sarq	$2, %rbx
 2050              	.LVL198:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2051              		.loc 9 104 23 view .LVU567
 2052              	.LBE1498:
 2053              	.LBE1497:
 2054              	.LBE1496:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 2055              		.loc 8 215 12 view .LVU568
 2056 002d 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 2057              		.loc 8 217 2 view .LVU569
 2058 0031 4883FB03 		cmpq	$3, %rbx
 2059 0035 772D     		ja	.L155
 2060              	.LVL199:
 2061              	.L149:
 2062              	.LBB1499:
 2063              	.LBI1499:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2064              		.loc 10 186 7 is_stmt 1 view .LVU570
 2065              	.LBB1500:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2066              		.loc 10 187 28 is_stmt 0 view .LVU571
GAS LISTING /tmp/ccvlKtfa.s 			page 117


 2067 0037 488B7D00 		movq	0(%rbp), %rdi
 2068              	.LVL200:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2069              		.loc 10 187 28 view .LVU572
 2070              	.LBE1500:
 2071              	.LBE1499:
 2072              	.LBB1501:
 2073              	.LBI1501:
 2074              		.loc 10 396 7 is_stmt 1 view .LVU573
 2075              	.LBB1502:
 2076              	.LBI1502:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2077              		.loc 10 346 7 view .LVU574
 2078              	.LBB1503:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2079              		.loc 10 348 2 is_stmt 0 view .LVU575
 2080 003b 4883FB01 		cmpq	$1, %rbx
 2081 003f 7441     		je	.L156
 2082              	.LVL201:
 2083              	.LBB1504:
 2084              	.LBI1504:
 366:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 367:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 368:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 369:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, size_t __n, char_type __a)
 370:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 371:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 372:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s;
 373:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memset(__s, __a, __n));
 374:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 375:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 376:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 377:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT
 378:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 379:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 380:/usr/include/c++/9.2.0/bits/char_traits.h ****       // To keep both the byte 0xff and the eof symbol 0xffffffff
 381:/usr/include/c++/9.2.0/bits/char_traits.h ****       // from ending up as 0xffffffff.
 382:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 383:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(static_cast<unsigned char>(__c)); }
 385:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 386:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 387:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT
 388:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 389:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 391:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof() _GLIBCXX_NOEXCEPT
 392:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 393:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 394:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 395:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT
 396:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return (__c == eof()) ? 0 : __c; }
 397:/usr/include/c++/9.2.0/bits/char_traits.h ****   };
 398:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 400:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 401:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.2  char_traits specializations
GAS LISTING /tmp/ccvlKtfa.s 			page 118


 402:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 403:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<wchar_t>
 404:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 405:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wchar_t           char_type;
 406:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wint_t            int_type;
 407:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 408:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wstreampos        pos_type;
 409:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 410:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 413:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 414:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 415:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 416:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 417:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 418:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 419:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 420:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 421:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 422:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 424:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 425:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 426:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 427:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 428:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 429:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 430:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 431:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 432:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 433:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 434:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcmp(__s1, __s2, __n);
 435:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 436:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 437:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 439:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 440:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 441:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 442:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 443:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 444:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wcslen(__s);
 445:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 446:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 447:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 448:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 449:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 450:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 451:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 452:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 453:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 454:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 455:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 456:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 457:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 458:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemchr(__s, __a, __n);
GAS LISTING /tmp/ccvlKtfa.s 			page 119


 459:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 460:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 461:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 462:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 463:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 464:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 465:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 466:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemmove(__s1, __s2, __n);
 467:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 468:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 469:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 2085              		.loc 4 470 7 is_stmt 1 view .LVU576
 2086              	.LBB1505:
 471:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 2087              		.loc 4 472 2 view .LVU577
 2088 0041 4885DB   		testq	%rbx, %rbx
 2089 0044 7442     		je	.L151
 473:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 474:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcpy(__s1, __s2, __n);
 2090              		.loc 4 474 2 view .LVU578
 2091              		.loc 4 474 16 is_stmt 0 view .LVU579
 2092 0046 4889DA   		movq	%rbx, %rdx
 2093 0049 4C89E6   		movq	%r12, %rsi
 2094 004c E8000000 		call	wmemcpy@PLT
 2094      00
 2095              	.LVL202:
 2096              		.loc 4 474 32 view .LVU580
 2097 0051 EB35     		jmp	.L151
 2098              	.LVL203:
 2099              	.L154:
 2100              		.loc 4 474 32 view .LVU581
 2101              	.LBE1505:
 2102              	.LBE1504:
 2103              	.LBE1503:
 2104              	.LBE1502:
 2105              	.LBE1501:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2106              		.loc 8 211 42 discriminator 1 view .LVU582
 2107 0053 4839D6   		cmpq	%rdx, %rsi
 2108 0056 74CE     		je	.L148
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2109              		.loc 8 212 28 view .LVU583
 2110 0058 488D3D00 		leaq	.LC17(%rip), %rdi
 2110      000000
 2111              	.LVL204:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2112              		.loc 8 212 28 view .LVU584
 2113 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 2113      00
 2114              	.LVL205:
 2115              	.L155:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2116              		.loc 8 219 6 view .LVU585
 2117 0064 4889E6   		movq	%rsp, %rsi
 2118              	.LVL206:
GAS LISTING /tmp/ccvlKtfa.s 			page 120


 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2119              		.loc 8 219 6 view .LVU586
 2120 0067 BA000000 		movl	$0, %edx
 2120      00
 2121              	.LVL207:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2122              		.loc 8 219 6 view .LVU587
 2123 006c 4889EF   		movq	%rbp, %rdi
 2124              	.LVL208:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2125              		.loc 8 219 6 view .LVU588
 2126 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 2126      00
 2127              	.LVL209:
 2128              	.LBB1510:
 2129              	.LBI1510:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2130              		.loc 10 178 7 is_stmt 1 view .LVU589
 2131              	.LBB1511:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2132              		.loc 10 179 9 is_stmt 0 view .LVU590
 2133 0074 48894500 		movq	%rax, 0(%rbp)
 2134              	.LVL210:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2135              		.loc 10 179 9 view .LVU591
 2136              	.LBE1511:
 2137              	.LBE1510:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 2138              		.loc 8 220 6 view .LVU592
 2139 0078 488B0424 		movq	(%rsp), %rax
 2140              	.LVL211:
 2141              	.LBB1512:
 2142              	.LBI1512:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2143              		.loc 10 210 7 is_stmt 1 view .LVU593
 2144              	.LBB1513:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2145              		.loc 10 211 9 is_stmt 0 view .LVU594
 2146 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2147              		.loc 10 211 45 view .LVU595
 2148 0080 EBB5     		jmp	.L149
 2149              	.LVL212:
 2150              	.L156:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2151              		.loc 10 211 45 view .LVU596
 2152              	.LBE1513:
 2153              	.LBE1512:
 2154              	.LBB1514:
 2155              	.LBB1509:
 2156              	.LBB1508:
 2157              	.LBB1506:
 2158              	.LBI1506:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 2159              		.loc 4 412 7 is_stmt 1 view .LVU597
 2160              	.LBB1507:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 121


 2161              		.loc 4 413 9 view .LVU598
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2162              		.loc 4 413 16 is_stmt 0 view .LVU599
 2163 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2164              		.loc 4 413 14 view .LVU600
 2165 0086 8907     		movl	%eax, (%rdi)
 2166              	.LVL213:
 2167              	.L151:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2168              		.loc 4 413 14 view .LVU601
 2169              	.LBE1507:
 2170              	.LBE1506:
 2171              	.LBE1508:
 2172              	.LBE1509:
 2173              	.LBE1514:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 2174              		.loc 8 232 2 view .LVU602
 2175 0088 488B0424 		movq	(%rsp), %rax
 2176              	.LVL214:
 2177              	.LBB1515:
 2178              	.LBI1515:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2179              		.loc 10 214 7 is_stmt 1 view .LVU603
 2180              	.LBB1516:
 2181              	.LBB1517:
 2182              	.LBI1517:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 2183              		.loc 10 182 7 view .LVU604
 2184              	.LBB1518:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2185              		.loc 10 183 9 is_stmt 0 view .LVU605
 2186 008c 48894508 		movq	%rax, 8(%rbp)
 2187              	.LVL215:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2188              		.loc 10 183 9 view .LVU606
 2189              	.LBE1518:
 2190              	.LBE1517:
 2191              	.LBB1519:
 2192              	.LBI1519:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2193              		.loc 10 186 7 is_stmt 1 view .LVU607
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2194              		.loc 10 186 7 is_stmt 0 view .LVU608
 2195              	.LBE1519:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2196              		.loc 10 217 31 view .LVU609
 2197 0090 48C1E002 		salq	$2, %rax
 2198              	.LVL216:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2199              		.loc 10 217 31 view .LVU610
 2200 0094 48034500 		addq	0(%rbp), %rax
 2201              	.LVL217:
 2202              	.LBB1520:
 2203              	.LBI1520:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 2204              		.loc 4 412 7 is_stmt 1 view .LVU611
GAS LISTING /tmp/ccvlKtfa.s 			page 122


 2205              	.LBB1521:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2206              		.loc 4 413 9 view .LVU612
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2207              		.loc 4 413 14 is_stmt 0 view .LVU613
 2208 0098 C7000000 		movl	$0, (%rax)
 2208      0000
 2209              	.LVL218:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2210              		.loc 4 413 14 view .LVU614
 2211              	.LBE1521:
 2212              	.LBE1520:
 2213              	.LBE1516:
 2214              	.LBE1515:
 2215              		.loc 8 233 7 view .LVU615
 2216 009e 488B4424 		movq	8(%rsp), %rax
 2216      08
 2217 00a3 64483304 		xorq	%fs:40, %rax
 2217      25280000 
 2217      00
 2218 00ac 7509     		jne	.L157
 2219 00ae 4883C410 		addq	$16, %rsp
 2220              		.cfi_remember_state
 2221              		.cfi_def_cfa_offset 32
 2222 00b2 5B       		popq	%rbx
 2223              		.cfi_def_cfa_offset 24
 2224 00b3 5D       		popq	%rbp
 2225              		.cfi_def_cfa_offset 16
 2226              	.LVL219:
 2227              		.loc 8 233 7 view .LVU616
 2228 00b4 415C     		popq	%r12
 2229              		.cfi_def_cfa_offset 8
 2230              	.LVL220:
 2231              		.loc 8 233 7 view .LVU617
 2232 00b6 C3       		ret
 2233              	.LVL221:
 2234              	.L157:
 2235              		.cfi_restore_state
 2236              		.loc 8 233 7 view .LVU618
 2237 00b7 E8000000 		call	__stack_chk_fail@PLT
 2237      00
 2238              	.LVL222:
 2239              		.cfi_endproc
 2240              	.LFE2844:
 2242              		.section	.rodata.str4.4,"aMS",@progbits,4
 2243              		.align 4
 2244              	.LC18:
 2245 0000 3000     		.string	"0"
 2246 0002 00       		.string	""
 2247 0003 00       		.string	""
 2248 0004 00       		.string	""
 2249 0005 00       		.string	""
 2250 0006 00       		.string	""
 2251 0007 00       		.string	""
 2252              		.align 4
 2253              	.LC19:
 2254 0008 3100     		.string	"1"
GAS LISTING /tmp/ccvlKtfa.s 			page 123


 2255 000a 00       		.string	""
 2256 000b 00       		.string	""
 2257 000c 00       		.string	""
 2258 000d 00       		.string	""
 2259 000e 00       		.string	""
 2260 000f 00       		.string	""
 2261              		.align 4
 2262              	.LC20:
 2263 0010 3200     		.string	"2"
 2264 0012 00       		.string	""
 2265 0013 00       		.string	""
 2266 0014 00       		.string	""
 2267 0015 00       		.string	""
 2268 0016 00       		.string	""
 2269 0017 00       		.string	""
 2270              		.align 4
 2271              	.LC21:
 2272 0018 3300     		.string	"3"
 2273 001a 00       		.string	""
 2274 001b 00       		.string	""
 2275 001c 00       		.string	""
 2276 001d 00       		.string	""
 2277 001e 00       		.string	""
 2278 001f 00       		.string	""
 2279              		.text
 2280              		.globl	_Z12drawObstaclePK8obstacle
 2282              	_Z12drawObstaclePK8obstacle:
 2283              	.LVL223:
 2284              	.LFB2496:
 405:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2285              		.loc 1 405 1 is_stmt 1 view -0
 2286              		.cfi_startproc
 2287              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2288              		.cfi_lsda 0x1b,.LLSDA2496
 405:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2289              		.loc 1 405 1 is_stmt 0 view .LVU620
 2290 092e 55       		pushq	%rbp
 2291              		.cfi_def_cfa_offset 16
 2292              		.cfi_offset 6, -16
 2293 092f 53       		pushq	%rbx
 2294              		.cfi_def_cfa_offset 24
 2295              		.cfi_offset 3, -24
 2296 0930 4883EC48 		subq	$72, %rsp
 2297              		.cfi_def_cfa_offset 96
 2298 0934 4889FB   		movq	%rdi, %rbx
 405:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 2299              		.loc 1 405 1 view .LVU621
 2300 0937 64488B04 		movq	%fs:40, %rax
 2300      25280000 
 2300      00
 2301 0940 48894424 		movq	%rax, 56(%rsp)
 2301      38
 2302 0945 31C0     		xorl	%eax, %eax
 407:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 2303              		.loc 1 407 2 is_stmt 1 view .LVU622
 407:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 2304              		.loc 1 407 12 is_stmt 0 view .LVU623
GAS LISTING /tmp/ccvlKtfa.s 			page 124


 2305 0947 BF0000FF 		movl	$16711680, %edi
 2305      00
 2306              	.LVL224:
 2307              	.LEHB0:
 407:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 2308              		.loc 1 407 12 view .LVU624
 2309 094c E8000000 		call	_Z10glSetColorj@PLT
 2309      00
 2310              	.LVL225:
 408:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 2311              		.loc 1 408 2 is_stmt 1 view .LVU625
 408:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 2312              		.loc 1 408 23 is_stmt 0 view .LVU626
 2313 0951 488B03   		movq	(%rbx), %rax
 408:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 2314              		.loc 1 408 10 view .LVU627
 2315 0954 F30F1053 		movss	40(%rbx), %xmm2
 2315      28
 2316 0959 F30F1048 		movss	4(%rax), %xmm1
 2316      04
 2317 095e F30F1000 		movss	(%rax), %xmm0
 2318 0962 E8000000 		call	_Z8drawQuadfff@PLT
 2318      00
 2319              	.LVL226:
 409:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 2320              		.loc 1 409 2 is_stmt 1 view .LVU628
 409:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 2321              		.loc 1 409 12 is_stmt 0 view .LVU629
 2322 0967 BFFFFFFF 		movl	$16777215, %edi
 2322      00
 2323 096c E8000000 		call	_Z10glSetColorj@PLT
 2323      00
 2324              	.LVL227:
 410:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 2325              		.loc 1 410 2 is_stmt 1 view .LVU630
 410:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 2326              		.loc 1 410 33 is_stmt 0 view .LVU631
 2327 0971 488B03   		movq	(%rbx), %rax
 410:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 2328              		.loc 1 410 36 view .LVU632
 2329 0974 F30F1060 		movss	4(%rax), %xmm4
 2329      04
 2330 0979 F30F1164 		movss	%xmm4, 8(%rsp)
 2330      2408
 410:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 2331              		.loc 1 410 27 view .LVU633
 2332 097f F30F1028 		movss	(%rax), %xmm5
 2333 0983 F30F116C 		movss	%xmm5, 12(%rsp)
 2333      240C
 2334              	.LVL228:
 2335              	.LBB1742:
 2336              	.LBI1742:
 2337              		.file 11 "/usr/include/c++/9.2.0/bits/allocator.h"
   1:/usr/include/c++/9.2.0/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/allocator.h **** 
   3:/usr/include/c++/9.2.0/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/allocator.h **** //
GAS LISTING /tmp/ccvlKtfa.s 			page 125


   5:/usr/include/c++/9.2.0/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/allocator.h **** 
  11:/usr/include/c++/9.2.0/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/allocator.h **** 
  16:/usr/include/c++/9.2.0/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/allocator.h **** 
  20:/usr/include/c++/9.2.0/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/allocator.h **** 
  25:/usr/include/c++/9.2.0/bits/allocator.h **** /*
  26:/usr/include/c++/9.2.0/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/9.2.0/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/9.2.0/bits/allocator.h ****  *
  29:/usr/include/c++/9.2.0/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/9.2.0/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/9.2.0/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/9.2.0/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/9.2.0/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/9.2.0/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/9.2.0/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  37:/usr/include/c++/9.2.0/bits/allocator.h **** 
  38:/usr/include/c++/9.2.0/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/9.2.0/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/9.2.0/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  42:/usr/include/c++/9.2.0/bits/allocator.h **** 
  43:/usr/include/c++/9.2.0/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/9.2.0/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/9.2.0/bits/allocator.h **** 
  46:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/9.2.0/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  51:/usr/include/c++/9.2.0/bits/allocator.h **** 
  52:/usr/include/c++/9.2.0/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/9.2.0/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  56:/usr/include/c++/9.2.0/bits/allocator.h **** 
  57:/usr/include/c++/9.2.0/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/9.2.0/bits/allocator.h **** {
  59:/usr/include/c++/9.2.0/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/9.2.0/bits/allocator.h **** 
  61:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
GAS LISTING /tmp/ccvlKtfa.s 			page 126


  62:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @{
  64:/usr/include/c++/9.2.0/bits/allocator.h ****    */
  65:/usr/include/c++/9.2.0/bits/allocator.h **** 
  66:/usr/include/c++/9.2.0/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/9.2.0/bits/allocator.h ****   template<>
  68:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/9.2.0/bits/allocator.h ****     {
  70:/usr/include/c++/9.2.0/bits/allocator.h ****     public:
  71:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/9.2.0/bits/allocator.h **** 
  77:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/9.2.0/bits/allocator.h **** 
  81:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/9.2.0/bits/allocator.h **** 
  86:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/9.2.0/bits/allocator.h **** 
  88:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  90:/usr/include/c++/9.2.0/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/usr/include/c++/9.2.0/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/usr/include/c++/9.2.0/bits/allocator.h **** 
  95:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up>
  96:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  97:/usr/include/c++/9.2.0/bits/allocator.h **** 	destroy(_Up* __p)
  98:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 101:/usr/include/c++/9.2.0/bits/allocator.h ****     };
 102:/usr/include/c++/9.2.0/bits/allocator.h **** 
 103:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
 104:/usr/include/c++/9.2.0/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 106:/usr/include/c++/9.2.0/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/usr/include/c++/9.2.0/bits/allocator.h ****    *  for further details.
 108:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 109:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/usr/include/c++/9.2.0/bits/allocator.h ****    */
 111:/usr/include/c++/9.2.0/bits/allocator.h ****   template<typename _Tp>
 112:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/usr/include/c++/9.2.0/bits/allocator.h ****     {
 114:/usr/include/c++/9.2.0/bits/allocator.h ****    public:
 115:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t     size_type;
 116:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp* const_pointer;
GAS LISTING /tmp/ccvlKtfa.s 			page 127


 119:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp&       reference;
 120:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp        value_type;
 122:/usr/include/c++/9.2.0/bits/allocator.h **** 
 123:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 124:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
 125:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/usr/include/c++/9.2.0/bits/allocator.h **** 
 127:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/usr/include/c++/9.2.0/bits/allocator.h **** 
 132:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 134:/usr/include/c++/9.2.0/bits/allocator.h **** 
 135:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 2338              		.loc 11 138 7 is_stmt 1 view .LVU634
 2339              	.LBB1743:
 2340              	.LBI1743:
 2341              		.file 12 "/usr/include/c++/9.2.0/ext/new_allocator.h"
   1:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
   3:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/new_allocator.h **** //
   5:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  11:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  16:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  20:/usr/include/c++/9.2.0/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  25:/usr/include/c++/9.2.0/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/9.2.0/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/new_allocator.h ****  */
  28:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  29:/usr/include/c++/9.2.0/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/9.2.0/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  32:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <new>
GAS LISTING /tmp/ccvlKtfa.s 			page 128


  34:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  39:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  40:/usr/include/c++/9.2.0/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/9.2.0/ext/new_allocator.h **** {
  42:/usr/include/c++/9.2.0/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  44:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  47:/usr/include/c++/9.2.0/ext/new_allocator.h ****   /**
  48:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  51:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  55:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/9.2.0/ext/new_allocator.h ****    */
  57:/usr/include/c++/9.2.0/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/9.2.0/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/9.2.0/ext/new_allocator.h ****     {
  60:/usr/include/c++/9.2.0/ext/new_allocator.h ****     public:
  61:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  69:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  73:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  78:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  79:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 2342              		.loc 12 80 7 view .LVU635
 2343              		.loc 12 80 7 is_stmt 0 view .LVU636
 2344              	.LBE1743:
 2345              	.LBE1742:
 2346              	.LBB1744:
 2347              	.LBI1744:
 397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 400:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
GAS LISTING /tmp/ccvlKtfa.s 			page 129


 401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 403:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 405:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 410:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 412:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 413:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 414:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 416:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 417:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 420:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 421:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 423:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 424:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 431:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
 432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 436:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 437:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 439:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 440:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 448:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 453:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
GAS LISTING /tmp/ccvlKtfa.s 			page 130


 458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 461:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 469:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 470:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 471:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 476:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n)
 478:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 480:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 484:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 492:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 500:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 501:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 510:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 131


 515:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 516:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 520:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 2348              		.loc 10 525 7 is_stmt 1 view .LVU637
 2349              	.LBB1745:
 2350              	.LBB1746:
 2351              	.LBB1747:
 2352              	.LBI1747:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2353              		.loc 10 190 7 view .LVU638
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2354              		.loc 10 190 7 is_stmt 0 view .LVU639
 2355              	.LBE1747:
 2356              	.LBB1748:
 2357              	.LBI1748:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2358              		.loc 10 156 2 is_stmt 1 view .LVU640
 2359              	.LBB1749:
 2360              	.LBB1750:
 2361              	.LBB1751:
 2362              	.LBI1751:
 139:/usr/include/c++/9.2.0/bits/allocator.h **** 
 140:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 2363              		.loc 11 141 7 view .LVU641
 2364              	.LBB1752:
 2365              	.LBI1752:
  81:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  82:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 2366              		.loc 12 83 7 view .LVU642
 2367              		.loc 12 83 7 is_stmt 0 view .LVU643
 2368              	.LBE1752:
 2369              	.LBE1751:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2370              		.loc 10 157 35 view .LVU644
 2371 0989 488D6C24 		leaq	16(%rsp), %rbp
 2371      10
 2372              	.LVL229:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2373              		.loc 10 157 35 view .LVU645
 2374 098e 488D4424 		leaq	32(%rsp), %rax
 2374      20
 2375              	.LVL230:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2376              		.loc 10 157 35 view .LVU646
 2377 0993 48894424 		movq	%rax, 16(%rsp)
 2377      10
 2378              	.LVL231:
GAS LISTING /tmp/ccvlKtfa.s 			page 132


 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2379              		.loc 10 157 35 view .LVU647
 2380              	.LBE1750:
 2381              	.LBE1749:
 2382              	.LBE1748:
 2383              	.LBB1753:
 2384              	.LBI1753:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2385              		.loc 4 438 7 is_stmt 1 view .LVU648
 2386              	.LBB1754:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2387              		.loc 4 444 2 view .LVU649
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2388              		.loc 4 444 15 is_stmt 0 view .LVU650
 2389 0998 488D3D00 		leaq	.LC18(%rip), %rdi
 2389      000000
 2390 099f E8000000 		call	wcslen@PLT
 2390      00
 2391              	.LVL232:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2392              		.loc 4 444 15 view .LVU651
 2393              	.LBE1754:
 2394              	.LBE1753:
 526:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 2395              		.loc 10 527 9 view .LVU652
 2396 09a4 488D3500 		leaq	.LC18(%rip), %rsi
 2396      000000
 2397 09ab 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2398              	.LVL233:
 2399              	.LBB1755:
 2400              	.LBI1755:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2401              		.loc 10 263 9 is_stmt 1 view .LVU653
 2402              	.LBB1756:
 2403              	.LBB1757:
 2404              	.LBI1757:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2405              		.loc 10 243 9 view .LVU654
 2406              	.LBB1758:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2407              		.loc 10 247 11 is_stmt 0 view .LVU655
 2408 09af 4889EF   		movq	%rbp, %rdi
 2409 09b2 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2409      00
 2410              	.LVL234:
 2411              	.LEHE0:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2412              		.loc 10 247 11 view .LVU656
 2413              	.LBE1758:
 2414              	.LBE1757:
 2415              	.LBE1756:
 2416              	.LBE1755:
 2417              	.LBE1746:
 2418              	.LBE1745:
 2419              	.LBE1744:
 410:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
GAS LISTING /tmp/ccvlKtfa.s 			page 133


 2420              		.loc 1 410 10 view .LVU657
 2421 09b7 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2421      2408
 2422 09bd F30F2C54 		cvttss2sil	12(%rsp), %edx
 2422      240C
 2423 09c3 BE0A0000 		movl	$10, %esi
 2423      00
 2424 09c8 4889EF   		movq	%rbp, %rdi
 2425              	.LEHB1:
 2426 09cb E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2426      00
 2427              	.LVL235:
 2428              	.LEHE1:
 2429              	.LBB1759:
 2430              	.LBI1759:
 528:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 529:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 535:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 540:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 544:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 552:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 557:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 560:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 561:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 562:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 566:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__str.length());
GAS LISTING /tmp/ccvlKtfa.s 			page 134


 570:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 579:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 587:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 591:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 593:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 607:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 608:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 610:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 611:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 613:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 623:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 625:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
GAS LISTING /tmp/ccvlKtfa.s 			page 135


 627:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 630:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 638:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 648:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
 650:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 653:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 654:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string()
 2431              		.loc 10 657 7 is_stmt 1 view .LVU658
 2432              	.LBB1760:
 2433              	.LBI1760:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2434              		.loc 10 229 7 view .LVU659
 2435              	.LBB1761:
 2436              	.LBB1762:
 2437              	.LBI1762:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2438              		.loc 10 221 7 view .LVU660
 2439              	.LBB1763:
 2440              	.LBI1763:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2441              		.loc 10 186 7 view .LVU661
 2442              	.LBB1764:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2443              		.loc 10 187 28 is_stmt 0 view .LVU662
 2444 09d0 488B7C24 		movq	16(%rsp), %rdi
 2444      10
 2445              	.LVL236:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2446              		.loc 10 187 28 view .LVU663
 2447              	.LBE1764:
 2448              	.LBE1763:
 2449              	.LBB1765:
 2450              	.LBI1765:
GAS LISTING /tmp/ccvlKtfa.s 			page 136


 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2451              		.loc 10 200 7 is_stmt 1 view .LVU664
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2452              		.loc 10 200 7 is_stmt 0 view .LVU665
 2453              	.LBE1765:
 2454              	.LBE1762:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2455              		.loc 10 231 2 view .LVU666
 2456 09d5 488D4424 		leaq	32(%rsp), %rax
 2456      20
 2457 09da 4839C7   		cmpq	%rax, %rdi
 2458 09dd 7405     		je	.L159
 2459              	.LVL237:
 2460              	.LBB1766:
 2461              	.LBI1766:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2462              		.loc 10 236 7 is_stmt 1 view .LVU667
 2463              	.LBB1767:
 2464              	.LBB1768:
 2465              	.LBI1768:
 2466              		.file 13 "/usr/include/c++/9.2.0/bits/alloc_traits.h"
   1:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/alloc_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  33:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  35:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
GAS LISTING /tmp/ccvlKtfa.s 			page 137


  37:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  41:/usr/include/c++/9.2.0/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/alloc_traits.h **** {
  43:/usr/include/c++/9.2.0/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  45:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   {
  47:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  50:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  55:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   };
  73:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  74:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  78:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   */
  82:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
  85:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  90:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
  93:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
GAS LISTING /tmp/ccvlKtfa.s 			page 138


  94:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
  95:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  97:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 105:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 111:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 120:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 124:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 128:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 132:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 135:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 140:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 143:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 145:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 148:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 139


 151:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 153:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 156:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 159:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 161:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 164:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 167:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 169:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 172:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 175:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 178:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 179:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 181:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 184:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 187:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 190:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 193:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 196:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 199:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 202:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 205:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
GAS LISTING /tmp/ccvlKtfa.s 			page 140


 208:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 210:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 217:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 230:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 233:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 236:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 240:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 246:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static
 248:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 255:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 257:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 262:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void
 264:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
GAS LISTING /tmp/ccvlKtfa.s 			page 141


 265:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 268:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 270:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 274:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static size_type
 276:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 278:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	}
 283:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 284:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 286:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 290:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Alloc2
 292:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a; }
 294:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 295:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 296:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 297:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 298:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 302:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 304:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 308:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 309:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 315:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 316:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 319:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
GAS LISTING /tmp/ccvlKtfa.s 			page 142


 322:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 323:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 324:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 329:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 331:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 332:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 335:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 341:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 346:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 353:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 354:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 358:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 361:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 362:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 366:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 371:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 374:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 377:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 378:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
GAS LISTING /tmp/ccvlKtfa.s 			page 143


 379:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 382:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 385:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static _Alloc
 386:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     };
 389:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Tp>
 392:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
 394:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
 395:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
 397:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 402:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 405:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 408:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 414:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's size type
 415:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 417:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 420:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 426:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 429:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 430:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 432:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 433:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 435:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
GAS LISTING /tmp/ccvlKtfa.s 			page 144


 436:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 440:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 442:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 446:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 447:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 453:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 454:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 456:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 460:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 461:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 466:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 468:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 469:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 2467              		.loc 13 469 7 view .LVU668
 2468              	.LBB1769:
 2469              	.LBI1769:
  84:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  85:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  86:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  89:/usr/include/c++/9.2.0/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  91:/usr/include/c++/9.2.0/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  95:/usr/include/c++/9.2.0/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  99:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/usr/include/c++/9.2.0/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 145


 104:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 107:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 110:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 113:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 114:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/usr/include/c++/9.2.0/ext/new_allocator.h ****       }
 116:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 117:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/usr/include/c++/9.2.0/ext/new_allocator.h ****       void
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 2470              		.loc 12 119 7 view .LVU669
 2471              	.LBB1770:
 120:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 121:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 124:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return;
 126:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 127:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 128:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	::operator delete(__p);
 2472              		.loc 12 128 19 is_stmt 0 view .LVU670
 2473 09df E8000000 		call	_ZdlPv@PLT
 2473      00
 2474              	.LVL238:
 2475              	.L159:
 2476              		.loc 12 128 19 view .LVU671
 2477              	.LBE1770:
 2478              	.LBE1769:
 2479              	.LBE1768:
 2480              	.LBE1767:
 2481              	.LBE1766:
 2482              	.LBE1761:
 2483              	.LBE1760:
 2484              	.LBB1771:
 2485              	.LBI1771:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2486              		.loc 10 150 14 is_stmt 1 view .LVU672
 2487              	.LBB1772:
 2488              	.LBI1772:
 142:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/usr/include/c++/9.2.0/bits/allocator.h **** 
 144:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/usr/include/c++/9.2.0/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 148:/usr/include/c++/9.2.0/bits/allocator.h **** 
 149:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 150:/usr/include/c++/9.2.0/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/usr/include/c++/9.2.0/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/usr/include/c++/9.2.0/bits/allocator.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 146


 153:/usr/include/c++/9.2.0/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 2489              		.loc 11 153 7 view .LVU673
 2490              	.LBB1773:
 2491              	.LBI1773:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2492              		.loc 12 89 7 view .LVU674
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2493              		.loc 12 89 7 is_stmt 0 view .LVU675
 2494              	.LBE1773:
 2495              	.LBE1772:
 2496              	.LBE1771:
 2497              	.LBE1759:
 2498              	.LBB1774:
 2499              	.LBI1774:
 2500              		.loc 11 153 7 is_stmt 1 view .LVU676
 2501              	.LBB1775:
 2502              	.LBI1775:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2503              		.loc 12 89 7 view .LVU677
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2504              		.loc 12 89 7 is_stmt 0 view .LVU678
 2505              	.LBE1775:
 2506              	.LBE1774:
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2507              		.loc 1 411 2 is_stmt 1 view .LVU679
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2508              		.loc 1 411 33 is_stmt 0 view .LVU680
 2509 09e4 488B03   		movq	(%rbx), %rax
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2510              		.loc 1 411 43 view .LVU681
 2511 09e7 F30F1043 		movss	40(%rbx), %xmm0
 2511      28
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2512              		.loc 1 411 38 view .LVU682
 2513 09ec F30F5840 		addss	4(%rax), %xmm0
 2513      04
 2514 09f1 F30F1144 		movss	%xmm0, 8(%rsp)
 2514      2408
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2515              		.loc 1 411 27 view .LVU683
 2516 09f7 F30F1030 		movss	(%rax), %xmm6
 2517 09fb F30F1174 		movss	%xmm6, 12(%rsp)
 2517      240C
 2518              	.LVL239:
 2519              	.LBB1776:
 2520              	.LBI1776:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2521              		.loc 11 138 7 is_stmt 1 view .LVU684
 2522              	.LBB1777:
 2523              	.LBI1777:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2524              		.loc 12 80 7 view .LVU685
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2525              		.loc 12 80 7 is_stmt 0 view .LVU686
 2526              	.LBE1777:
 2527              	.LBE1776:
 2528              	.LBB1778:
GAS LISTING /tmp/ccvlKtfa.s 			page 147


 2529              	.LBI1778:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2530              		.loc 10 525 7 is_stmt 1 view .LVU687
 2531              	.LBB1779:
 2532              	.LBB1780:
 2533              	.LBB1781:
 2534              	.LBI1781:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2535              		.loc 10 190 7 view .LVU688
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2536              		.loc 10 190 7 is_stmt 0 view .LVU689
 2537              	.LBE1781:
 2538              	.LBB1782:
 2539              	.LBI1782:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2540              		.loc 10 156 2 is_stmt 1 view .LVU690
 2541              	.LBB1783:
 2542              	.LBB1784:
 2543              	.LBB1785:
 2544              	.LBI1785:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2545              		.loc 11 141 7 view .LVU691
 2546              	.LBB1786:
 2547              	.LBI1786:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2548              		.loc 12 83 7 view .LVU692
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2549              		.loc 12 83 7 is_stmt 0 view .LVU693
 2550              	.LBE1786:
 2551              	.LBE1785:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2552              		.loc 10 157 35 view .LVU694
 2553 0a01 488D6C24 		leaq	16(%rsp), %rbp
 2553      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2554              		.loc 10 157 35 view .LVU695
 2555 0a06 488D4424 		leaq	32(%rsp), %rax
 2555      20
 2556              	.LVL240:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2557              		.loc 10 157 35 view .LVU696
 2558 0a0b 48894424 		movq	%rax, 16(%rsp)
 2558      10
 2559              	.LVL241:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2560              		.loc 10 157 35 view .LVU697
 2561              	.LBE1784:
 2562              	.LBE1783:
 2563              	.LBE1782:
 2564              	.LBB1787:
 2565              	.LBI1787:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2566              		.loc 4 438 7 is_stmt 1 view .LVU698
 2567              	.LBB1788:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2568              		.loc 4 444 2 view .LVU699
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
GAS LISTING /tmp/ccvlKtfa.s 			page 148


 2569              		.loc 4 444 15 is_stmt 0 view .LVU700
 2570 0a10 488D3D00 		leaq	.LC19(%rip), %rdi
 2570      000000
 2571 0a17 E8000000 		call	wcslen@PLT
 2571      00
 2572              	.LVL242:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2573              		.loc 4 444 15 view .LVU701
 2574              	.LBE1788:
 2575              	.LBE1787:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2576              		.loc 10 527 9 view .LVU702
 2577 0a1c 488D3500 		leaq	.LC19(%rip), %rsi
 2577      000000
 2578 0a23 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2579              	.LVL243:
 2580              	.LBB1789:
 2581              	.LBI1789:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2582              		.loc 10 263 9 is_stmt 1 view .LVU703
 2583              	.LBB1790:
 2584              	.LBB1791:
 2585              	.LBI1791:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2586              		.loc 10 243 9 view .LVU704
 2587              	.LBB1792:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2588              		.loc 10 247 11 is_stmt 0 view .LVU705
 2589 0a27 4889EF   		movq	%rbp, %rdi
 2590              	.LEHB2:
 2591 0a2a E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2591      00
 2592              	.LVL244:
 2593              	.LEHE2:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2594              		.loc 10 247 11 view .LVU706
 2595              	.LBE1792:
 2596              	.LBE1791:
 2597              	.LBE1790:
 2598              	.LBE1789:
 2599              	.LBE1780:
 2600              	.LBE1779:
 2601              	.LBE1778:
 411:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 2602              		.loc 1 411 10 view .LVU707
 2603 0a2f F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2603      2408
 2604 0a35 F30F2C54 		cvttss2sil	12(%rsp), %edx
 2604      240C
 2605 0a3b BE0A0000 		movl	$10, %esi
 2605      00
 2606 0a40 4889EF   		movq	%rbp, %rdi
 2607              	.LEHB3:
 2608 0a43 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2608      00
 2609              	.LVL245:
 2610              	.LEHE3:
GAS LISTING /tmp/ccvlKtfa.s 			page 149


 2611              	.LBB1793:
 2612              	.LBI1793:
 2613              		.loc 10 657 7 is_stmt 1 view .LVU708
 2614              	.LBB1794:
 2615              	.LBI1794:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2616              		.loc 10 229 7 view .LVU709
 2617              	.LBB1795:
 2618              	.LBB1796:
 2619              	.LBI1796:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2620              		.loc 10 221 7 view .LVU710
 2621              	.LBB1797:
 2622              	.LBI1797:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2623              		.loc 10 186 7 view .LVU711
 2624              	.LBB1798:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2625              		.loc 10 187 28 is_stmt 0 view .LVU712
 2626 0a48 488B7C24 		movq	16(%rsp), %rdi
 2626      10
 2627              	.LVL246:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2628              		.loc 10 187 28 view .LVU713
 2629              	.LBE1798:
 2630              	.LBE1797:
 2631              	.LBB1799:
 2632              	.LBI1799:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2633              		.loc 10 200 7 is_stmt 1 view .LVU714
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2634              		.loc 10 200 7 is_stmt 0 view .LVU715
 2635              	.LBE1799:
 2636              	.LBE1796:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2637              		.loc 10 231 2 view .LVU716
 2638 0a4d 488D4424 		leaq	32(%rsp), %rax
 2638      20
 2639 0a52 4839C7   		cmpq	%rax, %rdi
 2640 0a55 7405     		je	.L160
 2641              	.LVL247:
 2642              	.LBB1800:
 2643              	.LBI1800:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2644              		.loc 10 236 7 is_stmt 1 view .LVU717
 2645              	.LBB1801:
 2646              	.LBB1802:
 2647              	.LBI1802:
 2648              		.loc 13 469 7 view .LVU718
 2649              	.LBB1803:
 2650              	.LBI1803:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 2651              		.loc 12 119 7 view .LVU719
 2652              	.LBB1804:
 2653              		.loc 12 128 19 is_stmt 0 view .LVU720
 2654 0a57 E8000000 		call	_ZdlPv@PLT
 2654      00
GAS LISTING /tmp/ccvlKtfa.s 			page 150


 2655              	.LVL248:
 2656              	.L160:
 2657              		.loc 12 128 19 view .LVU721
 2658              	.LBE1804:
 2659              	.LBE1803:
 2660              	.LBE1802:
 2661              	.LBE1801:
 2662              	.LBE1800:
 2663              	.LBE1795:
 2664              	.LBE1794:
 2665              	.LBB1805:
 2666              	.LBI1805:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2667              		.loc 10 150 14 is_stmt 1 view .LVU722
 2668              	.LBB1806:
 2669              	.LBI1806:
 2670              		.loc 11 153 7 view .LVU723
 2671              	.LBB1807:
 2672              	.LBI1807:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2673              		.loc 12 89 7 view .LVU724
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2674              		.loc 12 89 7 is_stmt 0 view .LVU725
 2675              	.LBE1807:
 2676              	.LBE1806:
 2677              	.LBE1805:
 2678              	.LBE1793:
 2679              	.LBB1808:
 2680              	.LBI1808:
 2681              		.loc 11 153 7 is_stmt 1 view .LVU726
 2682              	.LBB1809:
 2683              	.LBI1809:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2684              		.loc 12 89 7 view .LVU727
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2685              		.loc 12 89 7 is_stmt 0 view .LVU728
 2686              	.LBE1809:
 2687              	.LBE1808:
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2688              		.loc 1 412 2 is_stmt 1 view .LVU729
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2689              		.loc 1 412 40 is_stmt 0 view .LVU730
 2690 0a5c 488B03   		movq	(%rbx), %rax
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2691              		.loc 1 412 50 view .LVU731
 2692 0a5f F30F1043 		movss	40(%rbx), %xmm0
 2692      28
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2693              		.loc 1 412 45 view .LVU732
 2694 0a64 0F28D8   		movaps	%xmm0, %xmm3
 2695 0a67 F30F5858 		addss	4(%rax), %xmm3
 2695      04
 2696 0a6c F30F115C 		movss	%xmm3, 8(%rsp)
 2696      2408
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2697              		.loc 1 412 29 view .LVU733
 2698 0a72 F30F5800 		addss	(%rax), %xmm0
GAS LISTING /tmp/ccvlKtfa.s 			page 151


 2699 0a76 F30F1144 		movss	%xmm0, 12(%rsp)
 2699      240C
 2700              	.LVL249:
 2701              	.LBB1810:
 2702              	.LBI1810:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2703              		.loc 11 138 7 is_stmt 1 view .LVU734
 2704              	.LBB1811:
 2705              	.LBI1811:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2706              		.loc 12 80 7 view .LVU735
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2707              		.loc 12 80 7 is_stmt 0 view .LVU736
 2708              	.LBE1811:
 2709              	.LBE1810:
 2710              	.LBB1812:
 2711              	.LBI1812:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2712              		.loc 10 525 7 is_stmt 1 view .LVU737
 2713              	.LBB1813:
 2714              	.LBB1814:
 2715              	.LBB1815:
 2716              	.LBI1815:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2717              		.loc 10 190 7 view .LVU738
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2718              		.loc 10 190 7 is_stmt 0 view .LVU739
 2719              	.LBE1815:
 2720              	.LBB1816:
 2721              	.LBI1816:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2722              		.loc 10 156 2 is_stmt 1 view .LVU740
 2723              	.LBB1817:
 2724              	.LBB1818:
 2725              	.LBB1819:
 2726              	.LBI1819:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2727              		.loc 11 141 7 view .LVU741
 2728              	.LBB1820:
 2729              	.LBI1820:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2730              		.loc 12 83 7 view .LVU742
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2731              		.loc 12 83 7 is_stmt 0 view .LVU743
 2732              	.LBE1820:
 2733              	.LBE1819:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2734              		.loc 10 157 35 view .LVU744
 2735 0a7c 488D6C24 		leaq	16(%rsp), %rbp
 2735      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2736              		.loc 10 157 35 view .LVU745
 2737 0a81 488D4424 		leaq	32(%rsp), %rax
 2737      20
 2738              	.LVL250:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2739              		.loc 10 157 35 view .LVU746
GAS LISTING /tmp/ccvlKtfa.s 			page 152


 2740 0a86 48894424 		movq	%rax, 16(%rsp)
 2740      10
 2741              	.LVL251:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2742              		.loc 10 157 35 view .LVU747
 2743              	.LBE1818:
 2744              	.LBE1817:
 2745              	.LBE1816:
 2746              	.LBB1821:
 2747              	.LBI1821:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2748              		.loc 4 438 7 is_stmt 1 view .LVU748
 2749              	.LBB1822:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2750              		.loc 4 444 2 view .LVU749
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2751              		.loc 4 444 15 is_stmt 0 view .LVU750
 2752 0a8b 488D3D00 		leaq	.LC20(%rip), %rdi
 2752      000000
 2753 0a92 E8000000 		call	wcslen@PLT
 2753      00
 2754              	.LVL252:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2755              		.loc 4 444 15 view .LVU751
 2756              	.LBE1822:
 2757              	.LBE1821:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2758              		.loc 10 527 9 view .LVU752
 2759 0a97 488D3500 		leaq	.LC20(%rip), %rsi
 2759      000000
 2760 0a9e 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2761              	.LVL253:
 2762              	.LBB1823:
 2763              	.LBI1823:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2764              		.loc 10 263 9 is_stmt 1 view .LVU753
 2765              	.LBB1824:
 2766              	.LBB1825:
 2767              	.LBI1825:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2768              		.loc 10 243 9 view .LVU754
 2769              	.LBB1826:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2770              		.loc 10 247 11 is_stmt 0 view .LVU755
 2771 0aa2 4889EF   		movq	%rbp, %rdi
 2772              	.LEHB4:
 2773 0aa5 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2773      00
 2774              	.LVL254:
 2775              	.LEHE4:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2776              		.loc 10 247 11 view .LVU756
 2777              	.LBE1826:
 2778              	.LBE1825:
 2779              	.LBE1824:
 2780              	.LBE1823:
 2781              	.LBE1814:
GAS LISTING /tmp/ccvlKtfa.s 			page 153


 2782              	.LBE1813:
 2783              	.LBE1812:
 412:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 2784              		.loc 1 412 10 view .LVU757
 2785 0aaa F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2785      2408
 2786 0ab0 F30F2C54 		cvttss2sil	12(%rsp), %edx
 2786      240C
 2787 0ab6 BE0A0000 		movl	$10, %esi
 2787      00
 2788 0abb 4889EF   		movq	%rbp, %rdi
 2789              	.LEHB5:
 2790 0abe E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2790      00
 2791              	.LVL255:
 2792              	.LEHE5:
 2793              	.LBB1827:
 2794              	.LBI1827:
 2795              		.loc 10 657 7 is_stmt 1 view .LVU758
 2796              	.LBB1828:
 2797              	.LBI1828:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2798              		.loc 10 229 7 view .LVU759
 2799              	.LBB1829:
 2800              	.LBB1830:
 2801              	.LBI1830:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2802              		.loc 10 221 7 view .LVU760
 2803              	.LBB1831:
 2804              	.LBI1831:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2805              		.loc 10 186 7 view .LVU761
 2806              	.LBB1832:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2807              		.loc 10 187 28 is_stmt 0 view .LVU762
 2808 0ac3 488B7C24 		movq	16(%rsp), %rdi
 2808      10
 2809              	.LVL256:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2810              		.loc 10 187 28 view .LVU763
 2811              	.LBE1832:
 2812              	.LBE1831:
 2813              	.LBB1833:
 2814              	.LBI1833:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2815              		.loc 10 200 7 is_stmt 1 view .LVU764
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2816              		.loc 10 200 7 is_stmt 0 view .LVU765
 2817              	.LBE1833:
 2818              	.LBE1830:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2819              		.loc 10 231 2 view .LVU766
 2820 0ac8 488D4424 		leaq	32(%rsp), %rax
 2820      20
 2821 0acd 4839C7   		cmpq	%rax, %rdi
 2822 0ad0 7405     		je	.L161
 2823              	.LVL257:
GAS LISTING /tmp/ccvlKtfa.s 			page 154


 2824              	.LBB1834:
 2825              	.LBI1834:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2826              		.loc 10 236 7 is_stmt 1 view .LVU767
 2827              	.LBB1835:
 2828              	.LBB1836:
 2829              	.LBI1836:
 2830              		.loc 13 469 7 view .LVU768
 2831              	.LBB1837:
 2832              	.LBI1837:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 2833              		.loc 12 119 7 view .LVU769
 2834              	.LBB1838:
 2835              		.loc 12 128 19 is_stmt 0 view .LVU770
 2836 0ad2 E8000000 		call	_ZdlPv@PLT
 2836      00
 2837              	.LVL258:
 2838              	.L161:
 2839              		.loc 12 128 19 view .LVU771
 2840              	.LBE1838:
 2841              	.LBE1837:
 2842              	.LBE1836:
 2843              	.LBE1835:
 2844              	.LBE1834:
 2845              	.LBE1829:
 2846              	.LBE1828:
 2847              	.LBB1839:
 2848              	.LBI1839:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2849              		.loc 10 150 14 is_stmt 1 view .LVU772
 2850              	.LBB1840:
 2851              	.LBI1840:
 2852              		.loc 11 153 7 view .LVU773
 2853              	.LBB1841:
 2854              	.LBI1841:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2855              		.loc 12 89 7 view .LVU774
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2856              		.loc 12 89 7 is_stmt 0 view .LVU775
 2857              	.LBE1841:
 2858              	.LBE1840:
 2859              	.LBE1839:
 2860              	.LBE1827:
 2861              	.LBB1842:
 2862              	.LBI1842:
 2863              		.loc 11 153 7 is_stmt 1 view .LVU776
 2864              	.LBB1843:
 2865              	.LBI1843:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2866              		.loc 12 89 7 view .LVU777
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2867              		.loc 12 89 7 is_stmt 0 view .LVU778
 2868              	.LBE1843:
 2869              	.LBE1842:
 413:Src/main.cpp  **** }
 2870              		.loc 1 413 2 is_stmt 1 view .LVU779
 413:Src/main.cpp  **** }
GAS LISTING /tmp/ccvlKtfa.s 			page 155


 2871              		.loc 1 413 40 is_stmt 0 view .LVU780
 2872 0ad7 488B03   		movq	(%rbx), %rax
 413:Src/main.cpp  **** }
 2873              		.loc 1 413 43 view .LVU781
 2874 0ada F30F1078 		movss	4(%rax), %xmm7
 2874      04
 2875 0adf F30F117C 		movss	%xmm7, 8(%rsp)
 2875      2408
 413:Src/main.cpp  **** }
 2876              		.loc 1 413 34 view .LVU782
 2877 0ae5 F30F1043 		movss	40(%rbx), %xmm0
 2877      28
 413:Src/main.cpp  **** }
 2878              		.loc 1 413 29 view .LVU783
 2879 0aea F30F5800 		addss	(%rax), %xmm0
 2880 0aee F30F1144 		movss	%xmm0, 12(%rsp)
 2880      240C
 2881              	.LVL259:
 2882              	.LBB1844:
 2883              	.LBI1844:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2884              		.loc 11 138 7 is_stmt 1 view .LVU784
 2885              	.LBB1845:
 2886              	.LBI1845:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2887              		.loc 12 80 7 view .LVU785
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2888              		.loc 12 80 7 is_stmt 0 view .LVU786
 2889              	.LBE1845:
 2890              	.LBE1844:
 2891              	.LBB1846:
 2892              	.LBI1846:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2893              		.loc 10 525 7 is_stmt 1 view .LVU787
 2894              	.LBB1847:
 2895              	.LBB1848:
 2896              	.LBB1849:
 2897              	.LBI1849:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2898              		.loc 10 190 7 view .LVU788
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2899              		.loc 10 190 7 is_stmt 0 view .LVU789
 2900              	.LBE1849:
 2901              	.LBB1850:
 2902              	.LBI1850:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2903              		.loc 10 156 2 is_stmt 1 view .LVU790
 2904              	.LBB1851:
 2905              	.LBB1852:
 2906              	.LBB1853:
 2907              	.LBI1853:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2908              		.loc 11 141 7 view .LVU791
 2909              	.LBB1854:
 2910              	.LBI1854:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2911              		.loc 12 83 7 view .LVU792
GAS LISTING /tmp/ccvlKtfa.s 			page 156


  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2912              		.loc 12 83 7 is_stmt 0 view .LVU793
 2913              	.LBE1854:
 2914              	.LBE1853:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2915              		.loc 10 157 35 view .LVU794
 2916 0af4 488D5C24 		leaq	16(%rsp), %rbx
 2916      10
 2917              	.LVL260:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2918              		.loc 10 157 35 view .LVU795
 2919 0af9 488D4424 		leaq	32(%rsp), %rax
 2919      20
 2920              	.LVL261:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2921              		.loc 10 157 35 view .LVU796
 2922 0afe 48894424 		movq	%rax, 16(%rsp)
 2922      10
 2923              	.LVL262:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2924              		.loc 10 157 35 view .LVU797
 2925              	.LBE1852:
 2926              	.LBE1851:
 2927              	.LBE1850:
 2928              	.LBB1855:
 2929              	.LBI1855:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2930              		.loc 4 438 7 is_stmt 1 view .LVU798
 2931              	.LBB1856:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2932              		.loc 4 444 2 view .LVU799
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2933              		.loc 4 444 15 is_stmt 0 view .LVU800
 2934 0b03 488D3D00 		leaq	.LC21(%rip), %rdi
 2934      000000
 2935 0b0a E8000000 		call	wcslen@PLT
 2935      00
 2936              	.LVL263:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2937              		.loc 4 444 15 view .LVU801
 2938              	.LBE1856:
 2939              	.LBE1855:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2940              		.loc 10 527 9 view .LVU802
 2941 0b0f 488D3500 		leaq	.LC21(%rip), %rsi
 2941      000000
 2942 0b16 488D1486 		leaq	(%rsi,%rax,4), %rdx
 2943              	.LVL264:
 2944              	.LBB1857:
 2945              	.LBI1857:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2946              		.loc 10 263 9 is_stmt 1 view .LVU803
 2947              	.LBB1858:
 2948              	.LBB1859:
 2949              	.LBI1859:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2950              		.loc 10 243 9 view .LVU804
GAS LISTING /tmp/ccvlKtfa.s 			page 157


 2951              	.LBB1860:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2952              		.loc 10 247 11 is_stmt 0 view .LVU805
 2953 0b1a 4889DF   		movq	%rbx, %rdi
 2954              	.LEHB6:
 2955 0b1d E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 2955      00
 2956              	.LVL265:
 2957              	.LEHE6:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2958              		.loc 10 247 11 view .LVU806
 2959              	.LBE1860:
 2960              	.LBE1859:
 2961              	.LBE1858:
 2962              	.LBE1857:
 2963              	.LBE1848:
 2964              	.LBE1847:
 2965              	.LBE1846:
 413:Src/main.cpp  **** }
 2966              		.loc 1 413 10 view .LVU807
 2967 0b22 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 2967      2408
 2968 0b28 F30F2C54 		cvttss2sil	12(%rsp), %edx
 2968      240C
 2969 0b2e BE0A0000 		movl	$10, %esi
 2969      00
 2970 0b33 4889DF   		movq	%rbx, %rdi
 2971              	.LEHB7:
 2972 0b36 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 2972      00
 2973              	.LVL266:
 2974              	.LEHE7:
 2975              	.LBB1861:
 2976              	.LBI1861:
 2977              		.loc 10 657 7 is_stmt 1 view .LVU808
 2978              	.LBB1862:
 2979              	.LBI1862:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2980              		.loc 10 229 7 view .LVU809
 2981              	.LBB1863:
 2982              	.LBB1864:
 2983              	.LBI1864:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2984              		.loc 10 221 7 view .LVU810
 2985              	.LBB1865:
 2986              	.LBI1865:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2987              		.loc 10 186 7 view .LVU811
 2988              	.LBB1866:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2989              		.loc 10 187 28 is_stmt 0 view .LVU812
 2990 0b3b 488B7C24 		movq	16(%rsp), %rdi
 2990      10
 2991              	.LVL267:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2992              		.loc 10 187 28 view .LVU813
 2993              	.LBE1866:
GAS LISTING /tmp/ccvlKtfa.s 			page 158


 2994              	.LBE1865:
 2995              	.LBB1867:
 2996              	.LBI1867:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2997              		.loc 10 200 7 is_stmt 1 view .LVU814
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2998              		.loc 10 200 7 is_stmt 0 view .LVU815
 2999              	.LBE1867:
 3000              	.LBE1864:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3001              		.loc 10 231 2 view .LVU816
 3002 0b40 488D4424 		leaq	32(%rsp), %rax
 3002      20
 3003 0b45 4839C7   		cmpq	%rax, %rdi
 3004 0b48 7405     		je	.L158
 3005              	.LVL268:
 3006              	.LBB1868:
 3007              	.LBI1868:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3008              		.loc 10 236 7 is_stmt 1 view .LVU817
 3009              	.LBB1869:
 3010              	.LBB1870:
 3011              	.LBI1870:
 3012              		.loc 13 469 7 view .LVU818
 3013              	.LBB1871:
 3014              	.LBI1871:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3015              		.loc 12 119 7 view .LVU819
 3016              	.LBB1872:
 3017              		.loc 12 128 19 is_stmt 0 view .LVU820
 3018 0b4a E8000000 		call	_ZdlPv@PLT
 3018      00
 3019              	.LVL269:
 3020              		.loc 12 128 19 view .LVU821
 3021              	.LBE1872:
 3022              	.LBE1871:
 3023              	.LBE1870:
 3024              	.LBE1869:
 3025              	.LBE1868:
 3026              	.LBE1863:
 3027              	.LBE1862:
 3028              	.LBB1873:
 3029              	.LBI1873:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3030              		.loc 10 150 14 is_stmt 1 view .LVU822
 3031              	.LBB1874:
 3032              	.LBI1874:
 3033              		.loc 11 153 7 view .LVU823
 3034              	.LBB1875:
 3035              	.LBI1875:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3036              		.loc 12 89 7 view .LVU824
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3037              		.loc 12 89 7 is_stmt 0 view .LVU825
 3038              	.LBE1875:
 3039              	.LBE1874:
 3040              	.LBE1873:
GAS LISTING /tmp/ccvlKtfa.s 			page 159


 3041              	.LBE1861:
 3042              	.LBB1876:
 3043              	.LBI1876:
 3044              		.loc 11 153 7 is_stmt 1 view .LVU826
 3045              	.LBB1877:
 3046              	.LBI1877:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3047              		.loc 12 89 7 view .LVU827
 3048              	.L158:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3049              		.loc 12 89 7 is_stmt 0 view .LVU828
 3050              	.LBE1877:
 3051              	.LBE1876:
 414:Src/main.cpp  **** 
 3052              		.loc 1 414 1 view .LVU829
 3053 0b4f 488B4424 		movq	56(%rsp), %rax
 3053      38
 3054 0b54 64483304 		xorq	%fs:40, %rax
 3054      25280000 
 3054      00
 3055 0b5d 0F858300 		jne	.L177
 3055      0000
 3056 0b63 4883C448 		addq	$72, %rsp
 3057              		.cfi_remember_state
 3058              		.cfi_def_cfa_offset 24
 3059 0b67 5B       		popq	%rbx
 3060              		.cfi_def_cfa_offset 16
 3061 0b68 5D       		popq	%rbp
 3062              		.cfi_def_cfa_offset 8
 3063 0b69 C3       		ret
 3064              	.LVL270:
 3065              	.L172:
 3066              		.cfi_restore_state
 414:Src/main.cpp  **** 
 3067              		.loc 1 414 1 view .LVU830
 3068 0b6a 4889C3   		movq	%rax, %rbx
 3069              	.LVL271:
 3070              	.LBB1878:
 3071              	.LBI1878:
 3072              		.loc 10 657 7 is_stmt 1 view .LVU831
 3073              	.LBB1879:
 3074              	.LBI1879:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3075              		.loc 10 229 7 view .LVU832
 3076              	.LBB1880:
 3077              	.LBB1881:
 3078              	.LBI1881:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3079              		.loc 10 221 7 view .LVU833
 3080              	.LBB1882:
 3081              	.LBI1882:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3082              		.loc 10 186 7 view .LVU834
 3083              	.LBB1883:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3084              		.loc 10 187 28 is_stmt 0 view .LVU835
 3085 0b6d 488B7C24 		movq	16(%rsp), %rdi
GAS LISTING /tmp/ccvlKtfa.s 			page 160


 3085      10
 3086              	.LVL272:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3087              		.loc 10 187 28 view .LVU836
 3088              	.LBE1883:
 3089              	.LBE1882:
 3090              	.LBB1884:
 3091              	.LBI1884:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3092              		.loc 10 200 7 is_stmt 1 view .LVU837
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3093              		.loc 10 200 7 is_stmt 0 view .LVU838
 3094              	.LBE1884:
 3095              	.LBE1881:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3096              		.loc 10 231 2 view .LVU839
 3097 0b72 488D4424 		leaq	32(%rsp), %rax
 3097      20
 3098 0b77 4839C7   		cmpq	%rax, %rdi
 3099 0b7a 7405     		je	.L164
 3100              	.LVL273:
 3101              	.LBB1885:
 3102              	.LBI1885:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3103              		.loc 10 236 7 is_stmt 1 view .LVU840
 3104              	.LBB1886:
 3105              	.LBB1887:
 3106              	.LBI1887:
 3107              		.loc 13 469 7 view .LVU841
 3108              	.LBB1888:
 3109              	.LBI1888:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3110              		.loc 12 119 7 view .LVU842
 3111              	.LBB1889:
 3112              		.loc 12 128 19 is_stmt 0 view .LVU843
 3113 0b7c E8000000 		call	_ZdlPv@PLT
 3113      00
 3114              	.LVL274:
 3115              	.L164:
 3116              		.loc 12 128 19 view .LVU844
 3117              	.LBE1889:
 3118              	.LBE1888:
 3119              	.LBE1887:
 3120              	.LBE1886:
 3121              	.LBE1885:
 3122              	.LBE1880:
 3123              	.LBE1879:
 3124              	.LBB1890:
 3125              	.LBI1890:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3126              		.loc 10 150 14 is_stmt 1 view .LVU845
 3127              	.LBB1891:
 3128              	.LBI1891:
 3129              		.loc 11 153 7 view .LVU846
 3130              	.LBB1892:
 3131              	.LBI1892:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 161


 3132              		.loc 12 89 7 view .LVU847
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3133              		.loc 12 89 7 is_stmt 0 view .LVU848
 3134 0b81 4889DF   		movq	%rbx, %rdi
 3135              	.LEHB8:
 3136 0b84 E8000000 		call	_Unwind_Resume@PLT
 3136      00
 3137              	.LVL275:
 3138              	.L173:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3139              		.loc 12 89 7 view .LVU849
 3140 0b89 4889C3   		movq	%rax, %rbx
 3141              	.LVL276:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3142              		.loc 12 89 7 view .LVU850
 3143              	.LBE1892:
 3144              	.LBE1891:
 3145              	.LBE1890:
 3146              	.LBE1878:
 3147              	.LBB1893:
 3148              	.LBI1893:
 3149              		.loc 10 657 7 is_stmt 1 view .LVU851
 3150              	.LBB1894:
 3151              	.LBI1894:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3152              		.loc 10 229 7 view .LVU852
 3153              	.LBB1895:
 3154              	.LBB1896:
 3155              	.LBI1896:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3156              		.loc 10 221 7 view .LVU853
 3157              	.LBB1897:
 3158              	.LBI1897:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3159              		.loc 10 186 7 view .LVU854
 3160              	.LBB1898:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3161              		.loc 10 187 28 is_stmt 0 view .LVU855
 3162 0b8c 488B7C24 		movq	16(%rsp), %rdi
 3162      10
 3163              	.LVL277:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3164              		.loc 10 187 28 view .LVU856
 3165              	.LBE1898:
 3166              	.LBE1897:
 3167              	.LBB1899:
 3168              	.LBI1899:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3169              		.loc 10 200 7 is_stmt 1 view .LVU857
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3170              		.loc 10 200 7 is_stmt 0 view .LVU858
 3171              	.LBE1899:
 3172              	.LBE1896:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3173              		.loc 10 231 2 view .LVU859
 3174 0b91 488D4424 		leaq	32(%rsp), %rax
 3174      20
GAS LISTING /tmp/ccvlKtfa.s 			page 162


 3175 0b96 4839C7   		cmpq	%rax, %rdi
 3176 0b99 7405     		je	.L166
 3177              	.LVL278:
 3178              	.LBB1900:
 3179              	.LBI1900:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3180              		.loc 10 236 7 is_stmt 1 view .LVU860
 3181              	.LBB1901:
 3182              	.LBB1902:
 3183              	.LBI1902:
 3184              		.loc 13 469 7 view .LVU861
 3185              	.LBB1903:
 3186              	.LBI1903:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3187              		.loc 12 119 7 view .LVU862
 3188              	.LBB1904:
 3189              		.loc 12 128 19 is_stmt 0 view .LVU863
 3190 0b9b E8000000 		call	_ZdlPv@PLT
 3190      00
 3191              	.LVL279:
 3192              	.L166:
 3193              		.loc 12 128 19 view .LVU864
 3194              	.LBE1904:
 3195              	.LBE1903:
 3196              	.LBE1902:
 3197              	.LBE1901:
 3198              	.LBE1900:
 3199              	.LBE1895:
 3200              	.LBE1894:
 3201              	.LBB1905:
 3202              	.LBI1905:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3203              		.loc 10 150 14 is_stmt 1 view .LVU865
 3204              	.LBB1906:
 3205              	.LBI1906:
 3206              		.loc 11 153 7 view .LVU866
 3207              	.LBB1907:
 3208              	.LBI1907:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3209              		.loc 12 89 7 view .LVU867
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3210              		.loc 12 89 7 is_stmt 0 view .LVU868
 3211 0ba0 4889DF   		movq	%rbx, %rdi
 3212 0ba3 E8000000 		call	_Unwind_Resume@PLT
 3212      00
 3213              	.LVL280:
 3214              	.L174:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3215              		.loc 12 89 7 view .LVU869
 3216 0ba8 4889C3   		movq	%rax, %rbx
 3217              	.LVL281:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3218              		.loc 12 89 7 view .LVU870
 3219              	.LBE1907:
 3220              	.LBE1906:
 3221              	.LBE1905:
 3222              	.LBE1893:
GAS LISTING /tmp/ccvlKtfa.s 			page 163


 3223              	.LBB1908:
 3224              	.LBI1908:
 3225              		.loc 10 657 7 is_stmt 1 view .LVU871
 3226              	.LBB1909:
 3227              	.LBI1909:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3228              		.loc 10 229 7 view .LVU872
 3229              	.LBB1910:
 3230              	.LBB1911:
 3231              	.LBI1911:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3232              		.loc 10 221 7 view .LVU873
 3233              	.LBB1912:
 3234              	.LBI1912:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3235              		.loc 10 186 7 view .LVU874
 3236              	.LBB1913:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3237              		.loc 10 187 28 is_stmt 0 view .LVU875
 3238 0bab 488B7C24 		movq	16(%rsp), %rdi
 3238      10
 3239              	.LVL282:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3240              		.loc 10 187 28 view .LVU876
 3241              	.LBE1913:
 3242              	.LBE1912:
 3243              	.LBB1914:
 3244              	.LBI1914:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3245              		.loc 10 200 7 is_stmt 1 view .LVU877
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3246              		.loc 10 200 7 is_stmt 0 view .LVU878
 3247              	.LBE1914:
 3248              	.LBE1911:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3249              		.loc 10 231 2 view .LVU879
 3250 0bb0 488D4424 		leaq	32(%rsp), %rax
 3250      20
 3251 0bb5 4839C7   		cmpq	%rax, %rdi
 3252 0bb8 7405     		je	.L168
 3253              	.LVL283:
 3254              	.LBB1915:
 3255              	.LBI1915:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3256              		.loc 10 236 7 is_stmt 1 view .LVU880
 3257              	.LBB1916:
 3258              	.LBB1917:
 3259              	.LBI1917:
 3260              		.loc 13 469 7 view .LVU881
 3261              	.LBB1918:
 3262              	.LBI1918:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3263              		.loc 12 119 7 view .LVU882
 3264              	.LBB1919:
 3265              		.loc 12 128 19 is_stmt 0 view .LVU883
 3266 0bba E8000000 		call	_ZdlPv@PLT
 3266      00
GAS LISTING /tmp/ccvlKtfa.s 			page 164


 3267              	.LVL284:
 3268              	.L168:
 3269              		.loc 12 128 19 view .LVU884
 3270              	.LBE1919:
 3271              	.LBE1918:
 3272              	.LBE1917:
 3273              	.LBE1916:
 3274              	.LBE1915:
 3275              	.LBE1910:
 3276              	.LBE1909:
 3277              	.LBB1920:
 3278              	.LBI1920:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3279              		.loc 10 150 14 is_stmt 1 view .LVU885
 3280              	.LBB1921:
 3281              	.LBI1921:
 3282              		.loc 11 153 7 view .LVU886
 3283              	.LBB1922:
 3284              	.LBI1922:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3285              		.loc 12 89 7 view .LVU887
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3286              		.loc 12 89 7 is_stmt 0 view .LVU888
 3287 0bbf 4889DF   		movq	%rbx, %rdi
 3288 0bc2 E8000000 		call	_Unwind_Resume@PLT
 3288      00
 3289              	.LVL285:
 3290              	.L175:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3291              		.loc 12 89 7 view .LVU889
 3292 0bc7 4889C3   		movq	%rax, %rbx
 3293              	.LVL286:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3294              		.loc 12 89 7 view .LVU890
 3295              	.LBE1922:
 3296              	.LBE1921:
 3297              	.LBE1920:
 3298              	.LBE1908:
 3299              	.LBB1923:
 3300              	.LBI1923:
 3301              		.loc 10 657 7 is_stmt 1 view .LVU891
 3302              	.LBB1924:
 3303              	.LBI1924:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3304              		.loc 10 229 7 view .LVU892
 3305              	.LBB1925:
 3306              	.LBB1926:
 3307              	.LBI1926:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3308              		.loc 10 221 7 view .LVU893
 3309              	.LBB1927:
 3310              	.LBI1927:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3311              		.loc 10 186 7 view .LVU894
 3312              	.LBB1928:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3313              		.loc 10 187 28 is_stmt 0 view .LVU895
GAS LISTING /tmp/ccvlKtfa.s 			page 165


 3314 0bca 488B7C24 		movq	16(%rsp), %rdi
 3314      10
 3315              	.LVL287:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3316              		.loc 10 187 28 view .LVU896
 3317              	.LBE1928:
 3318              	.LBE1927:
 3319              	.LBB1929:
 3320              	.LBI1929:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3321              		.loc 10 200 7 is_stmt 1 view .LVU897
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3322              		.loc 10 200 7 is_stmt 0 view .LVU898
 3323              	.LBE1929:
 3324              	.LBE1926:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3325              		.loc 10 231 2 view .LVU899
 3326 0bcf 488D4424 		leaq	32(%rsp), %rax
 3326      20
 3327 0bd4 4839C7   		cmpq	%rax, %rdi
 3328 0bd7 7405     		je	.L170
 3329              	.LVL288:
 3330              	.LBB1930:
 3331              	.LBI1930:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3332              		.loc 10 236 7 is_stmt 1 view .LVU900
 3333              	.LBB1931:
 3334              	.LBB1932:
 3335              	.LBI1932:
 3336              		.loc 13 469 7 view .LVU901
 3337              	.LBB1933:
 3338              	.LBI1933:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3339              		.loc 12 119 7 view .LVU902
 3340              	.LBB1934:
 3341              		.loc 12 128 19 is_stmt 0 view .LVU903
 3342 0bd9 E8000000 		call	_ZdlPv@PLT
 3342      00
 3343              	.LVL289:
 3344              	.L170:
 3345              		.loc 12 128 19 view .LVU904
 3346              	.LBE1934:
 3347              	.LBE1933:
 3348              	.LBE1932:
 3349              	.LBE1931:
 3350              	.LBE1930:
 3351              	.LBE1925:
 3352              	.LBE1924:
 3353              	.LBB1935:
 3354              	.LBI1935:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3355              		.loc 10 150 14 is_stmt 1 view .LVU905
 3356              	.LBB1936:
 3357              	.LBI1936:
 3358              		.loc 11 153 7 view .LVU906
 3359              	.LBB1937:
 3360              	.LBI1937:
GAS LISTING /tmp/ccvlKtfa.s 			page 166


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3361              		.loc 12 89 7 view .LVU907
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3362              		.loc 12 89 7 is_stmt 0 view .LVU908
 3363 0bde 4889DF   		movq	%rbx, %rdi
 3364 0be1 E8000000 		call	_Unwind_Resume@PLT
 3364      00
 3365              	.LVL290:
 3366              	.LEHE8:
 3367              	.L177:
 3368              	.LBE1937:
 3369              	.LBE1936:
 3370              	.LBE1935:
 3371              	.LBE1923:
 414:Src/main.cpp  **** 
 3372              		.loc 1 414 1 view .LVU909
 3373 0be6 E8000000 		call	__stack_chk_fail@PLT
 3373      00
 3374              	.LVL291:
 3375              		.cfi_endproc
 3376              	.LFE2496:
 3377              		.globl	__gxx_personality_v0
 3378              		.section	.gcc_except_table,"a",@progbits
 3379              	.LLSDA2496:
 3380 0000 FF       		.byte	0xff
 3381 0001 FF       		.byte	0xff
 3382 0002 01       		.byte	0x1
 3383 0003 30       		.uleb128 .LLSDACSE2496-.LLSDACSB2496
 3384              	.LLSDACSB2496:
 3385 0004 1E       		.uleb128 .LEHB0-.LFB2496
 3386 0005 6B       		.uleb128 .LEHE0-.LEHB0
 3387 0006 00       		.uleb128 0
 3388 0007 00       		.uleb128 0
 3389 0008 9D01     		.uleb128 .LEHB1-.LFB2496
 3390 000a 05       		.uleb128 .LEHE1-.LEHB1
 3391 000b BC04     		.uleb128 .L172-.LFB2496
 3392 000d 00       		.uleb128 0
 3393 000e FC01     		.uleb128 .LEHB2-.LFB2496
 3394 0010 05       		.uleb128 .LEHE2-.LEHB2
 3395 0011 00       		.uleb128 0
 3396 0012 00       		.uleb128 0
 3397 0013 9502     		.uleb128 .LEHB3-.LFB2496
 3398 0015 05       		.uleb128 .LEHE3-.LEHB3
 3399 0016 DB04     		.uleb128 .L173-.LFB2496
 3400 0018 00       		.uleb128 0
 3401 0019 F702     		.uleb128 .LEHB4-.LFB2496
 3402 001b 05       		.uleb128 .LEHE4-.LEHB4
 3403 001c 00       		.uleb128 0
 3404 001d 00       		.uleb128 0
 3405 001e 9003     		.uleb128 .LEHB5-.LFB2496
 3406 0020 05       		.uleb128 .LEHE5-.LEHB5
 3407 0021 FA04     		.uleb128 .L174-.LFB2496
 3408 0023 00       		.uleb128 0
 3409 0024 EF03     		.uleb128 .LEHB6-.LFB2496
 3410 0026 05       		.uleb128 .LEHE6-.LEHB6
 3411 0027 00       		.uleb128 0
 3412 0028 00       		.uleb128 0
GAS LISTING /tmp/ccvlKtfa.s 			page 167


 3413 0029 8804     		.uleb128 .LEHB7-.LFB2496
 3414 002b 05       		.uleb128 .LEHE7-.LEHB7
 3415 002c 9905     		.uleb128 .L175-.LFB2496
 3416 002e 00       		.uleb128 0
 3417 002f D604     		.uleb128 .LEHB8-.LFB2496
 3418 0031 62       		.uleb128 .LEHE8-.LEHB8
 3419 0032 00       		.uleb128 0
 3420 0033 00       		.uleb128 0
 3421              	.LLSDACSE2496:
 3422              		.text
 3424              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 3425              		.align 2
 3426              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
 3428              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 3429              	.LVL292:
 3430              	.LFB2845:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3431              		.loc 8 206 7 is_stmt 1 view -0
 3432              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3433              		.loc 8 206 7 is_stmt 0 view .LVU911
 3434 0000 4154     		pushq	%r12
 3435              		.cfi_def_cfa_offset 16
 3436              		.cfi_offset 12, -16
 3437 0002 55       		pushq	%rbp
 3438              		.cfi_def_cfa_offset 24
 3439              		.cfi_offset 6, -24
 3440 0003 53       		pushq	%rbx
 3441              		.cfi_def_cfa_offset 32
 3442              		.cfi_offset 3, -32
 3443 0004 4883EC10 		subq	$16, %rsp
 3444              		.cfi_def_cfa_offset 48
 3445 0008 4889FD   		movq	%rdi, %rbp
 3446 000b 4989F4   		movq	%rsi, %r12
 3447 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3448              		.loc 8 206 7 view .LVU912
 3449 0011 64488B04 		movq	%fs:40, %rax
 3449      25280000 
 3449      00
 3450 001a 48894424 		movq	%rax, 8(%rsp)
 3450      08
 3451 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3452              		.loc 8 211 42 view .LVU913
 3453 0021 4885F6   		testq	%rsi, %rsi
 3454 0024 7429     		je	.L185
 3455              	.L179:
 3456              	.LVL293:
 3457              	.LBB1938:
 3458              	.LBI1938:
 3459              		.loc 9 138 5 is_stmt 1 view .LVU914
 3460              	.LBB1939:
 3461              	.LBI1939:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 3462              		.loc 9 98 5 view .LVU915
 3463              	.LBB1940:
GAS LISTING /tmp/ccvlKtfa.s 			page 168


 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3464              		.loc 9 104 23 is_stmt 0 view .LVU916
 3465 0026 4C29E3   		subq	%r12, %rbx
 3466              	.LVL294:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3467              		.loc 9 104 23 view .LVU917
 3468              	.LBE1940:
 3469              	.LBE1939:
 3470              	.LBE1938:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 3471              		.loc 8 215 12 view .LVU918
 3472 0029 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 3473              		.loc 8 217 2 view .LVU919
 3474 002d 4883FB0F 		cmpq	$15, %rbx
 3475 0031 772D     		ja	.L186
 3476              	.LVL295:
 3477              	.L180:
 3478              	.LBB1941:
 3479              	.LBI1941:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3480              		.loc 10 186 7 is_stmt 1 view .LVU920
 3481              	.LBB1942:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3482              		.loc 10 187 28 is_stmt 0 view .LVU921
 3483 0033 488B7D00 		movq	0(%rbp), %rdi
 3484              	.LVL296:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3485              		.loc 10 187 28 view .LVU922
 3486              	.LBE1942:
 3487              	.LBE1941:
 3488              	.LBB1943:
 3489              	.LBI1943:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3490              		.loc 10 392 7 is_stmt 1 view .LVU923
 3491              	.LBB1944:
 3492              	.LBI1944:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3493              		.loc 10 346 7 view .LVU924
 3494              	.LBB1945:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3495              		.loc 10 348 2 is_stmt 0 view .LVU925
 3496 0037 4883FB01 		cmpq	$1, %rbx
 3497 003b 7441     		je	.L187
 3498              	.LVL297:
 3499              	.LBB1946:
 3500              	.LBI1946:
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3501              		.loc 4 361 7 is_stmt 1 view .LVU926
 3502              	.LBB1947:
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 3503              		.loc 4 363 2 view .LVU927
 3504 003d 4885DB   		testq	%rbx, %rbx
 3505 0040 7443     		je	.L182
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3506              		.loc 4 365 2 view .LVU928
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
GAS LISTING /tmp/ccvlKtfa.s 			page 169


 3507              		.loc 4 365 49 is_stmt 0 view .LVU929
 3508 0042 4889DA   		movq	%rbx, %rdx
 3509 0045 4C89E6   		movq	%r12, %rsi
 3510 0048 E8000000 		call	memcpy@PLT
 3510      00
 3511              	.LVL298:
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3512              		.loc 4 365 66 view .LVU930
 3513 004d EB36     		jmp	.L182
 3514              	.LVL299:
 3515              	.L185:
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3516              		.loc 4 365 66 view .LVU931
 3517              	.LBE1947:
 3518              	.LBE1946:
 3519              	.LBE1945:
 3520              	.LBE1944:
 3521              	.LBE1943:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3522              		.loc 8 211 42 discriminator 1 view .LVU932
 3523 004f 4839D6   		cmpq	%rdx, %rsi
 3524 0052 74D2     		je	.L179
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3525              		.loc 8 212 28 view .LVU933
 3526 0054 488D3D00 		leaq	.LC17(%rip), %rdi
 3526      000000
 3527              	.LVL300:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3528              		.loc 8 212 28 view .LVU934
 3529 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 3529      00
 3530              	.LVL301:
 3531              	.L186:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3532              		.loc 8 219 6 view .LVU935
 3533 0060 4889E6   		movq	%rsp, %rsi
 3534              	.LVL302:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3535              		.loc 8 219 6 view .LVU936
 3536 0063 BA000000 		movl	$0, %edx
 3536      00
 3537              	.LVL303:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3538              		.loc 8 219 6 view .LVU937
 3539 0068 4889EF   		movq	%rbp, %rdi
 3540              	.LVL304:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3541              		.loc 8 219 6 view .LVU938
 3542 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 3542      00
 3543              	.LVL305:
 3544              	.LBB1952:
 3545              	.LBI1952:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3546              		.loc 10 178 7 is_stmt 1 view .LVU939
 3547              	.LBB1953:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 170


 3548              		.loc 10 179 9 is_stmt 0 view .LVU940
 3549 0070 48894500 		movq	%rax, 0(%rbp)
 3550              	.LVL306:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3551              		.loc 10 179 9 view .LVU941
 3552              	.LBE1953:
 3553              	.LBE1952:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 3554              		.loc 8 220 6 view .LVU942
 3555 0074 488B0424 		movq	(%rsp), %rax
 3556              	.LVL307:
 3557              	.LBB1954:
 3558              	.LBI1954:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3559              		.loc 10 210 7 is_stmt 1 view .LVU943
 3560              	.LBB1955:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3561              		.loc 10 211 9 is_stmt 0 view .LVU944
 3562 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3563              		.loc 10 211 45 view .LVU945
 3564 007c EBB5     		jmp	.L180
 3565              	.LVL308:
 3566              	.L187:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3567              		.loc 10 211 45 view .LVU946
 3568              	.LBE1955:
 3569              	.LBE1954:
 3570              	.LBB1956:
 3571              	.LBB1951:
 3572              	.LBB1950:
 3573              	.LBB1948:
 3574              	.LBI1948:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3575              		.loc 4 299 7 is_stmt 1 view .LVU947
 3576              	.LBB1949:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3577              		.loc 4 300 9 view .LVU948
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3578              		.loc 4 300 16 is_stmt 0 view .LVU949
 3579 007e 410FB604 		movzbl	(%r12), %eax
 3579      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3580              		.loc 4 300 14 view .LVU950
 3581 0083 8807     		movb	%al, (%rdi)
 3582              	.LVL309:
 3583              	.L182:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3584              		.loc 4 300 14 view .LVU951
 3585              	.LBE1949:
 3586              	.LBE1948:
 3587              	.LBE1950:
 3588              	.LBE1951:
 3589              	.LBE1956:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 3590              		.loc 8 232 2 view .LVU952
 3591 0085 488B0424 		movq	(%rsp), %rax
GAS LISTING /tmp/ccvlKtfa.s 			page 171


 3592              	.LVL310:
 3593              	.LBB1957:
 3594              	.LBI1957:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3595              		.loc 10 214 7 is_stmt 1 view .LVU953
 3596              	.LBB1958:
 3597              	.LBB1959:
 3598              	.LBI1959:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 3599              		.loc 10 182 7 view .LVU954
 3600              	.LBB1960:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3601              		.loc 10 183 9 is_stmt 0 view .LVU955
 3602 0089 48894508 		movq	%rax, 8(%rbp)
 3603              	.LVL311:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3604              		.loc 10 183 9 view .LVU956
 3605              	.LBE1960:
 3606              	.LBE1959:
 3607              	.LBB1961:
 3608              	.LBI1961:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3609              		.loc 10 186 7 is_stmt 1 view .LVU957
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3610              		.loc 10 186 7 is_stmt 0 view .LVU958
 3611              	.LBE1961:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3612              		.loc 10 217 31 view .LVU959
 3613 008d 48034500 		addq	0(%rbp), %rax
 3614              	.LVL312:
 3615              	.LBB1962:
 3616              	.LBI1962:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3617              		.loc 4 299 7 is_stmt 1 view .LVU960
 3618              	.LBB1963:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3619              		.loc 4 300 9 view .LVU961
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3620              		.loc 4 300 14 is_stmt 0 view .LVU962
 3621 0091 C60000   		movb	$0, (%rax)
 3622              	.LVL313:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3623              		.loc 4 300 14 view .LVU963
 3624              	.LBE1963:
 3625              	.LBE1962:
 3626              	.LBE1958:
 3627              	.LBE1957:
 3628              		.loc 8 233 7 view .LVU964
 3629 0094 488B4424 		movq	8(%rsp), %rax
 3629      08
 3630 0099 64483304 		xorq	%fs:40, %rax
 3630      25280000 
 3630      00
 3631 00a2 7509     		jne	.L188
 3632 00a4 4883C410 		addq	$16, %rsp
 3633              		.cfi_remember_state
 3634              		.cfi_def_cfa_offset 32
GAS LISTING /tmp/ccvlKtfa.s 			page 172


 3635 00a8 5B       		popq	%rbx
 3636              		.cfi_def_cfa_offset 24
 3637 00a9 5D       		popq	%rbp
 3638              		.cfi_def_cfa_offset 16
 3639              	.LVL314:
 3640              		.loc 8 233 7 view .LVU965
 3641 00aa 415C     		popq	%r12
 3642              		.cfi_def_cfa_offset 8
 3643              	.LVL315:
 3644              		.loc 8 233 7 view .LVU966
 3645 00ac C3       		ret
 3646              	.LVL316:
 3647              	.L188:
 3648              		.cfi_restore_state
 3649              		.loc 8 233 7 view .LVU967
 3650 00ad E8000000 		call	__stack_chk_fail@PLT
 3650      00
 3651              	.LVL317:
 3652              		.cfi_endproc
 3653              	.LFE2845:
 3655              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
 3656              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_
 3658              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P
 3659              	.LVL318:
 3660              	.LFB2579:
 3661              		.file 14 "/usr/include/c++/9.2.0/ext/string_conversions.h"
   1:/usr/include/c++/9.2.0/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
   3:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/string_conversions.h **** //
   5:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/string_conversions.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  11:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  16:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  20:/usr/include/c++/9.2.0/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  25:/usr/include/c++/9.2.0/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/usr/include/c++/9.2.0/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/string_conversions.h ****  */
  28:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  29:/usr/include/c++/9.2.0/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/usr/include/c++/9.2.0/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 173


  32:/usr/include/c++/9.2.0/ext/string_conversions.h **** #pragma GCC system_header
  33:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  34:/usr/include/c++/9.2.0/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/9.2.0/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/9.2.0/ext/string_conversions.h **** #else
  37:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  38:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdlib>
  42:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cwchar>
  43:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdio>
  44:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cerrno>
  45:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  46:/usr/include/c++/9.2.0/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/ext/string_conversions.h **** {
  48:/usr/include/c++/9.2.0/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  50:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   typename... _Base>
  53:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _Ret
  54:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   _Base... __base)
  57:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
  58:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _Ret __ret;
  59:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  60:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __endptr;
  61:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  62:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Save_errno {
  63:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	int _M_errno;
  66:/usr/include/c++/9.2.0/ext/string_conversions.h ****       } const __save_errno;
  67:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  68:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Range_chk {
  69:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  70:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  72:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  73:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  {
  75:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  }
  78:/usr/include/c++/9.2.0/ext/string_conversions.h ****       };
  79:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  80:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  82:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__endptr == __str)
  83:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else
  88:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	__ret = __tmp;
GAS LISTING /tmp/ccvlKtfa.s 			page 174


  89:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  90:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__idx)
  91:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  93:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return __ret;
  94:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
  95:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  96:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _String
  99:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 3662              		.loc 14 99 5 is_stmt 1 view -0
 3663              		.cfi_startproc
 3664              		.loc 14 99 5 is_stmt 0 view .LVU969
 3665 0000 55       		pushq	%rbp
 3666              		.cfi_def_cfa_offset 16
 3667              		.cfi_offset 6, -16
 3668 0001 4889E5   		movq	%rsp, %rbp
 3669              		.cfi_def_cfa_register 6
 3670 0004 4155     		pushq	%r13
 3671 0006 4154     		pushq	%r12
 3672 0008 53       		pushq	%rbx
 3673 0009 4881ECD8 		subq	$216, %rsp
 3673      000000
 3674              		.cfi_offset 13, -24
 3675              		.cfi_offset 12, -32
 3676              		.cfi_offset 3, -40
 3677 0010 4889FB   		movq	%rdi, %rbx
 3678 0013 4989F2   		movq	%rsi, %r10
 3679 0016 4889D6   		movq	%rdx, %rsi
 3680              	.LVL319:
 3681              		.loc 14 99 5 view .LVU970
 3682 0019 4889CA   		movq	%rcx, %rdx
 3683              	.LVL320:
 3684              		.loc 14 99 5 view .LVU971
 3685 001c 4C898550 		movq	%r8, -176(%rbp)
 3685      FFFFFF
 3686 0023 4C898D58 		movq	%r9, -168(%rbp)
 3686      FFFFFF
 3687 002a 84C0     		testb	%al, %al
 3688 002c 7426     		je	.L190
 3689 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 3689      FFFFFF
 3690 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 3690      FFFFFF
 3691 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 3692 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
 3693 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 3694 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 3695 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 3696 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 3697              	.L190:
 3698              		.loc 14 99 5 view .LVU972
 3699 0054 41BD2800 		movl	$40, %r13d
 3699      0000
 3700 005a 64498B45 		movq	%fs:0(%r13), %rax
 3700      00
GAS LISTING /tmp/ccvlKtfa.s 			page 175


 3701 005f 48898528 		movq	%rax, -216(%rbp)
 3701      FFFFFF
 3702 0066 31C0     		xorl	%eax, %eax
 100:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/usr/include/c++/9.2.0/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
 103:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 3703              		.loc 14 105 58 view .LVU973
 3704 0068 488D4617 		leaq	23(%rsi), %rax
 3705 006c 4883E0F0 		andq	$-16, %rax
 3706 0070 4829C4   		subq	%rax, %rsp
 3707 0073 4C8D6424 		leaq	15(%rsp), %r12
 3707      0F
 3708 0078 4983E4F0 		andq	$-16, %r12
 3709              	.LVL321:
 106:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 107:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 108:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 3710              		.loc 14 109 25 view .LVU974
 3711 007c C78510FF 		movl	$32, -240(%rbp)
 3711      FFFF2000 
 3711      0000
 3712 0086 C78514FF 		movl	$48, -236(%rbp)
 3712      FFFF3000 
 3712      0000
 3713 0090 488D4510 		leaq	16(%rbp), %rax
 3714 0094 48898518 		movq	%rax, -232(%rbp)
 3714      FFFFFF
 3715 009b 488D8530 		leaq	-208(%rbp), %rax
 3715      FFFFFF
 3716 00a2 48898520 		movq	%rax, -224(%rbp)
 3716      FFFFFF
 110:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 111:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 3717              		.loc 14 111 32 view .LVU975
 3718 00a9 488D8D10 		leaq	-240(%rbp), %rcx
 3718      FFFFFF
 3719              	.LVL322:
 3720              		.loc 14 111 32 view .LVU976
 3721 00b0 4C89E7   		movq	%r12, %rdi
 3722              	.LVL323:
 3723              		.loc 14 111 32 view .LVU977
 3724 00b3 41FFD2   		call	*%r10
 3725              	.LVL324:
 3726              	.LBB1964:
 3727              	.LBI1964:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3728              		.loc 11 138 7 is_stmt 1 view .LVU978
 3729              	.LBB1965:
 3730              	.LBI1965:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3731              		.loc 12 80 7 view .LVU979
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3732              		.loc 12 80 7 is_stmt 0 view .LVU980
GAS LISTING /tmp/ccvlKtfa.s 			page 176


 3733              	.LBE1965:
 3734              	.LBE1964:
 112:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 113:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return _String(__s, __s + __len);
 3735              		.loc 14 115 33 view .LVU981
 3736 00b6 4863D0   		movslq	%eax, %rdx
 3737              		.loc 14 115 38 view .LVU982
 3738 00b9 4C01E2   		addq	%r12, %rdx
 3739              	.LVL325:
 3740              	.LBB1966:
 3741              	.LBI1966:
 625:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 3742              		.loc 10 625 9 is_stmt 1 view .LVU983
 3743              	.LBB1967:
 3744              	.LBI1967:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3745              		.loc 10 190 7 view .LVU984
 3746              	.LBB1968:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3747              		.loc 10 193 51 is_stmt 0 view .LVU985
 3748 00bc 488D4310 		leaq	16(%rbx), %rax
 3749              	.LVL326:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3750              		.loc 10 193 51 view .LVU986
 3751              	.LBE1968:
 3752              	.LBE1967:
 3753              	.LBB1969:
 3754              	.LBI1969:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3755              		.loc 10 156 2 is_stmt 1 view .LVU987
 3756              	.LBB1970:
 3757              	.LBB1971:
 3758              	.LBI1971:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3759              		.loc 11 141 7 view .LVU988
 3760              	.LBB1972:
 3761              	.LBI1972:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3762              		.loc 12 83 7 view .LVU989
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3763              		.loc 12 83 7 is_stmt 0 view .LVU990
 3764              	.LBE1972:
 3765              	.LBE1971:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3766              		.loc 10 157 35 view .LVU991
 3767 00c0 488903   		movq	%rax, (%rbx)
 3768              	.LVL327:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3769              		.loc 10 157 35 view .LVU992
 3770              	.LBE1970:
 3771              	.LBE1969:
 3772              	.LBB1973:
 3773              	.LBI1973:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3774              		.loc 10 263 9 is_stmt 1 view .LVU993
GAS LISTING /tmp/ccvlKtfa.s 			page 177


 3775              	.LBB1974:
 3776              	.LBB1975:
 3777              	.LBI1975:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3778              		.loc 10 243 9 view .LVU994
 3779              	.LBB1976:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3780              		.loc 10 247 11 is_stmt 0 view .LVU995
 3781 00c3 4C89E6   		movq	%r12, %rsi
 3782 00c6 4889DF   		movq	%rbx, %rdi
 3783 00c9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_ite
 3783      00
 3784              	.LVL328:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3785              		.loc 10 247 11 view .LVU996
 3786              	.LBE1976:
 3787              	.LBE1975:
 3788              	.LBE1974:
 3789              	.LBE1973:
 3790              	.LBE1966:
 3791              	.LBB1977:
 3792              	.LBI1977:
 3793              		.loc 11 153 7 is_stmt 1 view .LVU997
 3794              	.LBB1978:
 3795              	.LBI1978:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3796              		.loc 12 89 7 view .LVU998
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3797              		.loc 12 89 7 is_stmt 0 view .LVU999
 3798              	.LBE1978:
 3799              	.LBE1977:
 116:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 3800              		.loc 14 116 5 view .LVU1000
 3801 00ce 488B8528 		movq	-216(%rbp), %rax
 3801      FFFFFF
 3802 00d5 64493345 		xorq	%fs:0(%r13), %rax
 3802      00
 3803 00da 750E     		jne	.L193
 3804 00dc 4889D8   		movq	%rbx, %rax
 3805 00df 488D65E8 		leaq	-24(%rbp), %rsp
 3806 00e3 5B       		popq	%rbx
 3807              	.LVL329:
 3808              		.loc 14 116 5 view .LVU1001
 3809 00e4 415C     		popq	%r12
 3810              	.LVL330:
 3811              		.loc 14 116 5 view .LVU1002
 3812 00e6 415D     		popq	%r13
 3813 00e8 5D       		popq	%rbp
 3814              		.cfi_remember_state
 3815              		.cfi_def_cfa 7, 8
 3816 00e9 C3       		ret
 3817              	.LVL331:
 3818              	.L193:
 3819              		.cfi_restore_state
 3820              		.loc 14 116 5 view .LVU1003
 3821 00ea E8000000 		call	__stack_chk_fail@PLT
 3821      00
GAS LISTING /tmp/ccvlKtfa.s 			page 178


 3822              	.LVL332:
 3823              		.cfi_endproc
 3824              	.LFE2579:
 3826              		.section	.rodata._ZN4vect8toStringB5cxx11Ev.str1.1,"aMS",@progbits,1
 3827              	.LC22:
 3828 0000 00       		.string	""
 3829              	.LC23:
 3830 0001 62617369 		.string	"basic_string::append"
 3830      635F7374 
 3830      72696E67 
 3830      3A3A6170 
 3830      70656E64 
 3831              	.LC24:
 3832 0016 7B00     		.string	"{"
 3833              	.LC25:
 3834 0018 256600   		.string	"%f"
 3835              	.LC26:
 3836 001b 2C2000   		.string	", "
 3837              	.LC27:
 3838 001e 7D00     		.string	"}"
 3839              		.section	.text._ZN4vect8toStringB5cxx11Ev,"axG",@progbits,_ZN4vect8toStringB5cxx11Ev,comdat
 3840              		.align 2
 3841              		.weak	_ZN4vect8toStringB5cxx11Ev
 3843              	_ZN4vect8toStringB5cxx11Ev:
 3844              	.LVL333:
 3845              	.LFB2474:
 3846              		.file 15 "Includes/findwayBases.hpp"
   1:Includes/findwayBases.hpp **** #include "math.hpp"
   2:Includes/findwayBases.hpp **** #include <string>
   3:Includes/findwayBases.hpp **** 
   4:Includes/findwayBases.hpp **** #define COORDS_DATATYPE float
   5:Includes/findwayBases.hpp **** 
   6:Includes/findwayBases.hpp **** #define CORNER_LEFT_BOT     0
   7:Includes/findwayBases.hpp **** #define CORNER_LEFT_TOP     1
   8:Includes/findwayBases.hpp **** #define CORNER_RIGHT_TOP    2
   9:Includes/findwayBases.hpp **** #define CORNER_RIGHT_BOT    3
  10:Includes/findwayBases.hpp **** 
  11:Includes/findwayBases.hpp **** 
  12:Includes/findwayBases.hpp **** struct coords
  13:Includes/findwayBases.hpp **** {
  14:Includes/findwayBases.hpp ****     COORDS_DATATYPE     x,
  15:Includes/findwayBases.hpp ****                         y;
  16:Includes/findwayBases.hpp ****     std::string toString()
  17:Includes/findwayBases.hpp ****     {
  18:Includes/findwayBases.hpp ****         std::string str = "";
  19:Includes/findwayBases.hpp ****         str += "{";
  20:Includes/findwayBases.hpp ****         str += std::to_string(x);
  21:Includes/findwayBases.hpp ****         str += ", ";
  22:Includes/findwayBases.hpp ****         str += std::to_string(y);
  23:Includes/findwayBases.hpp ****         str += "}";
  24:Includes/findwayBases.hpp ****         return str;
  25:Includes/findwayBases.hpp ****     }
  26:Includes/findwayBases.hpp **** 
  27:Includes/findwayBases.hpp ****     bool eq(struct coords *c)
  28:Includes/findwayBases.hpp ****     {
  29:Includes/findwayBases.hpp ****         return (x == c->x && y == c->y);
  30:Includes/findwayBases.hpp ****     }
GAS LISTING /tmp/ccvlKtfa.s 			page 179


  31:Includes/findwayBases.hpp **** 
  32:Includes/findwayBases.hpp ****     bool eq(COORDS_DATATYPE _x, COORDS_DATATYPE _y)
  33:Includes/findwayBases.hpp ****     {
  34:Includes/findwayBases.hpp ****         return (x == _x && y == _y);
  35:Includes/findwayBases.hpp ****     }
  36:Includes/findwayBases.hpp **** };
  37:Includes/findwayBases.hpp **** 
  38:Includes/findwayBases.hpp **** struct graphPoint
  39:Includes/findwayBases.hpp **** {
  40:Includes/findwayBases.hpp ****     struct graphPoint **targets = NULL;
  41:Includes/findwayBases.hpp ****     size_t numOfTargets = 0;
  42:Includes/findwayBases.hpp ****     struct coords c;
  43:Includes/findwayBases.hpp ****     bool calculated = false;
  44:Includes/findwayBases.hpp ****     COORDS_DATATYPE weight = INF;
  45:Includes/findwayBases.hpp ****     size_t i = 0;
  46:Includes/findwayBases.hpp **** 
  47:Includes/findwayBases.hpp ****     std::string toString()
  48:Includes/findwayBases.hpp ****     {
  49:Includes/findwayBases.hpp ****         std::string str = "";
  50:Includes/findwayBases.hpp ****         str += "{tgts: ";
  51:Includes/findwayBases.hpp ****         str += std::to_string(numOfTargets);
  52:Includes/findwayBases.hpp ****         str += "; cal: ";
  53:Includes/findwayBases.hpp ****         str += std::to_string(calculated);
  54:Includes/findwayBases.hpp ****         str += "; weight: ";
  55:Includes/findwayBases.hpp ****         str += std::to_string(weight);
  56:Includes/findwayBases.hpp ****         str += "; i: ";
  57:Includes/findwayBases.hpp ****         str += std::to_string(i);
  58:Includes/findwayBases.hpp ****         str += "}";
  59:Includes/findwayBases.hpp ****         return str;
  60:Includes/findwayBases.hpp ****     }
  61:Includes/findwayBases.hpp **** };
  62:Includes/findwayBases.hpp **** 
  63:Includes/findwayBases.hpp **** /*
  64:Includes/findwayBases.hpp ****  *  1-------2
  65:Includes/findwayBases.hpp ****  *  |       |
  66:Includes/findwayBases.hpp ****  *  |       |
  67:Includes/findwayBases.hpp ****  *  |       |
  68:Includes/findwayBases.hpp ****  *  0-------3
  69:Includes/findwayBases.hpp ****  */
  70:Includes/findwayBases.hpp **** 
  71:Includes/findwayBases.hpp **** struct obstacle
  72:Includes/findwayBases.hpp **** {
  73:Includes/findwayBases.hpp ****     struct coords      *c = NULL;
  74:Includes/findwayBases.hpp ****     struct graphPoint  *corners[4] = {NULL, NULL, NULL, NULL};
  75:Includes/findwayBases.hpp ****     COORDS_DATATYPE     a = 0;
  76:Includes/findwayBases.hpp **** };
  77:Includes/findwayBases.hpp **** 
  78:Includes/findwayBases.hpp **** struct baseline
  79:Includes/findwayBases.hpp **** {
  80:Includes/findwayBases.hpp ****     float               k = 0;
  81:Includes/findwayBases.hpp ****     COORDS_DATATYPE     b = 0;
  82:Includes/findwayBases.hpp **** };
  83:Includes/findwayBases.hpp **** 
  84:Includes/findwayBases.hpp **** struct vect
  85:Includes/findwayBases.hpp **** {
  86:Includes/findwayBases.hpp ****     struct coords      *c = NULL;
  87:Includes/findwayBases.hpp ****     COORDS_DATATYPE     dx = 0,
GAS LISTING /tmp/ccvlKtfa.s 			page 180


  88:Includes/findwayBases.hpp ****                         dy = 0;
  89:Includes/findwayBases.hpp **** 
  90:Includes/findwayBases.hpp ****     std::string toString()
 3847              		.loc 15 90 17 is_stmt 1 view -0
 3848              		.cfi_startproc
 3849              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3850              		.cfi_lsda 0x1b,.LLSDA2474
 3851              		.loc 15 90 17 is_stmt 0 view .LVU1005
 3852 0000 55       		pushq	%rbp
 3853              		.cfi_def_cfa_offset 16
 3854              		.cfi_offset 6, -16
 3855 0001 53       		pushq	%rbx
 3856              		.cfi_def_cfa_offset 24
 3857              		.cfi_offset 3, -24
 3858 0002 4883EC38 		subq	$56, %rsp
 3859              		.cfi_def_cfa_offset 80
 3860 0006 4889FB   		movq	%rdi, %rbx
 3861 0009 4889F5   		movq	%rsi, %rbp
 3862              		.loc 15 90 17 view .LVU1006
 3863 000c 64488B04 		movq	%fs:40, %rax
 3863      25280000 
 3863      00
 3864 0015 48894424 		movq	%rax, 40(%rsp)
 3864      28
 3865 001a 31C0     		xorl	%eax, %eax
  91:Includes/findwayBases.hpp ****     {
  92:Includes/findwayBases.hpp ****         std::string str = "";
 3866              		.loc 15 92 9 is_stmt 1 view .LVU1007
 3867              	.LVL334:
 3868              	.LBB2128:
 3869              	.LBI2128:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3870              		.loc 11 138 7 view .LVU1008
 3871              	.LBB2129:
 3872              	.LBI2129:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3873              		.loc 12 80 7 view .LVU1009
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3874              		.loc 12 80 7 is_stmt 0 view .LVU1010
 3875              	.LBE2129:
 3876              	.LBE2128:
 3877              	.LBB2130:
 3878              	.LBI2130:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3879              		.loc 10 525 7 is_stmt 1 view .LVU1011
 3880              	.LBB2131:
 3881              	.LBI2131:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3882              		.loc 10 190 7 view .LVU1012
 3883              	.LBB2132:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3884              		.loc 10 193 51 is_stmt 0 view .LVU1013
 3885 001c 488D4710 		leaq	16(%rdi), %rax
 3886              	.LVL335:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 3887              		.loc 10 193 51 view .LVU1014
 3888              	.LBE2132:
GAS LISTING /tmp/ccvlKtfa.s 			page 181


 3889              	.LBE2131:
 3890              	.LBB2133:
 3891              	.LBI2133:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3892              		.loc 10 156 2 is_stmt 1 view .LVU1015
 3893              	.LBB2134:
 3894              	.LBB2135:
 3895              	.LBI2135:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3896              		.loc 11 141 7 view .LVU1016
 3897              	.LBB2136:
 3898              	.LBI2136:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3899              		.loc 12 83 7 view .LVU1017
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3900              		.loc 12 83 7 is_stmt 0 view .LVU1018
 3901              	.LBE2136:
 3902              	.LBE2135:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3903              		.loc 10 157 35 view .LVU1019
 3904 0020 488907   		movq	%rax, (%rdi)
 3905              	.LVL336:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3906              		.loc 10 157 35 view .LVU1020
 3907              	.LBE2134:
 3908              	.LBE2133:
 3909              	.LBB2137:
 3910              	.LBI2137:
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3911              		.loc 4 329 7 is_stmt 1 view .LVU1021
 3912              	.LBE2137:
 3913              	.LBE2130:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3914              		.loc 4 335 2 view .LVU1022
 3915              	.LBB2142:
 3916              	.LBB2138:
 3917              	.LBI2138:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3918              		.loc 10 263 9 view .LVU1023
 3919              	.LBB2139:
 3920              	.LBB2140:
 3921              	.LBI2140:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3922              		.loc 10 243 9 view .LVU1024
 3923              	.LBB2141:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3924              		.loc 10 247 11 is_stmt 0 view .LVU1025
 3925 0023 488D1500 		leaq	.LC22(%rip), %rdx
 3925      000000
 3926 002a 4889D6   		movq	%rdx, %rsi
 3927              	.LVL337:
 3928              	.LEHB9:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3929              		.loc 10 247 11 view .LVU1026
 3930 002d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
 3930      00
 3931              	.LVL338:
GAS LISTING /tmp/ccvlKtfa.s 			page 182


 3932              	.LEHE9:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3933              		.loc 10 247 11 view .LVU1027
 3934              	.LBE2141:
 3935              	.LBE2140:
 3936              	.LBE2139:
 3937              	.LBE2138:
 3938              	.LBE2142:
 3939              	.LBB2143:
 3940              	.LBI2143:
 3941              		.loc 11 153 7 is_stmt 1 view .LVU1028
 3942              	.LBB2144:
 3943              	.LBI2144:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3944              		.loc 12 89 7 view .LVU1029
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3945              		.loc 12 89 7 is_stmt 0 view .LVU1030
 3946              	.LBE2144:
 3947              	.LBE2143:
  93:Includes/findwayBases.hpp ****         str += "{";
 3948              		.loc 15 93 9 is_stmt 1 view .LVU1031
 3949              	.LBB2145:
 3950              	.LBI2145:
 658:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 660:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 664:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 665:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 667:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 670:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/usr/include/c++/9.2.0/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 673:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 677:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(0);
 680:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 681:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else
 682:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 683:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
GAS LISTING /tmp/ccvlKtfa.s 			page 183


 692:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 693:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 695:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 696:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__str);
 697:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 698:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 699:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
 706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 714:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 715:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c)
 716:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 717:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c);
 718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 719:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 720:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 721:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 729:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 739:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(0);
 743:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 744:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 747:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
GAS LISTING /tmp/ccvlKtfa.s 			page 184


 749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__str.size())
 751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    size_type __capacity;
 761:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 763:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 765:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __data = _M_data();
 767:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 769:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__data)
 777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 778:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_data(__data);
 779:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    else
 782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  assign(__str);
 786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str.clear();
 787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 788:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 789:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 790:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 794:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 795:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 799:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 800:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 802:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
GAS LISTING /tmp/ccvlKtfa.s 			page 185


 806:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 807:/usr/include/c++/9.2.0/bits/basic_string.h ****      template<typename _Tp>
 808:/usr/include/c++/9.2.0/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/usr/include/c++/9.2.0/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/usr/include/c++/9.2.0/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 812:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
 815:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 816:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 819:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 820:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
 821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.
 824:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 826:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 829:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 832:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 833:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 834:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 837:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 840:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 841:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 842:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 845:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 848:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 849:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 850:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 853:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.
 857:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 858:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 859:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 862:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccvlKtfa.s 			page 186


 863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 866:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 867:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 868:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.
 875:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 876:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 877:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 884:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 885:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 886:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 889:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 893:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 894:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 895:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
 896:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 898:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 901:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 902:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 903:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
 904:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 906:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 910:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 911:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 912:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
 913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 919:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccvlKtfa.s 			page 187


 920:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 921:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
 922:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 924:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 925:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 926:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
 927:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 929:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 931:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 932:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 933:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 935:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 936:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 938:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 939:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 941:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 954:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 955:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 957:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
 966:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 967:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 968:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
 969:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 971:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 974:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 976:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
GAS LISTING /tmp/ccvlKtfa.s 			page 188


 977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
 978:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
 980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
 981:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
 982:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
 983:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 984:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 985:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 986:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 987:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 988:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 989:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 992:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 993:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 998:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 999:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
1002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
1015:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1016:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1017:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1019:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1022:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1023:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
1025:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1026:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1030:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
1033:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 189


1034:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
1035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1045:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1061:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1062:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1063:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
1064:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1065:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
1067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1083:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1084:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
1085:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
1087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
GAS LISTING /tmp/ccvlKtfa.s 			page 190


1091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1092:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1093:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1094:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1095:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1100:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1104:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1105:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
1106:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1107:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
1108:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1113:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1114:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1115:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1117:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1119:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1120:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1121:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() noexcept
1122:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1123:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1125:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1126:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1127:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1128:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1130:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1131:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1132:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
1133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1136:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1141:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1142:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1143:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() noexcept
1144:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1145:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccvlKtfa.s 			page 191


1148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1149:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
1152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1153:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1154:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
1155:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1159:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1161:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
1162:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1167:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
1170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1171:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1176:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
 3951              		.loc 10 1177 7 view .LVU1032
 3952              	.LBB2146:
 3953              	.LBI2146:
1178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
1179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1180:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
1182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1185:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1186:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
1189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1190:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1194:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1198:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1199:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
GAS LISTING /tmp/ccvlKtfa.s 			page 192


1202:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1203:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1209:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1214:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1215:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1220:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str)
1222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1224:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1232:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1237:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1238:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1243:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1244:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1249:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1250:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1251:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
1255:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1257:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1258:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
GAS LISTING /tmp/ccvlKtfa.s 			page 193


1259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
 3954              		.loc 10 1263 7 view .LVU1033
 3955              		.loc 10 1263 7 is_stmt 0 view .LVU1034
 3956              	.LBE2146:
 3957              	.LBE2145:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3958              		.loc 4 335 2 is_stmt 1 view .LVU1035
 3959              	.LBB2154:
 3960              	.LBB2153:
 3961              	.LBB2147:
 3962              	.LBB2148:
 3963              	.LBI2148:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3964              		.loc 10 320 7 view .LVU1036
 3965              	.LBB2149:
 3966              	.LBB2150:
 3967              	.LBI2150:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3968              		.loc 10 930 7 view .LVU1037
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3969              		.loc 10 930 7 is_stmt 0 view .LVU1038
 3970              	.LBE2150:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3971              		.loc 10 322 2 view .LVU1039
 3972 0032 48B8FFFF 		movabsq	$4611686018427387903, %rax
 3972      FFFFFFFF 
 3972      FF3F
 3973 003c 48394308 		cmpq	%rax, 8(%rbx)
 3974 0040 7416     		je	.L212
 3975              	.LVL339:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3976              		.loc 10 322 2 view .LVU1040
 3977              	.LBE2149:
 3978              	.LBE2148:
1264:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
 3979              		.loc 10 1268 27 view .LVU1041
 3980 0042 BA010000 		movl	$1, %edx
 3980      00
 3981 0047 488D3500 		leaq	.LC24(%rip), %rsi
 3981      000000
 3982 004e 4889DF   		movq	%rbx, %rdi
 3983              	.LEHB10:
 3984 0051 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3984      00
 3985              	.LVL340:
 3986 0056 EB14     		jmp	.L213
 3987              	.LVL341:
 3988              	.L212:
 3989              	.LBB2152:
GAS LISTING /tmp/ccvlKtfa.s 			page 194


 3990              	.LBB2151:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3991              		.loc 10 323 24 view .LVU1042
 3992 0058 488D3D00 		leaq	.LC23(%rip), %rdi
 3992      000000
 3993 005f E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 3993      00
 3994              	.LVL342:
 3995              	.L207:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3996              		.loc 10 323 24 view .LVU1043
 3997 0064 4889C5   		movq	%rax, %rbp
 3998              	.LVL343:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3999              		.loc 10 323 24 view .LVU1044
 4000 0067 E9180100 		jmp	.L202
 4000      00
 4001              	.LVL344:
 4002              	.L213:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4003              		.loc 10 323 24 view .LVU1045
 4004              	.LBE2151:
 4005              	.LBE2152:
 4006              	.LBE2147:
 4007              	.LBE2153:
 4008              	.LBE2154:
  94:Includes/findwayBases.hpp ****         str += std::to_string(dx);
 4009              		.loc 15 94 9 is_stmt 1 view .LVU1046
 4010              	.LBB2155:
 4011              	.LBI2155:
1269:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1270:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1271:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1279:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1280:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1283:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1289:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1290:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
GAS LISTING /tmp/ccvlKtfa.s 			page 195


1296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1302:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1306:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1308:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1309:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1312:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1318:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1319:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1322:/usr/include/c++/9.2.0/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
1325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1326:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1333:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1334:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1337:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1342:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1343:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1344:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1348:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1349:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
1350:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
GAS LISTING /tmp/ccvlKtfa.s 			page 196


1353:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1363:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1364:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1368:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1369:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1370:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1372:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1379:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1387:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1388:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1389:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1402:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1403:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1408:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
GAS LISTING /tmp/ccvlKtfa.s 			page 197


1410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1418:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1419:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1421:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1424:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1425:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
1433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1442:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1451:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1452:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1463:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
GAS LISTING /tmp/ccvlKtfa.s 			page 198


1467:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1469:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1470:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1473:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1479:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1483:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1484:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1490:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1494:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1497:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1498:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1505:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1509:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1515:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1517:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1519:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
GAS LISTING /tmp/ccvlKtfa.s 			page 199


1524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1532:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1533:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1534:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1536:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1541:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1542:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1555:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1556:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1559:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1560:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1575:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/c++/9.2.0/bits/basic_string.h **** 	iterator
1578:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1580:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
GAS LISTING /tmp/ccvlKtfa.s 			page 200


1581:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1585:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1586:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
1600:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1603:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1604:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1611:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1612:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1615:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/c++/9.2.0/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1618:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1620:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1623:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1625:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1626:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 201


1638:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1639:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1661:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1662:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1684:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1688:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
GAS LISTING /tmp/ccvlKtfa.s 			page 202


1695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1704:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1706:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1710:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1711:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1727:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1732:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1745:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1746:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
GAS LISTING /tmp/ccvlKtfa.s 			page 203


1752:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1753:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1754:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1761:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1768:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1769:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
1775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1778:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1789:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1790:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1791:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1805:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1806:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1807:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 204


1809:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == npos)
1811:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__n != 0)
1813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1815:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1816:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1817:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1826:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1828:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < end());
1830:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1834:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1835:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1844:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1845:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1847:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __last <= end());
1849:/usr/include/c++/9.2.0/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__last == end())
1851:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
1853:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1856:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1857:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
1862:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1863:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1864:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() noexcept
1865:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 205


1866:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1869:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
1887:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1888:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1889:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
1902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1910:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1911:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1917:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
GAS LISTING /tmp/ccvlKtfa.s 			page 206


1923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1934:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1935:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1936:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2)
1938:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1939:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1960:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1961:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1963:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
GAS LISTING /tmp/ccvlKtfa.s 			page 207


1980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1983:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1989:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2002:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2003:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string& __str)
2005:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2007:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2016:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2021:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2022:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2026:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2028:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2030:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2031:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccvlKtfa.s 			page 208


2037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2044:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2045:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2050:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2051:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2052:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2065:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2066:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __c)
2068:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2073:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2074:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2088:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2089:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
2091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2093:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
GAS LISTING /tmp/ccvlKtfa.s 			page 209


2094:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2096:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   std::__false_type());
2101:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2102:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2103:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2104:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/usr/include/c++/9.2.0/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2107:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2108:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2109:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2114:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2118:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2119:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2120:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2123:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2126:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2132:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2133:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2134:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2137:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2144:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2145:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2148:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
GAS LISTING /tmp/ccvlKtfa.s 			page 210


2151:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2155:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2156:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2161:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2166:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2175:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2180:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2181:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
2185:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2186:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2188:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2194:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2201:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2202:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
GAS LISTING /tmp/ccvlKtfa.s 			page 211


2208:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2211:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
2219:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2223:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2224:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
2227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
2229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2232:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2233:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2236:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2239:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2241:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
2242:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
2243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2244:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2248:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2249:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2250:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __false_type);
2253:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2255:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
2257:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2258:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2259:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const size_type __len2);
2261:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2263:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 212


2265:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
2266:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2267:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2279:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2280:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
2288:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2289:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
2290:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2292:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
2293:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2294:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
2298:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2299:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2300:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2302:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2303:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2304:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2306:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2311:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2314:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2315:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2319:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 213


2322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
2323:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
2324:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2325:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2327:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2330:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
2331:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2334:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2345:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2346:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2347:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2350:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2351:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
2359:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2360:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2361:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2365:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2367:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2372:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2373:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2377:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
GAS LISTING /tmp/ccvlKtfa.s 			page 214


2379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2380:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2382:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2383:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2392:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2393:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2395:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2398:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2399:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2409:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2410:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2412:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2422:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2423:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2427:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2434:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
GAS LISTING /tmp/ccvlKtfa.s 			page 215


2436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2439:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2442:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2451:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2455:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2456:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2457:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2460:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2466:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2470:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2471:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2473:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2476:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2477:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2483:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2487:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2488:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2490:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
GAS LISTING /tmp/ccvlKtfa.s 			page 216


2493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2500:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2501:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2502:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2506:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2514:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2522:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2523:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2524:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2535:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2536:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2537:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2540:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 217


2550:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2551:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2554:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2557:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2558:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2570:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2571:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2584:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2585:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2586:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2590:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2606:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
GAS LISTING /tmp/ccvlKtfa.s 			page 218


2607:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2608:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2619:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2620:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2621:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2624:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2634:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2635:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2638:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2642:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2654:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2655:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2658:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccvlKtfa.s 			page 219


2664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2668:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2669:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2673:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2681:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2682:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2686:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2689:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2703:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2704:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2717:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2718:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 220


2721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2724:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2725:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2735:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2736:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2750:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2751:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2755:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2763:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2768:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2771:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2773:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
GAS LISTING /tmp/ccvlKtfa.s 			page 221


2778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2784:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2785:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2786:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2798:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2799:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2800:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2803:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2806:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2807:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2817:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2818:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
2826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2833:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
2834:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
GAS LISTING /tmp/ccvlKtfa.s 			page 222


2835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
2836:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2838:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2852:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2853:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2855:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2859:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
2861:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
2863:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2864:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2865:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2871:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2872:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2876:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2881:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
2883:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
2885:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2886:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2887:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
GAS LISTING /tmp/ccvlKtfa.s 			page 223


2892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2895:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2896:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2904:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2914:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2915:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2924:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2925:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2926:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
2941:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2945:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2946:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2948:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccvlKtfa.s 			page 224


2949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
2967:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2971:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2972:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2975:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
2988:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2989:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2990:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2992:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
GAS LISTING /tmp/ccvlKtfa.s 			page 225


3006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3012:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3013:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3014:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3016:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
3039:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3040:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3041:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
3043:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3044:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3046:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3049:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3050:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3053:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3054:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3057:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3058:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3061:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3062:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
GAS LISTING /tmp/ccvlKtfa.s 			page 226


3063:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3065:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3066:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
3069:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3070:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/usr/include/c++/9.2.0/bits/basic_string.h ****     };
3073:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/usr/include/c++/9.2.0/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/usr/include/c++/9.2.0/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3077:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
3078:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3081:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
3082:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
3083:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3084:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3089:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3095:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @doctodo
3096:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3097:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3098:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3101:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  A string looks like this:
3102:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3103:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @code
3104:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        [_Rep]
3105:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        _M_length
3106:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @endcode
3110:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3111:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  pointer to the header.
3114:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3115:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
GAS LISTING /tmp/ccvlKtfa.s 			page 227


3120:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  object at the front.
3122:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3123:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string length.)
3128:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3129:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/usr/include/c++/9.2.0/bits/basic_string.h ****   */
3138:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
3141:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
3142:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3144:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
3145:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3146:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3155:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3158:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/usr/include/c++/9.2.0/bits/basic_string.h ****                                                             const_iterator;
3163:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3166:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
3167:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3170:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3171:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _Rep: string representation
3172:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   Invariants:
3173:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
GAS LISTING /tmp/ccvlKtfa.s 			page 228


3177:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/usr/include/c++/9.2.0/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/usr/include/c++/9.2.0/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3185:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep_base
3186:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3187:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_length;
3188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3192:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3194:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Types:
3195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// (Public) Data members:
3198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// look like this:
3206:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Solving for m:
3208:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/usr/include/c++/9.2.0/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/usr/include/c++/9.2.0/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3217:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _Rep&
3218:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/usr/include/c++/9.2.0/bits/basic_string.h ****         { 
3220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3226:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3227:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3228:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3230:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/usr/include/c++/9.2.0/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
GAS LISTING /tmp/ccvlKtfa.s 			page 229


3234:/usr/include/c++/9.2.0/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3237:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3239:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3241:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3244:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/usr/include/c++/9.2.0/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/usr/include/c++/9.2.0/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_dispose.
3250:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3252:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3254:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3255:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3256:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3257:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3260:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3261:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3267:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3270:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3271:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3278:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3279:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3280:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refdata() throw()
3281:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3283:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3284:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3286:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/usr/include/c++/9.2.0/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3289:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Create & Destroy
GAS LISTING /tmp/ccvlKtfa.s 			page 230


3291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static _Rep*
3292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3294:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3295:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3297:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/usr/include/c++/9.2.0/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   all the previous decrements.
3308:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/usr/include/c++/9.2.0/bits/basic_string.h **** 							 -1) <= 0)
3313:/usr/include/c++/9.2.0/bits/basic_string.h **** 		{
3314:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/usr/include/c++/9.2.0/bits/basic_string.h **** 		}
3317:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3318:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3319:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3320:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3326:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3329:/usr/include/c++/9.2.0/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_refdata();
3331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3332:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3333:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3334:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3336:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3337:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3343:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3345:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3346:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3347:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (public):
GAS LISTING /tmp/ccvlKtfa.s 			page 231


3348:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/usr/include/c++/9.2.0/bits/basic_string.h ****       // size that the allocator can hold.
3350:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3353:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3354:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (private):
3355:/usr/include/c++/9.2.0/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3357:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3358:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3361:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3365:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Rep*
3366:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3369:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/usr/include/c++/9.2.0/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3372:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3375:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3376:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3379:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3380:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_leak_hard();
3384:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3386:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3389:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
3390:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
3394:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3395:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3396:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3402:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3403:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccvlKtfa.s 			page 232


3405:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3410:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3411:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3413:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3415:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3418:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3422:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3424:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3425:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3427:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3429:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3430:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3431:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3433:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3439:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3440:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3442:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3443:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3445:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3447:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3448:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
3451:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
3452:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3454:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3457:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3458:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3459:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 233


3462:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3463:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3467:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3468:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3471:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3472:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3476:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
3477:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3486:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
3487:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3488:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3489:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3490:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3492:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3493:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak_hard();
3494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3495:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _Rep&
3496:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3499:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3503:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
3509:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3510:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
3512:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
3514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3515:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
GAS LISTING /tmp/ccvlKtfa.s 			page 234


3519:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
3520:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3524:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3525:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
3528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3531:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3536:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3541:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3544:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
3545:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3549:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3551:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3552:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3553:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3554:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3556:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3557:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3559:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3564:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3566:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3574:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
GAS LISTING /tmp/ccvlKtfa.s 			page 235


3576:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3577:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n);
3585:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3592:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3595:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3601:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
3603:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3604:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3611:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3620:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3628:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3632:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
GAS LISTING /tmp/ccvlKtfa.s 			page 236


3633:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3634:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3637:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3639:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3640:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3641:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3646:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3648:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3651:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3652:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3657:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3660:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3662:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3664:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3666:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3674:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
3675:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3678:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3686:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
GAS LISTING /tmp/ccvlKtfa.s 			page 237


3690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3696:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
3698:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3701:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3705:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3708:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3712:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3713:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str); }
3715:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3716:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3720:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3721:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
3723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
3734:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3736:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3737:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3738:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3746:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccvlKtfa.s 			page 238


3747:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// NB: DR 1204.
3751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
3752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3753:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3759:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3760:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3764:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3765:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3766:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3767:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3769:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3772:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
3773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3777:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
3780:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3781:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3785:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
3786:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3790:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3791:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3793:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data());
3795:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3796:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3797:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3800:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3801:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3802:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
GAS LISTING /tmp/ccvlKtfa.s 			page 239


3804:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3805:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3809:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3810:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3815:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3816:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3817:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3819:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3820:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3821:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3829:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3830:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3833:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3837:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3838:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3839:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3842:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3847:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3848:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3851:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3855:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3856:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3857:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3860:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccvlKtfa.s 			page 240


3861:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3864:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3865:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3866:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
3867:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3869:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3872:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3873:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3874:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
3875:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3877:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3881:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3882:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3883:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
3884:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3886:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3890:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3891:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3892:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
3893:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3895:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3896:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3897:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
3898:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3900:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3901:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3904:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3906:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3907:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3910:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3912:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
GAS LISTING /tmp/ccvlKtfa.s 			page 241


3918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3925:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3926:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3928:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
3937:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3938:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3939:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
3940:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3945:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3947:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
3948:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
3949:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3950:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
3951:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
3952:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
3953:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
3954:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3955:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3956:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3957:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3959:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3963:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3964:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
3970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
GAS LISTING /tmp/ccvlKtfa.s 			page 242


3975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
3977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
3983:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3984:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3985:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3987:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3988:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3990:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3992:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3994:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3999:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
4000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4002:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
4003:/usr/include/c++/9.2.0/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4005:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear()
4006:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4008:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4009:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4013:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
4016:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4017:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
4018:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
4027:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4028:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4029:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4031:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
GAS LISTING /tmp/ccvlKtfa.s 			page 243


4032:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4034:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4045:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
4047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4048:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
4050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4054:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4057:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4067:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4068:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
4069:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
4071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4075:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4076:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4077:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4078:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  unsharing the string.
4088:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccvlKtfa.s 			page 244


4089:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4090:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
4091:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
4093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4097:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4099:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4100:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4101:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4103:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4105:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4106:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4107:/usr/include/c++/9.2.0/bits/basic_string.h ****       front()
4108:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4109:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4111:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4113:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4114:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4116:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4117:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4118:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
4119:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4122:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4123:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4124:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4125:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4127:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4128:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4129:/usr/include/c++/9.2.0/bits/basic_string.h ****       back()
4130:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4131:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4135:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4136:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
4138:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4139:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4140:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
4141:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4145:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
GAS LISTING /tmp/ccvlKtfa.s 			page 245


4146:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4147:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
4148:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4149:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4153:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4154:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
4156:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4157:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4158:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4162:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4163:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
4165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4166:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
4168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4171:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4172:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
4175:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4176:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4177:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4178:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4184:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4185:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4189:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4195:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4200:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4201:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
GAS LISTING /tmp/ccvlKtfa.s 			page 246


4203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4206:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4207:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str);
4208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4209:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4210:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4222:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4223:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4231:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4232:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4234:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4239:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4240:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
4241:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4245:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4246:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4255:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4257:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
GAS LISTING /tmp/ccvlKtfa.s 			page 247


4260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4263:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4264:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4267:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4268:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4276:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4277:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4278:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4281:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4287:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4295:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *               from.
4299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4304:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return append(__sv.data()
4309:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4312:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4313:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4314:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
GAS LISTING /tmp/ccvlKtfa.s 			page 248


4317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4318:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4319:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
4320:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->reserve(__len);
4324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4327:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4328:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4333:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4334:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4336:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4345:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4346:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
4350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4351:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4352:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4354:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4367:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4368:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4373:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccvlKtfa.s 			page 249


4374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4379:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4383:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4384:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4386:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
4394:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4395:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4398:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4401:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4402:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
4410:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4411:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4412:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4415:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4423:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4424:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4425:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4428:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
GAS LISTING /tmp/ccvlKtfa.s 			page 250


4431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4439:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4445:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4446:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4449:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4453:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4460:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4461:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4469:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4471:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4483:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4484:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4485:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 251


4488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
4493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4500:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4501:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
4502:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4505:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4512:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4513:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4518:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4519:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4520:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4531:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4533:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4536:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4537:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
GAS LISTING /tmp/ccvlKtfa.s 			page 252


4545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4554:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4555:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4577:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4578:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4580:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4594:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4595:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4596:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4601:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 253


4602:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4603:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4617:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4619:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4623:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4635:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4636:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4637:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4646:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4653:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4654:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4657:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
GAS LISTING /tmp/ccvlKtfa.s 			page 254


4659:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4660:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4661:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
4667:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4670:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4671:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4675:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4680:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4682:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4697:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4698:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4700:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4703:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4704:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4705:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4713:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4714:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __position)
4715:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 255


4716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4733:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4734:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/usr/include/c++/9.2.0/bits/basic_string.h ****  
4736:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
4741:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4742:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4743:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/usr/include/c++/9.2.0/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4748:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4749:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4750:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4751:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
4766:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4767:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4768:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4771:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
GAS LISTING /tmp/ccvlKtfa.s 			page 256


4773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
4781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4789:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4790:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4796:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4813:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4814:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4815:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2);
4817:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4818:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
GAS LISTING /tmp/ccvlKtfa.s 			page 257


4830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4833:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4834:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4835:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4837:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4840:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4841:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4857:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4858:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4859:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4863:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4876:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4877:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccvlKtfa.s 			page 258


4887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4894:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4895:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4902:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4903:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4916:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4917:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4922:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4923:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4937:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccvlKtfa.s 			page 259


4944:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4945:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4960:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4961:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4962:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
4965:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4971:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4972:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4975:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4983:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4994:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4995:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4996:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
GAS LISTING /tmp/ccvlKtfa.s 			page 260


5001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5004:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5005:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5006:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5009:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5016:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
5030:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5031:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
5035:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5036:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5044:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5045:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
GAS LISTING /tmp/ccvlKtfa.s 			page 261


5058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5061:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5062:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
5069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
5077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
5079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5082:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5083:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5089:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5090:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5091:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
5092:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5094:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5098:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
5099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5100:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5103:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5104:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
5106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5107:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5108:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      size_type __n2);
5110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5111:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5114:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
GAS LISTING /tmp/ccvlKtfa.s 			page 262


5115:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5118:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/usr/include/c++/9.2.0/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5121:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5122:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5125:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5126:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/usr/include/c++/9.2.0/bits/basic_string.h **** 				    __end, __a); }
5130:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5131:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5132:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5135:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5136:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5137:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
5142:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5143:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5145:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5146:/usr/include/c++/9.2.0/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      input_iterator_tag);
5148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _FwdIterator>
5152:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5153:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5156:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5157:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5159:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
5160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5161:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5162:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
GAS LISTING /tmp/ccvlKtfa.s 			page 263


5172:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5173:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5174:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5176:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
5182:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5183:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
5184:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s)
5185:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5187:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
5188:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
5193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5194:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5195:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5197:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5198:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5199:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5201:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5206:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5207:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5210:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5217:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
5218:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
5219:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
5221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data();
5222:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5223:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
5224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5228:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
GAS LISTING /tmp/ccvlKtfa.s 			page 264


5229:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
5231:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5232:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5239:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5243:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5244:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5245:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5248:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5254:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
5257:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5258:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5259:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5263:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5264:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5273:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5274:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5279:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5280:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5281:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccvlKtfa.s 			page 265


5286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5290:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5291:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5293:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5300:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5308:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5309:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5310:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5311:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5320:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5321:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5325:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5326:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5332:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5336:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5337:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5338:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5341:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
GAS LISTING /tmp/ccvlKtfa.s 			page 266


5343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5347:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5351:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5352:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5368:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5369:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5371:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5378:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5386:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5387:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5388:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5398:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5399:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccvlKtfa.s 			page 267


5400:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5404:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5415:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5416:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5417:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5420:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5430:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5431:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5437:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5438:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5439:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5450:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5451:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5454:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
GAS LISTING /tmp/ccvlKtfa.s 			page 268


5457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5462:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5470:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5471:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5472:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5482:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5483:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5484:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5500:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5501:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5504:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccvlKtfa.s 			page 269


5514:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5515:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5522:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5534:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5535:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5538:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5546:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5547:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5551:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5554:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5556:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5557:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5566:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5567:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 270


5571:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5583:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5584:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5587:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5597:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5598:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5604:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5615:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5616:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5621:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5627:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
GAS LISTING /tmp/ccvlKtfa.s 			page 271


5628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5632:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5635:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5636:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5637:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5638:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5647:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5648:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5649:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5653:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5664:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5665:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5666:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5678:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5679:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5680:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
GAS LISTING /tmp/ccvlKtfa.s 			page 272


5685:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5686:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5687:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5697:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5698:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5701:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5709:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5710:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5714:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5717:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5718:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5719:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
5724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
5732:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
5734:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5736:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
GAS LISTING /tmp/ccvlKtfa.s 			page 273


5742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5750:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5751:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
5759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
5761:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5762:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5763:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5769:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
5781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
5783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5785:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
5791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5793:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
GAS LISTING /tmp/ccvlKtfa.s 			page 274


5799:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5802:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                 against.
5808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5812:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5818:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5822:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
5839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5843:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5844:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5846:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
GAS LISTING /tmp/ccvlKtfa.s 			page 275


5856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
5865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5869:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5870:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5873:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
5886:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5887:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5888:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5890:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5910:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5911:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5912:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
GAS LISTING /tmp/ccvlKtfa.s 			page 276


5913:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5914:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5915:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
5937:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5938:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5939:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
5941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5944:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5947:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5948:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5951:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5952:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5955:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5956:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5959:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5960:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5963:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5964:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
5967:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5968:/usr/include/c++/9.2.0/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
GAS LISTING /tmp/ccvlKtfa.s 			page 277


5970:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    void* exc);
5972:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend const char*
5973:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5975:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5977:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/usr/include/c++/9.2.0/bits/basic_string.h **** # endif
5979:/usr/include/c++/9.2.0/bits/basic_string.h ****   };
5980:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5982:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5992:/usr/include/c++/9.2.0/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6000:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6010:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6011:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator+
6012:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6013:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6018:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6023:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6025:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6026:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
GAS LISTING /tmp/ccvlKtfa.s 			page 278


6027:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6028:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6029:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6034:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6039:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6040:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6045:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6049:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6050:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6055:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6060:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6062:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6063:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6065:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6066:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6071:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6075:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/usr/include/c++/9.2.0/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6080:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6081:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6082:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
GAS LISTING /tmp/ccvlKtfa.s 			page 279


6084:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6089:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6095:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6100:/usr/include/c++/9.2.0/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/usr/include/c++/9.2.0/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/usr/include/c++/9.2.0/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/usr/include/c++/9.2.0/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6107:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6113:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6119:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6125:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __rhs)
6129:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6131:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6132:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator ==
6133:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
GAS LISTING /tmp/ccvlKtfa.s 			page 280


6141:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6146:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT>
6147:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline
6148:/usr/include/c++/9.2.0/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/usr/include/c++/9.2.0/bits/basic_string.h **** 						    __lhs.size())); }
6154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6155:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6156:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6159:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6161:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6163:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6167:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6168:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6170:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6173:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6175:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6176:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6178:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6179:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator !=
6180:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6181:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6186:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6188:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6193:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6194:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6197:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
GAS LISTING /tmp/ccvlKtfa.s 			page 281


6198:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6199:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6201:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6205:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6206:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6208:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6211:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6213:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6217:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <
6218:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6219:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6224:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6231:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6232:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6234:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6237:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6239:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6243:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6244:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6247:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6249:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6251:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 282


6255:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >
6256:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6257:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6262:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6264:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6267:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6269:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6270:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6272:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6275:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6277:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6281:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6282:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6283:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6287:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6293:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <=
6294:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6295:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6300:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6302:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6307:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6308:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6310:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
GAS LISTING /tmp/ccvlKtfa.s 			page 283


6312:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6313:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6315:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6319:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6320:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6322:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6323:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6324:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6325:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6327:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6331:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >=
6332:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6333:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6338:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6340:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6345:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6346:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6348:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6351:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6353:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6357:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6358:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6361:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6363:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6365:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 284


6369:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6370:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6374:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6376:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline void
6378:/usr/include/c++/9.2.0/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6381:/usr/include/c++/9.2.0/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6383:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6384:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6385:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6390:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6396:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6397:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6401:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6402:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6403:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6405:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6406:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6411:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  writing a C string.
6413:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6414:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6423:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6424:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6425:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
GAS LISTING /tmp/ccvlKtfa.s 			page 285


6426:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6431:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6434:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6436:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6437:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6438:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6442:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6443:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6448:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6453:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6454:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6460:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6468:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6476:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6477:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6478:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    char __delim);
6480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6481:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
GAS LISTING /tmp/ccvlKtfa.s 			page 286


6483:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    wchar_t __delim);
6486:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  
6487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6488:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/usr/include/c++/9.2.0/bits/basic_string.h **** } // namespace
6490:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6491:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6493:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6495:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/usr/include/c++/9.2.0/bits/basic_string.h **** {
6497:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6500:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int
6503:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6506:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6507:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long
6508:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6511:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6512:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6513:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6517:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6518:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6522:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6523:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6526:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6527:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6529:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6532:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6533:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6536:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6537:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
GAS LISTING /tmp/ccvlKtfa.s 			page 287


6540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6541:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6544:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6545:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(int __val)
6547:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
6549:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6550:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6551:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned __val)
6552:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6553:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%u", __val); }
6555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6556:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6557:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long __val)
6558:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
6559:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%ld", __val); }
6560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6561:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long __val)
6563:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6564:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lu", __val); }
6566:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6567:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6568:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long long __val)
6569:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6570:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(long long),
6571:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lld", __val); }
6572:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6573:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6574:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long long __val)
6575:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6576:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long long),
6577:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%llu", __val); }
6578:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6579:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(float __val)
 4012              		.loc 10 6580 3 view .LVU1047
 4013              	.LBB2156:
6581:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
 4014              		.loc 10 6582 5 view .LVU1048
6583:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6584:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
 4015              		.loc 10 6584 5 view .LVU1049
6585:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 4016              		.loc 10 6585 20 is_stmt 0 view .LVU1050
 4017 006c 4889E7   		movq	%rsp, %rdi
 4018 006f 660FEFC0 		pxor	%xmm0, %xmm0
 4019 0073 F30F5A45 		cvtss2sd	8(%rbp), %xmm0
 4019      08
 4020 0078 488D0D00 		leaq	.LC25(%rip), %rcx
 4020      000000
GAS LISTING /tmp/ccvlKtfa.s 			page 288


 4021 007f BA3A0000 		movl	$58, %edx
 4021      00
 4022 0084 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 4022      000000
 4023 008b B8010000 		movl	$1, %eax
 4023      00
 4024 0090 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 4024      00
 4025              	.LVL345:
 4026              	.LEHE10:
 4027              		.loc 10 6585 20 view .LVU1051
 4028              	.LBE2156:
 4029              	.LBE2155:
 4030              	.LBB2157:
 4031              	.LBI2157:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 4032              		.loc 10 1168 7 is_stmt 1 view .LVU1052
 4033              	.LBB2158:
 4034              	.LBI2158:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4035              		.loc 10 1221 7 view .LVU1053
 4036              	.LBB2159:
 4037              	.LBB2160:
 4038              	.LBI2160:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4039              		.loc 10 930 7 view .LVU1054
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4040              		.loc 10 930 7 is_stmt 0 view .LVU1055
 4041              	.LBE2160:
 4042              	.LBB2161:
 4043              	.LBI2161:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4044              		.loc 10 186 7 is_stmt 1 view .LVU1056
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4045              		.loc 10 186 7 is_stmt 0 view .LVU1057
 4046              	.LBE2161:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4047              		.loc 10 1222 55 view .LVU1058
 4048 0095 488B5424 		movq	8(%rsp), %rdx
 4048      08
 4049 009a 488B3424 		movq	(%rsp), %rsi
 4050 009e 4889DF   		movq	%rbx, %rdi
 4051              	.LEHB11:
 4052 00a1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4052      00
 4053              	.LVL346:
 4054              	.LEHE11:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4055              		.loc 10 1222 55 view .LVU1059
 4056              	.LBE2159:
 4057              	.LBE2158:
 4058              	.LBE2157:
 4059              	.LBB2162:
 4060              	.LBI2162:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4061              		.loc 10 657 7 is_stmt 1 view .LVU1060
 4062              	.LBB2163:
GAS LISTING /tmp/ccvlKtfa.s 			page 289


 4063              	.LBI2163:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4064              		.loc 10 229 7 view .LVU1061
 4065              	.LBB2164:
 4066              	.LBB2165:
 4067              	.LBI2165:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4068              		.loc 10 221 7 view .LVU1062
 4069              	.LBB2166:
 4070              	.LBI2166:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4071              		.loc 10 186 7 view .LVU1063
 4072              	.LBB2167:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4073              		.loc 10 187 28 is_stmt 0 view .LVU1064
 4074 00a6 488B3C24 		movq	(%rsp), %rdi
 4075              	.LVL347:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4076              		.loc 10 187 28 view .LVU1065
 4077              	.LBE2167:
 4078              	.LBE2166:
 4079              	.LBB2168:
 4080              	.LBI2168:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4081              		.loc 10 200 7 is_stmt 1 view .LVU1066
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4082              		.loc 10 200 7 is_stmt 0 view .LVU1067
 4083              	.LBE2168:
 4084              	.LBE2165:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4085              		.loc 10 231 2 view .LVU1068
 4086 00aa 488D4424 		leaq	16(%rsp), %rax
 4086      10
 4087 00af 4839C7   		cmpq	%rax, %rdi
 4088 00b2 7405     		je	.L196
 4089              	.LVL348:
 4090              	.LBB2169:
 4091              	.LBI2169:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4092              		.loc 10 236 7 is_stmt 1 view .LVU1069
 4093              	.LBB2170:
 4094              	.LBB2171:
 4095              	.LBI2171:
 4096              		.loc 13 469 7 view .LVU1070
 4097              	.LBB2172:
 4098              	.LBI2172:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4099              		.loc 12 119 7 view .LVU1071
 4100              	.LBB2173:
 4101              		.loc 12 128 19 is_stmt 0 view .LVU1072
 4102 00b4 E8000000 		call	_ZdlPv@PLT
 4102      00
 4103              	.LVL349:
 4104              	.L196:
 4105              		.loc 12 128 19 view .LVU1073
 4106              	.LBE2173:
 4107              	.LBE2172:
GAS LISTING /tmp/ccvlKtfa.s 			page 290


 4108              	.LBE2171:
 4109              	.LBE2170:
 4110              	.LBE2169:
 4111              	.LBE2164:
 4112              	.LBE2163:
 4113              	.LBB2174:
 4114              	.LBI2174:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4115              		.loc 10 150 14 is_stmt 1 view .LVU1074
 4116              	.LBB2175:
 4117              	.LBI2175:
 4118              		.loc 11 153 7 view .LVU1075
 4119              	.LBB2176:
 4120              	.LBI2176:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4121              		.loc 12 89 7 view .LVU1076
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4122              		.loc 12 89 7 is_stmt 0 view .LVU1077
 4123              	.LBE2176:
 4124              	.LBE2175:
 4125              	.LBE2174:
 4126              	.LBE2162:
  95:Includes/findwayBases.hpp ****         str += ", ";
 4127              		.loc 15 95 9 is_stmt 1 view .LVU1078
 4128              	.LBB2177:
 4129              	.LBI2177:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4130              		.loc 10 1177 7 view .LVU1079
 4131              	.LBB2178:
 4132              	.LBI2178:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4133              		.loc 10 1263 7 view .LVU1080
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4134              		.loc 10 1263 7 is_stmt 0 view .LVU1081
 4135              	.LBE2178:
 4136              	.LBE2177:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4137              		.loc 4 335 2 is_stmt 1 view .LVU1082
 4138              	.LBB2186:
 4139              	.LBB2185:
 4140              	.LBB2179:
 4141              	.LBB2180:
 4142              	.LBI2180:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4143              		.loc 10 320 7 view .LVU1083
 4144              	.LBB2181:
 4145              	.LBB2182:
 4146              	.LBI2182:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4147              		.loc 10 930 7 view .LVU1084
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4148              		.loc 10 930 7 is_stmt 0 view .LVU1085
 4149              	.LBE2182:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4150              		.loc 10 322 2 view .LVU1086
 4151 00b9 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4151      FFFFFFFF 
GAS LISTING /tmp/ccvlKtfa.s 			page 291


 4151      FF3F
 4152 00c3 482B4308 		subq	8(%rbx), %rax
 4153 00c7 4883F801 		cmpq	$1, %rax
 4154 00cb 7616     		jbe	.L214
 4155              	.LVL350:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4156              		.loc 10 322 2 view .LVU1087
 4157              	.LBE2181:
 4158              	.LBE2180:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4159              		.loc 10 1268 27 view .LVU1088
 4160 00cd BA020000 		movl	$2, %edx
 4160      00
 4161 00d2 488D3500 		leaq	.LC26(%rip), %rsi
 4161      000000
 4162 00d9 4889DF   		movq	%rbx, %rdi
 4163              	.LEHB12:
 4164 00dc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4164      00
 4165              	.LVL351:
 4166 00e1 EB0C     		jmp	.L215
 4167              	.LVL352:
 4168              	.L214:
 4169              	.LBB2184:
 4170              	.LBB2183:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4171              		.loc 10 323 24 view .LVU1089
 4172 00e3 488D3D00 		leaq	.LC23(%rip), %rdi
 4172      000000
 4173 00ea E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4173      00
 4174              	.LVL353:
 4175              	.L215:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4176              		.loc 10 323 24 view .LVU1090
 4177              	.LBE2183:
 4178              	.LBE2184:
 4179              	.LBE2179:
 4180              	.LBE2185:
 4181              	.LBE2186:
  96:Includes/findwayBases.hpp ****         str += std::to_string(dy);
 4182              		.loc 15 96 9 is_stmt 1 view .LVU1091
 4183              	.LBB2187:
 4184              	.LBI2187:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 4185              		.loc 10 6580 3 view .LVU1092
 4186              	.LBB2188:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 4187              		.loc 10 6582 5 view .LVU1093
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 4188              		.loc 10 6584 5 view .LVU1094
 4189              		.loc 10 6585 20 is_stmt 0 view .LVU1095
 4190 00ef 4889E7   		movq	%rsp, %rdi
 4191 00f2 660FEFC0 		pxor	%xmm0, %xmm0
 4192 00f6 F30F5A45 		cvtss2sd	12(%rbp), %xmm0
 4192      0C
 4193 00fb 488D0D00 		leaq	.LC25(%rip), %rcx
GAS LISTING /tmp/ccvlKtfa.s 			page 292


 4193      000000
 4194 0102 BA3A0000 		movl	$58, %edx
 4194      00
 4195 0107 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 4195      000000
 4196 010e B8010000 		movl	$1, %eax
 4196      00
 4197 0113 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 4197      00
 4198              	.LVL354:
 4199              	.LEHE12:
 4200              		.loc 10 6585 20 view .LVU1096
 4201              	.LBE2188:
 4202              	.LBE2187:
 4203              	.LBB2189:
 4204              	.LBI2189:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 4205              		.loc 10 1168 7 is_stmt 1 view .LVU1097
 4206              	.LBB2190:
 4207              	.LBI2190:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4208              		.loc 10 1221 7 view .LVU1098
 4209              	.LBB2191:
 4210              	.LBB2192:
 4211              	.LBI2192:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4212              		.loc 10 930 7 view .LVU1099
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4213              		.loc 10 930 7 is_stmt 0 view .LVU1100
 4214              	.LBE2192:
 4215              	.LBB2193:
 4216              	.LBI2193:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4217              		.loc 10 186 7 is_stmt 1 view .LVU1101
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4218              		.loc 10 186 7 is_stmt 0 view .LVU1102
 4219              	.LBE2193:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4220              		.loc 10 1222 55 view .LVU1103
 4221 0118 488B5424 		movq	8(%rsp), %rdx
 4221      08
 4222 011d 488B3424 		movq	(%rsp), %rsi
 4223 0121 4889DF   		movq	%rbx, %rdi
 4224              	.LEHB13:
 4225 0124 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4225      00
 4226              	.LVL355:
 4227              	.LEHE13:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4228              		.loc 10 1222 55 view .LVU1104
 4229              	.LBE2191:
 4230              	.LBE2190:
 4231              	.LBE2189:
 4232              	.LBB2194:
 4233              	.LBI2194:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4234              		.loc 10 657 7 is_stmt 1 view .LVU1105
GAS LISTING /tmp/ccvlKtfa.s 			page 293


 4235              	.LBB2195:
 4236              	.LBI2195:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4237              		.loc 10 229 7 view .LVU1106
 4238              	.LBB2196:
 4239              	.LBB2197:
 4240              	.LBI2197:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4241              		.loc 10 221 7 view .LVU1107
 4242              	.LBB2198:
 4243              	.LBI2198:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4244              		.loc 10 186 7 view .LVU1108
 4245              	.LBB2199:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4246              		.loc 10 187 28 is_stmt 0 view .LVU1109
 4247 0129 488B3C24 		movq	(%rsp), %rdi
 4248              	.LVL356:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4249              		.loc 10 187 28 view .LVU1110
 4250              	.LBE2199:
 4251              	.LBE2198:
 4252              	.LBB2200:
 4253              	.LBI2200:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4254              		.loc 10 200 7 is_stmt 1 view .LVU1111
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4255              		.loc 10 200 7 is_stmt 0 view .LVU1112
 4256              	.LBE2200:
 4257              	.LBE2197:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4258              		.loc 10 231 2 view .LVU1113
 4259 012d 488D4424 		leaq	16(%rsp), %rax
 4259      10
 4260 0132 4839C7   		cmpq	%rax, %rdi
 4261 0135 7405     		je	.L198
 4262              	.LVL357:
 4263              	.LBB2201:
 4264              	.LBI2201:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4265              		.loc 10 236 7 is_stmt 1 view .LVU1114
 4266              	.LBB2202:
 4267              	.LBB2203:
 4268              	.LBI2203:
 4269              		.loc 13 469 7 view .LVU1115
 4270              	.LBB2204:
 4271              	.LBI2204:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4272              		.loc 12 119 7 view .LVU1116
 4273              	.LBB2205:
 4274              		.loc 12 128 19 is_stmt 0 view .LVU1117
 4275 0137 E8000000 		call	_ZdlPv@PLT
 4275      00
 4276              	.LVL358:
 4277              	.L198:
 4278              		.loc 12 128 19 view .LVU1118
 4279              	.LBE2205:
GAS LISTING /tmp/ccvlKtfa.s 			page 294


 4280              	.LBE2204:
 4281              	.LBE2203:
 4282              	.LBE2202:
 4283              	.LBE2201:
 4284              	.LBE2196:
 4285              	.LBE2195:
 4286              	.LBB2206:
 4287              	.LBI2206:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4288              		.loc 10 150 14 is_stmt 1 view .LVU1119
 4289              	.LBB2207:
 4290              	.LBI2207:
 4291              		.loc 11 153 7 view .LVU1120
 4292              	.LBB2208:
 4293              	.LBI2208:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4294              		.loc 12 89 7 view .LVU1121
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4295              		.loc 12 89 7 is_stmt 0 view .LVU1122
 4296              	.LBE2208:
 4297              	.LBE2207:
 4298              	.LBE2206:
 4299              	.LBE2194:
  97:Includes/findwayBases.hpp ****         str += "}";
 4300              		.loc 15 97 9 is_stmt 1 view .LVU1123
 4301              	.LBB2209:
 4302              	.LBI2209:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4303              		.loc 10 1177 7 view .LVU1124
 4304              	.LBB2210:
 4305              	.LBI2210:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4306              		.loc 10 1263 7 view .LVU1125
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4307              		.loc 10 1263 7 is_stmt 0 view .LVU1126
 4308              	.LBE2210:
 4309              	.LBE2209:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4310              		.loc 4 335 2 is_stmt 1 view .LVU1127
 4311              	.LBB2218:
 4312              	.LBB2217:
 4313              	.LBB2211:
 4314              	.LBB2212:
 4315              	.LBI2212:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4316              		.loc 10 320 7 view .LVU1128
 4317              	.LBB2213:
 4318              	.LBB2214:
 4319              	.LBI2214:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4320              		.loc 10 930 7 view .LVU1129
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4321              		.loc 10 930 7 is_stmt 0 view .LVU1130
 4322              	.LBE2214:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4323              		.loc 10 322 2 view .LVU1131
 4324 013c 48B8FFFF 		movabsq	$4611686018427387903, %rax
GAS LISTING /tmp/ccvlKtfa.s 			page 295


 4324      FFFFFFFF 
 4324      FF3F
 4325 0146 48394308 		cmpq	%rax, 8(%rbx)
 4326 014a 7416     		je	.L216
 4327              	.LVL359:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4328              		.loc 10 322 2 view .LVU1132
 4329              	.LBE2213:
 4330              	.LBE2212:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4331              		.loc 10 1268 27 view .LVU1133
 4332 014c BA010000 		movl	$1, %edx
 4332      00
 4333 0151 488D3500 		leaq	.LC27(%rip), %rsi
 4333      000000
 4334 0158 4889DF   		movq	%rbx, %rdi
 4335              	.LEHB14:
 4336 015b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4336      00
 4337              	.LVL360:
 4338 0160 EB53     		jmp	.L217
 4339              	.LVL361:
 4340              	.L216:
 4341              	.LBB2216:
 4342              	.LBB2215:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4343              		.loc 10 323 24 view .LVU1134
 4344 0162 488D3D00 		leaq	.LC23(%rip), %rdi
 4344      000000
 4345 0169 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4345      00
 4346              	.LVL362:
 4347              	.LEHE14:
 4348              	.L208:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4349              		.loc 10 323 24 view .LVU1135
 4350 016e 4889C5   		movq	%rax, %rbp
 4351              	.LVL363:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4352              		.loc 10 323 24 view .LVU1136
 4353              	.LBE2215:
 4354              	.LBE2216:
 4355              	.LBE2211:
 4356              	.LBE2217:
 4357              	.LBE2218:
 4358              	.LBB2219:
 4359              	.LBI2219:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4360              		.loc 10 657 7 is_stmt 1 view .LVU1137
 4361              	.LBB2220:
 4362              	.LBI2220:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4363              		.loc 10 229 7 view .LVU1138
 4364              	.LBB2221:
 4365              	.LBB2222:
 4366              	.LBI2222:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
GAS LISTING /tmp/ccvlKtfa.s 			page 296


 4367              		.loc 10 221 7 view .LVU1139
 4368              	.LBB2223:
 4369              	.LBI2223:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4370              		.loc 10 186 7 view .LVU1140
 4371              	.LBB2224:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4372              		.loc 10 187 28 is_stmt 0 view .LVU1141
 4373 0171 488B3C24 		movq	(%rsp), %rdi
 4374              	.LVL364:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4375              		.loc 10 187 28 view .LVU1142
 4376              	.LBE2224:
 4377              	.LBE2223:
 4378              	.LBB2225:
 4379              	.LBI2225:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4380              		.loc 10 200 7 is_stmt 1 view .LVU1143
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4381              		.loc 10 200 7 is_stmt 0 view .LVU1144
 4382              	.LBE2225:
 4383              	.LBE2222:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4384              		.loc 10 231 2 view .LVU1145
 4385 0175 488D4424 		leaq	16(%rsp), %rax
 4385      10
 4386 017a 4839C7   		cmpq	%rax, %rdi
 4387 017d 7405     		je	.L202
 4388              	.LVL365:
 4389              	.LBB2226:
 4390              	.LBI2226:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4391              		.loc 10 236 7 is_stmt 1 view .LVU1146
 4392              	.LBB2227:
 4393              	.LBB2228:
 4394              	.LBI2228:
 4395              		.loc 13 469 7 view .LVU1147
 4396              	.LBB2229:
 4397              	.LBI2229:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4398              		.loc 12 119 7 view .LVU1148
 4399              	.LBB2230:
 4400              		.loc 12 128 19 is_stmt 0 view .LVU1149
 4401 017f E8000000 		call	_ZdlPv@PLT
 4401      00
 4402              	.LVL366:
 4403              		.loc 12 128 19 view .LVU1150
 4404              	.LBE2230:
 4405              	.LBE2229:
 4406              	.LBE2228:
 4407              	.LBE2227:
 4408              	.LBE2226:
 4409              	.LBE2221:
 4410              	.LBE2220:
 4411              	.LBB2231:
 4412              	.LBI2231:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 297


 4413              		.loc 10 150 14 is_stmt 1 view .LVU1151
 4414              	.LBB2232:
 4415              	.LBI2232:
 4416              		.loc 11 153 7 view .LVU1152
 4417              	.LBB2233:
 4418              	.LBI2233:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4419              		.loc 12 89 7 view .LVU1153
 4420              	.L202:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4421              		.loc 12 89 7 is_stmt 0 view .LVU1154
 4422              	.LBE2233:
 4423              	.LBE2232:
 4424              	.LBE2231:
 4425              	.LBE2219:
 4426              	.LBB2234:
 4427              	.LBI2234:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4428              		.loc 10 657 7 is_stmt 1 view .LVU1155
 4429              	.LBB2235:
 4430              	.LBI2235:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4431              		.loc 10 229 7 view .LVU1156
 4432              	.LBB2236:
 4433              	.LBB2237:
 4434              	.LBI2237:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4435              		.loc 10 221 7 view .LVU1157
 4436              	.LBB2238:
 4437              	.LBI2238:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4438              		.loc 10 186 7 view .LVU1158
 4439              	.LBB2239:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4440              		.loc 10 187 28 is_stmt 0 view .LVU1159
 4441 0184 488B3B   		movq	(%rbx), %rdi
 4442              	.LVL367:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4443              		.loc 10 187 28 view .LVU1160
 4444              	.LBE2239:
 4445              	.LBE2238:
 4446              	.LBB2240:
 4447              	.LBI2240:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4448              		.loc 10 200 7 is_stmt 1 view .LVU1161
 4449              	.LBB2241:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4450              		.loc 10 203 57 is_stmt 0 view .LVU1162
 4451 0187 4883C310 		addq	$16, %rbx
 4452              	.LVL368:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4453              		.loc 10 203 57 view .LVU1163
 4454              	.LBE2241:
 4455              	.LBE2240:
 4456              	.LBE2237:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4457              		.loc 10 231 2 view .LVU1164
GAS LISTING /tmp/ccvlKtfa.s 			page 298


 4458 018b 4839DF   		cmpq	%rbx, %rdi
 4459 018e 7405     		je	.L205
 4460              	.LVL369:
 4461              	.LBB2242:
 4462              	.LBI2242:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4463              		.loc 10 236 7 is_stmt 1 view .LVU1165
 4464              	.LBB2243:
 4465              	.LBB2244:
 4466              	.LBI2244:
 4467              		.loc 13 469 7 view .LVU1166
 4468              	.LBB2245:
 4469              	.LBI2245:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4470              		.loc 12 119 7 view .LVU1167
 4471              	.LBB2246:
 4472              		.loc 12 128 19 is_stmt 0 view .LVU1168
 4473 0190 E8000000 		call	_ZdlPv@PLT
 4473      00
 4474              	.LVL370:
 4475              	.L205:
 4476              		.loc 12 128 19 view .LVU1169
 4477              	.LBE2246:
 4478              	.LBE2245:
 4479              	.LBE2244:
 4480              	.LBE2243:
 4481              	.LBE2242:
 4482              	.LBE2236:
 4483              	.LBE2235:
 4484              	.LBB2247:
 4485              	.LBI2247:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4486              		.loc 10 150 14 is_stmt 1 view .LVU1170
 4487              	.LBB2248:
 4488              	.LBI2248:
 4489              		.loc 11 153 7 view .LVU1171
 4490              	.LBB2249:
 4491              	.LBI2249:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4492              		.loc 12 89 7 view .LVU1172
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4493              		.loc 12 89 7 is_stmt 0 view .LVU1173
 4494 0195 4889EF   		movq	%rbp, %rdi
 4495              	.LEHB15:
 4496 0198 E8000000 		call	_Unwind_Resume@PLT
 4496      00
 4497              	.LVL371:
 4498              	.LEHE15:
 4499              	.L209:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4500              		.loc 12 89 7 view .LVU1174
 4501 019d 4889C5   		movq	%rax, %rbp
 4502              	.LVL372:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4503              		.loc 12 89 7 view .LVU1175
 4504              	.LBE2249:
 4505              	.LBE2248:
GAS LISTING /tmp/ccvlKtfa.s 			page 299


 4506              	.LBE2247:
 4507              	.LBE2234:
 4508              	.LBB2250:
 4509              	.LBI2250:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4510              		.loc 10 657 7 is_stmt 1 view .LVU1176
 4511              	.LBB2251:
 4512              	.LBI2251:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4513              		.loc 10 229 7 view .LVU1177
 4514              	.LBB2252:
 4515              	.LBB2253:
 4516              	.LBI2253:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4517              		.loc 10 221 7 view .LVU1178
 4518              	.LBB2254:
 4519              	.LBI2254:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4520              		.loc 10 186 7 view .LVU1179
 4521              	.LBB2255:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4522              		.loc 10 187 28 is_stmt 0 view .LVU1180
 4523 01a0 488B3C24 		movq	(%rsp), %rdi
 4524              	.LVL373:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4525              		.loc 10 187 28 view .LVU1181
 4526              	.LBE2255:
 4527              	.LBE2254:
 4528              	.LBB2256:
 4529              	.LBI2256:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4530              		.loc 10 200 7 is_stmt 1 view .LVU1182
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4531              		.loc 10 200 7 is_stmt 0 view .LVU1183
 4532              	.LBE2256:
 4533              	.LBE2253:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4534              		.loc 10 231 2 view .LVU1184
 4535 01a4 488D4424 		leaq	16(%rsp), %rax
 4535      10
 4536 01a9 4839C7   		cmpq	%rax, %rdi
 4537 01ac 74D6     		je	.L202
 4538              	.LVL374:
 4539              	.LBB2257:
 4540              	.LBI2257:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4541              		.loc 10 236 7 is_stmt 1 view .LVU1185
 4542              	.LBB2258:
 4543              	.LBB2259:
 4544              	.LBI2259:
 4545              		.loc 13 469 7 view .LVU1186
 4546              	.LBB2260:
 4547              	.LBI2260:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4548              		.loc 12 119 7 view .LVU1187
 4549              	.LBB2261:
 4550              		.loc 12 128 19 is_stmt 0 view .LVU1188
GAS LISTING /tmp/ccvlKtfa.s 			page 300


 4551 01ae E8000000 		call	_ZdlPv@PLT
 4551      00
 4552              	.LVL375:
 4553              		.loc 12 128 19 view .LVU1189
 4554              	.LBE2261:
 4555              	.LBE2260:
 4556              	.LBE2259:
 4557              	.LBE2258:
 4558              	.LBE2257:
 4559              	.LBE2252:
 4560              	.LBE2251:
 4561              	.LBB2265:
 4562              	.LBI2265:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4563              		.loc 10 150 14 is_stmt 1 view .LVU1190
 4564              	.LBB2266:
 4565              	.LBI2266:
 4566              		.loc 11 153 7 view .LVU1191
 4567              	.LBB2267:
 4568              	.LBI2267:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4569              		.loc 12 89 7 view .LVU1192
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4570              		.loc 12 89 7 is_stmt 0 view .LVU1193
 4571              	.LBE2267:
 4572              	.LBE2266:
 4573              	.LBE2265:
 4574              	.LBB2268:
 4575              	.LBB2264:
 4576              	.LBB2263:
 4577              	.LBB2262:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4578              		.loc 10 237 79 view .LVU1194
 4579 01b3 EBCF     		jmp	.L202
 4580              	.LVL376:
 4581              	.L217:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4582              		.loc 10 237 79 view .LVU1195
 4583              	.LBE2262:
 4584              	.LBE2263:
 4585              	.LBE2264:
 4586              	.LBE2268:
 4587              	.LBE2250:
  98:Includes/findwayBases.hpp ****         return str;
  99:Includes/findwayBases.hpp ****     }
 4588              		.loc 15 99 5 view .LVU1196
 4589 01b5 488B4424 		movq	40(%rsp), %rax
 4589      28
 4590 01ba 64483304 		xorq	%fs:40, %rax
 4590      25280000 
 4590      00
 4591 01c3 750A     		jne	.L218
 4592 01c5 4889D8   		movq	%rbx, %rax
 4593 01c8 4883C438 		addq	$56, %rsp
 4594              		.cfi_remember_state
 4595              		.cfi_def_cfa_offset 24
 4596 01cc 5B       		popq	%rbx
GAS LISTING /tmp/ccvlKtfa.s 			page 301


 4597              		.cfi_def_cfa_offset 16
 4598              	.LVL377:
 4599              		.loc 15 99 5 view .LVU1197
 4600 01cd 5D       		popq	%rbp
 4601              		.cfi_def_cfa_offset 8
 4602              	.LVL378:
 4603              		.loc 15 99 5 view .LVU1198
 4604 01ce C3       		ret
 4605              	.LVL379:
 4606              	.L218:
 4607              		.cfi_restore_state
 4608              		.loc 15 99 5 view .LVU1199
 4609 01cf E8000000 		call	__stack_chk_fail@PLT
 4609      00
 4610              	.LVL380:
 4611              		.cfi_endproc
 4612              	.LFE2474:
 4613              		.section	.gcc_except_table
 4614              	.LLSDA2474:
 4615 0034 FF       		.byte	0xff
 4616 0035 FF       		.byte	0xff
 4617 0036 01       		.byte	0x1
 4618 0037 23       		.uleb128 .LLSDACSE2474-.LLSDACSB2474
 4619              	.LLSDACSB2474:
 4620 0038 2D       		.uleb128 .LEHB9-.LFB2474
 4621 0039 05       		.uleb128 .LEHE9-.LEHB9
 4622 003a 00       		.uleb128 0
 4623 003b 00       		.uleb128 0
 4624 003c 51       		.uleb128 .LEHB10-.LFB2474
 4625 003d 44       		.uleb128 .LEHE10-.LEHB10
 4626 003e 64       		.uleb128 .L207-.LFB2474
 4627 003f 00       		.uleb128 0
 4628 0040 A101     		.uleb128 .LEHB11-.LFB2474
 4629 0042 05       		.uleb128 .LEHE11-.LEHB11
 4630 0043 EE02     		.uleb128 .L208-.LFB2474
 4631 0045 00       		.uleb128 0
 4632 0046 DC01     		.uleb128 .LEHB12-.LFB2474
 4633 0048 3C       		.uleb128 .LEHE12-.LEHB12
 4634 0049 64       		.uleb128 .L207-.LFB2474
 4635 004a 00       		.uleb128 0
 4636 004b A402     		.uleb128 .LEHB13-.LFB2474
 4637 004d 05       		.uleb128 .LEHE13-.LEHB13
 4638 004e 9D03     		.uleb128 .L209-.LFB2474
 4639 0050 00       		.uleb128 0
 4640 0051 DB02     		.uleb128 .LEHB14-.LFB2474
 4641 0053 13       		.uleb128 .LEHE14-.LEHB14
 4642 0054 64       		.uleb128 .L207-.LFB2474
 4643 0055 00       		.uleb128 0
 4644 0056 9803     		.uleb128 .LEHB15-.LFB2474
 4645 0058 05       		.uleb128 .LEHE15-.LEHB15
 4646 0059 00       		.uleb128 0
 4647 005a 00       		.uleb128 0
 4648              	.LLSDACSE2474:
 4649              		.section	.text._ZN4vect8toStringB5cxx11Ev,"axG",@progbits,_ZN4vect8toStringB5cxx11Ev,comdat
 4651              		.section	.text._ZN6coords8toStringB5cxx11Ev,"axG",@progbits,_ZN6coords8toStringB5cxx11Ev,comdat
 4652              		.align 2
 4653              		.weak	_ZN6coords8toStringB5cxx11Ev
GAS LISTING /tmp/ccvlKtfa.s 			page 302


 4655              	_ZN6coords8toStringB5cxx11Ev:
 4656              	.LVL381:
 4657              	.LFB2470:
  16:Includes/findwayBases.hpp ****     {
 4658              		.loc 15 16 17 is_stmt 1 view -0
 4659              		.cfi_startproc
 4660              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4661              		.cfi_lsda 0x1b,.LLSDA2470
  16:Includes/findwayBases.hpp ****     {
 4662              		.loc 15 16 17 is_stmt 0 view .LVU1201
 4663 0000 55       		pushq	%rbp
 4664              		.cfi_def_cfa_offset 16
 4665              		.cfi_offset 6, -16
 4666 0001 53       		pushq	%rbx
 4667              		.cfi_def_cfa_offset 24
 4668              		.cfi_offset 3, -24
 4669 0002 4883EC38 		subq	$56, %rsp
 4670              		.cfi_def_cfa_offset 80
 4671 0006 4889FB   		movq	%rdi, %rbx
 4672 0009 4889F5   		movq	%rsi, %rbp
  16:Includes/findwayBases.hpp ****     {
 4673              		.loc 15 16 17 view .LVU1202
 4674 000c 64488B04 		movq	%fs:40, %rax
 4674      25280000 
 4674      00
 4675 0015 48894424 		movq	%rax, 40(%rsp)
 4675      28
 4676 001a 31C0     		xorl	%eax, %eax
  18:Includes/findwayBases.hpp ****         str += "{";
 4677              		.loc 15 18 9 is_stmt 1 view .LVU1203
 4678              	.LVL382:
 4679              	.LBB2418:
 4680              	.LBI2418:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 4681              		.loc 11 138 7 view .LVU1204
 4682              	.LBB2419:
 4683              	.LBI2419:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4684              		.loc 12 80 7 view .LVU1205
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4685              		.loc 12 80 7 is_stmt 0 view .LVU1206
 4686              	.LBE2419:
 4687              	.LBE2418:
 4688              	.LBB2420:
 4689              	.LBI2420:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 4690              		.loc 10 525 7 is_stmt 1 view .LVU1207
 4691              	.LBB2421:
 4692              	.LBI2421:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4693              		.loc 10 190 7 view .LVU1208
 4694              	.LBB2422:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4695              		.loc 10 193 51 is_stmt 0 view .LVU1209
 4696 001c 488D4710 		leaq	16(%rdi), %rax
 4697              	.LVL383:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
GAS LISTING /tmp/ccvlKtfa.s 			page 303


 4698              		.loc 10 193 51 view .LVU1210
 4699              	.LBE2422:
 4700              	.LBE2421:
 4701              	.LBB2423:
 4702              	.LBI2423:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4703              		.loc 10 156 2 is_stmt 1 view .LVU1211
 4704              	.LBB2424:
 4705              	.LBB2425:
 4706              	.LBI2425:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4707              		.loc 11 141 7 view .LVU1212
 4708              	.LBB2426:
 4709              	.LBI2426:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4710              		.loc 12 83 7 view .LVU1213
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4711              		.loc 12 83 7 is_stmt 0 view .LVU1214
 4712              	.LBE2426:
 4713              	.LBE2425:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4714              		.loc 10 157 35 view .LVU1215
 4715 0020 488907   		movq	%rax, (%rdi)
 4716              	.LVL384:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4717              		.loc 10 157 35 view .LVU1216
 4718              	.LBE2424:
 4719              	.LBE2423:
 4720              	.LBB2427:
 4721              	.LBI2427:
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 4722              		.loc 4 329 7 is_stmt 1 view .LVU1217
 4723              	.LBE2427:
 4724              	.LBE2420:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4725              		.loc 4 335 2 view .LVU1218
 4726              	.LBB2432:
 4727              	.LBB2428:
 4728              	.LBI2428:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 4729              		.loc 10 263 9 view .LVU1219
 4730              	.LBB2429:
 4731              	.LBB2430:
 4732              	.LBI2430:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 4733              		.loc 10 243 9 view .LVU1220
 4734              	.LBB2431:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4735              		.loc 10 247 11 is_stmt 0 view .LVU1221
 4736 0023 488D1500 		leaq	.LC22(%rip), %rdx
 4736      000000
 4737 002a 4889D6   		movq	%rdx, %rsi
 4738              	.LVL385:
 4739              	.LEHB16:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4740              		.loc 10 247 11 view .LVU1222
 4741 002d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
GAS LISTING /tmp/ccvlKtfa.s 			page 304


 4741      00
 4742              	.LVL386:
 4743              	.LEHE16:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4744              		.loc 10 247 11 view .LVU1223
 4745              	.LBE2431:
 4746              	.LBE2430:
 4747              	.LBE2429:
 4748              	.LBE2428:
 4749              	.LBE2432:
 4750              	.LBB2433:
 4751              	.LBI2433:
 4752              		.loc 11 153 7 is_stmt 1 view .LVU1224
 4753              	.LBB2434:
 4754              	.LBI2434:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4755              		.loc 12 89 7 view .LVU1225
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4756              		.loc 12 89 7 is_stmt 0 view .LVU1226
 4757              	.LBE2434:
 4758              	.LBE2433:
  19:Includes/findwayBases.hpp ****         str += std::to_string(x);
 4759              		.loc 15 19 9 is_stmt 1 view .LVU1227
 4760              	.LBB2435:
 4761              	.LBI2435:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4762              		.loc 10 1177 7 view .LVU1228
 4763              	.LBB2436:
 4764              	.LBI2436:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4765              		.loc 10 1263 7 view .LVU1229
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4766              		.loc 10 1263 7 is_stmt 0 view .LVU1230
 4767              	.LBE2436:
 4768              	.LBE2435:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4769              		.loc 4 335 2 is_stmt 1 view .LVU1231
 4770              	.LBB2444:
 4771              	.LBB2443:
 4772              	.LBB2437:
 4773              	.LBB2438:
 4774              	.LBI2438:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4775              		.loc 10 320 7 view .LVU1232
 4776              	.LBB2439:
 4777              	.LBB2440:
 4778              	.LBI2440:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4779              		.loc 10 930 7 view .LVU1233
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4780              		.loc 10 930 7 is_stmt 0 view .LVU1234
 4781              	.LBE2440:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4782              		.loc 10 322 2 view .LVU1235
 4783 0032 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4783      FFFFFFFF 
 4783      FF3F
GAS LISTING /tmp/ccvlKtfa.s 			page 305


 4784 003c 48394308 		cmpq	%rax, 8(%rbx)
 4785 0040 7416     		je	.L237
 4786              	.LVL387:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4787              		.loc 10 322 2 view .LVU1236
 4788              	.LBE2439:
 4789              	.LBE2438:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4790              		.loc 10 1268 27 view .LVU1237
 4791 0042 BA010000 		movl	$1, %edx
 4791      00
 4792 0047 488D3500 		leaq	.LC24(%rip), %rsi
 4792      000000
 4793 004e 4889DF   		movq	%rbx, %rdi
 4794              	.LEHB17:
 4795 0051 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4795      00
 4796              	.LVL388:
 4797 0056 EB14     		jmp	.L238
 4798              	.LVL389:
 4799              	.L237:
 4800              	.LBB2442:
 4801              	.LBB2441:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4802              		.loc 10 323 24 view .LVU1238
 4803 0058 488D3D00 		leaq	.LC23(%rip), %rdi
 4803      000000
 4804 005f E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4804      00
 4805              	.LVL390:
 4806              	.L232:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4807              		.loc 10 323 24 view .LVU1239
 4808 0064 4889C5   		movq	%rax, %rbp
 4809              	.LVL391:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4810              		.loc 10 323 24 view .LVU1240
 4811 0067 E9180100 		jmp	.L227
 4811      00
 4812              	.LVL392:
 4813              	.L238:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4814              		.loc 10 323 24 view .LVU1241
 4815              	.LBE2441:
 4816              	.LBE2442:
 4817              	.LBE2437:
 4818              	.LBE2443:
 4819              	.LBE2444:
  20:Includes/findwayBases.hpp ****         str += ", ";
 4820              		.loc 15 20 9 is_stmt 1 view .LVU1242
 4821              	.LBB2445:
 4822              	.LBI2445:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 4823              		.loc 10 6580 3 view .LVU1243
 4824              	.LBB2446:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 4825              		.loc 10 6582 5 view .LVU1244
GAS LISTING /tmp/ccvlKtfa.s 			page 306


6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 4826              		.loc 10 6584 5 view .LVU1245
 4827              		.loc 10 6585 20 is_stmt 0 view .LVU1246
 4828 006c 4889E7   		movq	%rsp, %rdi
 4829 006f 660FEFC0 		pxor	%xmm0, %xmm0
 4830 0073 F30F5A45 		cvtss2sd	0(%rbp), %xmm0
 4830      00
 4831 0078 488D0D00 		leaq	.LC25(%rip), %rcx
 4831      000000
 4832 007f BA3A0000 		movl	$58, %edx
 4832      00
 4833 0084 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 4833      000000
 4834 008b B8010000 		movl	$1, %eax
 4834      00
 4835 0090 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 4835      00
 4836              	.LVL393:
 4837              	.LEHE17:
 4838              		.loc 10 6585 20 view .LVU1247
 4839              	.LBE2446:
 4840              	.LBE2445:
 4841              	.LBB2447:
 4842              	.LBI2447:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 4843              		.loc 10 1168 7 is_stmt 1 view .LVU1248
 4844              	.LBB2448:
 4845              	.LBI2448:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4846              		.loc 10 1221 7 view .LVU1249
 4847              	.LBB2449:
 4848              	.LBB2450:
 4849              	.LBI2450:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4850              		.loc 10 930 7 view .LVU1250
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4851              		.loc 10 930 7 is_stmt 0 view .LVU1251
 4852              	.LBE2450:
 4853              	.LBB2451:
 4854              	.LBI2451:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4855              		.loc 10 186 7 is_stmt 1 view .LVU1252
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4856              		.loc 10 186 7 is_stmt 0 view .LVU1253
 4857              	.LBE2451:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4858              		.loc 10 1222 55 view .LVU1254
 4859 0095 488B5424 		movq	8(%rsp), %rdx
 4859      08
 4860 009a 488B3424 		movq	(%rsp), %rsi
 4861 009e 4889DF   		movq	%rbx, %rdi
 4862              	.LEHB18:
 4863 00a1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4863      00
 4864              	.LVL394:
 4865              	.LEHE18:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 307


 4866              		.loc 10 1222 55 view .LVU1255
 4867              	.LBE2449:
 4868              	.LBE2448:
 4869              	.LBE2447:
 4870              	.LBB2452:
 4871              	.LBI2452:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4872              		.loc 10 657 7 is_stmt 1 view .LVU1256
 4873              	.LBB2453:
 4874              	.LBI2453:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4875              		.loc 10 229 7 view .LVU1257
 4876              	.LBB2454:
 4877              	.LBB2455:
 4878              	.LBI2455:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4879              		.loc 10 221 7 view .LVU1258
 4880              	.LBB2456:
 4881              	.LBI2456:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4882              		.loc 10 186 7 view .LVU1259
 4883              	.LBB2457:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4884              		.loc 10 187 28 is_stmt 0 view .LVU1260
 4885 00a6 488B3C24 		movq	(%rsp), %rdi
 4886              	.LVL395:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4887              		.loc 10 187 28 view .LVU1261
 4888              	.LBE2457:
 4889              	.LBE2456:
 4890              	.LBB2458:
 4891              	.LBI2458:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4892              		.loc 10 200 7 is_stmt 1 view .LVU1262
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4893              		.loc 10 200 7 is_stmt 0 view .LVU1263
 4894              	.LBE2458:
 4895              	.LBE2455:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4896              		.loc 10 231 2 view .LVU1264
 4897 00aa 488D4424 		leaq	16(%rsp), %rax
 4897      10
 4898 00af 4839C7   		cmpq	%rax, %rdi
 4899 00b2 7405     		je	.L221
 4900              	.LVL396:
 4901              	.LBB2459:
 4902              	.LBI2459:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4903              		.loc 10 236 7 is_stmt 1 view .LVU1265
 4904              	.LBB2460:
 4905              	.LBB2461:
 4906              	.LBI2461:
 4907              		.loc 13 469 7 view .LVU1266
 4908              	.LBB2462:
 4909              	.LBI2462:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4910              		.loc 12 119 7 view .LVU1267
GAS LISTING /tmp/ccvlKtfa.s 			page 308


 4911              	.LBB2463:
 4912              		.loc 12 128 19 is_stmt 0 view .LVU1268
 4913 00b4 E8000000 		call	_ZdlPv@PLT
 4913      00
 4914              	.LVL397:
 4915              	.L221:
 4916              		.loc 12 128 19 view .LVU1269
 4917              	.LBE2463:
 4918              	.LBE2462:
 4919              	.LBE2461:
 4920              	.LBE2460:
 4921              	.LBE2459:
 4922              	.LBE2454:
 4923              	.LBE2453:
 4924              	.LBB2464:
 4925              	.LBI2464:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4926              		.loc 10 150 14 is_stmt 1 view .LVU1270
 4927              	.LBB2465:
 4928              	.LBI2465:
 4929              		.loc 11 153 7 view .LVU1271
 4930              	.LBB2466:
 4931              	.LBI2466:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4932              		.loc 12 89 7 view .LVU1272
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4933              		.loc 12 89 7 is_stmt 0 view .LVU1273
 4934              	.LBE2466:
 4935              	.LBE2465:
 4936              	.LBE2464:
 4937              	.LBE2452:
  21:Includes/findwayBases.hpp ****         str += std::to_string(y);
 4938              		.loc 15 21 9 is_stmt 1 view .LVU1274
 4939              	.LBB2467:
 4940              	.LBI2467:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4941              		.loc 10 1177 7 view .LVU1275
 4942              	.LBB2468:
 4943              	.LBI2468:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4944              		.loc 10 1263 7 view .LVU1276
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4945              		.loc 10 1263 7 is_stmt 0 view .LVU1277
 4946              	.LBE2468:
 4947              	.LBE2467:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4948              		.loc 4 335 2 is_stmt 1 view .LVU1278
 4949              	.LBB2476:
 4950              	.LBB2475:
 4951              	.LBB2469:
 4952              	.LBB2470:
 4953              	.LBI2470:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4954              		.loc 10 320 7 view .LVU1279
 4955              	.LBB2471:
 4956              	.LBB2472:
 4957              	.LBI2472:
GAS LISTING /tmp/ccvlKtfa.s 			page 309


 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4958              		.loc 10 930 7 view .LVU1280
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4959              		.loc 10 930 7 is_stmt 0 view .LVU1281
 4960              	.LBE2472:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4961              		.loc 10 322 2 view .LVU1282
 4962 00b9 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4962      FFFFFFFF 
 4962      FF3F
 4963 00c3 482B4308 		subq	8(%rbx), %rax
 4964 00c7 4883F801 		cmpq	$1, %rax
 4965 00cb 7616     		jbe	.L239
 4966              	.LVL398:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4967              		.loc 10 322 2 view .LVU1283
 4968              	.LBE2471:
 4969              	.LBE2470:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4970              		.loc 10 1268 27 view .LVU1284
 4971 00cd BA020000 		movl	$2, %edx
 4971      00
 4972 00d2 488D3500 		leaq	.LC26(%rip), %rsi
 4972      000000
 4973 00d9 4889DF   		movq	%rbx, %rdi
 4974              	.LEHB19:
 4975 00dc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4975      00
 4976              	.LVL399:
 4977 00e1 EB0C     		jmp	.L240
 4978              	.LVL400:
 4979              	.L239:
 4980              	.LBB2474:
 4981              	.LBB2473:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4982              		.loc 10 323 24 view .LVU1285
 4983 00e3 488D3D00 		leaq	.LC23(%rip), %rdi
 4983      000000
 4984 00ea E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4984      00
 4985              	.LVL401:
 4986              	.L240:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4987              		.loc 10 323 24 view .LVU1286
 4988              	.LBE2473:
 4989              	.LBE2474:
 4990              	.LBE2469:
 4991              	.LBE2475:
 4992              	.LBE2476:
  22:Includes/findwayBases.hpp ****         str += "}";
 4993              		.loc 15 22 9 is_stmt 1 view .LVU1287
 4994              	.LBB2477:
 4995              	.LBI2477:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 4996              		.loc 10 6580 3 view .LVU1288
 4997              	.LBB2478:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
GAS LISTING /tmp/ccvlKtfa.s 			page 310


 4998              		.loc 10 6582 5 view .LVU1289
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 4999              		.loc 10 6584 5 view .LVU1290
 5000              		.loc 10 6585 20 is_stmt 0 view .LVU1291
 5001 00ef 4889E7   		movq	%rsp, %rdi
 5002 00f2 660FEFC0 		pxor	%xmm0, %xmm0
 5003 00f6 F30F5A45 		cvtss2sd	4(%rbp), %xmm0
 5003      04
 5004 00fb 488D0D00 		leaq	.LC25(%rip), %rcx
 5004      000000
 5005 0102 BA3A0000 		movl	$58, %edx
 5005      00
 5006 0107 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 5006      000000
 5007 010e B8010000 		movl	$1, %eax
 5007      00
 5008 0113 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 5008      00
 5009              	.LVL402:
 5010              	.LEHE19:
 5011              		.loc 10 6585 20 view .LVU1292
 5012              	.LBE2478:
 5013              	.LBE2477:
 5014              	.LBB2479:
 5015              	.LBI2479:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 5016              		.loc 10 1168 7 is_stmt 1 view .LVU1293
 5017              	.LBB2480:
 5018              	.LBI2480:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5019              		.loc 10 1221 7 view .LVU1294
 5020              	.LBB2481:
 5021              	.LBB2482:
 5022              	.LBI2482:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5023              		.loc 10 930 7 view .LVU1295
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5024              		.loc 10 930 7 is_stmt 0 view .LVU1296
 5025              	.LBE2482:
 5026              	.LBB2483:
 5027              	.LBI2483:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5028              		.loc 10 186 7 is_stmt 1 view .LVU1297
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5029              		.loc 10 186 7 is_stmt 0 view .LVU1298
 5030              	.LBE2483:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5031              		.loc 10 1222 55 view .LVU1299
 5032 0118 488B5424 		movq	8(%rsp), %rdx
 5032      08
 5033 011d 488B3424 		movq	(%rsp), %rsi
 5034 0121 4889DF   		movq	%rbx, %rdi
 5035              	.LEHB20:
 5036 0124 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5036      00
 5037              	.LVL403:
 5038              	.LEHE20:
GAS LISTING /tmp/ccvlKtfa.s 			page 311


1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5039              		.loc 10 1222 55 view .LVU1300
 5040              	.LBE2481:
 5041              	.LBE2480:
 5042              	.LBE2479:
 5043              	.LBB2484:
 5044              	.LBI2484:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5045              		.loc 10 657 7 is_stmt 1 view .LVU1301
 5046              	.LBB2485:
 5047              	.LBI2485:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5048              		.loc 10 229 7 view .LVU1302
 5049              	.LBB2486:
 5050              	.LBB2487:
 5051              	.LBI2487:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5052              		.loc 10 221 7 view .LVU1303
 5053              	.LBB2488:
 5054              	.LBI2488:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5055              		.loc 10 186 7 view .LVU1304
 5056              	.LBB2489:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5057              		.loc 10 187 28 is_stmt 0 view .LVU1305
 5058 0129 488B3C24 		movq	(%rsp), %rdi
 5059              	.LVL404:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5060              		.loc 10 187 28 view .LVU1306
 5061              	.LBE2489:
 5062              	.LBE2488:
 5063              	.LBB2490:
 5064              	.LBI2490:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5065              		.loc 10 200 7 is_stmt 1 view .LVU1307
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5066              		.loc 10 200 7 is_stmt 0 view .LVU1308
 5067              	.LBE2490:
 5068              	.LBE2487:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5069              		.loc 10 231 2 view .LVU1309
 5070 012d 488D4424 		leaq	16(%rsp), %rax
 5070      10
 5071 0132 4839C7   		cmpq	%rax, %rdi
 5072 0135 7405     		je	.L223
 5073              	.LVL405:
 5074              	.LBB2491:
 5075              	.LBI2491:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5076              		.loc 10 236 7 is_stmt 1 view .LVU1310
 5077              	.LBB2492:
 5078              	.LBB2493:
 5079              	.LBI2493:
 5080              		.loc 13 469 7 view .LVU1311
 5081              	.LBB2494:
 5082              	.LBI2494:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 312


 5083              		.loc 12 119 7 view .LVU1312
 5084              	.LBB2495:
 5085              		.loc 12 128 19 is_stmt 0 view .LVU1313
 5086 0137 E8000000 		call	_ZdlPv@PLT
 5086      00
 5087              	.LVL406:
 5088              	.L223:
 5089              		.loc 12 128 19 view .LVU1314
 5090              	.LBE2495:
 5091              	.LBE2494:
 5092              	.LBE2493:
 5093              	.LBE2492:
 5094              	.LBE2491:
 5095              	.LBE2486:
 5096              	.LBE2485:
 5097              	.LBB2496:
 5098              	.LBI2496:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5099              		.loc 10 150 14 is_stmt 1 view .LVU1315
 5100              	.LBB2497:
 5101              	.LBI2497:
 5102              		.loc 11 153 7 view .LVU1316
 5103              	.LBB2498:
 5104              	.LBI2498:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5105              		.loc 12 89 7 view .LVU1317
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5106              		.loc 12 89 7 is_stmt 0 view .LVU1318
 5107              	.LBE2498:
 5108              	.LBE2497:
 5109              	.LBE2496:
 5110              	.LBE2484:
  23:Includes/findwayBases.hpp ****         return str;
 5111              		.loc 15 23 9 is_stmt 1 view .LVU1319
 5112              	.LBB2499:
 5113              	.LBI2499:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 5114              		.loc 10 1177 7 view .LVU1320
 5115              	.LBB2500:
 5116              	.LBI2500:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5117              		.loc 10 1263 7 view .LVU1321
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5118              		.loc 10 1263 7 is_stmt 0 view .LVU1322
 5119              	.LBE2500:
 5120              	.LBE2499:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5121              		.loc 4 335 2 is_stmt 1 view .LVU1323
 5122              	.LBB2508:
 5123              	.LBB2507:
 5124              	.LBB2501:
 5125              	.LBB2502:
 5126              	.LBI2502:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5127              		.loc 10 320 7 view .LVU1324
 5128              	.LBB2503:
 5129              	.LBB2504:
GAS LISTING /tmp/ccvlKtfa.s 			page 313


 5130              	.LBI2504:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5131              		.loc 10 930 7 view .LVU1325
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5132              		.loc 10 930 7 is_stmt 0 view .LVU1326
 5133              	.LBE2504:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5134              		.loc 10 322 2 view .LVU1327
 5135 013c 48B8FFFF 		movabsq	$4611686018427387903, %rax
 5135      FFFFFFFF 
 5135      FF3F
 5136 0146 48394308 		cmpq	%rax, 8(%rbx)
 5137 014a 7416     		je	.L241
 5138              	.LVL407:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5139              		.loc 10 322 2 view .LVU1328
 5140              	.LBE2503:
 5141              	.LBE2502:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5142              		.loc 10 1268 27 view .LVU1329
 5143 014c BA010000 		movl	$1, %edx
 5143      00
 5144 0151 488D3500 		leaq	.LC27(%rip), %rsi
 5144      000000
 5145 0158 4889DF   		movq	%rbx, %rdi
 5146              	.LEHB21:
 5147 015b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5147      00
 5148              	.LVL408:
 5149 0160 EB53     		jmp	.L242
 5150              	.LVL409:
 5151              	.L241:
 5152              	.LBB2506:
 5153              	.LBB2505:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5154              		.loc 10 323 24 view .LVU1330
 5155 0162 488D3D00 		leaq	.LC23(%rip), %rdi
 5155      000000
 5156 0169 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 5156      00
 5157              	.LVL410:
 5158              	.LEHE21:
 5159              	.L233:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5160              		.loc 10 323 24 view .LVU1331
 5161 016e 4889C5   		movq	%rax, %rbp
 5162              	.LVL411:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5163              		.loc 10 323 24 view .LVU1332
 5164              	.LBE2505:
 5165              	.LBE2506:
 5166              	.LBE2501:
 5167              	.LBE2507:
 5168              	.LBE2508:
 5169              	.LBB2509:
 5170              	.LBI2509:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
GAS LISTING /tmp/ccvlKtfa.s 			page 314


 5171              		.loc 10 657 7 is_stmt 1 view .LVU1333
 5172              	.LBB2510:
 5173              	.LBI2510:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5174              		.loc 10 229 7 view .LVU1334
 5175              	.LBB2511:
 5176              	.LBB2512:
 5177              	.LBI2512:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5178              		.loc 10 221 7 view .LVU1335
 5179              	.LBB2513:
 5180              	.LBI2513:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5181              		.loc 10 186 7 view .LVU1336
 5182              	.LBB2514:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5183              		.loc 10 187 28 is_stmt 0 view .LVU1337
 5184 0171 488B3C24 		movq	(%rsp), %rdi
 5185              	.LVL412:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5186              		.loc 10 187 28 view .LVU1338
 5187              	.LBE2514:
 5188              	.LBE2513:
 5189              	.LBB2515:
 5190              	.LBI2515:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5191              		.loc 10 200 7 is_stmt 1 view .LVU1339
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5192              		.loc 10 200 7 is_stmt 0 view .LVU1340
 5193              	.LBE2515:
 5194              	.LBE2512:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5195              		.loc 10 231 2 view .LVU1341
 5196 0175 488D4424 		leaq	16(%rsp), %rax
 5196      10
 5197 017a 4839C7   		cmpq	%rax, %rdi
 5198 017d 7405     		je	.L227
 5199              	.LVL413:
 5200              	.LBB2516:
 5201              	.LBI2516:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5202              		.loc 10 236 7 is_stmt 1 view .LVU1342
 5203              	.LBB2517:
 5204              	.LBB2518:
 5205              	.LBI2518:
 5206              		.loc 13 469 7 view .LVU1343
 5207              	.LBB2519:
 5208              	.LBI2519:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5209              		.loc 12 119 7 view .LVU1344
 5210              	.LBB2520:
 5211              		.loc 12 128 19 is_stmt 0 view .LVU1345
 5212 017f E8000000 		call	_ZdlPv@PLT
 5212      00
 5213              	.LVL414:
 5214              		.loc 12 128 19 view .LVU1346
 5215              	.LBE2520:
GAS LISTING /tmp/ccvlKtfa.s 			page 315


 5216              	.LBE2519:
 5217              	.LBE2518:
 5218              	.LBE2517:
 5219              	.LBE2516:
 5220              	.LBE2511:
 5221              	.LBE2510:
 5222              	.LBB2521:
 5223              	.LBI2521:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5224              		.loc 10 150 14 is_stmt 1 view .LVU1347
 5225              	.LBB2522:
 5226              	.LBI2522:
 5227              		.loc 11 153 7 view .LVU1348
 5228              	.LBB2523:
 5229              	.LBI2523:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5230              		.loc 12 89 7 view .LVU1349
 5231              	.L227:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5232              		.loc 12 89 7 is_stmt 0 view .LVU1350
 5233              	.LBE2523:
 5234              	.LBE2522:
 5235              	.LBE2521:
 5236              	.LBE2509:
 5237              	.LBB2524:
 5238              	.LBI2524:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5239              		.loc 10 657 7 is_stmt 1 view .LVU1351
 5240              	.LBB2525:
 5241              	.LBI2525:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5242              		.loc 10 229 7 view .LVU1352
 5243              	.LBB2526:
 5244              	.LBB2527:
 5245              	.LBI2527:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5246              		.loc 10 221 7 view .LVU1353
 5247              	.LBB2528:
 5248              	.LBI2528:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5249              		.loc 10 186 7 view .LVU1354
 5250              	.LBB2529:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5251              		.loc 10 187 28 is_stmt 0 view .LVU1355
 5252 0184 488B3B   		movq	(%rbx), %rdi
 5253              	.LVL415:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5254              		.loc 10 187 28 view .LVU1356
 5255              	.LBE2529:
 5256              	.LBE2528:
 5257              	.LBB2530:
 5258              	.LBI2530:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5259              		.loc 10 200 7 is_stmt 1 view .LVU1357
 5260              	.LBB2531:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5261              		.loc 10 203 57 is_stmt 0 view .LVU1358
GAS LISTING /tmp/ccvlKtfa.s 			page 316


 5262 0187 4883C310 		addq	$16, %rbx
 5263              	.LVL416:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5264              		.loc 10 203 57 view .LVU1359
 5265              	.LBE2531:
 5266              	.LBE2530:
 5267              	.LBE2527:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5268              		.loc 10 231 2 view .LVU1360
 5269 018b 4839DF   		cmpq	%rbx, %rdi
 5270 018e 7405     		je	.L230
 5271              	.LVL417:
 5272              	.LBB2532:
 5273              	.LBI2532:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5274              		.loc 10 236 7 is_stmt 1 view .LVU1361
 5275              	.LBB2533:
 5276              	.LBB2534:
 5277              	.LBI2534:
 5278              		.loc 13 469 7 view .LVU1362
 5279              	.LBB2535:
 5280              	.LBI2535:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5281              		.loc 12 119 7 view .LVU1363
 5282              	.LBB2536:
 5283              		.loc 12 128 19 is_stmt 0 view .LVU1364
 5284 0190 E8000000 		call	_ZdlPv@PLT
 5284      00
 5285              	.LVL418:
 5286              	.L230:
 5287              		.loc 12 128 19 view .LVU1365
 5288              	.LBE2536:
 5289              	.LBE2535:
 5290              	.LBE2534:
 5291              	.LBE2533:
 5292              	.LBE2532:
 5293              	.LBE2526:
 5294              	.LBE2525:
 5295              	.LBB2537:
 5296              	.LBI2537:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5297              		.loc 10 150 14 is_stmt 1 view .LVU1366
 5298              	.LBB2538:
 5299              	.LBI2538:
 5300              		.loc 11 153 7 view .LVU1367
 5301              	.LBB2539:
 5302              	.LBI2539:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5303              		.loc 12 89 7 view .LVU1368
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5304              		.loc 12 89 7 is_stmt 0 view .LVU1369
 5305 0195 4889EF   		movq	%rbp, %rdi
 5306              	.LEHB22:
 5307 0198 E8000000 		call	_Unwind_Resume@PLT
 5307      00
 5308              	.LVL419:
 5309              	.LEHE22:
GAS LISTING /tmp/ccvlKtfa.s 			page 317


 5310              	.L234:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5311              		.loc 12 89 7 view .LVU1370
 5312 019d 4889C5   		movq	%rax, %rbp
 5313              	.LVL420:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5314              		.loc 12 89 7 view .LVU1371
 5315              	.LBE2539:
 5316              	.LBE2538:
 5317              	.LBE2537:
 5318              	.LBE2524:
 5319              	.LBB2540:
 5320              	.LBI2540:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5321              		.loc 10 657 7 is_stmt 1 view .LVU1372
 5322              	.LBB2541:
 5323              	.LBI2541:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5324              		.loc 10 229 7 view .LVU1373
 5325              	.LBB2542:
 5326              	.LBB2543:
 5327              	.LBI2543:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5328              		.loc 10 221 7 view .LVU1374
 5329              	.LBB2544:
 5330              	.LBI2544:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5331              		.loc 10 186 7 view .LVU1375
 5332              	.LBB2545:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5333              		.loc 10 187 28 is_stmt 0 view .LVU1376
 5334 01a0 488B3C24 		movq	(%rsp), %rdi
 5335              	.LVL421:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5336              		.loc 10 187 28 view .LVU1377
 5337              	.LBE2545:
 5338              	.LBE2544:
 5339              	.LBB2546:
 5340              	.LBI2546:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5341              		.loc 10 200 7 is_stmt 1 view .LVU1378
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5342              		.loc 10 200 7 is_stmt 0 view .LVU1379
 5343              	.LBE2546:
 5344              	.LBE2543:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5345              		.loc 10 231 2 view .LVU1380
 5346 01a4 488D4424 		leaq	16(%rsp), %rax
 5346      10
 5347 01a9 4839C7   		cmpq	%rax, %rdi
 5348 01ac 74D6     		je	.L227
 5349              	.LVL422:
 5350              	.LBB2547:
 5351              	.LBI2547:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5352              		.loc 10 236 7 is_stmt 1 view .LVU1381
 5353              	.LBB2548:
GAS LISTING /tmp/ccvlKtfa.s 			page 318


 5354              	.LBB2549:
 5355              	.LBI2549:
 5356              		.loc 13 469 7 view .LVU1382
 5357              	.LBB2550:
 5358              	.LBI2550:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5359              		.loc 12 119 7 view .LVU1383
 5360              	.LBB2551:
 5361              		.loc 12 128 19 is_stmt 0 view .LVU1384
 5362 01ae E8000000 		call	_ZdlPv@PLT
 5362      00
 5363              	.LVL423:
 5364              		.loc 12 128 19 view .LVU1385
 5365              	.LBE2551:
 5366              	.LBE2550:
 5367              	.LBE2549:
 5368              	.LBE2548:
 5369              	.LBE2547:
 5370              	.LBE2542:
 5371              	.LBE2541:
 5372              	.LBB2555:
 5373              	.LBI2555:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5374              		.loc 10 150 14 is_stmt 1 view .LVU1386
 5375              	.LBB2556:
 5376              	.LBI2556:
 5377              		.loc 11 153 7 view .LVU1387
 5378              	.LBB2557:
 5379              	.LBI2557:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5380              		.loc 12 89 7 view .LVU1388
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5381              		.loc 12 89 7 is_stmt 0 view .LVU1389
 5382              	.LBE2557:
 5383              	.LBE2556:
 5384              	.LBE2555:
 5385              	.LBB2558:
 5386              	.LBB2554:
 5387              	.LBB2553:
 5388              	.LBB2552:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5389              		.loc 10 237 79 view .LVU1390
 5390 01b3 EBCF     		jmp	.L227
 5391              	.LVL424:
 5392              	.L242:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5393              		.loc 10 237 79 view .LVU1391
 5394              	.LBE2552:
 5395              	.LBE2553:
 5396              	.LBE2554:
 5397              	.LBE2558:
 5398              	.LBE2540:
  25:Includes/findwayBases.hpp **** 
 5399              		.loc 15 25 5 view .LVU1392
 5400 01b5 488B4424 		movq	40(%rsp), %rax
 5400      28
 5401 01ba 64483304 		xorq	%fs:40, %rax
GAS LISTING /tmp/ccvlKtfa.s 			page 319


 5401      25280000 
 5401      00
 5402 01c3 750A     		jne	.L243
 5403 01c5 4889D8   		movq	%rbx, %rax
 5404 01c8 4883C438 		addq	$56, %rsp
 5405              		.cfi_remember_state
 5406              		.cfi_def_cfa_offset 24
 5407 01cc 5B       		popq	%rbx
 5408              		.cfi_def_cfa_offset 16
 5409              	.LVL425:
  25:Includes/findwayBases.hpp **** 
 5410              		.loc 15 25 5 view .LVU1393
 5411 01cd 5D       		popq	%rbp
 5412              		.cfi_def_cfa_offset 8
 5413              	.LVL426:
  25:Includes/findwayBases.hpp **** 
 5414              		.loc 15 25 5 view .LVU1394
 5415 01ce C3       		ret
 5416              	.LVL427:
 5417              	.L243:
 5418              		.cfi_restore_state
  25:Includes/findwayBases.hpp **** 
 5419              		.loc 15 25 5 view .LVU1395
 5420 01cf E8000000 		call	__stack_chk_fail@PLT
 5420      00
 5421              	.LVL428:
 5422              		.cfi_endproc
 5423              	.LFE2470:
 5424              		.section	.gcc_except_table
 5425              	.LLSDA2470:
 5426 005b FF       		.byte	0xff
 5427 005c FF       		.byte	0xff
 5428 005d 01       		.byte	0x1
 5429 005e 23       		.uleb128 .LLSDACSE2470-.LLSDACSB2470
 5430              	.LLSDACSB2470:
 5431 005f 2D       		.uleb128 .LEHB16-.LFB2470
 5432 0060 05       		.uleb128 .LEHE16-.LEHB16
 5433 0061 00       		.uleb128 0
 5434 0062 00       		.uleb128 0
 5435 0063 51       		.uleb128 .LEHB17-.LFB2470
 5436 0064 44       		.uleb128 .LEHE17-.LEHB17
 5437 0065 64       		.uleb128 .L232-.LFB2470
 5438 0066 00       		.uleb128 0
 5439 0067 A101     		.uleb128 .LEHB18-.LFB2470
 5440 0069 05       		.uleb128 .LEHE18-.LEHB18
 5441 006a EE02     		.uleb128 .L233-.LFB2470
 5442 006c 00       		.uleb128 0
 5443 006d DC01     		.uleb128 .LEHB19-.LFB2470
 5444 006f 3C       		.uleb128 .LEHE19-.LEHB19
 5445 0070 64       		.uleb128 .L232-.LFB2470
 5446 0071 00       		.uleb128 0
 5447 0072 A402     		.uleb128 .LEHB20-.LFB2470
 5448 0074 05       		.uleb128 .LEHE20-.LEHB20
 5449 0075 9D03     		.uleb128 .L234-.LFB2470
 5450 0077 00       		.uleb128 0
 5451 0078 DB02     		.uleb128 .LEHB21-.LFB2470
 5452 007a 13       		.uleb128 .LEHE21-.LEHB21
GAS LISTING /tmp/ccvlKtfa.s 			page 320


 5453 007b 64       		.uleb128 .L232-.LFB2470
 5454 007c 00       		.uleb128 0
 5455 007d 9803     		.uleb128 .LEHB22-.LFB2470
 5456 007f 05       		.uleb128 .LEHE22-.LEHB22
 5457 0080 00       		.uleb128 0
 5458 0081 00       		.uleb128 0
 5459              	.LLSDACSE2470:
 5460              		.section	.text._ZN6coords8toStringB5cxx11Ev,"axG",@progbits,_ZN6coords8toStringB5cxx11Ev,comdat
 5462              		.section	.rodata.str1.1
 5463              	.LC36:
 5464 0021 73746172 		.string	"start: "
 5464      743A2000 
 5465              	.LC37:
 5466 0029 09656E64 		.string	"\tend: "
 5466      3A2000
 5467              	.LC38:
 5468 0030 3A00     		.string	":"
 5469              	.LC39:
 5470 0032 2000     		.string	" "
 5471              	.LC40:
 5472 0034 676C7574 		.string	"glut init\n"
 5472      20696E69 
 5472      740A00
 5473              	.LC41:
 5474 003f 64697370 		.string	"dispmode\n"
 5474      6D6F6465 
 5474      0A00
 5475              	.LC42:
 5476 0049 666C6F61 		.string	"floating"
 5476      74696E67 
 5476      00
 5477              	.LC43:
 5478 0052 72657368 		.string	"reshape\n"
 5478      6170650A 
 5478      00
 5479              	.LC44:
 5480 005b 64697370 		.string	"dispfunc\n"
 5480      66756E63 
 5480      0A00
 5481              	.LC45:
 5482 0065 6B657966 		.string	"keyfunc\n"
 5482      756E630A 
 5482      00
 5483              	.LC46:
 5484 006e 74696D65 		.string	"timer\n"
 5484      720A00
 5485              	.LC47:
 5486 0075 6D61696E 		.string	"mainloop\n"
 5486      6C6F6F70 
 5486      0A00
 5487              		.text
 5488              		.globl	main
 5490              	main:
 5491              	.LVL429:
 5492              	.LFB2502:
 521:Src/main.cpp  **** 	numOfObstacles = 30;
 5493              		.loc 1 521 1 is_stmt 1 view -0
GAS LISTING /tmp/ccvlKtfa.s 			page 321


 5494              		.cfi_startproc
 5495              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5496              		.cfi_lsda 0x1b,.LLSDA2502
 521:Src/main.cpp  **** 	numOfObstacles = 30;
 5497              		.loc 1 521 1 is_stmt 0 view .LVU1397
 5498 0beb 4154     		pushq	%r12
 5499              		.cfi_def_cfa_offset 16
 5500              		.cfi_offset 12, -16
 5501 0bed 55       		pushq	%rbp
 5502              		.cfi_def_cfa_offset 24
 5503              		.cfi_offset 6, -24
 5504 0bee 53       		pushq	%rbx
 5505              		.cfi_def_cfa_offset 32
 5506              		.cfi_offset 3, -32
 5507 0bef 4881ECF0 		subq	$240, %rsp
 5507      000000
 5508              		.cfi_def_cfa_offset 272
 5509 0bf6 897C240C 		movl	%edi, 12(%rsp)
 5510 0bfa 4889F5   		movq	%rsi, %rbp
 521:Src/main.cpp  **** 	numOfObstacles = 30;
 5511              		.loc 1 521 1 view .LVU1398
 5512 0bfd 64488B04 		movq	%fs:40, %rax
 5512      25280000 
 5512      00
 5513 0c06 48898424 		movq	%rax, 232(%rsp)
 5513      E8000000 
 5514 0c0e 31C0     		xorl	%eax, %eax
 522:Src/main.cpp  **** 	size_t iter = 0;
 5515              		.loc 1 522 2 is_stmt 1 view .LVU1399
 522:Src/main.cpp  **** 	size_t iter = 0;
 5516              		.loc 1 522 17 is_stmt 0 view .LVU1400
 5517 0c10 48C70500 		movq	$30, numOfObstacles(%rip)
 5517      0000001E 
 5517      000000
 523:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 5518              		.loc 1 523 2 is_stmt 1 view .LVU1401
 5519              	.LVL430:
 524:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 5520              		.loc 1 524 2 view .LVU1402
 524:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 5521              		.loc 1 524 38 is_stmt 0 view .LVU1403
 5522 0c1b BFA00500 		movl	$1440, %edi
 5522      00
 5523              	.LVL431:
 524:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 5524              		.loc 1 524 38 view .LVU1404
 5525 0c20 E8000000 		call	malloc@PLT
 5525      00
 5526              	.LVL432:
 524:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 5527              		.loc 1 524 12 view .LVU1405
 5528 0c25 48890500 		movq	%rax, obstacles(%rip)
 5528      000000
 525:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 5529              		.loc 1 525 2 is_stmt 1 view .LVU1406
 525:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 5530              		.loc 1 525 50 is_stmt 0 view .LVU1407
GAS LISTING /tmp/ccvlKtfa.s 			page 322


 5531 0c2c 488D9C24 		leaq	176(%rsp), %rbx
 5531      B0000000 
 5532 0c34 F30F1015 		movss	.LC28(%rip), %xmm2
 5532      00000000 
 5533 0c3c F30F100D 		movss	.LC29(%rip), %xmm1
 5533      00000000 
 5534 0c44 0F28C1   		movaps	%xmm1, %xmm0
 5535 0c47 4889DF   		movq	%rbx, %rdi
 5536              	.LEHB23:
 5537 0c4a E8000000 		call	_Z14createObstaclefff@PLT
 5537      00
 5538              	.LVL433:
 525:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 5539              		.loc 1 525 20 view .LVU1408
 5540 0c4f 488B0500 		movq	obstacles(%rip), %rax
 5540      000000
 5541              	.LVL434:
 525:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 5542              		.loc 1 525 20 view .LVU1409
 5543 0c56 660F6F9C 		movdqa	176(%rsp), %xmm3
 5543      24B00000 
 5543      00
 5544 0c5f 0F1118   		movups	%xmm3, (%rax)
 5545 0c62 660F6FA4 		movdqa	192(%rsp), %xmm4
 5545      24C00000 
 5545      00
 5546 0c6b 0F116010 		movups	%xmm4, 16(%rax)
 5547 0c6f 488B9424 		movq	208(%rsp), %rdx
 5547      D0000000 
 5548 0c77 48895020 		movq	%rdx, 32(%rax)
 5549 0c7b 8B9424D8 		movl	216(%rsp), %edx
 5549      000000
 5550 0c82 895028   		movl	%edx, 40(%rax)
 526:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 5551              		.loc 1 526 2 is_stmt 1 view .LVU1410
 526:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 5552              		.loc 1 526 50 is_stmt 0 view .LVU1411
 5553 0c85 F30F1015 		movss	.LC28(%rip), %xmm2
 5553      00000000 
 5554 0c8d F30F100D 		movss	.LC30(%rip), %xmm1
 5554      00000000 
 5555 0c95 F30F1005 		movss	.LC31(%rip), %xmm0
 5555      00000000 
 5556 0c9d 4889DF   		movq	%rbx, %rdi
 5557 0ca0 E8000000 		call	_Z14createObstaclefff@PLT
 5557      00
 5558              	.LVL435:
 526:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 5559              		.loc 1 526 20 view .LVU1412
 5560 0ca5 488B0500 		movq	obstacles(%rip), %rax
 5560      000000
 5561 0cac 660F6FAC 		movdqa	176(%rsp), %xmm5
 5561      24B00000 
 5561      00
 5562 0cb5 0F116830 		movups	%xmm5, 48(%rax)
 5563 0cb9 660F6FB4 		movdqa	192(%rsp), %xmm6
 5563      24C00000 
GAS LISTING /tmp/ccvlKtfa.s 			page 323


 5563      00
 5564 0cc2 0F117040 		movups	%xmm6, 64(%rax)
 5565 0cc6 488B9424 		movq	208(%rsp), %rdx
 5565      D0000000 
 5566 0cce 48895050 		movq	%rdx, 80(%rax)
 5567 0cd2 8B9424D8 		movl	216(%rsp), %edx
 5567      000000
 5568 0cd9 895058   		movl	%edx, 88(%rax)
 531:Src/main.cpp  **** 
 5569              		.loc 1 531 2 is_stmt 1 view .LVU1413
 531:Src/main.cpp  **** 
 5570              		.loc 1 531 17 is_stmt 0 view .LVU1414
 5571 0cdc 48C70500 		movq	$2, numOfObstacles(%rip)
 5571      00000002 
 5571      000000
 533:Src/main.cpp  **** 
 5572              		.loc 1 533 2 is_stmt 1 view .LVU1415
 533:Src/main.cpp  **** 
 5573              		.loc 1 533 12 is_stmt 0 view .LVU1416
 5574 0ce7 48C70500 		movq	$10, graphSize(%rip)
 5574      0000000A 
 5574      000000
 535:Src/main.cpp  **** 
 5575              		.loc 1 535 2 is_stmt 1 view .LVU1417
 535:Src/main.cpp  **** 
 5576              		.loc 1 535 51 is_stmt 0 view .LVU1418
 5577 0cf2 BF280000 		movl	$40, %edi
 5577      00
 5578 0cf7 E8000000 		call	malloc@PLT
 5578      00
 5579              	.LVL436:
 5580 0cfc 4889C3   		movq	%rax, %rbx
 5581              	.LVL437:
 537:Src/main.cpp  **** 	c.x = 350;
 5582              		.loc 1 537 2 is_stmt 1 view .LVU1419
 538:Src/main.cpp  **** 	c.y = 10;
 5583              		.loc 1 538 2 view .LVU1420
 539:Src/main.cpp  **** 	p->c = c;
 5584              		.loc 1 539 2 view .LVU1421
 540:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 5585              		.loc 1 540 2 view .LVU1422
 540:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 5586              		.loc 1 540 7 is_stmt 0 view .LVU1423
 5587 0cff 48B80000 		movabsq	$4692750812855599104, %rax
 5587      AF430000 
 5587      2041
 5588              	.LVL438:
 540:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 5589              		.loc 1 540 7 view .LVU1424
 5590 0d09 48894310 		movq	%rax, 16(%rbx)
 541:Src/main.cpp  **** 
 5591              		.loc 1 541 2 is_stmt 1 view .LVU1425
 541:Src/main.cpp  **** 
 5592              		.loc 1 541 52 is_stmt 0 view .LVU1426
 5593 0d0d BF280000 		movl	$40, %edi
 5593      00
 5594 0d12 E8000000 		call	malloc@PLT
GAS LISTING /tmp/ccvlKtfa.s 			page 324


 5594      00
 5595              	.LVL439:
 5596 0d17 4989C4   		movq	%rax, %r12
 5597              	.LVL440:
 543:Src/main.cpp  **** 	c2.x = 120;
 5598              		.loc 1 543 2 is_stmt 1 view .LVU1427
 544:Src/main.cpp  **** 	c2.y = 770;
 5599              		.loc 1 544 2 view .LVU1428
 545:Src/main.cpp  **** 	p2->c = c2;
 5600              		.loc 1 545 2 view .LVU1429
 546:Src/main.cpp  **** 
 5601              		.loc 1 546 2 view .LVU1430
 546:Src/main.cpp  **** 
 5602              		.loc 1 546 8 is_stmt 0 view .LVU1431
 5603 0d1a 48B80000 		movabsq	$4918071531699961856, %rax
 5603      F0420080 
 5603      4044
 5604              	.LVL441:
 546:Src/main.cpp  **** 
 5605              		.loc 1 546 8 view .LVU1432
 5606 0d24 49894424 		movq	%rax, 16(%r12)
 5606      10
 548:Src/main.cpp  **** 	target = numOfObstacles * 4;
 5607              		.loc 1 548 2 is_stmt 1 view .LVU1433
 548:Src/main.cpp  **** 	target = numOfObstacles * 4;
 5608              		.loc 1 548 37 is_stmt 0 view .LVU1434
 5609 0d29 BF500000 		movl	$80, %edi
 5609      00
 5610 0d2e E8000000 		call	malloc@PLT
 5610      00
 5611              	.LVL442:
 548:Src/main.cpp  **** 	target = numOfObstacles * 4;
 5612              		.loc 1 548 8 view .LVU1435
 5613 0d33 48890500 		movq	%rax, graph(%rip)
 5613      000000
 549:Src/main.cpp  **** 	home = target + 1;
 5614              		.loc 1 549 2 is_stmt 1 view .LVU1436
 549:Src/main.cpp  **** 	home = target + 1;
 5615              		.loc 1 549 9 is_stmt 0 view .LVU1437
 5616 0d3a 48C70500 		movq	$8, target(%rip)
 5616      00000008 
 5616      000000
 550:Src/main.cpp  **** 	p2->i = home;
 5617              		.loc 1 550 2 is_stmt 1 view .LVU1438
 550:Src/main.cpp  **** 	p2->i = home;
 5618              		.loc 1 550 7 is_stmt 0 view .LVU1439
 5619 0d45 48C70500 		movq	$9, home(%rip)
 5619      00000009 
 5619      000000
 551:Src/main.cpp  **** 	p->i = target;
 5620              		.loc 1 551 2 is_stmt 1 view .LVU1440
 551:Src/main.cpp  **** 	p->i = target;
 5621              		.loc 1 551 8 is_stmt 0 view .LVU1441
 5622 0d50 49C74424 		movq	$9, 32(%r12)
 5622      20090000 
 5622      00
 552:Src/main.cpp  **** 	graph[target] = p;
GAS LISTING /tmp/ccvlKtfa.s 			page 325


 5623              		.loc 1 552 2 is_stmt 1 view .LVU1442
 552:Src/main.cpp  **** 	graph[target] = p;
 5624              		.loc 1 552 7 is_stmt 0 view .LVU1443
 5625 0d59 48C74320 		movq	$8, 32(%rbx)
 5625      08000000 
 553:Src/main.cpp  **** 	graph[home] = p2;
 5626              		.loc 1 553 2 is_stmt 1 view .LVU1444
 553:Src/main.cpp  **** 	graph[home] = p2;
 5627              		.loc 1 553 16 is_stmt 0 view .LVU1445
 5628 0d61 48895840 		movq	%rbx, 64(%rax)
 554:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 5629              		.loc 1 554 2 is_stmt 1 view .LVU1446
 554:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 5630              		.loc 1 554 14 is_stmt 0 view .LVU1447
 5631 0d65 4C896048 		movq	%r12, 72(%rax)
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5632              		.loc 1 555 2 is_stmt 1 view .LVU1448
 5633              	.LVL443:
 5634              	.LBB2559:
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5635              		.loc 1 555 13 is_stmt 0 view .LVU1449
 5636 0d69 B8000000 		movl	$0, %eax
 5636      00
 5637              	.LVL444:
 5638              	.L246:
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5639              		.loc 1 555 22 is_stmt 1 discriminator 3 view .LVU1450
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5640              		.loc 1 555 39 is_stmt 0 discriminator 3 view .LVU1451
 5641 0d6e 488B3500 		movq	numOfObstacles(%rip), %rsi
 5641      000000
 5642 0d75 488D14B5 		leaq	0(,%rsi,4), %rdx
 5642      00000000 
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5643              		.loc 1 555 22 discriminator 3 view .LVU1452
 5644 0d7d 4839C2   		cmpq	%rax, %rdx
 5645 0d80 7632     		jbe	.L267
 556:Src/main.cpp  **** 
 5646              		.loc 1 556 3 is_stmt 1 discriminator 2 view .LVU1453
 556:Src/main.cpp  **** 
 5647              		.loc 1 556 26 is_stmt 0 discriminator 2 view .LVU1454
 5648 0d82 4889C2   		movq	%rax, %rdx
 5649 0d85 48C1EA02 		shrq	$2, %rdx
 556:Src/main.cpp  **** 
 5650              		.loc 1 556 29 discriminator 2 view .LVU1455
 5651 0d89 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 5652 0d8d 48C1E204 		salq	$4, %rdx
 5653 0d91 48031500 		addq	obstacles(%rip), %rdx
 5653      000000
 556:Src/main.cpp  **** 
 5654              		.loc 1 556 41 discriminator 2 view .LVU1456
 5655 0d98 4889C1   		movq	%rax, %rcx
 5656 0d9b 83E103   		andl	$3, %ecx
 556:Src/main.cpp  **** 
 5657              		.loc 1 556 44 discriminator 2 view .LVU1457
 5658 0d9e 488B4CCA 		movq	8(%rdx,%rcx,8), %rcx
 5658      08
GAS LISTING /tmp/ccvlKtfa.s 			page 326


 556:Src/main.cpp  **** 
 5659              		.loc 1 556 12 discriminator 2 view .LVU1458
 5660 0da3 488B1500 		movq	graph(%rip), %rdx
 5660      000000
 5661 0daa 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5662              		.loc 1 555 2 is_stmt 1 discriminator 2 view .LVU1459
 5663 0dae 4883C001 		addq	$1, %rax
 5664              	.LVL445:
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5665              		.loc 1 555 2 is_stmt 0 discriminator 2 view .LVU1460
 5666 0db2 EBBA     		jmp	.L246
 5667              	.L267:
 555:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 5668              		.loc 1 555 2 discriminator 2 view .LVU1461
 5669              	.LBE2559:
 5670              	.LBB2560:
 558:Src/main.cpp  **** 	{
 5671              		.loc 1 558 13 view .LVU1462
 5672 0db4 B8000000 		movl	$0, %eax
 5672      00
 5673              	.LVL446:
 5674              	.L245:
 558:Src/main.cpp  **** 	{
 5675              		.loc 1 558 22 is_stmt 1 discriminator 3 view .LVU1463
 5676 0db9 488B3D00 		movq	graphSize(%rip), %rdi
 5676      000000
 5677 0dc0 4839C7   		cmpq	%rax, %rdi
 5678 0dc3 7630     		jbe	.L247
 560:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 5679              		.loc 1 560 3 discriminator 2 view .LVU1464
 560:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 5680              		.loc 1 560 10 is_stmt 0 discriminator 2 view .LVU1465
 5681 0dc5 488B1500 		movq	graph(%rip), %rdx
 5681      000000
 5682 0dcc 488D14C2 		leaq	(%rdx,%rax,8), %rdx
 5683 0dd0 488B0A   		movq	(%rdx), %rcx
 560:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 5684              		.loc 1 560 15 discriminator 2 view .LVU1466
 5685 0dd3 48894120 		movq	%rax, 32(%rcx)
 561:Src/main.cpp  **** 	}
 5686              		.loc 1 561 3 is_stmt 1 discriminator 2 view .LVU1467
 561:Src/main.cpp  **** 	}
 5687              		.loc 1 561 10 is_stmt 0 discriminator 2 view .LVU1468
 5688 0dd7 488B12   		movq	(%rdx), %rdx
 561:Src/main.cpp  **** 	}
 5689              		.loc 1 561 20 discriminator 2 view .LVU1469
 5690 0dda F30F1005 		movss	.LC16(%rip), %xmm0
 5690      00000000 
 5691 0de2 F30F5E05 		divss	.LC8(%rip), %xmm0
 5691      00000000 
 5692 0dea F30F1142 		movss	%xmm0, 28(%rdx)
 5692      1C
 558:Src/main.cpp  **** 	{
 5693              		.loc 1 558 2 is_stmt 1 discriminator 2 view .LVU1470
 5694 0def 4883C001 		addq	$1, %rax
 5695              	.LVL447:
GAS LISTING /tmp/ccvlKtfa.s 			page 327


 558:Src/main.cpp  **** 	{
 5696              		.loc 1 558 2 is_stmt 0 discriminator 2 view .LVU1471
 5697 0df3 EBC4     		jmp	.L245
 5698              	.L247:
 558:Src/main.cpp  **** 	{
 5699              		.loc 1 558 2 discriminator 2 view .LVU1472
 5700              	.LBE2560:
 563:Src/main.cpp  **** 
 5701              		.loc 1 563 2 is_stmt 1 view .LVU1473
 563:Src/main.cpp  **** 
 5702              		.loc 1 563 14 is_stmt 0 view .LVU1474
 5703 0df5 488B1500 		movq	target(%rip), %rdx
 5703      000000
 5704 0dfc 488B0500 		movq	graph(%rip), %rax
 5704      000000
 5705              	.LVL448:
 563:Src/main.cpp  **** 
 5706              		.loc 1 563 14 view .LVU1475
 5707 0e03 488B04D0 		movq	(%rax,%rdx,8), %rax
 563:Src/main.cpp  **** 
 5708              		.loc 1 563 24 view .LVU1476
 5709 0e07 C7401C00 		movl	$0x00000000, 28(%rax)
 5709      000000
 565:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 5710              		.loc 1 565 2 is_stmt 1 view .LVU1477
 565:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 5711              		.loc 1 565 24 is_stmt 0 view .LVU1478
 5712 0e0e 48C1E703 		salq	$3, %rdi
 5713 0e12 E8000000 		call	malloc@PLT
 5713      00
 5714              	.LVL449:
 565:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 5715              		.loc 1 565 7 view .LVU1479
 5716 0e17 48890500 		movq	%rax, ways(%rip)
 5716      000000
 566:Src/main.cpp  **** 		ways[i] = target;
 5717              		.loc 1 566 2 is_stmt 1 view .LVU1480
 5718              	.LVL450:
 5719              	.LBB2561:
 566:Src/main.cpp  **** 		ways[i] = target;
 5720              		.loc 1 566 13 is_stmt 0 view .LVU1481
 5721 0e1e B8000000 		movl	$0, %eax
 5721      00
 5722              	.LVL451:
 5723              	.L249:
 566:Src/main.cpp  **** 		ways[i] = target;
 5724              		.loc 1 566 22 is_stmt 1 discriminator 3 view .LVU1482
 5725 0e23 48390500 		cmpq	%rax, graphSize(%rip)
 5725      000000
 5726 0e2a 7618     		jbe	.L248
 567:Src/main.cpp  **** 
 5727              		.loc 1 567 3 discriminator 2 view .LVU1483
 567:Src/main.cpp  **** 
 5728              		.loc 1 567 11 is_stmt 0 discriminator 2 view .LVU1484
 5729 0e2c 488B0D00 		movq	target(%rip), %rcx
 5729      000000
 5730 0e33 488B1500 		movq	ways(%rip), %rdx
GAS LISTING /tmp/ccvlKtfa.s 			page 328


 5730      000000
 5731 0e3a 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 566:Src/main.cpp  **** 		ways[i] = target;
 5732              		.loc 1 566 2 is_stmt 1 discriminator 2 view .LVU1485
 5733 0e3e 4883C001 		addq	$1, %rax
 5734              	.LVL452:
 566:Src/main.cpp  **** 		ways[i] = target;
 5735              		.loc 1 566 2 is_stmt 0 discriminator 2 view .LVU1486
 5736 0e42 EBDF     		jmp	.L249
 5737              	.L248:
 566:Src/main.cpp  **** 		ways[i] = target;
 5738              		.loc 1 566 2 discriminator 2 view .LVU1487
 5739              	.LBE2561:
 569:Src/main.cpp  **** 	startway.y 	= 0;
 5740              		.loc 1 569 2 is_stmt 1 view .LVU1488
 569:Src/main.cpp  **** 	startway.y 	= 0;
 5741              		.loc 1 569 14 is_stmt 0 view .LVU1489
 5742 0e44 C7050000 		movl	$0x00000000, startway(%rip)
 5742      00000000 
 5742      0000
 570:Src/main.cpp  **** 	endway.x	= 150;
 5743              		.loc 1 570 2 is_stmt 1 view .LVU1490
 570:Src/main.cpp  **** 	endway.x	= 150;
 5744              		.loc 1 570 14 is_stmt 0 view .LVU1491
 5745 0e4e C7050000 		movl	$0x00000000, 4+startway(%rip)
 5745      00000000 
 5745      0000
 571:Src/main.cpp  **** 	endway.y	= 150;
 5746              		.loc 1 571 2 is_stmt 1 view .LVU1492
 571:Src/main.cpp  **** 	endway.y	= 150;
 5747              		.loc 1 571 11 is_stmt 0 view .LVU1493
 5748 0e58 F30F1005 		movss	.LC35(%rip), %xmm0
 5748      00000000 
 5749 0e60 F30F1105 		movss	%xmm0, endway(%rip)
 5749      00000000 
 572:Src/main.cpp  **** 
 5750              		.loc 1 572 2 is_stmt 1 view .LVU1494
 572:Src/main.cpp  **** 
 5751              		.loc 1 572 11 is_stmt 0 view .LVU1495
 5752 0e68 F30F1105 		movss	%xmm0, 4+endway(%rip)
 5752      00000000 
 575:Src/main.cpp  **** 	c3.x = 200;
 5753              		.loc 1 575 2 is_stmt 1 view .LVU1496
 576:Src/main.cpp  **** 	c3.y = 0;
 5754              		.loc 1 576 2 view .LVU1497
 577:Src/main.cpp  **** 
 5755              		.loc 1 577 2 view .LVU1498
 583:Src/main.cpp  **** 	
 5756              		.loc 1 583 2 view .LVU1499
 583:Src/main.cpp  **** 	
 5757              		.loc 1 583 11 is_stmt 0 view .LVU1500
 5758 0e70 4889DF   		movq	%rbx, %rdi
 5759 0e73 E8000000 		call	_Z9initPointP10graphPoint
 5759      00
 5760              	.LVL453:
 587:Src/main.cpp  **** 	startp = *graph[7];
 5761              		.loc 1 587 2 is_stmt 1 view .LVU1501
GAS LISTING /tmp/ccvlKtfa.s 			page 329


 5762              	.LBB2562:
 5763              	.LBI2562:
  38:Includes/findwayBases.hpp **** {
 5764              		.loc 15 38 8 view .LVU1502
 5765              	.LBB2563:
 5766 0e78 48C74424 		movq	$0, 48(%rsp)
 5766      30000000 
 5766      00
 5767 0e81 48C74424 		movq	$0, 56(%rsp)
 5767      38000000 
 5767      00
 5768 0e8a C6442448 		movb	$0, 72(%rsp)
 5768      00
 5769 0e8f F30F1005 		movss	.LC16(%rip), %xmm0
 5769      00000000 
 5770 0e97 F30F5E05 		divss	.LC8(%rip), %xmm0
 5770      00000000 
 5771 0e9f F30F1144 		movss	%xmm0, 76(%rsp)
 5771      244C
 5772 0ea5 48C74424 		movq	$0, 80(%rsp)
 5772      50000000 
 5772      00
 5773              	.LVL454:
  38:Includes/findwayBases.hpp **** {
 5774              		.loc 15 38 8 is_stmt 0 view .LVU1503
 5775              	.LBE2563:
 5776              	.LBE2562:
 5777              	.LBB2564:
 5778              	.LBI2564:
  38:Includes/findwayBases.hpp **** {
 5779              		.loc 15 38 8 is_stmt 1 view .LVU1504
 5780              	.LBB2565:
 5781 0eae 48C74424 		movq	$0, 96(%rsp)
 5781      60000000 
 5781      00
 5782 0eb7 48C74424 		movq	$0, 104(%rsp)
 5782      68000000 
 5782      00
 5783 0ec0 C6442478 		movb	$0, 120(%rsp)
 5783      00
 5784 0ec5 F30F1144 		movss	%xmm0, 124(%rsp)
 5784      247C
 5785 0ecb 48C78424 		movq	$0, 128(%rsp)
 5785      80000000 
 5785      00000000 
 5786              	.LVL455:
  38:Includes/findwayBases.hpp **** {
 5787              		.loc 15 38 8 is_stmt 0 view .LVU1505
 5788              	.LBE2565:
 5789              	.LBE2564:
 588:Src/main.cpp  **** 	endp = *graph[1];
 5790              		.loc 1 588 2 is_stmt 1 view .LVU1506
 588:Src/main.cpp  **** 	endp = *graph[1];
 5791              		.loc 1 588 19 is_stmt 0 view .LVU1507
 5792 0ed7 488B1500 		movq	graph(%rip), %rdx
 5792      000000
 588:Src/main.cpp  **** 	endp = *graph[1];
GAS LISTING /tmp/ccvlKtfa.s 			page 330


 5793              		.loc 1 588 9 view .LVU1508
 5794 0ede 488B4238 		movq	56(%rdx), %rax
 5795 0ee2 F30F6F38 		movdqu	(%rax), %xmm7
 5796 0ee6 0F297C24 		movaps	%xmm7, 48(%rsp)
 5796      30
 5797 0eeb F30F6F48 		movdqu	16(%rax), %xmm1
 5797      10
 5798 0ef0 0F294C24 		movaps	%xmm1, 64(%rsp)
 5798      40
 5799 0ef5 488B4020 		movq	32(%rax), %rax
 5800 0ef9 48894424 		movq	%rax, 80(%rsp)
 5800      50
 589:Src/main.cpp  **** 
 5801              		.loc 1 589 2 is_stmt 1 view .LVU1509
 589:Src/main.cpp  **** 
 5802              		.loc 1 589 7 is_stmt 0 view .LVU1510
 5803 0efe 488B4208 		movq	8(%rdx), %rax
 5804 0f02 F30F6F10 		movdqu	(%rax), %xmm2
 5805 0f06 0F295424 		movaps	%xmm2, 96(%rsp)
 5805      60
 5806 0f0b F30F6F58 		movdqu	16(%rax), %xmm3
 5806      10
 5807 0f10 0F295C24 		movaps	%xmm3, 112(%rsp)
 5807      70
 5808 0f15 488B4020 		movq	32(%rax), %rax
 5809 0f19 48898424 		movq	%rax, 128(%rsp)
 5809      80000000 
 604:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 5810              		.loc 1 604 2 is_stmt 1 view .LVU1511
 604:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 5811              		.loc 1 604 47 is_stmt 0 view .LVU1512
 5812 0f21 488D7424 		leaq	112(%rsp), %rsi
 5812      70
 5813 0f26 488D5C24 		leaq	64(%rsp), %rbx
 5813      40
 5814              	.LVL456:
 604:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 5815              		.loc 1 604 47 view .LVU1513
 5816 0f2b 4889DF   		movq	%rbx, %rdi
 5817 0f2e E8000000 		call	_Z10createVectPK6coordsS1_
 5817      00
 5818              	.LVL457:
 5819 0f33 48894424 		movq	%rax, 32(%rsp)
 5819      20
 5820 0f38 660FD644 		movq	%xmm0, 40(%rsp)
 5820      2428
 607:Src/main.cpp  **** 	int shit = 1;
 5821              		.loc 1 607 2 is_stmt 1 view .LVU1514
 5822              	.LVL458:
 5823              	.LBB2566:
 5824              	.LBI2566:
 565:/usr/include/c++/9.2.0/ostream ****     {
 5825              		.loc 3 565 5 view .LVU1515
 565:/usr/include/c++/9.2.0/ostream ****     {
 5826              		.loc 3 565 5 is_stmt 0 view .LVU1516
 5827              	.LBE2566:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
GAS LISTING /tmp/ccvlKtfa.s 			page 331


 5828              		.loc 4 335 2 is_stmt 1 view .LVU1517
 5829              	.LBB2568:
 5830              	.LBB2567:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5831              		.loc 3 570 18 is_stmt 0 view .LVU1518
 5832 0f3e BA070000 		movl	$7, %edx
 5832      00
 5833 0f43 488D3500 		leaq	.LC36(%rip), %rsi
 5833      000000
 5834 0f4a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 5834      000000
 5835 0f51 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5835      00
 5836              	.LVL459:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5837              		.loc 3 570 18 view .LVU1519
 5838              	.LBE2567:
 5839              	.LBE2568:
 607:Src/main.cpp  **** 	int shit = 1;
 5840              		.loc 1 607 40 view .LVU1520
 5841 0f56 488DBC24 		leaq	144(%rsp), %rdi
 5841      90000000 
 5842 0f5e 4889DE   		movq	%rbx, %rsi
 5843 0f61 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 5843      00
 5844              	.LVL460:
 5845              	.LEHE23:
 5846              	.LBB2569:
 5847              	.LBI2569:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 5848              		.loc 10 6416 5 is_stmt 1 view .LVU1521
 5849              	.LBB2570:
 5850              	.LBB2571:
 5851              	.LBI2571:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5852              		.loc 10 930 7 view .LVU1522
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5853              		.loc 10 930 7 is_stmt 0 view .LVU1523
 5854              	.LBE2571:
 5855              	.LBB2572:
 5856              	.LBI2572:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 5857              		.loc 10 2312 7 is_stmt 1 view .LVU1524
 5858              	.LBB2573:
 5859              	.LBI2573:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5860              		.loc 10 186 7 view .LVU1525
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5861              		.loc 10 186 7 is_stmt 0 view .LVU1526
 5862              	.LBE2573:
 5863              	.LBE2572:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 5864              		.loc 10 6421 30 view .LVU1527
 5865 0f66 488B9424 		movq	152(%rsp), %rdx
 5865      98000000 
 5866 0f6e 488BB424 		movq	144(%rsp), %rsi
 5866      90000000 
GAS LISTING /tmp/ccvlKtfa.s 			page 332


 5867 0f76 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 5867      000000
 5868              	.LEHB24:
 5869 0f7d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5869      00
 5870              	.LVL461:
 5871 0f82 4889C3   		movq	%rax, %rbx
 5872              	.LVL462:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 5873              		.loc 10 6421 30 view .LVU1528
 5874              	.LBE2570:
 5875              	.LBE2569:
 5876              	.LBB2574:
 5877              	.LBI2574:
 565:/usr/include/c++/9.2.0/ostream ****     {
 5878              		.loc 3 565 5 is_stmt 1 view .LVU1529
 565:/usr/include/c++/9.2.0/ostream ****     {
 5879              		.loc 3 565 5 is_stmt 0 view .LVU1530
 5880              	.LBE2574:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5881              		.loc 4 335 2 is_stmt 1 view .LVU1531
 5882              	.LBB2576:
 5883              	.LBB2575:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5884              		.loc 3 570 18 is_stmt 0 view .LVU1532
 5885 0f85 BA060000 		movl	$6, %edx
 5885      00
 5886 0f8a 488D3500 		leaq	.LC37(%rip), %rsi
 5886      000000
 5887 0f91 4889C7   		movq	%rax, %rdi
 5888 0f94 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5888      00
 5889              	.LVL463:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5890              		.loc 3 570 18 view .LVU1533
 5891              	.LBE2575:
 5892              	.LBE2576:
 607:Src/main.cpp  **** 	int shit = 1;
 5893              		.loc 1 607 74 view .LVU1534
 5894 0f99 488DBC24 		leaq	176(%rsp), %rdi
 5894      B0000000 
 5895 0fa1 488D7424 		leaq	112(%rsp), %rsi
 5895      70
 5896 0fa6 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 5896      00
 5897              	.LVL464:
 5898              	.LEHE24:
 5899              	.LBB2577:
 5900              	.LBI2577:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 5901              		.loc 10 6416 5 is_stmt 1 view .LVU1535
 5902              	.LBB2578:
 5903              	.LBB2579:
 5904              	.LBI2579:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5905              		.loc 10 930 7 view .LVU1536
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
GAS LISTING /tmp/ccvlKtfa.s 			page 333


 5906              		.loc 10 930 7 is_stmt 0 view .LVU1537
 5907              	.LBE2579:
 5908              	.LBB2580:
 5909              	.LBI2580:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 5910              		.loc 10 2312 7 is_stmt 1 view .LVU1538
 5911              	.LBB2581:
 5912              	.LBI2581:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5913              		.loc 10 186 7 view .LVU1539
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5914              		.loc 10 186 7 is_stmt 0 view .LVU1540
 5915              	.LBE2581:
 5916              	.LBE2580:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 5917              		.loc 10 6421 30 view .LVU1541
 5918 0fab 488B9424 		movq	184(%rsp), %rdx
 5918      B8000000 
 5919 0fb3 488BB424 		movq	176(%rsp), %rsi
 5919      B0000000 
 5920 0fbb 4889DF   		movq	%rbx, %rdi
 5921              	.LEHB25:
 5922 0fbe E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5922      00
 5923              	.LVL465:
 5924 0fc3 4889C7   		movq	%rax, %rdi
 5925              	.LVL466:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 5926              		.loc 10 6421 30 view .LVU1542
 5927              	.LBE2578:
 5928              	.LBE2577:
 5929              	.LBB2582:
 5930              	.LBI2582:
 108:/usr/include/c++/9.2.0/ostream ****       {
 5931              		.loc 3 108 7 is_stmt 1 view .LVU1543
 5932              	.LBB2583:
 113:/usr/include/c++/9.2.0/ostream ****       }
 5933              		.loc 3 113 13 is_stmt 0 view .LVU1544
 5934 0fc6 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 5934      00
 5935              	.LVL467:
 5936              	.LEHE25:
 113:/usr/include/c++/9.2.0/ostream ****       }
 5937              		.loc 3 113 13 view .LVU1545
 5938              	.LBE2583:
 5939              	.LBE2582:
 5940              	.LBB2584:
 5941              	.LBI2584:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5942              		.loc 10 657 7 is_stmt 1 view .LVU1546
 5943              	.LBB2585:
 5944              	.LBI2585:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5945              		.loc 10 229 7 view .LVU1547
 5946              	.LBB2586:
 5947              	.LBB2587:
 5948              	.LBI2587:
GAS LISTING /tmp/ccvlKtfa.s 			page 334


 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5949              		.loc 10 221 7 view .LVU1548
 5950              	.LBB2588:
 5951              	.LBI2588:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5952              		.loc 10 186 7 view .LVU1549
 5953              	.LBB2589:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5954              		.loc 10 187 28 is_stmt 0 view .LVU1550
 5955 0fcb 488BBC24 		movq	176(%rsp), %rdi
 5955      B0000000 
 5956              	.LVL468:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5957              		.loc 10 187 28 view .LVU1551
 5958              	.LBE2589:
 5959              	.LBE2588:
 5960              	.LBB2590:
 5961              	.LBI2590:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5962              		.loc 10 200 7 is_stmt 1 view .LVU1552
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5963              		.loc 10 200 7 is_stmt 0 view .LVU1553
 5964              	.LBE2590:
 5965              	.LBE2587:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5966              		.loc 10 231 2 view .LVU1554
 5967 0fd3 488D8424 		leaq	192(%rsp), %rax
 5967      C0000000 
 5968 0fdb 4839C7   		cmpq	%rax, %rdi
 5969 0fde 7405     		je	.L250
 5970              	.LVL469:
 5971              	.LBB2591:
 5972              	.LBI2591:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5973              		.loc 10 236 7 is_stmt 1 view .LVU1555
 5974              	.LBB2592:
 5975              	.LBB2593:
 5976              	.LBI2593:
 5977              		.loc 13 469 7 view .LVU1556
 5978              	.LBB2594:
 5979              	.LBI2594:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5980              		.loc 12 119 7 view .LVU1557
 5981              	.LBB2595:
 5982              		.loc 12 128 19 is_stmt 0 view .LVU1558
 5983 0fe0 E8000000 		call	_ZdlPv@PLT
 5983      00
 5984              	.LVL470:
 5985              	.L250:
 5986              		.loc 12 128 19 view .LVU1559
 5987              	.LBE2595:
 5988              	.LBE2594:
 5989              	.LBE2593:
 5990              	.LBE2592:
 5991              	.LBE2591:
 5992              	.LBE2586:
 5993              	.LBE2585:
GAS LISTING /tmp/ccvlKtfa.s 			page 335


 5994              	.LBB2596:
 5995              	.LBI2596:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5996              		.loc 10 150 14 is_stmt 1 view .LVU1560
 5997              	.LBB2597:
 5998              	.LBI2597:
 5999              		.loc 11 153 7 view .LVU1561
 6000              	.LBB2598:
 6001              	.LBI2598:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6002              		.loc 12 89 7 view .LVU1562
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6003              		.loc 12 89 7 is_stmt 0 view .LVU1563
 6004              	.LBE2598:
 6005              	.LBE2597:
 6006              	.LBE2596:
 6007              	.LBE2584:
 6008              	.LBB2599:
 6009              	.LBI2599:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6010              		.loc 10 657 7 is_stmt 1 view .LVU1564
 6011              	.LBB2600:
 6012              	.LBI2600:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6013              		.loc 10 229 7 view .LVU1565
 6014              	.LBB2601:
 6015              	.LBB2602:
 6016              	.LBI2602:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6017              		.loc 10 221 7 view .LVU1566
 6018              	.LBB2603:
 6019              	.LBI2603:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6020              		.loc 10 186 7 view .LVU1567
 6021              	.LBB2604:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6022              		.loc 10 187 28 is_stmt 0 view .LVU1568
 6023 0fe5 488BBC24 		movq	144(%rsp), %rdi
 6023      90000000 
 6024              	.LVL471:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6025              		.loc 10 187 28 view .LVU1569
 6026              	.LBE2604:
 6027              	.LBE2603:
 6028              	.LBB2605:
 6029              	.LBI2605:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6030              		.loc 10 200 7 is_stmt 1 view .LVU1570
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6031              		.loc 10 200 7 is_stmt 0 view .LVU1571
 6032              	.LBE2605:
 6033              	.LBE2602:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6034              		.loc 10 231 2 view .LVU1572
 6035 0fed 488D8424 		leaq	160(%rsp), %rax
 6035      A0000000 
 6036 0ff5 4839C7   		cmpq	%rax, %rdi
GAS LISTING /tmp/ccvlKtfa.s 			page 336


 6037 0ff8 7405     		je	.L251
 6038              	.LVL472:
 6039              	.LBB2606:
 6040              	.LBI2606:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6041              		.loc 10 236 7 is_stmt 1 view .LVU1573
 6042              	.LBB2607:
 6043              	.LBB2608:
 6044              	.LBI2608:
 6045              		.loc 13 469 7 view .LVU1574
 6046              	.LBB2609:
 6047              	.LBI2609:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6048              		.loc 12 119 7 view .LVU1575
 6049              	.LBB2610:
 6050              		.loc 12 128 19 is_stmt 0 view .LVU1576
 6051 0ffa E8000000 		call	_ZdlPv@PLT
 6051      00
 6052              	.LVL473:
 6053              	.L251:
 6054              		.loc 12 128 19 view .LVU1577
 6055              	.LBE2610:
 6056              	.LBE2609:
 6057              	.LBE2608:
 6058              	.LBE2607:
 6059              	.LBE2606:
 6060              	.LBE2601:
 6061              	.LBE2600:
 6062              	.LBB2611:
 6063              	.LBI2611:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6064              		.loc 10 150 14 is_stmt 1 view .LVU1578
 6065              	.LBB2612:
 6066              	.LBI2612:
 6067              		.loc 11 153 7 view .LVU1579
 6068              	.LBB2613:
 6069              	.LBI2613:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6070              		.loc 12 89 7 view .LVU1580
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6071              		.loc 12 89 7 is_stmt 0 view .LVU1581
 6072              	.LBE2613:
 6073              	.LBE2612:
 6074              	.LBE2611:
 6075              	.LBE2599:
 608:Src/main.cpp  **** 	
 6076              		.loc 1 608 2 is_stmt 1 view .LVU1582
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6077              		.loc 1 612 2 view .LVU1583
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6078              		.loc 1 612 20 is_stmt 0 view .LVU1584
 6079 0fff 488DBC24 		leaq	144(%rsp), %rdi
 6079      90000000 
 6080 1007 488D7424 		leaq	32(%rsp), %rsi
 6080      20
 6081              	.LEHB26:
 6082 100c E8000000 		call	_ZN4vect8toStringB5cxx11Ev
GAS LISTING /tmp/ccvlKtfa.s 			page 337


 6082      00
 6083              	.LVL474:
 6084              	.LEHE26:
 6085              	.LBB2614:
 6086              	.LBI2614:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 6087              		.loc 10 6416 5 is_stmt 1 view .LVU1585
 6088              	.LBB2615:
 6089              	.LBB2616:
 6090              	.LBI2616:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6091              		.loc 10 930 7 view .LVU1586
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6092              		.loc 10 930 7 is_stmt 0 view .LVU1587
 6093              	.LBE2616:
 6094              	.LBB2617:
 6095              	.LBI2617:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 6096              		.loc 10 2312 7 is_stmt 1 view .LVU1588
 6097              	.LBB2618:
 6098              	.LBI2618:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6099              		.loc 10 186 7 view .LVU1589
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6100              		.loc 10 186 7 is_stmt 0 view .LVU1590
 6101              	.LBE2618:
 6102              	.LBE2617:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6103              		.loc 10 6421 30 view .LVU1591
 6104 1011 488B9424 		movq	152(%rsp), %rdx
 6104      98000000 
 6105 1019 488BB424 		movq	144(%rsp), %rsi
 6105      90000000 
 6106 1021 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6106      000000
 6107              	.LEHB27:
 6108 1028 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6108      00
 6109              	.LVL475:
 6110 102d 4889C7   		movq	%rax, %rdi
 6111              	.LVL476:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6112              		.loc 10 6421 30 view .LVU1592
 6113              	.LBE2615:
 6114              	.LBE2614:
 6115              	.LBB2619:
 6116              	.LBI2619:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6117              		.loc 3 108 7 is_stmt 1 view .LVU1593
 6118              	.LBB2620:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6119              		.loc 3 113 13 is_stmt 0 view .LVU1594
 6120 1030 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6120      00
 6121              	.LVL477:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6122              		.loc 3 113 13 view .LVU1595
GAS LISTING /tmp/ccvlKtfa.s 			page 338


 6123 1035 4889C3   		movq	%rax, %rbx
 6124              	.LVL478:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6125              		.loc 3 113 13 view .LVU1596
 6126              	.LBE2620:
 6127              	.LBE2619:
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6128              		.loc 1 612 47 view .LVU1597
 6129 1038 488DBC24 		leaq	176(%rsp), %rdi
 6129      B0000000 
 6130 1040 488B7424 		movq	32(%rsp), %rsi
 6130      20
 6131 1045 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 6131      00
 6132              	.LVL479:
 6133              	.LEHE27:
 6134              	.LBB2621:
 6135              	.LBI2621:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 6136              		.loc 10 6416 5 is_stmt 1 view .LVU1598
 6137              	.LBB2622:
 6138              	.LBB2623:
 6139              	.LBI2623:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6140              		.loc 10 930 7 view .LVU1599
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6141              		.loc 10 930 7 is_stmt 0 view .LVU1600
 6142              	.LBE2623:
 6143              	.LBB2624:
 6144              	.LBI2624:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 6145              		.loc 10 2312 7 is_stmt 1 view .LVU1601
 6146              	.LBB2625:
 6147              	.LBI2625:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6148              		.loc 10 186 7 view .LVU1602
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6149              		.loc 10 186 7 is_stmt 0 view .LVU1603
 6150              	.LBE2625:
 6151              	.LBE2624:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6152              		.loc 10 6421 30 view .LVU1604
 6153 104a 488B9424 		movq	184(%rsp), %rdx
 6153      B8000000 
 6154 1052 488BB424 		movq	176(%rsp), %rsi
 6154      B0000000 
 6155 105a 4889DF   		movq	%rbx, %rdi
 6156              	.LEHB28:
 6157 105d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6157      00
 6158              	.LVL480:
 6159 1062 4889C7   		movq	%rax, %rdi
 6160              	.LVL481:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6161              		.loc 10 6421 30 view .LVU1605
 6162              	.LBE2622:
 6163              	.LBE2621:
GAS LISTING /tmp/ccvlKtfa.s 			page 339


 6164              	.LBB2626:
 6165              	.LBI2626:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6166              		.loc 3 108 7 is_stmt 1 view .LVU1606
 6167              	.LBB2627:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6168              		.loc 3 113 13 is_stmt 0 view .LVU1607
 6169 1065 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6169      00
 6170              	.LVL482:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6171              		.loc 3 113 13 view .LVU1608
 6172 106a 4889C3   		movq	%rax, %rbx
 6173              	.LVL483:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6174              		.loc 3 113 13 view .LVU1609
 6175              	.LBE2627:
 6176              	.LBE2626:
 6177              	.LBB2628:
 6178              	.LBI2628:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6179              		.loc 3 565 5 is_stmt 1 view .LVU1610
 565:/usr/include/c++/9.2.0/ostream ****     {
 6180              		.loc 3 565 5 is_stmt 0 view .LVU1611
 6181              	.LBE2628:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6182              		.loc 4 335 2 is_stmt 1 view .LVU1612
 6183              	.LBB2630:
 6184              	.LBB2629:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6185              		.loc 3 570 18 is_stmt 0 view .LVU1613
 6186 106d BA010000 		movl	$1, %edx
 6186      00
 6187 1072 488D3500 		leaq	.LC24(%rip), %rsi
 6187      000000
 6188 1079 4889C7   		movq	%rax, %rdi
 6189 107c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6189      00
 6190              	.LVL484:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6191              		.loc 3 570 18 view .LVU1614
 6192              	.LBE2629:
 6193              	.LBE2630:
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6194              		.loc 1 612 78 view .LVU1615
 6195 1081 488B4424 		movq	32(%rsp), %rax
 6195      20
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6196              		.loc 1 612 81 view .LVU1616
 6197 1086 F30F1000 		movss	(%rax), %xmm0
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6198              		.loc 1 612 82 view .LVU1617
 6199 108a F30F5844 		addss	40(%rsp), %xmm0
 6199      2428
 6200              	.LVL485:
 6201              	.LBB2631:
 6202              	.LBI2631:
GAS LISTING /tmp/ccvlKtfa.s 			page 340


 224:/usr/include/c++/9.2.0/ostream ****       {
 6203              		.loc 3 224 7 is_stmt 1 view .LVU1618
 6204              	.LBB2632:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6205              		.loc 3 228 43 is_stmt 0 view .LVU1619
 6206 1090 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 6207              	.LVL486:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6208              		.loc 3 228 43 view .LVU1620
 6209 1094 4889DF   		movq	%rbx, %rdi
 6210 1097 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 6210      00
 6211              	.LVL487:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6212              		.loc 3 228 43 view .LVU1621
 6213 109c 4889C3   		movq	%rax, %rbx
 6214              	.LVL488:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6215              		.loc 3 228 43 view .LVU1622
 6216              	.LBE2632:
 6217              	.LBE2631:
 6218              	.LBB2633:
 6219              	.LBI2633:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6220              		.loc 3 565 5 is_stmt 1 view .LVU1623
 565:/usr/include/c++/9.2.0/ostream ****     {
 6221              		.loc 3 565 5 is_stmt 0 view .LVU1624
 6222              	.LBE2633:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6223              		.loc 4 335 2 is_stmt 1 view .LVU1625
 6224              	.LBB2635:
 6225              	.LBB2634:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6226              		.loc 3 570 18 is_stmt 0 view .LVU1626
 6227 109f BA010000 		movl	$1, %edx
 6227      00
 6228 10a4 488D3500 		leaq	.LC38(%rip), %rsi
 6228      000000
 6229 10ab 4889C7   		movq	%rax, %rdi
 6230 10ae E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6230      00
 6231              	.LVL489:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6232              		.loc 3 570 18 view .LVU1627
 6233              	.LBE2634:
 6234              	.LBE2635:
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6235              		.loc 1 612 104 view .LVU1628
 6236 10b3 488B4424 		movq	32(%rsp), %rax
 6236      20
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6237              		.loc 1 612 107 view .LVU1629
 6238 10b8 F30F1040 		movss	4(%rax), %xmm0
 6238      04
 612:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 6239              		.loc 1 612 108 view .LVU1630
 6240 10bd F30F5844 		addss	44(%rsp), %xmm0
GAS LISTING /tmp/ccvlKtfa.s 			page 341


 6240      242C
 6241              	.LVL490:
 6242              	.LBB2636:
 6243              	.LBI2636:
 224:/usr/include/c++/9.2.0/ostream ****       {
 6244              		.loc 3 224 7 is_stmt 1 view .LVU1631
 6245              	.LBB2637:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6246              		.loc 3 228 43 is_stmt 0 view .LVU1632
 6247 10c3 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 6248              	.LVL491:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6249              		.loc 3 228 43 view .LVU1633
 6250 10c7 4889DF   		movq	%rbx, %rdi
 6251 10ca E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 6251      00
 6252              	.LVL492:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6253              		.loc 3 228 43 view .LVU1634
 6254 10cf 4889C3   		movq	%rax, %rbx
 6255              	.LVL493:
 228:/usr/include/c++/9.2.0/ostream ****       }
 6256              		.loc 3 228 43 view .LVU1635
 6257              	.LBE2637:
 6258              	.LBE2636:
 6259              	.LBB2638:
 6260              	.LBI2638:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6261              		.loc 3 565 5 is_stmt 1 view .LVU1636
 565:/usr/include/c++/9.2.0/ostream ****     {
 6262              		.loc 3 565 5 is_stmt 0 view .LVU1637
 6263              	.LBE2638:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6264              		.loc 4 335 2 is_stmt 1 view .LVU1638
 6265              	.LBB2640:
 6266              	.LBB2639:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6267              		.loc 3 570 18 is_stmt 0 view .LVU1639
 6268 10d2 BA010000 		movl	$1, %edx
 6268      00
 6269 10d7 488D3500 		leaq	.LC27(%rip), %rsi
 6269      000000
 6270 10de 4889C7   		movq	%rax, %rdi
 6271 10e1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6271      00
 6272              	.LVL494:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6273              		.loc 3 570 18 view .LVU1640
 6274              	.LBE2639:
 6275              	.LBE2640:
 6276              	.LBB2641:
 6277              	.LBI2641:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6278              		.loc 3 108 7 is_stmt 1 view .LVU1641
 6279              	.LBB2642:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6280              		.loc 3 113 13 is_stmt 0 view .LVU1642
GAS LISTING /tmp/ccvlKtfa.s 			page 342


 6281 10e6 4889DF   		movq	%rbx, %rdi
 6282 10e9 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6282      00
 6283              	.LVL495:
 6284              	.LEHE28:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6285              		.loc 3 113 13 view .LVU1643
 6286              	.LBE2642:
 6287              	.LBE2641:
 6288              	.LBB2643:
 6289              	.LBI2643:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6290              		.loc 10 657 7 is_stmt 1 view .LVU1644
 6291              	.LBB2644:
 6292              	.LBI2644:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6293              		.loc 10 229 7 view .LVU1645
 6294              	.LBB2645:
 6295              	.LBB2646:
 6296              	.LBI2646:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6297              		.loc 10 221 7 view .LVU1646
 6298              	.LBB2647:
 6299              	.LBI2647:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6300              		.loc 10 186 7 view .LVU1647
 6301              	.LBB2648:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6302              		.loc 10 187 28 is_stmt 0 view .LVU1648
 6303 10ee 488BBC24 		movq	176(%rsp), %rdi
 6303      B0000000 
 6304              	.LVL496:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6305              		.loc 10 187 28 view .LVU1649
 6306              	.LBE2648:
 6307              	.LBE2647:
 6308              	.LBB2649:
 6309              	.LBI2649:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6310              		.loc 10 200 7 is_stmt 1 view .LVU1650
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6311              		.loc 10 200 7 is_stmt 0 view .LVU1651
 6312              	.LBE2649:
 6313              	.LBE2646:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6314              		.loc 10 231 2 view .LVU1652
 6315 10f6 488D8424 		leaq	192(%rsp), %rax
 6315      C0000000 
 6316 10fe 4839C7   		cmpq	%rax, %rdi
 6317 1101 7405     		je	.L252
 6318              	.LVL497:
 6319              	.LBB2650:
 6320              	.LBI2650:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6321              		.loc 10 236 7 is_stmt 1 view .LVU1653
 6322              	.LBB2651:
 6323              	.LBB2652:
GAS LISTING /tmp/ccvlKtfa.s 			page 343


 6324              	.LBI2652:
 6325              		.loc 13 469 7 view .LVU1654
 6326              	.LBB2653:
 6327              	.LBI2653:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6328              		.loc 12 119 7 view .LVU1655
 6329              	.LBB2654:
 6330              		.loc 12 128 19 is_stmt 0 view .LVU1656
 6331 1103 E8000000 		call	_ZdlPv@PLT
 6331      00
 6332              	.LVL498:
 6333              	.L252:
 6334              		.loc 12 128 19 view .LVU1657
 6335              	.LBE2654:
 6336              	.LBE2653:
 6337              	.LBE2652:
 6338              	.LBE2651:
 6339              	.LBE2650:
 6340              	.LBE2645:
 6341              	.LBE2644:
 6342              	.LBB2655:
 6343              	.LBI2655:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6344              		.loc 10 150 14 is_stmt 1 view .LVU1658
 6345              	.LBB2656:
 6346              	.LBI2656:
 6347              		.loc 11 153 7 view .LVU1659
 6348              	.LBB2657:
 6349              	.LBI2657:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6350              		.loc 12 89 7 view .LVU1660
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6351              		.loc 12 89 7 is_stmt 0 view .LVU1661
 6352              	.LBE2657:
 6353              	.LBE2656:
 6354              	.LBE2655:
 6355              	.LBE2643:
 6356              	.LBB2658:
 6357              	.LBI2658:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6358              		.loc 10 657 7 is_stmt 1 view .LVU1662
 6359              	.LBB2659:
 6360              	.LBI2659:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6361              		.loc 10 229 7 view .LVU1663
 6362              	.LBB2660:
 6363              	.LBB2661:
 6364              	.LBI2661:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6365              		.loc 10 221 7 view .LVU1664
 6366              	.LBB2662:
 6367              	.LBI2662:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6368              		.loc 10 186 7 view .LVU1665
 6369              	.LBB2663:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6370              		.loc 10 187 28 is_stmt 0 view .LVU1666
GAS LISTING /tmp/ccvlKtfa.s 			page 344


 6371 1108 488BBC24 		movq	144(%rsp), %rdi
 6371      90000000 
 6372              	.LVL499:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6373              		.loc 10 187 28 view .LVU1667
 6374              	.LBE2663:
 6375              	.LBE2662:
 6376              	.LBB2664:
 6377              	.LBI2664:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6378              		.loc 10 200 7 is_stmt 1 view .LVU1668
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6379              		.loc 10 200 7 is_stmt 0 view .LVU1669
 6380              	.LBE2664:
 6381              	.LBE2661:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6382              		.loc 10 231 2 view .LVU1670
 6383 1110 488D8424 		leaq	160(%rsp), %rax
 6383      A0000000 
 6384 1118 4839C7   		cmpq	%rax, %rdi
 6385 111b 7405     		je	.L253
 6386              	.LVL500:
 6387              	.LBB2665:
 6388              	.LBI2665:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6389              		.loc 10 236 7 is_stmt 1 view .LVU1671
 6390              	.LBB2666:
 6391              	.LBB2667:
 6392              	.LBI2667:
 6393              		.loc 13 469 7 view .LVU1672
 6394              	.LBB2668:
 6395              	.LBI2668:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6396              		.loc 12 119 7 view .LVU1673
 6397              	.LBB2669:
 6398              		.loc 12 128 19 is_stmt 0 view .LVU1674
 6399 111d E8000000 		call	_ZdlPv@PLT
 6399      00
 6400              	.LVL501:
 6401              	.L253:
 6402              		.loc 12 128 19 view .LVU1675
 6403              	.LBE2669:
 6404              	.LBE2668:
 6405              	.LBE2667:
 6406              	.LBE2666:
 6407              	.LBE2665:
 6408              	.LBE2660:
 6409              	.LBE2659:
 6410              	.LBB2670:
 6411              	.LBI2670:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6412              		.loc 10 150 14 is_stmt 1 view .LVU1676
 6413              	.LBB2671:
 6414              	.LBI2671:
 6415              		.loc 11 153 7 view .LVU1677
 6416              	.LBB2672:
 6417              	.LBI2672:
GAS LISTING /tmp/ccvlKtfa.s 			page 345


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6418              		.loc 12 89 7 view .LVU1678
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6419              		.loc 12 89 7 is_stmt 0 view .LVU1679
 6420              	.LBE2672:
 6421              	.LBE2671:
 6422              	.LBE2670:
 6423              	.LBE2658:
 613:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 6424              		.loc 1 613 2 is_stmt 1 view .LVU1680
 613:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 6425              		.loc 1 613 26 is_stmt 0 view .LVU1681
 6426 1122 488B0500 		movq	obstacles(%rip), %rax
 6426      000000
 6427 1129 488D7830 		leaq	48(%rax), %rdi
 613:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 6428              		.loc 1 613 46 view .LVU1682
 6429 112d 488D7424 		leaq	32(%rsp), %rsi
 6429      20
 6430              	.LEHB29:
 6431 1132 E8000000 		call	_Z15getIntersectionPK8obstaclePK4vect@PLT
 6431      00
 6432              	.LVL502:
 6433 1137 660FD644 		movq	%xmm0, 24(%rsp)
 6433      2418
 613:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 6434              		.loc 1 613 56 view .LVU1683
 6435 113d 488DBC24 		leaq	176(%rsp), %rdi
 6435      B0000000 
 6436 1145 488D7424 		leaq	24(%rsp), %rsi
 6436      18
 6437 114a E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 6437      00
 6438              	.LVL503:
 6439              	.LEHE29:
 6440              	.LBB2673:
 6441              	.LBI2673:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 6442              		.loc 10 6416 5 is_stmt 1 view .LVU1684
 6443              	.LBB2674:
 6444              	.LBB2675:
 6445              	.LBI2675:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6446              		.loc 10 930 7 view .LVU1685
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6447              		.loc 10 930 7 is_stmt 0 view .LVU1686
 6448              	.LBE2675:
 6449              	.LBB2676:
 6450              	.LBI2676:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 6451              		.loc 10 2312 7 is_stmt 1 view .LVU1687
 6452              	.LBB2677:
 6453              	.LBI2677:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6454              		.loc 10 186 7 view .LVU1688
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6455              		.loc 10 186 7 is_stmt 0 view .LVU1689
GAS LISTING /tmp/ccvlKtfa.s 			page 346


 6456              	.LBE2677:
 6457              	.LBE2676:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6458              		.loc 10 6421 30 view .LVU1690
 6459 114f 488B9424 		movq	184(%rsp), %rdx
 6459      B8000000 
 6460 1157 488BB424 		movq	176(%rsp), %rsi
 6460      B0000000 
 6461 115f 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6461      000000
 6462              	.LEHB30:
 6463 1166 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6463      00
 6464              	.LVL504:
 6465 116b 4889C7   		movq	%rax, %rdi
 6466              	.LVL505:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6467              		.loc 10 6421 30 view .LVU1691
 6468              	.LBE2674:
 6469              	.LBE2673:
 6470              	.LBB2678:
 6471              	.LBI2678:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6472              		.loc 3 108 7 is_stmt 1 view .LVU1692
 6473              	.LBB2679:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6474              		.loc 3 113 13 is_stmt 0 view .LVU1693
 6475 116e E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6475      00
 6476              	.LVL506:
 6477              	.LEHE30:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6478              		.loc 3 113 13 view .LVU1694
 6479              	.LBE2679:
 6480              	.LBE2678:
 6481              	.LBB2680:
 6482              	.LBI2680:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6483              		.loc 10 657 7 is_stmt 1 view .LVU1695
 6484              	.LBB2681:
 6485              	.LBI2681:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6486              		.loc 10 229 7 view .LVU1696
 6487              	.LBB2682:
 6488              	.LBB2683:
 6489              	.LBI2683:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6490              		.loc 10 221 7 view .LVU1697
 6491              	.LBB2684:
 6492              	.LBI2684:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6493              		.loc 10 186 7 view .LVU1698
 6494              	.LBB2685:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6495              		.loc 10 187 28 is_stmt 0 view .LVU1699
 6496 1173 488BBC24 		movq	176(%rsp), %rdi
 6496      B0000000 
GAS LISTING /tmp/ccvlKtfa.s 			page 347


 6497              	.LVL507:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6498              		.loc 10 187 28 view .LVU1700
 6499              	.LBE2685:
 6500              	.LBE2684:
 6501              	.LBB2686:
 6502              	.LBI2686:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6503              		.loc 10 200 7 is_stmt 1 view .LVU1701
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6504              		.loc 10 200 7 is_stmt 0 view .LVU1702
 6505              	.LBE2686:
 6506              	.LBE2683:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6507              		.loc 10 231 2 view .LVU1703
 6508 117b 488D8424 		leaq	192(%rsp), %rax
 6508      C0000000 
 6509 1183 4839C7   		cmpq	%rax, %rdi
 6510 1186 7405     		je	.L254
 6511              	.LVL508:
 6512              	.LBB2687:
 6513              	.LBI2687:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6514              		.loc 10 236 7 is_stmt 1 view .LVU1704
 6515              	.LBB2688:
 6516              	.LBB2689:
 6517              	.LBI2689:
 6518              		.loc 13 469 7 view .LVU1705
 6519              	.LBB2690:
 6520              	.LBI2690:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6521              		.loc 12 119 7 view .LVU1706
 6522              	.LBB2691:
 6523              		.loc 12 128 19 is_stmt 0 view .LVU1707
 6524 1188 E8000000 		call	_ZdlPv@PLT
 6524      00
 6525              	.LVL509:
 6526              	.L254:
 6527              		.loc 12 128 19 view .LVU1708
 6528              	.LBE2691:
 6529              	.LBE2690:
 6530              	.LBE2689:
 6531              	.LBE2688:
 6532              	.LBE2687:
 6533              	.LBE2682:
 6534              	.LBE2681:
 6535              	.LBB2692:
 6536              	.LBI2692:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6537              		.loc 10 150 14 is_stmt 1 view .LVU1709
 6538              	.LBB2693:
 6539              	.LBI2693:
 6540              		.loc 11 153 7 view .LVU1710
 6541              	.LBB2694:
 6542              	.LBI2694:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6543              		.loc 12 89 7 view .LVU1711
GAS LISTING /tmp/ccvlKtfa.s 			page 348


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6544              		.loc 12 89 7 is_stmt 0 view .LVU1712
 6545              	.LBE2694:
 6546              	.LBE2693:
 6547              	.LBE2692:
 6548              	.LBE2680:
 614:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 6549              		.loc 1 614 2 is_stmt 1 view .LVU1713
 614:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 6550              		.loc 1 614 26 is_stmt 0 view .LVU1714
 6551 118d 488D5C24 		leaq	32(%rsp), %rbx
 6551      20
 6552 1192 4889DF   		movq	%rbx, %rdi
 6553              	.LEHB31:
 6554 1195 E8000000 		call	_Z16hasIntersectionsPK4vect
 6554      00
 6555              	.LVL510:
 614:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 6556              		.loc 1 614 29 view .LVU1715
 6557 119a 0FB6F0   		movzbl	%al, %esi
 6558              	.LVL511:
 6559              	.LBB2695:
 6560              	.LBI2695:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 6561              		.loc 3 174 7 is_stmt 1 view .LVU1716
 6562              	.LBB2696:
 175:/usr/include/c++/9.2.0/ostream **** 
 6563              		.loc 3 175 29 is_stmt 0 view .LVU1717
 6564 119d 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6564      000000
 6565 11a4 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 6565      00
 6566              	.LVL512:
 175:/usr/include/c++/9.2.0/ostream **** 
 6567              		.loc 3 175 29 view .LVU1718
 6568 11a9 4889C7   		movq	%rax, %rdi
 6569              	.LVL513:
 175:/usr/include/c++/9.2.0/ostream **** 
 6570              		.loc 3 175 29 view .LVU1719
 6571              	.LBE2696:
 6572              	.LBE2695:
 6573              	.LBB2697:
 6574              	.LBI2697:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6575              		.loc 3 108 7 is_stmt 1 view .LVU1720
 6576              	.LBB2698:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6577              		.loc 3 113 13 is_stmt 0 view .LVU1721
 6578 11ac E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6578      00
 6579              	.LVL514:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6580              		.loc 3 113 13 view .LVU1722
 6581              	.LBE2698:
 6582              	.LBE2697:
 615:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 6583              		.loc 1 615 2 is_stmt 1 view .LVU1723
GAS LISTING /tmp/ccvlKtfa.s 			page 349


 615:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 6584              		.loc 1 615 26 is_stmt 0 view .LVU1724
 6585 11b1 488B0500 		movq	obstacles(%rip), %rax
 6585      000000
 6586 11b8 488D7830 		leaq	48(%rax), %rdi
 615:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 6587              		.loc 1 615 25 view .LVU1725
 6588 11bc 4889DE   		movq	%rbx, %rsi
 6589 11bf E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 6589      00
 6590              	.LVL515:
 615:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 6591              		.loc 1 615 46 view .LVU1726
 6592 11c4 0FB6F0   		movzbl	%al, %esi
 6593              	.LVL516:
 6594              	.LBB2699:
 6595              	.LBI2699:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 6596              		.loc 3 174 7 is_stmt 1 view .LVU1727
 6597              	.LBB2700:
 175:/usr/include/c++/9.2.0/ostream **** 
 6598              		.loc 3 175 29 is_stmt 0 view .LVU1728
 6599 11c7 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6599      000000
 6600 11ce E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 6600      00
 6601              	.LVL517:
 175:/usr/include/c++/9.2.0/ostream **** 
 6602              		.loc 3 175 29 view .LVU1729
 6603 11d3 4889C7   		movq	%rax, %rdi
 6604              	.LVL518:
 175:/usr/include/c++/9.2.0/ostream **** 
 6605              		.loc 3 175 29 view .LVU1730
 6606              	.LBE2700:
 6607              	.LBE2699:
 6608              	.LBB2701:
 6609              	.LBI2701:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6610              		.loc 3 108 7 is_stmt 1 view .LVU1731
 6611              	.LBB2702:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6612              		.loc 3 113 13 is_stmt 0 view .LVU1732
 6613 11d6 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6613      00
 6614              	.LVL519:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6615              		.loc 3 113 13 view .LVU1733
 6616              	.LBE2702:
 6617              	.LBE2701:
 616:Src/main.cpp  **** 
 6618              		.loc 1 616 2 is_stmt 1 view .LVU1734
 616:Src/main.cpp  **** 
 6619              		.loc 1 616 26 is_stmt 0 view .LVU1735
 6620 11db 4889DF   		movq	%rbx, %rdi
 6621 11de E8000000 		call	_Z16hasIntersectionsPK4vect
 6621      00
 6622              	.LVL520:
GAS LISTING /tmp/ccvlKtfa.s 			page 350


 616:Src/main.cpp  **** 
 6623              		.loc 1 616 29 view .LVU1736
 6624 11e3 0FB6F0   		movzbl	%al, %esi
 6625              	.LVL521:
 6626              	.LBB2703:
 6627              	.LBI2703:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 6628              		.loc 3 174 7 is_stmt 1 view .LVU1737
 6629              	.LBB2704:
 175:/usr/include/c++/9.2.0/ostream **** 
 6630              		.loc 3 175 29 is_stmt 0 view .LVU1738
 6631 11e6 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6631      000000
 6632 11ed E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 6632      00
 6633              	.LVL522:
 175:/usr/include/c++/9.2.0/ostream **** 
 6634              		.loc 3 175 29 view .LVU1739
 6635 11f2 4889C3   		movq	%rax, %rbx
 6636              	.LVL523:
 175:/usr/include/c++/9.2.0/ostream **** 
 6637              		.loc 3 175 29 view .LVU1740
 6638              	.LBE2704:
 6639              	.LBE2703:
 6640              	.LBB2705:
 6641              	.LBI2705:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6642              		.loc 3 565 5 is_stmt 1 view .LVU1741
 565:/usr/include/c++/9.2.0/ostream ****     {
 6643              		.loc 3 565 5 is_stmt 0 view .LVU1742
 6644              	.LBE2705:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6645              		.loc 4 335 2 is_stmt 1 view .LVU1743
 6646              	.LBB2707:
 6647              	.LBB2706:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6648              		.loc 3 570 18 is_stmt 0 view .LVU1744
 6649 11f5 BA010000 		movl	$1, %edx
 6649      00
 6650 11fa 488D3500 		leaq	.LC39(%rip), %rsi
 6650      000000
 6651 1201 4889C7   		movq	%rax, %rdi
 6652 1204 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6652      00
 6653              	.LVL524:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6654              		.loc 3 570 18 view .LVU1745
 6655              	.LBE2706:
 6656              	.LBE2707:
 616:Src/main.cpp  **** 
 6657              		.loc 1 616 52 view .LVU1746
 6658 1209 488B7C24 		movq	32(%rsp), %rdi
 6658      20
 6659 120e E8000000 		call	_Z11isDotInsidePK6coords
 6659      00
 6660              	.LVL525:
 616:Src/main.cpp  **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 351


 6661              		.loc 1 616 56 view .LVU1747
 6662 1213 0FB6F0   		movzbl	%al, %esi
 6663              	.LVL526:
 6664              	.LBB2708:
 6665              	.LBI2708:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 6666              		.loc 3 174 7 is_stmt 1 view .LVU1748
 6667              	.LBB2709:
 175:/usr/include/c++/9.2.0/ostream **** 
 6668              		.loc 3 175 29 is_stmt 0 view .LVU1749
 6669 1216 4889DF   		movq	%rbx, %rdi
 6670 1219 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 6670      00
 6671              	.LVL527:
 175:/usr/include/c++/9.2.0/ostream **** 
 6672              		.loc 3 175 29 view .LVU1750
 6673 121e 4889C3   		movq	%rax, %rbx
 6674              	.LVL528:
 175:/usr/include/c++/9.2.0/ostream **** 
 6675              		.loc 3 175 29 view .LVU1751
 6676              	.LBE2709:
 6677              	.LBE2708:
 6678              	.LBB2710:
 6679              	.LBI2710:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6680              		.loc 3 565 5 is_stmt 1 view .LVU1752
 565:/usr/include/c++/9.2.0/ostream ****     {
 6681              		.loc 3 565 5 is_stmt 0 view .LVU1753
 6682              	.LBE2710:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6683              		.loc 4 335 2 is_stmt 1 view .LVU1754
 6684              	.LBB2712:
 6685              	.LBB2711:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6686              		.loc 3 570 18 is_stmt 0 view .LVU1755
 6687 1221 BA010000 		movl	$1, %edx
 6687      00
 6688 1226 488D3500 		leaq	.LC39(%rip), %rsi
 6688      000000
 6689 122d 4889C7   		movq	%rax, %rdi
 6690 1230 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6690      00
 6691              	.LVL529:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6692              		.loc 3 570 18 view .LVU1756
 6693              	.LBE2711:
 6694              	.LBE2712:
 616:Src/main.cpp  **** 
 6695              		.loc 1 616 79 view .LVU1757
 6696 1235 488D7C24 		leaq	112(%rsp), %rdi
 6696      70
 6697 123a E8000000 		call	_Z11isDotInsidePK6coords
 6697      00
 6698              	.LVL530:
 616:Src/main.cpp  **** 
 6699              		.loc 1 616 87 view .LVU1758
 6700 123f 0FB6F0   		movzbl	%al, %esi
GAS LISTING /tmp/ccvlKtfa.s 			page 352


 6701              	.LVL531:
 6702              	.LBB2713:
 6703              	.LBI2713:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 6704              		.loc 3 174 7 is_stmt 1 view .LVU1759
 6705              	.LBB2714:
 175:/usr/include/c++/9.2.0/ostream **** 
 6706              		.loc 3 175 29 is_stmt 0 view .LVU1760
 6707 1242 4889DF   		movq	%rbx, %rdi
 6708 1245 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 6708      00
 6709              	.LVL532:
 175:/usr/include/c++/9.2.0/ostream **** 
 6710              		.loc 3 175 29 view .LVU1761
 6711 124a 4889C7   		movq	%rax, %rdi
 6712              	.LVL533:
 175:/usr/include/c++/9.2.0/ostream **** 
 6713              		.loc 3 175 29 view .LVU1762
 6714              	.LBE2714:
 6715              	.LBE2713:
 6716              	.LBB2715:
 6717              	.LBI2715:
 108:/usr/include/c++/9.2.0/ostream ****       {
 6718              		.loc 3 108 7 is_stmt 1 view .LVU1763
 6719              	.LBB2716:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6720              		.loc 3 113 13 is_stmt 0 view .LVU1764
 6721 124d E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 6721      00
 6722              	.LVL534:
 113:/usr/include/c++/9.2.0/ostream ****       }
 6723              		.loc 3 113 13 view .LVU1765
 6724              	.LBE2716:
 6725              	.LBE2715:
 624:Src/main.cpp  **** 		exit(0);
 6726              		.loc 1 624 2 is_stmt 1 view .LVU1766
 6727 1252 837C240C 		cmpl	$1, 12(%rsp)
 6727      01
 6728 1257 0F840F01 		je	.L275
 6728      0000
 635:Src/main.cpp  **** 	glutInit(&argc, argv);
 6729              		.loc 1 635 3 view .LVU1767
 635:Src/main.cpp  **** 	glutInit(&argc, argv);
 6730              		.loc 1 635 11 is_stmt 0 view .LVU1768
 6731 125d 488D3500 		leaq	.LC40(%rip), %rsi
 6731      000000
 6732 1264 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6732      000000
 6733 126b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6733      00
 6734              	.LVL535:
 636:Src/main.cpp  **** 	cout << "dispmode\n";
 6735              		.loc 1 636 2 is_stmt 1 view .LVU1769
 636:Src/main.cpp  **** 	cout << "dispmode\n";
 6736              		.loc 1 636 10 is_stmt 0 view .LVU1770
 6737 1270 488D7C24 		leaq	12(%rsp), %rdi
 6737      0C
GAS LISTING /tmp/ccvlKtfa.s 			page 353


 6738 1275 4889EE   		movq	%rbp, %rsi
 6739 1278 E8000000 		call	glutInit@PLT
 6739      00
 6740              	.LVL536:
 637:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 6741              		.loc 1 637 2 is_stmt 1 view .LVU1771
 637:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 6742              		.loc 1 637 10 is_stmt 0 view .LVU1772
 6743 127d 488D3500 		leaq	.LC41(%rip), %rsi
 6743      000000
 6744 1284 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6744      000000
 6745 128b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6745      00
 6746              	.LVL537:
 638:Src/main.cpp  **** 	glutCreateWindow("floating");
 6747              		.loc 1 638 2 is_stmt 1 view .LVU1773
 638:Src/main.cpp  **** 	glutCreateWindow("floating");
 6748              		.loc 1 638 21 is_stmt 0 view .LVU1774
 6749 1290 BF020000 		movl	$2, %edi
 6749      00
 6750 1295 E8000000 		call	glutInitDisplayMode@PLT
 6750      00
 6751              	.LVL538:
 639:Src/main.cpp  **** 	cout << "reshape\n";
 6752              		.loc 1 639 2 is_stmt 1 view .LVU1775
 639:Src/main.cpp  **** 	cout << "reshape\n";
 6753              		.loc 1 639 18 is_stmt 0 view .LVU1776
 6754 129a 488D3D00 		leaq	.LC42(%rip), %rdi
 6754      000000
 6755 12a1 E8000000 		call	glutCreateWindow@PLT
 6755      00
 6756              	.LVL539:
 640:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 6757              		.loc 1 640 2 is_stmt 1 view .LVU1777
 640:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 6758              		.loc 1 640 10 is_stmt 0 view .LVU1778
 6759 12a6 488D3500 		leaq	.LC43(%rip), %rsi
 6759      000000
 6760 12ad 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6760      000000
 6761 12b4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6761      00
 6762              	.LVL540:
 641:Src/main.cpp  **** 	cout << "dispfunc\n";
 6763              		.loc 1 641 2 is_stmt 1 view .LVU1779
 641:Src/main.cpp  **** 	cout << "dispfunc\n";
 6764              		.loc 1 641 17 is_stmt 0 view .LVU1780
 6765 12b9 488D3D00 		leaq	_Z7reshapeii(%rip), %rdi
 6765      000000
 6766 12c0 E8000000 		call	glutReshapeFunc@PLT
 6766      00
 6767              	.LVL541:
 642:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 6768              		.loc 1 642 2 is_stmt 1 view .LVU1781
 642:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 6769              		.loc 1 642 10 is_stmt 0 view .LVU1782
GAS LISTING /tmp/ccvlKtfa.s 			page 354


 6770 12c5 488D3500 		leaq	.LC44(%rip), %rsi
 6770      000000
 6771 12cc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6771      000000
 6772 12d3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6772      00
 6773              	.LVL542:
 643:Src/main.cpp  ****     cout << "keyfunc\n";
 6774              		.loc 1 643 2 is_stmt 1 view .LVU1783
 643:Src/main.cpp  ****     cout << "keyfunc\n";
 6775              		.loc 1 643 17 is_stmt 0 view .LVU1784
 6776 12d8 488D3D00 		leaq	_Z11renderScenev(%rip), %rdi
 6776      000000
 6777 12df E8000000 		call	glutDisplayFunc@PLT
 6777      00
 6778              	.LVL543:
 644:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 6779              		.loc 1 644 5 is_stmt 1 view .LVU1785
 644:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 6780              		.loc 1 644 13 is_stmt 0 view .LVU1786
 6781 12e4 488D3500 		leaq	.LC45(%rip), %rsi
 6781      000000
 6782 12eb 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6782      000000
 6783 12f2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6783      00
 6784              	.LVL544:
 645:Src/main.cpp  **** 	cout << "timer\n";
 6785              		.loc 1 645 5 is_stmt 1 view .LVU1787
 645:Src/main.cpp  **** 	cout << "timer\n";
 6786              		.loc 1 645 21 is_stmt 0 view .LVU1788
 6787 12f7 488D3D00 		leaq	_Z14handleKeypresshii(%rip), %rdi
 6787      000000
 6788 12fe E8000000 		call	glutKeyboardFunc@PLT
 6788      00
 6789              	.LVL545:
 646:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 6790              		.loc 1 646 2 is_stmt 1 view .LVU1789
 646:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 6791              		.loc 1 646 10 is_stmt 0 view .LVU1790
 6792 1303 488D3500 		leaq	.LC46(%rip), %rsi
 6792      000000
 6793 130a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6793      000000
 6794 1311 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6794      00
 6795              	.LVL546:
 647:Src/main.cpp  **** 	cout << "mainloop\n";
 6796              		.loc 1 647 2 is_stmt 1 view .LVU1791
 647:Src/main.cpp  **** 	cout << "mainloop\n";
 6797              		.loc 1 647 15 is_stmt 0 view .LVU1792
 6798 1316 BA000000 		movl	$0, %edx
 6798      00
 6799 131b 488D3500 		leaq	_Z4timfi(%rip), %rsi
 6799      000000
 6800 1322 BF900100 		movl	$400, %edi
 6800      00
GAS LISTING /tmp/ccvlKtfa.s 			page 355


 6801 1327 E8000000 		call	glutTimerFunc@PLT
 6801      00
 6802              	.LVL547:
 648:Src/main.cpp  **** 	glutMainLoop();
 6803              		.loc 1 648 2 is_stmt 1 view .LVU1793
 648:Src/main.cpp  **** 	glutMainLoop();
 6804              		.loc 1 648 10 is_stmt 0 view .LVU1794
 6805 132c 488D3500 		leaq	.LC47(%rip), %rsi
 6805      000000
 6806 1333 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6806      000000
 6807 133a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 6807      00
 6808              	.LVL548:
 649:Src/main.cpp  **** 
 6809              		.loc 1 649 2 is_stmt 1 view .LVU1795
 649:Src/main.cpp  **** 
 6810              		.loc 1 649 14 is_stmt 0 view .LVU1796
 6811 133f E8000000 		call	glutMainLoop@PLT
 6811      00
 6812              	.LVL549:
 652:Src/main.cpp  **** }
 6813              		.loc 1 652 2 is_stmt 1 view .LVU1797
 6814              		.loc 1 653 1 is_stmt 0 view .LVU1798
 6815 1344 488B8424 		movq	232(%rsp), %rax
 6815      E8000000 
 6816 134c 64483304 		xorq	%fs:40, %rax
 6816      25280000 
 6816      00
 6817 1355 0F85C800 		jne	.L276
 6817      0000
 6818 135b B8000000 		movl	$0, %eax
 6818      00
 6819 1360 4881C4F0 		addq	$240, %rsp
 6819      000000
 6820              		.cfi_remember_state
 6821              		.cfi_def_cfa_offset 32
 6822 1367 5B       		popq	%rbx
 6823              		.cfi_def_cfa_offset 24
 6824 1368 5D       		popq	%rbp
 6825              		.cfi_def_cfa_offset 16
 6826              	.LVL550:
 6827              		.loc 1 653 1 view .LVU1799
 6828 1369 415C     		popq	%r12
 6829              		.cfi_def_cfa_offset 8
 6830              	.LVL551:
 6831              		.loc 1 653 1 view .LVU1800
 6832 136b C3       		ret
 6833              	.LVL552:
 6834              	.L275:
 6835              		.cfi_restore_state
 625:Src/main.cpp  **** 	// initGraph(p);
 6836              		.loc 1 625 3 is_stmt 1 view .LVU1801
 625:Src/main.cpp  **** 	// initGraph(p);
 6837              		.loc 1 625 7 is_stmt 0 view .LVU1802
 6838 136c BF000000 		movl	$0, %edi
 6838      00
GAS LISTING /tmp/ccvlKtfa.s 			page 356


 6839 1371 E8000000 		call	exit@PLT
 6839      00
 6840              	.LVL553:
 6841              	.L269:
 625:Src/main.cpp  **** 	// initGraph(p);
 6842              		.loc 1 625 7 view .LVU1803
 6843 1376 4889C3   		movq	%rax, %rbx
 6844              	.LVL554:
 6845              	.LBB2717:
 6846              	.LBI2717:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6847              		.loc 10 657 7 is_stmt 1 view .LVU1804
 6848              	.LBB2718:
 6849              	.LBI2718:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6850              		.loc 10 229 7 view .LVU1805
 6851              	.LBB2719:
 6852              	.LBB2720:
 6853              	.LBI2720:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6854              		.loc 10 221 7 view .LVU1806
 6855              	.LBB2721:
 6856              	.LBI2721:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6857              		.loc 10 186 7 view .LVU1807
 6858              	.LBB2722:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6859              		.loc 10 187 28 is_stmt 0 view .LVU1808
 6860 1379 488BBC24 		movq	176(%rsp), %rdi
 6860      B0000000 
 6861              	.LVL555:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6862              		.loc 10 187 28 view .LVU1809
 6863              	.LBE2722:
 6864              	.LBE2721:
 6865              	.LBB2723:
 6866              	.LBI2723:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6867              		.loc 10 200 7 is_stmt 1 view .LVU1810
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6868              		.loc 10 200 7 is_stmt 0 view .LVU1811
 6869              	.LBE2723:
 6870              	.LBE2720:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6871              		.loc 10 231 2 view .LVU1812
 6872 1381 488D8424 		leaq	192(%rsp), %rax
 6872      C0000000 
 6873 1389 4839C7   		cmpq	%rax, %rdi
 6874 138c 7405     		je	.L258
 6875              	.LVL556:
 6876              	.LBB2724:
 6877              	.LBI2724:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6878              		.loc 10 236 7 is_stmt 1 view .LVU1813
 6879              	.LBB2725:
 6880              	.LBB2726:
 6881              	.LBI2726:
GAS LISTING /tmp/ccvlKtfa.s 			page 357


 6882              		.loc 13 469 7 view .LVU1814
 6883              	.LBB2727:
 6884              	.LBI2727:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6885              		.loc 12 119 7 view .LVU1815
 6886              	.LBB2728:
 6887              		.loc 12 128 19 is_stmt 0 view .LVU1816
 6888 138e E8000000 		call	_ZdlPv@PLT
 6888      00
 6889              	.LVL557:
 6890              		.loc 12 128 19 view .LVU1817
 6891              	.LBE2728:
 6892              	.LBE2727:
 6893              	.LBE2726:
 6894              	.LBE2725:
 6895              	.LBE2724:
 6896              	.LBE2719:
 6897              	.LBE2718:
 6898              	.LBB2729:
 6899              	.LBI2729:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6900              		.loc 10 150 14 is_stmt 1 view .LVU1818
 6901              	.LBB2730:
 6902              	.LBI2730:
 6903              		.loc 11 153 7 view .LVU1819
 6904              	.LBB2731:
 6905              	.LBI2731:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6906              		.loc 12 89 7 view .LVU1820
 6907              	.L258:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6908              		.loc 12 89 7 is_stmt 0 view .LVU1821
 6909              	.LBE2731:
 6910              	.LBE2730:
 6911              	.LBE2729:
 6912              	.LBE2717:
 6913              	.LBB2732:
 6914              	.LBI2732:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6915              		.loc 10 657 7 is_stmt 1 discriminator 7 view .LVU1822
 6916              	.LBB2733:
 6917              	.LBI2733:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6918              		.loc 10 229 7 discriminator 7 view .LVU1823
 6919              	.LBB2734:
 6920              	.LBB2735:
 6921              	.LBI2735:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6922              		.loc 10 221 7 discriminator 7 view .LVU1824
 6923              	.LBB2736:
 6924              	.LBI2736:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6925              		.loc 10 186 7 discriminator 7 view .LVU1825
 6926              	.LBB2737:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6927              		.loc 10 187 28 is_stmt 0 discriminator 7 view .LVU1826
 6928 1393 488BBC24 		movq	144(%rsp), %rdi
GAS LISTING /tmp/ccvlKtfa.s 			page 358


 6928      90000000 
 6929              	.LVL558:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6930              		.loc 10 187 28 discriminator 7 view .LVU1827
 6931              	.LBE2737:
 6932              	.LBE2736:
 6933              	.LBB2738:
 6934              	.LBI2738:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6935              		.loc 10 200 7 is_stmt 1 discriminator 7 view .LVU1828
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6936              		.loc 10 200 7 is_stmt 0 discriminator 7 view .LVU1829
 6937              	.LBE2738:
 6938              	.LBE2735:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6939              		.loc 10 231 2 discriminator 7 view .LVU1830
 6940 139b 488D8424 		leaq	160(%rsp), %rax
 6940      A0000000 
 6941 13a3 4839C7   		cmpq	%rax, %rdi
 6942 13a6 7405     		je	.L259
 6943              	.LVL559:
 6944              	.LBB2739:
 6945              	.LBI2739:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6946              		.loc 10 236 7 is_stmt 1 view .LVU1831
 6947              	.LBB2740:
 6948              	.LBB2741:
 6949              	.LBI2741:
 6950              		.loc 13 469 7 view .LVU1832
 6951              	.LBB2742:
 6952              	.LBI2742:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6953              		.loc 12 119 7 view .LVU1833
 6954              	.LBB2743:
 6955              		.loc 12 128 19 is_stmt 0 view .LVU1834
 6956 13a8 E8000000 		call	_ZdlPv@PLT
 6956      00
 6957              	.LVL560:
 6958              	.L259:
 6959              		.loc 12 128 19 view .LVU1835
 6960              	.LBE2743:
 6961              	.LBE2742:
 6962              	.LBE2741:
 6963              	.LBE2740:
 6964              	.LBE2739:
 6965              	.LBE2734:
 6966              	.LBE2733:
 6967              	.LBB2744:
 6968              	.LBI2744:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6969              		.loc 10 150 14 is_stmt 1 view .LVU1836
 6970              	.LBB2745:
 6971              	.LBI2745:
 6972              		.loc 11 153 7 view .LVU1837
 6973              	.LBB2746:
 6974              	.LBI2746:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 359


 6975              		.loc 12 89 7 view .LVU1838
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6976              		.loc 12 89 7 is_stmt 0 view .LVU1839
 6977 13ad 4889DF   		movq	%rbx, %rdi
 6978 13b0 E8000000 		call	_Unwind_Resume@PLT
 6978      00
 6979              	.LVL561:
 6980              	.L268:
 6981 13b5 4889C3   		movq	%rax, %rbx
 6982 13b8 EBD9     		jmp	.L258
 6983              	.LVL562:
 6984              	.L271:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6985              		.loc 12 89 7 view .LVU1840
 6986 13ba 4889C3   		movq	%rax, %rbx
 6987              	.LVL563:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6988              		.loc 12 89 7 view .LVU1841
 6989              	.LBE2746:
 6990              	.LBE2745:
 6991              	.LBE2744:
 6992              	.LBE2732:
 6993              	.LBB2747:
 6994              	.LBI2747:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6995              		.loc 10 657 7 is_stmt 1 view .LVU1842
 6996              	.LBB2748:
 6997              	.LBI2748:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6998              		.loc 10 229 7 view .LVU1843
 6999              	.LBB2749:
 7000              	.LBB2750:
 7001              	.LBI2750:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7002              		.loc 10 221 7 view .LVU1844
 7003              	.LBB2751:
 7004              	.LBI2751:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7005              		.loc 10 186 7 view .LVU1845
 7006              	.LBB2752:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7007              		.loc 10 187 28 is_stmt 0 view .LVU1846
 7008 13bd 488BBC24 		movq	176(%rsp), %rdi
 7008      B0000000 
 7009              	.LVL564:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7010              		.loc 10 187 28 view .LVU1847
 7011              	.LBE2752:
 7012              	.LBE2751:
 7013              	.LBB2753:
 7014              	.LBI2753:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7015              		.loc 10 200 7 is_stmt 1 view .LVU1848
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7016              		.loc 10 200 7 is_stmt 0 view .LVU1849
 7017              	.LBE2753:
 7018              	.LBE2750:
GAS LISTING /tmp/ccvlKtfa.s 			page 360


 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7019              		.loc 10 231 2 view .LVU1850
 7020 13c5 488D8424 		leaq	192(%rsp), %rax
 7020      C0000000 
 7021 13cd 4839C7   		cmpq	%rax, %rdi
 7022 13d0 7405     		je	.L262
 7023              	.LVL565:
 7024              	.LBB2754:
 7025              	.LBI2754:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7026              		.loc 10 236 7 is_stmt 1 view .LVU1851
 7027              	.LBB2755:
 7028              	.LBB2756:
 7029              	.LBI2756:
 7030              		.loc 13 469 7 view .LVU1852
 7031              	.LBB2757:
 7032              	.LBI2757:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7033              		.loc 12 119 7 view .LVU1853
 7034              	.LBB2758:
 7035              		.loc 12 128 19 is_stmt 0 view .LVU1854
 7036 13d2 E8000000 		call	_ZdlPv@PLT
 7036      00
 7037              	.LVL566:
 7038              		.loc 12 128 19 view .LVU1855
 7039              	.LBE2758:
 7040              	.LBE2757:
 7041              	.LBE2756:
 7042              	.LBE2755:
 7043              	.LBE2754:
 7044              	.LBE2749:
 7045              	.LBE2748:
 7046              	.LBB2759:
 7047              	.LBI2759:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7048              		.loc 10 150 14 is_stmt 1 view .LVU1856
 7049              	.LBB2760:
 7050              	.LBI2760:
 7051              		.loc 11 153 7 view .LVU1857
 7052              	.LBB2761:
 7053              	.LBI2761:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7054              		.loc 12 89 7 view .LVU1858
 7055              	.L262:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7056              		.loc 12 89 7 is_stmt 0 view .LVU1859
 7057              	.LBE2761:
 7058              	.LBE2760:
 7059              	.LBE2759:
 7060              	.LBE2747:
 7061              	.LBB2762:
 7062              	.LBI2762:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7063              		.loc 10 657 7 is_stmt 1 discriminator 6 view .LVU1860
 7064              	.LBB2763:
 7065              	.LBI2763:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 361


 7066              		.loc 10 229 7 discriminator 6 view .LVU1861
 7067              	.LBB2764:
 7068              	.LBB2765:
 7069              	.LBI2765:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7070              		.loc 10 221 7 discriminator 6 view .LVU1862
 7071              	.LBB2766:
 7072              	.LBI2766:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7073              		.loc 10 186 7 discriminator 6 view .LVU1863
 7074              	.LBB2767:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7075              		.loc 10 187 28 is_stmt 0 discriminator 6 view .LVU1864
 7076 13d7 488BBC24 		movq	144(%rsp), %rdi
 7076      90000000 
 7077              	.LVL567:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7078              		.loc 10 187 28 discriminator 6 view .LVU1865
 7079              	.LBE2767:
 7080              	.LBE2766:
 7081              	.LBB2768:
 7082              	.LBI2768:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7083              		.loc 10 200 7 is_stmt 1 discriminator 6 view .LVU1866
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7084              		.loc 10 200 7 is_stmt 0 discriminator 6 view .LVU1867
 7085              	.LBE2768:
 7086              	.LBE2765:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7087              		.loc 10 231 2 discriminator 6 view .LVU1868
 7088 13df 488D8424 		leaq	160(%rsp), %rax
 7088      A0000000 
 7089 13e7 4839C7   		cmpq	%rax, %rdi
 7090 13ea 7405     		je	.L263
 7091              	.LVL568:
 7092              	.LBB2769:
 7093              	.LBI2769:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7094              		.loc 10 236 7 is_stmt 1 view .LVU1869
 7095              	.LBB2770:
 7096              	.LBB2771:
 7097              	.LBI2771:
 7098              		.loc 13 469 7 view .LVU1870
 7099              	.LBB2772:
 7100              	.LBI2772:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7101              		.loc 12 119 7 view .LVU1871
 7102              	.LBB2773:
 7103              		.loc 12 128 19 is_stmt 0 view .LVU1872
 7104 13ec E8000000 		call	_ZdlPv@PLT
 7104      00
 7105              	.LVL569:
 7106              	.L263:
 7107              		.loc 12 128 19 view .LVU1873
 7108              	.LBE2773:
 7109              	.LBE2772:
 7110              	.LBE2771:
GAS LISTING /tmp/ccvlKtfa.s 			page 362


 7111              	.LBE2770:
 7112              	.LBE2769:
 7113              	.LBE2764:
 7114              	.LBE2763:
 7115              	.LBB2774:
 7116              	.LBI2774:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7117              		.loc 10 150 14 is_stmt 1 view .LVU1874
 7118              	.LBB2775:
 7119              	.LBI2775:
 7120              		.loc 11 153 7 view .LVU1875
 7121              	.LBB2776:
 7122              	.LBI2776:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7123              		.loc 12 89 7 view .LVU1876
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7124              		.loc 12 89 7 is_stmt 0 view .LVU1877
 7125 13f1 4889DF   		movq	%rbx, %rdi
 7126 13f4 E8000000 		call	_Unwind_Resume@PLT
 7126      00
 7127              	.LVL570:
 7128              	.L270:
 7129 13f9 4889C3   		movq	%rax, %rbx
 7130 13fc EBD9     		jmp	.L262
 7131              	.L272:
 7132 13fe 4889C3   		movq	%rax, %rbx
 7133              	.LVL571:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7134              		.loc 12 89 7 view .LVU1878
 7135              	.LBE2776:
 7136              	.LBE2775:
 7137              	.LBE2774:
 7138              	.LBE2762:
 7139              	.LBB2777:
 7140              	.LBI2777:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7141              		.loc 10 657 7 is_stmt 1 view .LVU1879
 7142              	.LBB2778:
 7143              	.LBI2778:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7144              		.loc 10 229 7 view .LVU1880
 7145              	.LBB2779:
 7146              	.LBB2780:
 7147              	.LBI2780:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7148              		.loc 10 221 7 view .LVU1881
 7149              	.LBB2781:
 7150              	.LBI2781:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7151              		.loc 10 186 7 view .LVU1882
 7152              	.LBB2782:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7153              		.loc 10 187 28 is_stmt 0 view .LVU1883
 7154 1401 488BBC24 		movq	176(%rsp), %rdi
 7154      B0000000 
 7155              	.LVL572:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 363


 7156              		.loc 10 187 28 view .LVU1884
 7157              	.LBE2782:
 7158              	.LBE2781:
 7159              	.LBB2783:
 7160              	.LBI2783:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7161              		.loc 10 200 7 is_stmt 1 view .LVU1885
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7162              		.loc 10 200 7 is_stmt 0 view .LVU1886
 7163              	.LBE2783:
 7164              	.LBE2780:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7165              		.loc 10 231 2 view .LVU1887
 7166 1409 488D8424 		leaq	192(%rsp), %rax
 7166      C0000000 
 7167 1411 4839C7   		cmpq	%rax, %rdi
 7168 1414 7405     		je	.L265
 7169              	.LVL573:
 7170              	.LBB2784:
 7171              	.LBI2784:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7172              		.loc 10 236 7 is_stmt 1 view .LVU1888
 7173              	.LBB2785:
 7174              	.LBB2786:
 7175              	.LBI2786:
 7176              		.loc 13 469 7 view .LVU1889
 7177              	.LBB2787:
 7178              	.LBI2787:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7179              		.loc 12 119 7 view .LVU1890
 7180              	.LBB2788:
 7181              		.loc 12 128 19 is_stmt 0 view .LVU1891
 7182 1416 E8000000 		call	_ZdlPv@PLT
 7182      00
 7183              	.LVL574:
 7184              	.L265:
 7185              		.loc 12 128 19 view .LVU1892
 7186              	.LBE2788:
 7187              	.LBE2787:
 7188              	.LBE2786:
 7189              	.LBE2785:
 7190              	.LBE2784:
 7191              	.LBE2779:
 7192              	.LBE2778:
 7193              	.LBB2789:
 7194              	.LBI2789:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7195              		.loc 10 150 14 is_stmt 1 view .LVU1893
 7196              	.LBB2790:
 7197              	.LBI2790:
 7198              		.loc 11 153 7 view .LVU1894
 7199              	.LBB2791:
 7200              	.LBI2791:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7201              		.loc 12 89 7 view .LVU1895
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7202              		.loc 12 89 7 is_stmt 0 view .LVU1896
GAS LISTING /tmp/ccvlKtfa.s 			page 364


 7203 141b 4889DF   		movq	%rbx, %rdi
 7204 141e E8000000 		call	_Unwind_Resume@PLT
 7204      00
 7205              	.LVL575:
 7206              	.LEHE31:
 7207              	.L276:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7208              		.loc 12 89 7 view .LVU1897
 7209              	.LBE2791:
 7210              	.LBE2790:
 7211              	.LBE2789:
 7212              	.LBE2777:
 7213              		.loc 1 653 1 view .LVU1898
 7214 1423 E8000000 		call	__stack_chk_fail@PLT
 7214      00
 7215              	.LVL576:
 7216              		.cfi_endproc
 7217              	.LFE2502:
 7218              		.section	.gcc_except_table
 7219              	.LLSDA2502:
 7220 0082 FF       		.byte	0xff
 7221 0083 FF       		.byte	0xff
 7222 0084 01       		.byte	0x1
 7223 0085 34       		.uleb128 .LLSDACSE2502-.LLSDACSB2502
 7224              	.LLSDACSB2502:
 7225 0086 5F       		.uleb128 .LEHB23-.LFB2502
 7226 0087 9C06     		.uleb128 .LEHE23-.LEHB23
 7227 0089 00       		.uleb128 0
 7228 008a 00       		.uleb128 0
 7229 008b 9207     		.uleb128 .LEHB24-.LFB2502
 7230 008d 2E       		.uleb128 .LEHE24-.LEHB24
 7231 008e CA0F     		.uleb128 .L268-.LFB2502
 7232 0090 00       		.uleb128 0
 7233 0091 D307     		.uleb128 .LEHB25-.LFB2502
 7234 0093 0D       		.uleb128 .LEHE25-.LEHB25
 7235 0094 8B0F     		.uleb128 .L269-.LFB2502
 7236 0096 00       		.uleb128 0
 7237 0097 A108     		.uleb128 .LEHB26-.LFB2502
 7238 0099 05       		.uleb128 .LEHE26-.LEHB26
 7239 009a 00       		.uleb128 0
 7240 009b 00       		.uleb128 0
 7241 009c BD08     		.uleb128 .LEHB27-.LFB2502
 7242 009e 22       		.uleb128 .LEHE27-.LEHB27
 7243 009f 8E10     		.uleb128 .L270-.LFB2502
 7244 00a1 00       		.uleb128 0
 7245 00a2 F208     		.uleb128 .LEHB28-.LFB2502
 7246 00a4 9101     		.uleb128 .LEHE28-.LEHB28
 7247 00a6 CF0F     		.uleb128 .L271-.LFB2502
 7248 00a8 00       		.uleb128 0
 7249 00a9 C70A     		.uleb128 .LEHB29-.LFB2502
 7250 00ab 1D       		.uleb128 .LEHE29-.LEHB29
 7251 00ac 00       		.uleb128 0
 7252 00ad 00       		.uleb128 0
 7253 00ae FB0A     		.uleb128 .LEHB30-.LFB2502
 7254 00b0 0D       		.uleb128 .LEHE30-.LEHB30
 7255 00b1 9310     		.uleb128 .L272-.LFB2502
 7256 00b3 00       		.uleb128 0
GAS LISTING /tmp/ccvlKtfa.s 			page 365


 7257 00b4 AA0B     		.uleb128 .LEHB31-.LFB2502
 7258 00b6 8E05     		.uleb128 .LEHE31-.LEHB31
 7259 00b8 00       		.uleb128 0
 7260 00b9 00       		.uleb128 0
 7261              	.LLSDACSE2502:
 7262              		.text
 7264              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20f
 7265              		.align 2
 7266              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_it
 7268              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_
 7269              	.LVL577:
 7270              	.LFB2849:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7271              		.loc 8 206 7 is_stmt 1 view -0
 7272              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7273              		.loc 8 206 7 is_stmt 0 view .LVU1900
 7274 0000 4154     		pushq	%r12
 7275              		.cfi_def_cfa_offset 16
 7276              		.cfi_offset 12, -16
 7277 0002 55       		pushq	%rbp
 7278              		.cfi_def_cfa_offset 24
 7279              		.cfi_offset 6, -24
 7280 0003 53       		pushq	%rbx
 7281              		.cfi_def_cfa_offset 32
 7282              		.cfi_offset 3, -32
 7283 0004 4883EC10 		subq	$16, %rsp
 7284              		.cfi_def_cfa_offset 48
 7285 0008 4889FD   		movq	%rdi, %rbp
 7286 000b 4989F4   		movq	%rsi, %r12
 7287 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 7288              		.loc 8 206 7 view .LVU1901
 7289 0011 64488B04 		movq	%fs:40, %rax
 7289      25280000 
 7289      00
 7290 001a 48894424 		movq	%rax, 8(%rsp)
 7290      08
 7291 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 7292              		.loc 8 211 42 view .LVU1902
 7293 0021 4885F6   		testq	%rsi, %rsi
 7294 0024 742D     		je	.L284
 7295              	.L278:
 7296              	.LVL578:
 7297              	.LBB2792:
 7298              	.LBI2792:
 7299              		.loc 9 138 5 is_stmt 1 view .LVU1903
 7300              	.LBB2793:
 7301              	.LBI2793:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 7302              		.loc 9 98 5 view .LVU1904
 7303              	.LBB2794:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 7304              		.loc 9 104 21 is_stmt 0 view .LVU1905
 7305 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
GAS LISTING /tmp/ccvlKtfa.s 			page 366


 7306              		.loc 9 104 23 view .LVU1906
 7307 0029 48C1FB02 		sarq	$2, %rbx
 7308              	.LVL579:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 7309              		.loc 9 104 23 view .LVU1907
 7310              	.LBE2794:
 7311              	.LBE2793:
 7312              	.LBE2792:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 7313              		.loc 8 215 12 view .LVU1908
 7314 002d 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 7315              		.loc 8 217 2 view .LVU1909
 7316 0031 4883FB03 		cmpq	$3, %rbx
 7317 0035 772D     		ja	.L285
 7318              	.LVL580:
 7319              	.L279:
 7320              	.LBB2795:
 7321              	.LBI2795:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7322              		.loc 10 186 7 is_stmt 1 view .LVU1910
 7323              	.LBB2796:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7324              		.loc 10 187 28 is_stmt 0 view .LVU1911
 7325 0037 488B7D00 		movq	0(%rbp), %rdi
 7326              	.LVL581:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7327              		.loc 10 187 28 view .LVU1912
 7328              	.LBE2796:
 7329              	.LBE2795:
 7330              	.LBB2797:
 7331              	.LBI2797:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 7332              		.loc 10 392 7 is_stmt 1 view .LVU1913
 7333              	.LBB2798:
 7334              	.LBI2798:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7335              		.loc 10 346 7 view .LVU1914
 7336              	.LBB2799:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 7337              		.loc 10 348 2 is_stmt 0 view .LVU1915
 7338 003b 4883FB01 		cmpq	$1, %rbx
 7339 003f 7441     		je	.L286
 7340              	.LVL582:
 7341              	.LBB2800:
 7342              	.LBI2800:
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 7343              		.loc 4 470 7 is_stmt 1 view .LVU1916
 7344              	.LBB2801:
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 7345              		.loc 4 472 2 view .LVU1917
 7346 0041 4885DB   		testq	%rbx, %rbx
 7347 0044 7442     		je	.L281
 7348              		.loc 4 474 2 view .LVU1918
 7349              		.loc 4 474 16 is_stmt 0 view .LVU1919
 7350 0046 4889DA   		movq	%rbx, %rdx
 7351 0049 4C89E6   		movq	%r12, %rsi
GAS LISTING /tmp/ccvlKtfa.s 			page 367


 7352 004c E8000000 		call	wmemcpy@PLT
 7352      00
 7353              	.LVL583:
 7354              		.loc 4 474 32 view .LVU1920
 7355 0051 EB35     		jmp	.L281
 7356              	.LVL584:
 7357              	.L284:
 7358              		.loc 4 474 32 view .LVU1921
 7359              	.LBE2801:
 7360              	.LBE2800:
 7361              	.LBE2799:
 7362              	.LBE2798:
 7363              	.LBE2797:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 7364              		.loc 8 211 42 discriminator 1 view .LVU1922
 7365 0053 4839D6   		cmpq	%rdx, %rsi
 7366 0056 74CE     		je	.L278
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 7367              		.loc 8 212 28 view .LVU1923
 7368 0058 488D3D00 		leaq	.LC17(%rip), %rdi
 7368      000000
 7369              	.LVL585:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 7370              		.loc 8 212 28 view .LVU1924
 7371 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 7371      00
 7372              	.LVL586:
 7373              	.L285:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 7374              		.loc 8 219 6 view .LVU1925
 7375 0064 4889E6   		movq	%rsp, %rsi
 7376              	.LVL587:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 7377              		.loc 8 219 6 view .LVU1926
 7378 0067 BA000000 		movl	$0, %edx
 7378      00
 7379              	.LVL588:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 7380              		.loc 8 219 6 view .LVU1927
 7381 006c 4889EF   		movq	%rbp, %rdi
 7382              	.LVL589:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 7383              		.loc 8 219 6 view .LVU1928
 7384 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 7384      00
 7385              	.LVL590:
 7386              	.LBB2806:
 7387              	.LBI2806:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7388              		.loc 10 178 7 is_stmt 1 view .LVU1929
 7389              	.LBB2807:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7390              		.loc 10 179 9 is_stmt 0 view .LVU1930
 7391 0074 48894500 		movq	%rax, 0(%rbp)
 7392              	.LVL591:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7393              		.loc 10 179 9 view .LVU1931
GAS LISTING /tmp/ccvlKtfa.s 			page 368


 7394              	.LBE2807:
 7395              	.LBE2806:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 7396              		.loc 8 220 6 view .LVU1932
 7397 0078 488B0424 		movq	(%rsp), %rax
 7398              	.LVL592:
 7399              	.LBB2808:
 7400              	.LBI2808:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7401              		.loc 10 210 7 is_stmt 1 view .LVU1933
 7402              	.LBB2809:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7403              		.loc 10 211 9 is_stmt 0 view .LVU1934
 7404 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7405              		.loc 10 211 45 view .LVU1935
 7406 0080 EBB5     		jmp	.L279
 7407              	.LVL593:
 7408              	.L286:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7409              		.loc 10 211 45 view .LVU1936
 7410              	.LBE2809:
 7411              	.LBE2808:
 7412              	.LBB2810:
 7413              	.LBB2805:
 7414              	.LBB2804:
 7415              	.LBB2802:
 7416              	.LBI2802:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 7417              		.loc 4 412 7 is_stmt 1 view .LVU1937
 7418              	.LBB2803:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7419              		.loc 4 413 9 view .LVU1938
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7420              		.loc 4 413 16 is_stmt 0 view .LVU1939
 7421 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7422              		.loc 4 413 14 view .LVU1940
 7423 0086 8907     		movl	%eax, (%rdi)
 7424              	.LVL594:
 7425              	.L281:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7426              		.loc 4 413 14 view .LVU1941
 7427              	.LBE2803:
 7428              	.LBE2802:
 7429              	.LBE2804:
 7430              	.LBE2805:
 7431              	.LBE2810:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 7432              		.loc 8 232 2 view .LVU1942
 7433 0088 488B0424 		movq	(%rsp), %rax
 7434              	.LVL595:
 7435              	.LBB2811:
 7436              	.LBI2811:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7437              		.loc 10 214 7 is_stmt 1 view .LVU1943
 7438              	.LBB2812:
GAS LISTING /tmp/ccvlKtfa.s 			page 369


 7439              	.LBB2813:
 7440              	.LBI2813:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 7441              		.loc 10 182 7 view .LVU1944
 7442              	.LBB2814:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7443              		.loc 10 183 9 is_stmt 0 view .LVU1945
 7444 008c 48894508 		movq	%rax, 8(%rbp)
 7445              	.LVL596:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7446              		.loc 10 183 9 view .LVU1946
 7447              	.LBE2814:
 7448              	.LBE2813:
 7449              	.LBB2815:
 7450              	.LBI2815:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7451              		.loc 10 186 7 is_stmt 1 view .LVU1947
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7452              		.loc 10 186 7 is_stmt 0 view .LVU1948
 7453              	.LBE2815:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 7454              		.loc 10 217 31 view .LVU1949
 7455 0090 48C1E002 		salq	$2, %rax
 7456              	.LVL597:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 7457              		.loc 10 217 31 view .LVU1950
 7458 0094 48034500 		addq	0(%rbp), %rax
 7459              	.LVL598:
 7460              	.LBB2816:
 7461              	.LBI2816:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 7462              		.loc 4 412 7 is_stmt 1 view .LVU1951
 7463              	.LBB2817:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7464              		.loc 4 413 9 view .LVU1952
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7465              		.loc 4 413 14 is_stmt 0 view .LVU1953
 7466 0098 C7000000 		movl	$0, (%rax)
 7466      0000
 7467              	.LVL599:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 7468              		.loc 4 413 14 view .LVU1954
 7469              	.LBE2817:
 7470              	.LBE2816:
 7471              	.LBE2812:
 7472              	.LBE2811:
 7473              		.loc 8 233 7 view .LVU1955
 7474 009e 488B4424 		movq	8(%rsp), %rax
 7474      08
 7475 00a3 64483304 		xorq	%fs:40, %rax
 7475      25280000 
 7475      00
 7476 00ac 7509     		jne	.L287
 7477 00ae 4883C410 		addq	$16, %rsp
 7478              		.cfi_remember_state
 7479              		.cfi_def_cfa_offset 32
 7480 00b2 5B       		popq	%rbx
GAS LISTING /tmp/ccvlKtfa.s 			page 370


 7481              		.cfi_def_cfa_offset 24
 7482 00b3 5D       		popq	%rbp
 7483              		.cfi_def_cfa_offset 16
 7484              	.LVL600:
 7485              		.loc 8 233 7 view .LVU1956
 7486 00b4 415C     		popq	%r12
 7487              		.cfi_def_cfa_offset 8
 7488              	.LVL601:
 7489              		.loc 8 233 7 view .LVU1957
 7490 00b6 C3       		ret
 7491              	.LVL602:
 7492              	.L287:
 7493              		.cfi_restore_state
 7494              		.loc 8 233 7 view .LVU1958
 7495 00b7 E8000000 		call	__stack_chk_fail@PLT
 7495      00
 7496              	.LVL603:
 7497              		.cfi_endproc
 7498              	.LFE2849:
 7500              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEE
 7501              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_
 7503              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P
 7504              	.LVL604:
 7505              	.LFB2662:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 7506              		.loc 14 99 5 is_stmt 1 view -0
 7507              		.cfi_startproc
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 7508              		.loc 14 99 5 is_stmt 0 view .LVU1960
 7509 0000 55       		pushq	%rbp
 7510              		.cfi_def_cfa_offset 16
 7511              		.cfi_offset 6, -16
 7512 0001 4889E5   		movq	%rsp, %rbp
 7513              		.cfi_def_cfa_register 6
 7514 0004 4155     		pushq	%r13
 7515 0006 4154     		pushq	%r12
 7516 0008 53       		pushq	%rbx
 7517 0009 4881ECD8 		subq	$216, %rsp
 7517      000000
 7518              		.cfi_offset 13, -24
 7519              		.cfi_offset 12, -32
 7520              		.cfi_offset 3, -40
 7521 0010 4889FB   		movq	%rdi, %rbx
 7522 0013 4989F2   		movq	%rsi, %r10
 7523 0016 4889D6   		movq	%rdx, %rsi
 7524              	.LVL605:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 7525              		.loc 14 99 5 view .LVU1961
 7526 0019 4889CA   		movq	%rcx, %rdx
 7527              	.LVL606:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 7528              		.loc 14 99 5 view .LVU1962
 7529 001c 4C898550 		movq	%r8, -176(%rbp)
 7529      FFFFFF
 7530 0023 4C898D58 		movq	%r9, -168(%rbp)
 7530      FFFFFF
 7531 002a 84C0     		testb	%al, %al
GAS LISTING /tmp/ccvlKtfa.s 			page 371


 7532 002c 7426     		je	.L289
 7533 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 7533      FFFFFF
 7534 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 7534      FFFFFF
 7535 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 7536 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
 7537 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 7538 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 7539 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 7540 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 7541              	.L289:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 7542              		.loc 14 99 5 view .LVU1963
 7543 0054 41BD2800 		movl	$40, %r13d
 7543      0000
 7544 005a 64498B45 		movq	%fs:0(%r13), %rax
 7544      00
 7545 005f 48898528 		movq	%rax, -216(%rbp)
 7545      FFFFFF
 7546 0066 31C0     		xorl	%eax, %eax
 105:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 7547              		.loc 14 105 58 view .LVU1964
 7548 0068 488D04B5 		leaq	23(,%rsi,4), %rax
 7548      17000000 
 7549 0070 4883E0F0 		andq	$-16, %rax
 7550 0074 4829C4   		subq	%rax, %rsp
 7551 0077 4C8D6424 		leaq	15(%rsp), %r12
 7551      0F
 7552 007c 4983E4F0 		andq	$-16, %r12
 7553              	.LVL607:
 109:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 7554              		.loc 14 109 25 view .LVU1965
 7555 0080 C78510FF 		movl	$32, -240(%rbp)
 7555      FFFF2000 
 7555      0000
 7556 008a C78514FF 		movl	$48, -236(%rbp)
 7556      FFFF3000 
 7556      0000
 7557 0094 488D4510 		leaq	16(%rbp), %rax
 7558 0098 48898518 		movq	%rax, -232(%rbp)
 7558      FFFFFF
 7559 009f 488D8530 		leaq	-208(%rbp), %rax
 7559      FFFFFF
 7560 00a6 48898520 		movq	%rax, -224(%rbp)
 7560      FFFFFF
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 7561              		.loc 14 111 32 view .LVU1966
 7562 00ad 488D8D10 		leaq	-240(%rbp), %rcx
 7562      FFFFFF
 7563              	.LVL608:
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 7564              		.loc 14 111 32 view .LVU1967
 7565 00b4 4C89E7   		movq	%r12, %rdi
 7566              	.LVL609:
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 7567              		.loc 14 111 32 view .LVU1968
GAS LISTING /tmp/ccvlKtfa.s 			page 372


 7568 00b7 41FFD2   		call	*%r10
 7569              	.LVL610:
 7570              	.LBB2818:
 7571              	.LBI2818:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 7572              		.loc 11 138 7 is_stmt 1 view .LVU1969
 7573              	.LBB2819:
 7574              	.LBI2819:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7575              		.loc 12 80 7 view .LVU1970
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7576              		.loc 12 80 7 is_stmt 0 view .LVU1971
 7577              	.LBE2819:
 7578              	.LBE2818:
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 7579              		.loc 14 115 33 view .LVU1972
 7580 00ba 4898     		cltq
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 7581              		.loc 14 115 38 view .LVU1973
 7582 00bc 498D1484 		leaq	(%r12,%rax,4), %rdx
 7583              	.LVL611:
 7584              	.LBB2820:
 7585              	.LBI2820:
 625:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 7586              		.loc 10 625 9 is_stmt 1 view .LVU1974
 7587              	.LBB2821:
 7588              	.LBI2821:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7589              		.loc 10 190 7 view .LVU1975
 7590              	.LBB2822:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 7591              		.loc 10 193 51 is_stmt 0 view .LVU1976
 7592 00c0 488D4310 		leaq	16(%rbx), %rax
 7593              	.LVL612:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 7594              		.loc 10 193 51 view .LVU1977
 7595              	.LBE2822:
 7596              	.LBE2821:
 7597              	.LBB2823:
 7598              	.LBI2823:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7599              		.loc 10 156 2 is_stmt 1 view .LVU1978
 7600              	.LBB2824:
 7601              	.LBB2825:
 7602              	.LBI2825:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7603              		.loc 11 141 7 view .LVU1979
 7604              	.LBB2826:
 7605              	.LBI2826:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7606              		.loc 12 83 7 view .LVU1980
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7607              		.loc 12 83 7 is_stmt 0 view .LVU1981
 7608              	.LBE2826:
 7609              	.LBE2825:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7610              		.loc 10 157 35 view .LVU1982
GAS LISTING /tmp/ccvlKtfa.s 			page 373


 7611 00c4 488903   		movq	%rax, (%rbx)
 7612              	.LVL613:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7613              		.loc 10 157 35 view .LVU1983
 7614              	.LBE2824:
 7615              	.LBE2823:
 7616              	.LBB2827:
 7617              	.LBI2827:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 7618              		.loc 10 263 9 is_stmt 1 view .LVU1984
 7619              	.LBB2828:
 7620              	.LBB2829:
 7621              	.LBI2829:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 7622              		.loc 10 243 9 view .LVU1985
 7623              	.LBB2830:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 7624              		.loc 10 247 11 is_stmt 0 view .LVU1986
 7625 00c7 4C89E6   		movq	%r12, %rsi
 7626 00ca 4889DF   		movq	%rbx, %rdi
 7627 00cd E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_ite
 7627      00
 7628              	.LVL614:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 7629              		.loc 10 247 11 view .LVU1987
 7630              	.LBE2830:
 7631              	.LBE2829:
 7632              	.LBE2828:
 7633              	.LBE2827:
 7634              	.LBE2820:
 7635              	.LBB2831:
 7636              	.LBI2831:
 7637              		.loc 11 153 7 is_stmt 1 view .LVU1988
 7638              	.LBB2832:
 7639              	.LBI2832:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7640              		.loc 12 89 7 view .LVU1989
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7641              		.loc 12 89 7 is_stmt 0 view .LVU1990
 7642              	.LBE2832:
 7643              	.LBE2831:
 7644              		.loc 14 116 5 view .LVU1991
 7645 00d2 488B8528 		movq	-216(%rbp), %rax
 7645      FFFFFF
 7646 00d9 64493345 		xorq	%fs:0(%r13), %rax
 7646      00
 7647 00de 750E     		jne	.L292
 7648 00e0 4889D8   		movq	%rbx, %rax
 7649 00e3 488D65E8 		leaq	-24(%rbp), %rsp
 7650 00e7 5B       		popq	%rbx
 7651              	.LVL615:
 7652              		.loc 14 116 5 view .LVU1992
 7653 00e8 415C     		popq	%r12
 7654              	.LVL616:
 7655              		.loc 14 116 5 view .LVU1993
 7656 00ea 415D     		popq	%r13
 7657 00ec 5D       		popq	%rbp
GAS LISTING /tmp/ccvlKtfa.s 			page 374


 7658              		.cfi_remember_state
 7659              		.cfi_def_cfa 7, 8
 7660 00ed C3       		ret
 7661              	.LVL617:
 7662              	.L292:
 7663              		.cfi_restore_state
 7664              		.loc 14 116 5 view .LVU1994
 7665 00ee E8000000 		call	__stack_chk_fail@PLT
 7665      00
 7666              	.LVL618:
 7667              		.cfi_endproc
 7668              	.LFE2662:
 7670              		.section	.rodata.str4.4
 7671              		.align 4
 7672              	.LC48:
 7673 0020 2500     		.string	"%"
 7674 0022 00       		.string	""
 7675 0023 00       		.string	""
 7676 0024 6600     		.string	"f"
 7677 0026 00       		.string	""
 7678 0027 00       		.string	""
 7679 0028 00       		.string	""
 7680 0029 00       		.string	""
 7681 002a 00       		.string	""
 7682 002b 00       		.string	""
 7683              		.text
 7684              		.globl	_Z10drawWeightP10graphPointS0_
 7686              	_Z10drawWeightP10graphPointS0_:
 7687              	.LVL619:
 7688              	.LFB2493:
 354:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7689              		.loc 1 354 1 is_stmt 1 view -0
 7690              		.cfi_startproc
 7691              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7692              		.cfi_lsda 0x1b,.LLSDA2493
 354:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7693              		.loc 1 354 1 is_stmt 0 view .LVU1996
 7694 1428 55       		pushq	%rbp
 7695              		.cfi_def_cfa_offset 16
 7696              		.cfi_offset 6, -16
 7697 1429 53       		pushq	%rbx
 7698              		.cfi_def_cfa_offset 24
 7699              		.cfi_offset 3, -24
 7700 142a 4883EC48 		subq	$72, %rsp
 7701              		.cfi_def_cfa_offset 96
 7702 142e 4889FB   		movq	%rdi, %rbx
 7703 1431 4889F5   		movq	%rsi, %rbp
 354:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7704              		.loc 1 354 1 view .LVU1997
 7705 1434 64488B04 		movq	%fs:40, %rax
 7705      25280000 
 7705      00
 7706 143d 48894424 		movq	%rax, 56(%rsp)
 7706      38
 7707 1442 31C0     		xorl	%eax, %eax
 355:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 7708              		.loc 1 355 2 is_stmt 1 view .LVU1998
GAS LISTING /tmp/ccvlKtfa.s 			page 375


 7709              	.LEHB32:
 355:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 7710              		.loc 1 355 33 is_stmt 0 view .LVU1999
 7711 1444 E8000000 		call	_Z11getWayPriceP10graphPointS0_@PLT
 7711      00
 7712              	.LVL620:
 356:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 7713              		.loc 1 356 17 view .LVU2000
 7714 1449 F30F104D 		movss	16(%rbp), %xmm1
 7714      10
 356:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 7715              		.loc 1 356 6 view .LVU2001
 7716 144e F30F5C4B 		subss	16(%rbx), %xmm1
 7716      10
 7717 1453 F30F114C 		movss	%xmm1, 8(%rsp)
 7717      2408
 7718              	.LVL621:
 357:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 7719              		.loc 1 357 17 view .LVU2002
 7720 1459 F30F104D 		movss	20(%rbp), %xmm1
 7720      14
 7721              	.LVL622:
 357:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 7722              		.loc 1 357 6 view .LVU2003
 7723 145e 0F28D1   		movaps	%xmm1, %xmm2
 7724 1461 F30F5C53 		subss	20(%rbx), %xmm2
 7724      14
 7725 1466 F30F1154 		movss	%xmm2, 12(%rsp)
 7725      240C
 7726              	.LVL623:
 358:Src/main.cpp  **** }
 7727              		.loc 1 358 2 is_stmt 1 view .LVU2004
 7728              	.LBB2833:
 7729              	.LBI2833:
6586:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6587:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6588:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6589:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(double __val)
6590:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6591:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6592:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6593:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6594:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
6595:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6596:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6597:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6598:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long double __val)
6599:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6600:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6601:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6602:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6603:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%Lf", __val);
6604:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6605:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDIO
6606:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6607:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR
6608:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int 
GAS LISTING /tmp/ccvlKtfa.s 			page 376


6609:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)
6610:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::wcstol, "stoi", __str.c_str(),
6611:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6613:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long 
6614:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const wstring& __str, size_t* __idx = 0, int __base = 10)
6615:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(),
6616:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6617:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6618:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6619:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)
6620:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(),
6621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6623:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6624:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)
6625:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
6626:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6627:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6628:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6629:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)
6630:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
6631:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6632:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6633:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: wcstof vs wcstod.
6634:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6635:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const wstring& __str, size_t* __idx = 0)
6636:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
6637:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6638:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6639:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const wstring& __str, size_t* __idx = 0)
6640:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
6641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6642:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6643:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const wstring& __str, size_t* __idx = 0)
6644:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
6645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6646:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6647:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6648:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6649:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(int __val)
6650:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
6651:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%d", __val); }
6652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6653:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6654:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned __val)
6655:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6656:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned),
6657:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%u", __val); }
6658:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6659:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6660:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(long __val)
6661:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
6662:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%ld", __val); }
6663:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6664:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6665:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned long __val)
GAS LISTING /tmp/ccvlKtfa.s 			page 377


6666:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6667:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long),
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%lu", __val); }
6669:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6670:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6671:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(long long __val)
6672:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6673:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(long long),
6674:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%lld", __val); }
6675:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6676:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6677:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned long long __val)
6678:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6679:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long long),
6680:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%llu", __val); }
6681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6682:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6683:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(float __val)
 7730              		.loc 10 6683 3 view .LVU2005
 7731              	.LBB2834:
6684:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6685:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n =
 7732              		.loc 10 6685 5 view .LVU2006
6686:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6687:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
 7733              		.loc 10 6687 5 view .LVU2007
6688:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%f", __val);
 7734              		.loc 10 6688 22 is_stmt 0 view .LVU2008
 7735 146c 488D5C24 		leaq	16(%rsp), %rbx
 7735      10
 7736              	.LVL624:
 7737              		.loc 10 6688 22 view .LVU2009
 7738 1471 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 7739              	.LVL625:
 7740              		.loc 10 6688 22 view .LVU2010
 7741 1475 488D0D00 		leaq	.LC48(%rip), %rcx
 7741      000000
 7742 147c BA3A0000 		movl	$58, %edx
 7742      00
 7743 1481 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 7743      000000
 7744 1488 4889DF   		movq	%rbx, %rdi
 7745 148b B8010000 		movl	$1, %eax
 7745      00
 7746 1490 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 7746      00
 7747              	.LVL626:
 7748              	.LEHE32:
 7749              		.loc 10 6688 22 view .LVU2011
 7750              	.LBE2834:
 7751              	.LBE2833:
 358:Src/main.cpp  **** }
 7752              		.loc 1 358 10 view .LVU2012
 7753 1495 F30F2C4C 		cvttss2sil	12(%rsp), %ecx
 7753      240C
 7754 149b F30F2C54 		cvttss2sil	8(%rsp), %edx
 7754      2408
GAS LISTING /tmp/ccvlKtfa.s 			page 378


 7755 14a1 BE0C0000 		movl	$12, %esi
 7755      00
 7756 14a6 4889DF   		movq	%rbx, %rdi
 7757              	.LEHB33:
 7758 14a9 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 7758      00
 7759              	.LVL627:
 7760              	.LEHE33:
 7761              	.LBB2835:
 7762              	.LBI2835:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7763              		.loc 10 657 7 is_stmt 1 view .LVU2013
 7764              	.LBB2836:
 7765              	.LBI2836:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7766              		.loc 10 229 7 view .LVU2014
 7767              	.LBB2837:
 7768              	.LBB2838:
 7769              	.LBI2838:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7770              		.loc 10 221 7 view .LVU2015
 7771              	.LBB2839:
 7772              	.LBI2839:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7773              		.loc 10 186 7 view .LVU2016
 7774              	.LBB2840:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7775              		.loc 10 187 28 is_stmt 0 view .LVU2017
 7776 14ae 488B7C24 		movq	16(%rsp), %rdi
 7776      10
 7777              	.LVL628:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7778              		.loc 10 187 28 view .LVU2018
 7779              	.LBE2840:
 7780              	.LBE2839:
 7781              	.LBB2841:
 7782              	.LBI2841:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7783              		.loc 10 200 7 is_stmt 1 view .LVU2019
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7784              		.loc 10 200 7 is_stmt 0 view .LVU2020
 7785              	.LBE2841:
 7786              	.LBE2838:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7787              		.loc 10 231 2 view .LVU2021
 7788 14b3 488D4424 		leaq	32(%rsp), %rax
 7788      20
 7789 14b8 4839C7   		cmpq	%rax, %rdi
 7790 14bb 7405     		je	.L293
 7791              	.LVL629:
 7792              	.LBB2842:
 7793              	.LBI2842:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7794              		.loc 10 236 7 is_stmt 1 view .LVU2022
 7795              	.LBB2843:
 7796              	.LBB2844:
 7797              	.LBI2844:
GAS LISTING /tmp/ccvlKtfa.s 			page 379


 7798              		.loc 13 469 7 view .LVU2023
 7799              	.LBB2845:
 7800              	.LBI2845:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7801              		.loc 12 119 7 view .LVU2024
 7802              	.LBB2846:
 7803              		.loc 12 128 19 is_stmt 0 view .LVU2025
 7804 14bd E8000000 		call	_ZdlPv@PLT
 7804      00
 7805              	.LVL630:
 7806              		.loc 12 128 19 view .LVU2026
 7807              	.LBE2846:
 7808              	.LBE2845:
 7809              	.LBE2844:
 7810              	.LBE2843:
 7811              	.LBE2842:
 7812              	.LBE2837:
 7813              	.LBE2836:
 7814              	.LBB2847:
 7815              	.LBI2847:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7816              		.loc 10 150 14 is_stmt 1 view .LVU2027
 7817              	.LBB2848:
 7818              	.LBI2848:
 7819              		.loc 11 153 7 view .LVU2028
 7820              	.LBB2849:
 7821              	.LBI2849:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7822              		.loc 12 89 7 view .LVU2029
 7823              	.L293:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7824              		.loc 12 89 7 is_stmt 0 view .LVU2030
 7825              	.LBE2849:
 7826              	.LBE2848:
 7827              	.LBE2847:
 7828              	.LBE2835:
 359:Src/main.cpp  **** 
 7829              		.loc 1 359 1 view .LVU2031
 7830 14c2 488B4424 		movq	56(%rsp), %rax
 7830      38
 7831 14c7 64483304 		xorq	%fs:40, %rax
 7831      25280000 
 7831      00
 7832 14d0 7526     		jne	.L300
 7833 14d2 4883C448 		addq	$72, %rsp
 7834              		.cfi_remember_state
 7835              		.cfi_def_cfa_offset 24
 7836 14d6 5B       		popq	%rbx
 7837              		.cfi_def_cfa_offset 16
 7838 14d7 5D       		popq	%rbp
 7839              		.cfi_def_cfa_offset 8
 7840              	.LVL631:
 359:Src/main.cpp  **** 
 7841              		.loc 1 359 1 view .LVU2032
 7842 14d8 C3       		ret
 7843              	.LVL632:
 7844              	.L298:
GAS LISTING /tmp/ccvlKtfa.s 			page 380


 7845              		.cfi_restore_state
 359:Src/main.cpp  **** 
 7846              		.loc 1 359 1 view .LVU2033
 7847 14d9 4889C3   		movq	%rax, %rbx
 7848              	.LVL633:
 7849              	.LBB2850:
 7850              	.LBI2850:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7851              		.loc 10 657 7 is_stmt 1 view .LVU2034
 7852              	.LBB2851:
 7853              	.LBI2851:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7854              		.loc 10 229 7 view .LVU2035
 7855              	.LBB2852:
 7856              	.LBB2853:
 7857              	.LBI2853:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7858              		.loc 10 221 7 view .LVU2036
 7859              	.LBB2854:
 7860              	.LBI2854:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7861              		.loc 10 186 7 view .LVU2037
 7862              	.LBB2855:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7863              		.loc 10 187 28 is_stmt 0 view .LVU2038
 7864 14dc 488B7C24 		movq	16(%rsp), %rdi
 7864      10
 7865              	.LVL634:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7866              		.loc 10 187 28 view .LVU2039
 7867              	.LBE2855:
 7868              	.LBE2854:
 7869              	.LBB2856:
 7870              	.LBI2856:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7871              		.loc 10 200 7 is_stmt 1 view .LVU2040
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7872              		.loc 10 200 7 is_stmt 0 view .LVU2041
 7873              	.LBE2856:
 7874              	.LBE2853:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7875              		.loc 10 231 2 view .LVU2042
 7876 14e1 488D4424 		leaq	32(%rsp), %rax
 7876      20
 7877 14e6 4839C7   		cmpq	%rax, %rdi
 7878 14e9 7405     		je	.L296
 7879              	.LVL635:
 7880              	.LBB2857:
 7881              	.LBI2857:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7882              		.loc 10 236 7 is_stmt 1 view .LVU2043
 7883              	.LBB2858:
 7884              	.LBB2859:
 7885              	.LBI2859:
 7886              		.loc 13 469 7 view .LVU2044
 7887              	.LBB2860:
 7888              	.LBI2860:
GAS LISTING /tmp/ccvlKtfa.s 			page 381


 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7889              		.loc 12 119 7 view .LVU2045
 7890              	.LBB2861:
 7891              		.loc 12 128 19 is_stmt 0 view .LVU2046
 7892 14eb E8000000 		call	_ZdlPv@PLT
 7892      00
 7893              	.LVL636:
 7894              	.L296:
 7895              		.loc 12 128 19 view .LVU2047
 7896              	.LBE2861:
 7897              	.LBE2860:
 7898              	.LBE2859:
 7899              	.LBE2858:
 7900              	.LBE2857:
 7901              	.LBE2852:
 7902              	.LBE2851:
 7903              	.LBB2862:
 7904              	.LBI2862:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7905              		.loc 10 150 14 is_stmt 1 view .LVU2048
 7906              	.LBB2863:
 7907              	.LBI2863:
 7908              		.loc 11 153 7 view .LVU2049
 7909              	.LBB2864:
 7910              	.LBI2864:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7911              		.loc 12 89 7 view .LVU2050
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7912              		.loc 12 89 7 is_stmt 0 view .LVU2051
 7913 14f0 4889DF   		movq	%rbx, %rdi
 7914              	.LEHB34:
 7915 14f3 E8000000 		call	_Unwind_Resume@PLT
 7915      00
 7916              	.LVL637:
 7917              	.LEHE34:
 7918              	.L300:
 7919              	.LBE2864:
 7920              	.LBE2863:
 7921              	.LBE2862:
 7922              	.LBE2850:
 359:Src/main.cpp  **** 
 7923              		.loc 1 359 1 view .LVU2052
 7924 14f8 E8000000 		call	__stack_chk_fail@PLT
 7924      00
 7925              	.LVL638:
 7926              		.cfi_endproc
 7927              	.LFE2493:
 7928              		.section	.gcc_except_table
 7929              	.LLSDA2493:
 7930 00ba FF       		.byte	0xff
 7931 00bb FF       		.byte	0xff
 7932 00bc 01       		.byte	0x1
 7933 00bd 0F       		.uleb128 .LLSDACSE2493-.LLSDACSB2493
 7934              	.LLSDACSB2493:
 7935 00be 1C       		.uleb128 .LEHB32-.LFB2493
 7936 00bf 51       		.uleb128 .LEHE32-.LEHB32
 7937 00c0 00       		.uleb128 0
GAS LISTING /tmp/ccvlKtfa.s 			page 382


 7938 00c1 00       		.uleb128 0
 7939 00c2 8101     		.uleb128 .LEHB33-.LFB2493
 7940 00c4 05       		.uleb128 .LEHE33-.LEHB33
 7941 00c5 B101     		.uleb128 .L298-.LFB2493
 7942 00c7 00       		.uleb128 0
 7943 00c8 CB01     		.uleb128 .LEHB34-.LFB2493
 7944 00ca 05       		.uleb128 .LEHE34-.LEHB34
 7945 00cb 00       		.uleb128 0
 7946 00cc 00       		.uleb128 0
 7947              	.LLSDACSE2493:
 7948              		.text
 7950              		.globl	_Z10drawWeightP6coordsS0_
 7952              	_Z10drawWeightP6coordsS0_:
 7953              	.LVL639:
 7954              	.LFB2494:
 363:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 7955              		.loc 1 363 1 is_stmt 1 view -0
 7956              		.cfi_startproc
 7957              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 7958              		.cfi_lsda 0x1b,.LLSDA2494
 363:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 7959              		.loc 1 363 1 is_stmt 0 view .LVU2054
 7960 14fd 55       		pushq	%rbp
 7961              		.cfi_def_cfa_offset 16
 7962              		.cfi_offset 6, -16
 7963 14fe 53       		pushq	%rbx
 7964              		.cfi_def_cfa_offset 24
 7965              		.cfi_offset 3, -24
 7966 14ff 4883EC48 		subq	$72, %rsp
 7967              		.cfi_def_cfa_offset 96
 7968 1503 4889FD   		movq	%rdi, %rbp
 7969 1506 4889F3   		movq	%rsi, %rbx
 363:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 7970              		.loc 1 363 1 view .LVU2055
 7971 1509 64488B04 		movq	%fs:40, %rax
 7971      25280000 
 7971      00
 7972 1512 48894424 		movq	%rax, 56(%rsp)
 7972      38
 7973 1517 31C0     		xorl	%eax, %eax
 364:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7974              		.loc 1 364 2 is_stmt 1 view .LVU2056
 364:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7975              		.loc 1 364 12 is_stmt 0 view .LVU2057
 7976 1519 BFFFFFFF 		movl	$16777215, %edi
 7976      00
 7977              	.LVL640:
 7978              	.LEHB35:
 364:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 7979              		.loc 1 364 12 view .LVU2058
 7980 151e E8000000 		call	_Z10glSetColorj@PLT
 7980      00
 7981              	.LVL641:
 365:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 7982              		.loc 1 365 2 is_stmt 1 view .LVU2059
 365:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 7983              		.loc 1 365 33 is_stmt 0 view .LVU2060
GAS LISTING /tmp/ccvlKtfa.s 			page 383


 7984 1523 4889DE   		movq	%rbx, %rsi
 7985 1526 4889EF   		movq	%rbp, %rdi
 7986 1529 E8000000 		call	_Z11getWayPriceP6coordsS0_@PLT
 7986      00
 7987              	.LVL642:
 366:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 7988              		.loc 1 366 27 view .LVU2061
 7989 152e F30F104D 		movss	0(%rbp), %xmm1
 7989      00
 366:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 7990              		.loc 1 366 18 view .LVU2062
 7991 1533 F30F580B 		addss	(%rbx), %xmm1
 366:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 7992              		.loc 1 366 6 view .LVU2063
 7993 1537 F30F1015 		movss	.LC49(%rip), %xmm2
 7993      00000000 
 7994 153f F30F59CA 		mulss	%xmm2, %xmm1
 7995 1543 F30F114C 		movss	%xmm1, 8(%rsp)
 7995      2408
 7996              	.LVL643:
 367:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 7997              		.loc 1 367 27 view .LVU2064
 7998 1549 F30F104D 		movss	4(%rbp), %xmm1
 7998      04
 7999              	.LVL644:
 367:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 8000              		.loc 1 367 18 view .LVU2065
 8001 154e F30F584B 		addss	4(%rbx), %xmm1
 8001      04
 367:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 8002              		.loc 1 367 6 view .LVU2066
 8003 1553 0F28D9   		movaps	%xmm1, %xmm3
 8004 1556 F30F59DA 		mulss	%xmm2, %xmm3
 8005 155a F30F115C 		movss	%xmm3, 12(%rsp)
 8005      240C
 8006              	.LVL645:
 368:Src/main.cpp  **** }
 8007              		.loc 1 368 2 is_stmt 1 view .LVU2067
 8008              	.LBB2865:
 8009              	.LBI2865:
6683:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 8010              		.loc 10 6683 3 view .LVU2068
 8011              	.LBB2866:
6685:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 8012              		.loc 10 6685 5 view .LVU2069
6687:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%f", __val);
 8013              		.loc 10 6687 5 view .LVU2070
 8014              		.loc 10 6688 22 is_stmt 0 view .LVU2071
 8015 1560 488D5C24 		leaq	16(%rsp), %rbx
 8015      10
 8016              	.LVL646:
 8017              		.loc 10 6688 22 view .LVU2072
 8018 1565 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 8019              	.LVL647:
 8020              		.loc 10 6688 22 view .LVU2073
 8021 1569 488D0D00 		leaq	.LC48(%rip), %rcx
 8021      000000
GAS LISTING /tmp/ccvlKtfa.s 			page 384


 8022 1570 BA3A0000 		movl	$58, %edx
 8022      00
 8023 1575 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 8023      000000
 8024 157c 4889DF   		movq	%rbx, %rdi
 8025 157f B8010000 		movl	$1, %eax
 8025      00
 8026 1584 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 8026      00
 8027              	.LVL648:
 8028              	.LEHE35:
 8029              		.loc 10 6688 22 view .LVU2074
 8030              	.LBE2866:
 8031              	.LBE2865:
 368:Src/main.cpp  **** }
 8032              		.loc 1 368 10 view .LVU2075
 8033 1589 F30F2C4C 		cvttss2sil	12(%rsp), %ecx
 8033      240C
 8034 158f F30F2C54 		cvttss2sil	8(%rsp), %edx
 8034      2408
 8035 1595 BE0A0000 		movl	$10, %esi
 8035      00
 8036 159a 4889DF   		movq	%rbx, %rdi
 8037              	.LEHB36:
 8038 159d E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 8038      00
 8039              	.LVL649:
 8040              	.LEHE36:
 8041              	.LBB2867:
 8042              	.LBI2867:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8043              		.loc 10 657 7 is_stmt 1 view .LVU2076
 8044              	.LBB2868:
 8045              	.LBI2868:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8046              		.loc 10 229 7 view .LVU2077
 8047              	.LBB2869:
 8048              	.LBB2870:
 8049              	.LBI2870:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8050              		.loc 10 221 7 view .LVU2078
 8051              	.LBB2871:
 8052              	.LBI2871:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8053              		.loc 10 186 7 view .LVU2079
 8054              	.LBB2872:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8055              		.loc 10 187 28 is_stmt 0 view .LVU2080
 8056 15a2 488B7C24 		movq	16(%rsp), %rdi
 8056      10
 8057              	.LVL650:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8058              		.loc 10 187 28 view .LVU2081
 8059              	.LBE2872:
 8060              	.LBE2871:
 8061              	.LBB2873:
 8062              	.LBI2873:
GAS LISTING /tmp/ccvlKtfa.s 			page 385


 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8063              		.loc 10 200 7 is_stmt 1 view .LVU2082
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8064              		.loc 10 200 7 is_stmt 0 view .LVU2083
 8065              	.LBE2873:
 8066              	.LBE2870:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8067              		.loc 10 231 2 view .LVU2084
 8068 15a7 488D4424 		leaq	32(%rsp), %rax
 8068      20
 8069 15ac 4839C7   		cmpq	%rax, %rdi
 8070 15af 7405     		je	.L301
 8071              	.LVL651:
 8072              	.LBB2874:
 8073              	.LBI2874:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8074              		.loc 10 236 7 is_stmt 1 view .LVU2085
 8075              	.LBB2875:
 8076              	.LBB2876:
 8077              	.LBI2876:
 8078              		.loc 13 469 7 view .LVU2086
 8079              	.LBB2877:
 8080              	.LBI2877:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8081              		.loc 12 119 7 view .LVU2087
 8082              	.LBB2878:
 8083              		.loc 12 128 19 is_stmt 0 view .LVU2088
 8084 15b1 E8000000 		call	_ZdlPv@PLT
 8084      00
 8085              	.LVL652:
 8086              		.loc 12 128 19 view .LVU2089
 8087              	.LBE2878:
 8088              	.LBE2877:
 8089              	.LBE2876:
 8090              	.LBE2875:
 8091              	.LBE2874:
 8092              	.LBE2869:
 8093              	.LBE2868:
 8094              	.LBB2879:
 8095              	.LBI2879:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8096              		.loc 10 150 14 is_stmt 1 view .LVU2090
 8097              	.LBB2880:
 8098              	.LBI2880:
 8099              		.loc 11 153 7 view .LVU2091
 8100              	.LBB2881:
 8101              	.LBI2881:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8102              		.loc 12 89 7 view .LVU2092
 8103              	.L301:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8104              		.loc 12 89 7 is_stmt 0 view .LVU2093
 8105              	.LBE2881:
 8106              	.LBE2880:
 8107              	.LBE2879:
 8108              	.LBE2867:
 369:Src/main.cpp  **** 
GAS LISTING /tmp/ccvlKtfa.s 			page 386


 8109              		.loc 1 369 1 view .LVU2094
 8110 15b6 488B4424 		movq	56(%rsp), %rax
 8110      38
 8111 15bb 64483304 		xorq	%fs:40, %rax
 8111      25280000 
 8111      00
 8112 15c4 7526     		jne	.L308
 8113 15c6 4883C448 		addq	$72, %rsp
 8114              		.cfi_remember_state
 8115              		.cfi_def_cfa_offset 24
 8116 15ca 5B       		popq	%rbx
 8117              		.cfi_def_cfa_offset 16
 8118 15cb 5D       		popq	%rbp
 8119              		.cfi_def_cfa_offset 8
 8120              	.LVL653:
 369:Src/main.cpp  **** 
 8121              		.loc 1 369 1 view .LVU2095
 8122 15cc C3       		ret
 8123              	.LVL654:
 8124              	.L306:
 8125              		.cfi_restore_state
 369:Src/main.cpp  **** 
 8126              		.loc 1 369 1 view .LVU2096
 8127 15cd 4889C3   		movq	%rax, %rbx
 8128              	.LVL655:
 8129              	.LBB2882:
 8130              	.LBI2882:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8131              		.loc 10 657 7 is_stmt 1 view .LVU2097
 8132              	.LBB2883:
 8133              	.LBI2883:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8134              		.loc 10 229 7 view .LVU2098
 8135              	.LBB2884:
 8136              	.LBB2885:
 8137              	.LBI2885:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8138              		.loc 10 221 7 view .LVU2099
 8139              	.LBB2886:
 8140              	.LBI2886:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8141              		.loc 10 186 7 view .LVU2100
 8142              	.LBB2887:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8143              		.loc 10 187 28 is_stmt 0 view .LVU2101
 8144 15d0 488B7C24 		movq	16(%rsp), %rdi
 8144      10
 8145              	.LVL656:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8146              		.loc 10 187 28 view .LVU2102
 8147              	.LBE2887:
 8148              	.LBE2886:
 8149              	.LBB2888:
 8150              	.LBI2888:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8151              		.loc 10 200 7 is_stmt 1 view .LVU2103
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccvlKtfa.s 			page 387


 8152              		.loc 10 200 7 is_stmt 0 view .LVU2104
 8153              	.LBE2888:
 8154              	.LBE2885:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8155              		.loc 10 231 2 view .LVU2105
 8156 15d5 488D4424 		leaq	32(%rsp), %rax
 8156      20
 8157 15da 4839C7   		cmpq	%rax, %rdi
 8158 15dd 7405     		je	.L304
 8159              	.LVL657:
 8160              	.LBB2889:
 8161              	.LBI2889:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8162              		.loc 10 236 7 is_stmt 1 view .LVU2106
 8163              	.LBB2890:
 8164              	.LBB2891:
 8165              	.LBI2891:
 8166              		.loc 13 469 7 view .LVU2107
 8167              	.LBB2892:
 8168              	.LBI2892:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8169              		.loc 12 119 7 view .LVU2108
 8170              	.LBB2893:
 8171              		.loc 12 128 19 is_stmt 0 view .LVU2109
 8172 15df E8000000 		call	_ZdlPv@PLT
 8172      00
 8173              	.LVL658:
 8174              	.L304:
 8175              		.loc 12 128 19 view .LVU2110
 8176              	.LBE2893:
 8177              	.LBE2892:
 8178              	.LBE2891:
 8179              	.LBE2890:
 8180              	.LBE2889:
 8181              	.LBE2884:
 8182              	.LBE2883:
 8183              	.LBB2894:
 8184              	.LBI2894:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8185              		.loc 10 150 14 is_stmt 1 view .LVU2111
 8186              	.LBB2895:
 8187              	.LBI2895:
 8188              		.loc 11 153 7 view .LVU2112
 8189              	.LBB2896:
 8190              	.LBI2896:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8191              		.loc 12 89 7 view .LVU2113
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8192              		.loc 12 89 7 is_stmt 0 view .LVU2114
 8193 15e4 4889DF   		movq	%rbx, %rdi
 8194              	.LEHB37:
 8195 15e7 E8000000 		call	_Unwind_Resume@PLT
 8195      00
 8196              	.LVL659:
 8197              	.LEHE37:
 8198              	.L308:
 8199              	.LBE2896:
GAS LISTING /tmp/ccvlKtfa.s 			page 388


 8200              	.LBE2895:
 8201              	.LBE2894:
 8202              	.LBE2882:
 369:Src/main.cpp  **** 
 8203              		.loc 1 369 1 view .LVU2115
 8204 15ec E8000000 		call	__stack_chk_fail@PLT
 8204      00
 8205              	.LVL660:
 8206              		.cfi_endproc
 8207              	.LFE2494:
 8208              		.section	.gcc_except_table
 8209              	.LLSDA2494:
 8210 00cd FF       		.byte	0xff
 8211 00ce FF       		.byte	0xff
 8212 00cf 01       		.byte	0x1
 8213 00d0 0F       		.uleb128 .LLSDACSE2494-.LLSDACSB2494
 8214              	.LLSDACSB2494:
 8215 00d1 21       		.uleb128 .LEHB35-.LFB2494
 8216 00d2 6B       		.uleb128 .LEHE35-.LEHB35
 8217 00d3 00       		.uleb128 0
 8218 00d4 00       		.uleb128 0
 8219 00d5 A001     		.uleb128 .LEHB36-.LFB2494
 8220 00d7 05       		.uleb128 .LEHE36-.LEHB36
 8221 00d8 D001     		.uleb128 .L306-.LFB2494
 8222 00da 00       		.uleb128 0
 8223 00db EA01     		.uleb128 .LEHB37-.LFB2494
 8224 00dd 05       		.uleb128 .LEHE37-.LEHB37
 8225 00de 00       		.uleb128 0
 8226 00df 00       		.uleb128 0
 8227              	.LLSDACSE2494:
 8228              		.text
 8230              		.section	.rodata.str4.4
 8231              		.align 4
 8232              	.LC50:
 8233 002c 2500     		.string	"%"
 8234 002e 00       		.string	""
 8235 002f 00       		.string	""
 8236 0030 6C00     		.string	"l"
 8237 0032 00       		.string	""
 8238 0033 00       		.string	""
 8239 0034 7500     		.string	"u"
 8240 0036 00       		.string	""
 8241 0037 00       		.string	""
 8242 0038 00       		.string	""
 8243 0039 00       		.string	""
 8244 003a 00       		.string	""
 8245 003b 00       		.string	""
 8246              		.text
 8247              		.globl	_Z11renderScenev
 8249              	_Z11renderScenev:
 8250              	.LFB2498:
 429:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 8251              		.loc 1 429 1 is_stmt 1 view -0
 8252              		.cfi_startproc
 8253              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8254              		.cfi_lsda 0x1b,.LLSDA2498
 8255 15f1 55       		pushq	%rbp
GAS LISTING /tmp/ccvlKtfa.s 			page 389


 8256              		.cfi_def_cfa_offset 16
 8257              		.cfi_offset 6, -16
 8258 15f2 53       		pushq	%rbx
 8259              		.cfi_def_cfa_offset 24
 8260              		.cfi_offset 3, -24
 8261 15f3 4883EC48 		subq	$72, %rsp
 8262              		.cfi_def_cfa_offset 96
 429:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 8263              		.loc 1 429 1 is_stmt 0 view .LVU2117
 8264 15f7 64488B04 		movq	%fs:40, %rax
 8264      25280000 
 8264      00
 8265 1600 48894424 		movq	%rax, 56(%rsp)
 8265      38
 8266 1605 31C0     		xorl	%eax, %eax
 430:Src/main.cpp  **** 
 8267              		.loc 1 430 2 is_stmt 1 view .LVU2118
 430:Src/main.cpp  **** 
 8268              		.loc 1 430 9 is_stmt 0 view .LVU2119
 8269 1607 BF004000 		movl	$16384, %edi
 8269      00
 8270              	.LEHB38:
 8271 160c E8000000 		call	glClear@PLT
 8271      00
 8272              	.LVL661:
 432:Src/main.cpp  **** 		{
 8273              		.loc 1 432 3 is_stmt 1 view .LVU2120
 8274              	.LBB2897:
 432:Src/main.cpp  **** 		{
 8275              		.loc 1 432 14 is_stmt 0 view .LVU2121
 8276 1611 BD000000 		movl	$0, %ebp
 8276      00
 8277 1616 EB18     		jmp	.L312
 8278              	.LVL662:
 8279              	.L321:
 8280              	.LBB2898:
 8281              	.LBI2898:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8282              		.loc 10 657 7 is_stmt 1 view .LVU2122
 8283              	.LBB2899:
 8284              	.LBI2899:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8285              		.loc 10 229 7 view .LVU2123
 8286              	.LBB2900:
 8287              	.LBB2901:
 8288              	.LBI2901:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8289              		.loc 10 221 7 view .LVU2124
 8290              	.LBB2902:
 8291              	.LBI2902:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8292              		.loc 10 186 7 view .LVU2125
 8293              	.LBB2903:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8294              		.loc 10 187 28 is_stmt 0 view .LVU2126
 8295 1618 488B7C24 		movq	16(%rsp), %rdi
 8295      10
GAS LISTING /tmp/ccvlKtfa.s 			page 390


 8296              	.LVL663:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8297              		.loc 10 187 28 view .LVU2127
 8298              	.LBE2903:
 8299              	.LBE2902:
 8300              	.LBB2904:
 8301              	.LBI2904:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8302              		.loc 10 200 7 is_stmt 1 view .LVU2128
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8303              		.loc 10 200 7 is_stmt 0 view .LVU2129
 8304              	.LBE2904:
 8305              	.LBE2901:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8306              		.loc 10 231 2 view .LVU2130
 8307 161d 488D4424 		leaq	32(%rsp), %rax
 8307      20
 8308 1622 4839C7   		cmpq	%rax, %rdi
 8309 1625 7405     		je	.L311
 8310              	.LVL664:
 8311              	.LBB2905:
 8312              	.LBI2905:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8313              		.loc 10 236 7 is_stmt 1 view .LVU2131
 8314              	.LBB2906:
 8315              	.LBB2907:
 8316              	.LBI2907:
 8317              		.loc 13 469 7 view .LVU2132
 8318              	.LBB2908:
 8319              	.LBI2908:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8320              		.loc 12 119 7 view .LVU2133
 8321              	.LBB2909:
 8322              		.loc 12 128 19 is_stmt 0 view .LVU2134
 8323 1627 E8000000 		call	_ZdlPv@PLT
 8323      00
 8324              	.LVL665:
 8325              	.L311:
 8326              		.loc 12 128 19 view .LVU2135
 8327              	.LBE2909:
 8328              	.LBE2908:
 8329              	.LBE2907:
 8330              	.LBE2906:
 8331              	.LBE2905:
 8332              	.LBE2900:
 8333              	.LBE2899:
 8334              	.LBB2910:
 8335              	.LBI2910:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8336              		.loc 10 150 14 is_stmt 1 view .LVU2136
 8337              	.LBB2911:
 8338              	.LBI2911:
 8339              		.loc 11 153 7 view .LVU2137
 8340              	.LBB2912:
 8341              	.LBI2912:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8342              		.loc 12 89 7 view .LVU2138
GAS LISTING /tmp/ccvlKtfa.s 			page 391


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8343              		.loc 12 89 7 is_stmt 0 view .LVU2139
 8344              	.LBE2912:
 8345              	.LBE2911:
 8346              	.LBE2910:
 8347              	.LBE2898:
 432:Src/main.cpp  **** 		{
 8348              		.loc 1 432 3 is_stmt 1 view .LVU2140
 8349 162c 4883C501 		addq	$1, %rbp
 8350              	.LVL666:
 8351              	.L312:
 432:Src/main.cpp  **** 		{
 8352              		.loc 1 432 23 discriminator 2 view .LVU2141
 8353 1630 48392D00 		cmpq	%rbp, numOfObstacles(%rip)
 8353      000000
 8354 1637 0F869700 		jbe	.L317
 8354      0000
 434:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 8355              		.loc 1 434 4 view .LVU2142
 434:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 8356              		.loc 1 434 29 is_stmt 0 view .LVU2143
 8357 163d 488D5C6D 		leaq	0(%rbp,%rbp,2), %rbx
 8357      00
 8358 1642 48C1E304 		salq	$4, %rbx
 434:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 8359              		.loc 1 434 17 view .LVU2144
 8360 1646 4889DF   		movq	%rbx, %rdi
 8361 1649 48033D00 		addq	obstacles(%rip), %rdi
 8361      000000
 434:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 8362              		.loc 1 434 16 view .LVU2145
 8363 1650 E8000000 		call	_Z12drawObstaclePK8obstacle
 8363      00
 8364              	.LVL667:
 435:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 8365              		.loc 1 435 4 is_stmt 1 view .LVU2146
 435:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 8366              		.loc 1 435 14 is_stmt 0 view .LVU2147
 8367 1655 BFFFFFFF 		movl	$16777215, %edi
 8367      00
 8368 165a E8000000 		call	_Z10glSetColorj@PLT
 8368      00
 8369              	.LVL668:
 436:Src/main.cpp  **** 		}
 8370              		.loc 1 436 4 is_stmt 1 view .LVU2148
 436:Src/main.cpp  **** 		}
 8371              		.loc 1 436 83 is_stmt 0 view .LVU2149
 8372 165f 48031D00 		addq	obstacles(%rip), %rbx
 8372      000000
 436:Src/main.cpp  **** 		}
 8373              		.loc 1 436 85 view .LVU2150
 8374 1666 488B03   		movq	(%rbx), %rax
 436:Src/main.cpp  **** 		}
 8375              		.loc 1 436 107 view .LVU2151
 8376 1669 F30F1005 		movss	.LC49(%rip), %xmm0
 8376      00000000 
 8377 1671 F30F5943 		mulss	40(%rbx), %xmm0
GAS LISTING /tmp/ccvlKtfa.s 			page 392


 8377      28
 436:Src/main.cpp  **** 		}
 8378              		.loc 1 436 90 view .LVU2152
 8379 1676 0F28C8   		movaps	%xmm0, %xmm1
 8380 1679 F30F5848 		addss	4(%rax), %xmm1
 8380      04
 8381 167e F30F114C 		movss	%xmm1, 8(%rsp)
 8381      2408
 436:Src/main.cpp  **** 		}
 8382              		.loc 1 436 50 view .LVU2153
 8383 1684 F30F5800 		addss	(%rax), %xmm0
 8384 1688 F30F1144 		movss	%xmm0, 12(%rsp)
 8384      240C
 8385              	.LVL669:
 8386              	.LBB2913:
 8387              	.LBI2913:
6665:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
 8388              		.loc 10 6665 3 is_stmt 1 view .LVU2154
 8389              	.LBB2914:
6666:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long),
 8390              		.loc 10 6666 5 view .LVU2155
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8391              		.loc 10 6668 23 is_stmt 0 view .LVU2156
 8392 168e 488D5C24 		leaq	16(%rsp), %rbx
 8392      10
 8393 1693 4989E8   		movq	%rbp, %r8
 8394 1696 488D0D00 		leaq	.LC50(%rip), %rcx
 8394      000000
 8395 169d BA200000 		movl	$32, %edx
 8395      00
 8396 16a2 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 8396      000000
 8397 16a9 4889DF   		movq	%rbx, %rdi
 8398 16ac B8000000 		movl	$0, %eax
 8398      00
 8399 16b1 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 8399      00
 8400              	.LVL670:
 8401              	.LEHE38:
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8402              		.loc 10 6668 23 view .LVU2157
 8403              	.LBE2914:
 8404              	.LBE2913:
 436:Src/main.cpp  **** 		}
 8405              		.loc 1 436 12 view .LVU2158
 8406 16b6 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 8406      2408
 8407 16bc F30F2C54 		cvttss2sil	12(%rsp), %edx
 8407      240C
 8408 16c2 BE0C0000 		movl	$12, %esi
 8408      00
 8409 16c7 4889DF   		movq	%rbx, %rdi
 8410              	.LEHB39:
 8411 16ca E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 8411      00
 8412              	.LVL671:
 8413              	.LEHE39:
GAS LISTING /tmp/ccvlKtfa.s 			page 393


 8414 16cf E944FFFF 		jmp	.L321
 8414      FF
 8415              	.L317:
 8416              	.LBE2897:
 8417              	.LBB2930:
 438:Src/main.cpp  **** 		{
 8418              		.loc 1 438 14 view .LVU2159
 8419 16d4 BB000000 		movl	$0, %ebx
 8419      00
 8420              	.L310:
 8421              	.LVL672:
 438:Src/main.cpp  **** 		{
 8422              		.loc 1 438 23 is_stmt 1 discriminator 3 view .LVU2160
 8423 16d9 48391D00 		cmpq	%rbx, graphSize(%rip)
 8423      000000
 8424 16e0 7623     		jbe	.L313
 440:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 8425              		.loc 1 440 4 discriminator 2 view .LVU2161
 440:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 8426              		.loc 1 440 15 is_stmt 0 discriminator 2 view .LVU2162
 8427 16e2 F30F1005 		movss	.LC16(%rip), %xmm0
 8427      00000000 
 8428              	.LEHB40:
 8429 16ea E8000000 		call	glLineWidth@PLT
 8429      00
 8430              	.LVL673:
 442:Src/main.cpp  **** 		}
 8431              		.loc 1 442 4 is_stmt 1 discriminator 2 view .LVU2163
 442:Src/main.cpp  **** 		}
 8432              		.loc 1 442 13 is_stmt 0 discriminator 2 view .LVU2164
 8433 16ef 488B0500 		movq	graph(%rip), %rax
 8433      000000
 8434 16f6 488B3CD8 		movq	(%rax,%rbx,8), %rdi
 8435 16fa E8000000 		call	_Z9drawEdgesP10graphPoint
 8435      00
 8436              	.LVL674:
 438:Src/main.cpp  **** 		{
 8437              		.loc 1 438 3 is_stmt 1 discriminator 2 view .LVU2165
 8438 16ff 4883C301 		addq	$1, %rbx
 8439              	.LVL675:
 438:Src/main.cpp  **** 		{
 8440              		.loc 1 438 3 is_stmt 0 discriminator 2 view .LVU2166
 8441 1703 EBD4     		jmp	.L310
 8442              	.L313:
 438:Src/main.cpp  **** 		{
 8443              		.loc 1 438 3 discriminator 2 view .LVU2167
 8444              	.LBE2930:
 454:Src/main.cpp  **** 		glSetColor(0x00FF99);
 8445              		.loc 1 454 3 is_stmt 1 view .LVU2168
 454:Src/main.cpp  **** 		glSetColor(0x00FF99);
 8446              		.loc 1 454 14 is_stmt 0 view .LVU2169
 8447 1705 F30F1005 		movss	.LC51(%rip), %xmm0
 8447      00000000 
 8448 170d E8000000 		call	glLineWidth@PLT
 8448      00
 8449              	.LVL676:
 455:Src/main.cpp  **** 		// drawWay(home, target);
GAS LISTING /tmp/ccvlKtfa.s 			page 394


 8450              		.loc 1 455 3 is_stmt 1 view .LVU2170
 455:Src/main.cpp  **** 		// drawWay(home, target);
 8451              		.loc 1 455 13 is_stmt 0 view .LVU2171
 8452 1712 BF99FF00 		movl	$65433, %edi
 8452      00
 8453 1717 E8000000 		call	_Z10glSetColorj@PLT
 8453      00
 8454              	.LVL677:
 469:Src/main.cpp  **** }
 8455              		.loc 1 469 5 is_stmt 1 view .LVU2172
 469:Src/main.cpp  **** }
 8456              		.loc 1 469 20 is_stmt 0 view .LVU2173
 8457 171c E8000000 		call	glutSwapBuffers@PLT
 8457      00
 8458              	.LVL678:
 470:Src/main.cpp  **** 
 8459              		.loc 1 470 1 view .LVU2174
 8460 1721 488B4424 		movq	56(%rsp), %rax
 8460      38
 8461 1726 64483304 		xorq	%fs:40, %rax
 8461      25280000 
 8461      00
 8462 172f 7526     		jne	.L322
 8463 1731 4883C448 		addq	$72, %rsp
 8464              		.cfi_remember_state
 8465              		.cfi_def_cfa_offset 24
 8466 1735 5B       		popq	%rbx
 8467              		.cfi_def_cfa_offset 16
 8468              	.LVL679:
 470:Src/main.cpp  **** 
 8469              		.loc 1 470 1 view .LVU2175
 8470 1736 5D       		popq	%rbp
 8471              		.cfi_def_cfa_offset 8
 8472              	.LVL680:
 470:Src/main.cpp  **** 
 8473              		.loc 1 470 1 view .LVU2176
 8474 1737 C3       		ret
 8475              	.LVL681:
 8476              	.L318:
 8477              		.cfi_restore_state
 470:Src/main.cpp  **** 
 8478              		.loc 1 470 1 view .LVU2177
 8479 1738 4889C3   		movq	%rax, %rbx
 8480              	.LVL682:
 8481              	.LBB2931:
 8482              	.LBB2915:
 8483              	.LBI2915:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8484              		.loc 10 657 7 is_stmt 1 view .LVU2178
 8485              	.LBB2916:
 8486              	.LBI2916:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8487              		.loc 10 229 7 view .LVU2179
 8488              	.LBB2917:
 8489              	.LBB2918:
 8490              	.LBI2918:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
GAS LISTING /tmp/ccvlKtfa.s 			page 395


 8491              		.loc 10 221 7 view .LVU2180
 8492              	.LBB2919:
 8493              	.LBI2919:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8494              		.loc 10 186 7 view .LVU2181
 8495              	.LBB2920:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8496              		.loc 10 187 28 is_stmt 0 view .LVU2182
 8497 173b 488B7C24 		movq	16(%rsp), %rdi
 8497      10
 8498              	.LVL683:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8499              		.loc 10 187 28 view .LVU2183
 8500              	.LBE2920:
 8501              	.LBE2919:
 8502              	.LBB2921:
 8503              	.LBI2921:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8504              		.loc 10 200 7 is_stmt 1 view .LVU2184
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8505              		.loc 10 200 7 is_stmt 0 view .LVU2185
 8506              	.LBE2921:
 8507              	.LBE2918:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8508              		.loc 10 231 2 view .LVU2186
 8509 1740 488D4424 		leaq	32(%rsp), %rax
 8509      20
 8510 1745 4839C7   		cmpq	%rax, %rdi
 8511 1748 7405     		je	.L315
 8512              	.LVL684:
 8513              	.LBB2922:
 8514              	.LBI2922:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8515              		.loc 10 236 7 is_stmt 1 view .LVU2187
 8516              	.LBB2923:
 8517              	.LBB2924:
 8518              	.LBI2924:
 8519              		.loc 13 469 7 view .LVU2188
 8520              	.LBB2925:
 8521              	.LBI2925:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8522              		.loc 12 119 7 view .LVU2189
 8523              	.LBB2926:
 8524              		.loc 12 128 19 is_stmt 0 view .LVU2190
 8525 174a E8000000 		call	_ZdlPv@PLT
 8525      00
 8526              	.LVL685:
 8527              	.L315:
 8528              		.loc 12 128 19 view .LVU2191
 8529              	.LBE2926:
 8530              	.LBE2925:
 8531              	.LBE2924:
 8532              	.LBE2923:
 8533              	.LBE2922:
 8534              	.LBE2917:
 8535              	.LBE2916:
 8536              	.LBB2927:
GAS LISTING /tmp/ccvlKtfa.s 			page 396


 8537              	.LBI2927:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8538              		.loc 10 150 14 is_stmt 1 view .LVU2192
 8539              	.LBB2928:
 8540              	.LBI2928:
 8541              		.loc 11 153 7 view .LVU2193
 8542              	.LBB2929:
 8543              	.LBI2929:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8544              		.loc 12 89 7 view .LVU2194
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8545              		.loc 12 89 7 is_stmt 0 view .LVU2195
 8546 174f 4889DF   		movq	%rbx, %rdi
 8547 1752 E8000000 		call	_Unwind_Resume@PLT
 8547      00
 8548              	.LVL686:
 8549              	.LEHE40:
 8550              	.L322:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8551              		.loc 12 89 7 view .LVU2196
 8552              	.LBE2929:
 8553              	.LBE2928:
 8554              	.LBE2927:
 8555              	.LBE2915:
 8556              	.LBE2931:
 470:Src/main.cpp  **** 
 8557              		.loc 1 470 1 view .LVU2197
 8558 1757 E8000000 		call	__stack_chk_fail@PLT
 8558      00
 8559              	.LVL687:
 8560              		.cfi_endproc
 8561              	.LFE2498:
 8562              		.section	.gcc_except_table
 8563              	.LLSDA2498:
 8564 00e0 FF       		.byte	0xff
 8565 00e1 FF       		.byte	0xff
 8566 00e2 01       		.byte	0x1
 8567 00e3 10       		.uleb128 .LLSDACSE2498-.LLSDACSB2498
 8568              	.LLSDACSB2498:
 8569 00e4 1B       		.uleb128 .LEHB38-.LFB2498
 8570 00e5 AA01     		.uleb128 .LEHE38-.LEHB38
 8571 00e7 00       		.uleb128 0
 8572 00e8 00       		.uleb128 0
 8573 00e9 D901     		.uleb128 .LEHB39-.LFB2498
 8574 00eb 05       		.uleb128 .LEHE39-.LEHB39
 8575 00ec C702     		.uleb128 .L318-.LFB2498
 8576 00ee 00       		.uleb128 0
 8577 00ef F901     		.uleb128 .LEHB40-.LFB2498
 8578 00f1 6D       		.uleb128 .LEHE40-.LEHB40
 8579 00f2 00       		.uleb128 0
 8580 00f3 00       		.uleb128 0
 8581              	.LLSDACSE2498:
 8582              		.text
 8585              	_GLOBAL__sub_I_watchRadius:
 8586              	.LFB2878:
 8587              		.loc 1 653 1 is_stmt 1 view -0
 8588              		.cfi_startproc
GAS LISTING /tmp/ccvlKtfa.s 			page 397


 8589 175c 4883EC08 		subq	$8, %rsp
 8590              		.cfi_def_cfa_offset 16
 8591              		.loc 1 653 1 is_stmt 0 view .LVU2199
 8592 1760 BEFFFF00 		movl	$65535, %esi
 8592      00
 8593 1765 BF010000 		movl	$1, %edi
 8593      00
 8594 176a E82EE9FF 		call	_Z41__static_initialization_and_destruction_0ii
 8594      FF
 8595              	.LVL688:
 8596 176f 4883C408 		addq	$8, %rsp
 8597              		.cfi_def_cfa_offset 8
 8598 1773 C3       		ret
 8599              		.cfi_endproc
 8600              	.LFE2878:
 8602              		.section	.init_array,"aw"
 8603              		.align 8
 8604 0000 00000000 		.quad	_GLOBAL__sub_I_watchRadius
 8604      00000000 
 8605              		.globl	home
 8606              		.data
 8607              		.align 8
 8610              	home:
 8611 0000 01000000 		.quad	1
 8611      00000000 
 8612              		.globl	target
 8613              		.align 8
 8616              	target:
 8617 0008 01000000 		.quad	1
 8617      00000000 
 8618              		.globl	ways
 8619              		.bss
 8620              		.align 8
 8623              	ways:
 8624 0000 00000000 		.zero	8
 8624      00000000 
 8625              		.globl	graph
 8626              		.align 8
 8629              	graph:
 8630 0008 00000000 		.zero	8
 8630      00000000 
 8631              		.globl	endway
 8632              		.align 8
 8635              	endway:
 8636 0010 00000000 		.zero	8
 8636      00000000 
 8637              		.globl	startway
 8638              		.align 8
 8641              	startway:
 8642 0018 00000000 		.zero	8
 8642      00000000 
 8643              		.globl	obstacles
 8644              		.align 8
 8647              	obstacles:
 8648 0020 00000000 		.zero	8
 8648      00000000 
 8649              		.globl	calculatedPoints
GAS LISTING /tmp/ccvlKtfa.s 			page 398


 8650              		.align 8
 8653              	calculatedPoints:
 8654 0028 00000000 		.zero	8
 8654      00000000 
 8655              		.globl	graphSize
 8656              		.align 8
 8659              	graphSize:
 8660 0030 00000000 		.zero	8
 8660      00000000 
 8661              		.globl	numOfObstacles
 8662              		.align 8
 8665              	numOfObstacles:
 8666 0038 00000000 		.zero	8
 8666      00000000 
 8667              		.globl	terminated
 8670              	terminated:
 8671 0040 00       		.zero	1
 8672              		.globl	watchRadius
 8673              		.data
 8674              		.align 8
 8677              	watchRadius:
 8678 0010 D0070000 		.quad	2000
 8678      00000000 
 8679              		.local	_ZStL8__ioinit
 8680              		.comm	_ZStL8__ioinit,1,1
 8681              		.section	.rodata.cst8,"aM",@progbits,8
 8682              		.align 8
 8683              	.LC3:
 8684 0000 00000000 		.long	0
 8685 0004 00806640 		.long	1080459264
 8686              		.align 8
 8687              	.LC4:
 8688 0008 6E861BF0 		.long	4028335726
 8689 000c F9210940 		.long	1074340345
 8690              		.align 8
 8691              	.LC5:
 8692 0010 00000000 		.long	0
 8693 0014 0088D340 		.long	1087604736
 8694              		.section	.rodata.cst16,"aM",@progbits,16
 8695              		.align 16
 8696              	.LC6:
 8697 0000 FFFFFF7F 		.long	2147483647
 8698 0004 00000000 		.long	0
 8699 0008 00000000 		.long	0
 8700 000c 00000000 		.long	0
 8701              		.section	.rodata.cst4,"aM",@progbits,4
 8702              		.align 4
 8703              	.LC7:
 8704 0000 00003443 		.long	1127481344
 8705              		.align 4
 8706              	.LC8:
 8707 0004 00000000 		.long	0
 8708              		.section	.rodata.cst16
 8709              		.align 16
 8710              	.LC9:
 8711 0010 00000080 		.long	2147483648
 8712 0014 00000000 		.long	0
GAS LISTING /tmp/ccvlKtfa.s 			page 399


 8713 0018 00000000 		.long	0
 8714 001c 00000000 		.long	0
 8715              		.section	.rodata.cst4
 8716              		.align 4
 8717              	.LC10:
 8718 0008 0000B4C2 		.long	3266576384
 8719              		.align 4
 8720              	.LC11:
 8721 000c 0000B442 		.long	1119092736
 8722              		.align 4
 8723              	.LC12:
 8724 0010 00008C43 		.long	1133248512
 8725              		.align 4
 8726              	.LC13:
 8727 0014 0000E143 		.long	1138819072
 8728              		.section	.rodata.cst8
 8729              		.align 8
 8730              	.LC15:
 8731 0018 9A999999 		.long	2576980378
 8732 001c 9999D93F 		.long	1071225241
 8733              		.section	.rodata.cst4
 8734              		.align 4
 8735              	.LC16:
 8736 0018 0000803F 		.long	1065353216
 8737              		.align 4
 8738              	.LC28:
 8739 001c 00004843 		.long	1128792064
 8740              		.align 4
 8741              	.LC29:
 8742 0020 0000C842 		.long	1120403456
 8743              		.align 4
 8744              	.LC30:
 8745 0024 0000AF43 		.long	1135542272
 8746              		.align 4
 8747              	.LC31:
 8748 0028 0000DC42 		.long	1121714176
 8749              		.align 4
 8750              	.LC35:
 8751 002c 00001643 		.long	1125515264
 8752              		.align 4
 8753              	.LC49:
 8754 0030 0000003F 		.long	1056964608
 8755              		.align 4
 8756              	.LC51:
 8757 0034 0000A040 		.long	1084227584
 8758              		.text
 8759              	.Letext0:
 8760              		.file 16 "/usr/include/c++/9.2.0/cwchar"
 8761              		.file 17 "/usr/include/c++/9.2.0/new"
 8762              		.file 18 "/usr/include/c++/9.2.0/bits/exception_ptr.h"
 8763              		.file 19 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/c++config.h"
 8764              		.file 20 "/usr/include/c++/9.2.0/type_traits"
 8765              		.file 21 "/usr/include/c++/9.2.0/bits/stl_pair.h"
 8766              		.file 22 "/usr/include/c++/9.2.0/bits/cpp_type_traits.h"
 8767              		.file 23 "/usr/include/c++/9.2.0/bits/stl_iterator_base_types.h"
 8768              		.file 24 "/usr/include/c++/9.2.0/debug/debug.h"
 8769              		.file 25 "/usr/include/c++/9.2.0/cstdint"
GAS LISTING /tmp/ccvlKtfa.s 			page 400


 8770              		.file 26 "/usr/include/c++/9.2.0/clocale"
 8771              		.file 27 "/usr/include/c++/9.2.0/cstdlib"
 8772              		.file 28 "/usr/include/c++/9.2.0/cstdio"
 8773              		.file 29 "/usr/include/c++/9.2.0/initializer_list"
 8774              		.file 30 "/usr/include/c++/9.2.0/bits/stringfwd.h"
 8775              		.file 31 "/usr/include/c++/9.2.0/system_error"
 8776              		.file 32 "/usr/include/c++/9.2.0/bits/ios_base.h"
 8777              		.file 33 "/usr/include/c++/9.2.0/cwctype"
 8778              		.file 34 "/usr/include/c++/9.2.0/bits/ostream.tcc"
 8779              		.file 35 "/usr/include/c++/9.2.0/iosfwd"
 8780              		.file 36 "/usr/include/c++/9.2.0/cmath"
 8781              		.file 37 "/usr/include/c++/9.2.0/bits/ptr_traits.h"
 8782              		.file 38 "/usr/include/c++/9.2.0/bits/move.h"
 8783              		.file 39 "/usr/include/c++/9.2.0/bits/functexcept.h"
 8784              		.file 40 "/usr/include/c++/9.2.0/bits/ostream_insert.h"
 8785              		.file 41 "/usr/include/c++/9.2.0/bits/predefined_ops.h"
 8786              		.file 42 "/usr/include/c++/9.2.0/ext/numeric_traits.h"
 8787              		.file 43 "/usr/include/c++/9.2.0/ext/alloc_traits.h"
 8788              		.file 44 "/usr/include/c++/9.2.0/bits/stl_iterator.h"
 8789              		.file 45 "/usr/include/c++/9.2.0/ext/type_traits.h"
 8790              		.file 46 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/stddef.h"
 8791              		.file 47 "<built-in>"
 8792              		.file 48 "/usr/include/bits/types/wint_t.h"
 8793              		.file 49 "/usr/include/bits/types/__mbstate_t.h"
 8794              		.file 50 "/usr/include/bits/types/mbstate_t.h"
 8795              		.file 51 "/usr/include/bits/types/__FILE.h"
 8796              		.file 52 "/usr/include/bits/types/struct_FILE.h"
 8797              		.file 53 "/usr/include/bits/types/FILE.h"
 8798              		.file 54 "/usr/include/wchar.h"
 8799              		.file 55 "/usr/include/bits/types/struct_tm.h"
 8800              		.file 56 "/usr/include/bits/types.h"
 8801              		.file 57 "/usr/include/bits/stdint-intn.h"
 8802              		.file 58 "/usr/include/bits/stdint-uintn.h"
 8803              		.file 59 "/usr/include/stdint.h"
 8804              		.file 60 "/usr/include/locale.h"
 8805              		.file 61 "/usr/include/time.h"
 8806              		.file 62 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 8807              		.file 63 "/usr/include/stdlib.h"
 8808              		.file 64 "/usr/include/bits/stdlib-float.h"
 8809              		.file 65 "/usr/include/bits/stdlib-bsearch.h"
 8810              		.file 66 "/usr/include/bits/types/__fpos_t.h"
 8811              		.file 67 "/usr/include/stdio.h"
 8812              		.file 68 "/usr/include/bits/sys_errlist.h"
 8813              		.file 69 "/usr/include/bits/stdio.h"
 8814              		.file 70 "/usr/include/errno.h"
 8815              		.file 71 "/usr/include/bits/wctype-wchar.h"
 8816              		.file 72 "/usr/include/wctype.h"
 8817              		.file 73 "/usr/include/c++/9.2.0/stdlib.h"
 8818              		.file 74 "/usr/include/unistd.h"
 8819              		.file 75 "/usr/include/bits/getopt_core.h"
 8820              		.file 76 "/usr/include/signal.h"
 8821              		.file 77 "/usr/include/GL/glew.h"
 8822              		.file 78 "/usr/include/GL/freeglut_std.h"
 8823              		.file 79 "/usr/include/FTGL/ftgl.h"
 8824              		.file 80 "/usr/include/math.h"
 8825              		.file 81 "/usr/include/c++/9.2.0/math.h"
 8826              		.file 82 "/usr/include/bits/mathcalls.h"
GAS LISTING /tmp/ccvlKtfa.s 			page 401


 8827              		.file 83 "/usr/include/GL/glu.h"
 8828              		.file 84 "Includes/routines.hpp"
 128092              		.align 8
 128095              	DW.ref.__gxx_personality_v0:
 128096 0000 00000000 		.quad	__gxx_personality_v0
 128096      00000000 
 128097              		.hidden	__dso_handle
 128098              		.ident	"GCC: (GNU) 9.2.0"
 128099              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccvlKtfa.s 			page 402


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccvlKtfa.s:6      .text:0000000000000000 _Z7reshapeii
     /tmp/ccvlKtfa.s:80     .text:000000000000005f _Z4timfi
     /tmp/ccvlKtfa.s:8670   .bss:0000000000000040 terminated
     /tmp/ccvlKtfa.s:124    .text:000000000000009d _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000041 _ZStL8__ioinit
     /tmp/ccvlKtfa.s:169    .text:00000000000000da _Z14handleKeypresshii
     /tmp/ccvlKtfa.s:376    .text:000000000000018f _Z17getMinDatasetSizev
     /tmp/ccvlKtfa.s:8665   .bss:0000000000000038 numOfObstacles
     /tmp/ccvlKtfa.s:415    .text:00000000000001b0 _Z10createVectPK6coordsf
     /tmp/ccvlKtfa.s:572    .text:00000000000002cf _Z10createVectPK6coordsS1_
     /tmp/ccvlKtfa.s:642    .text:0000000000000327 _Z10createVectPK8obstaclehf
     /tmp/ccvlKtfa.s:704    .text:000000000000036e _Z16getPointsDataSetPK6coords
     /tmp/ccvlKtfa.s:8659   .bss:0000000000000030 graphSize
     /tmp/ccvlKtfa.s:8629   .bss:0000000000000008 graph
     /tmp/ccvlKtfa.s:963    .text:00000000000004d0 _Z16hasIntersectionsPK4vect
     /tmp/ccvlKtfa.s:8647   .bss:0000000000000020 obstacles
     /tmp/ccvlKtfa.s:1029   .text:0000000000000514 _Z11isDotInsidePK6coords
     /tmp/ccvlKtfa.s:1113   .text:00000000000005d1 _Z9initPointP10graphPoint
     /tmp/ccvlKtfa.s:8653   .bss:0000000000000028 calculatedPoints
     /tmp/ccvlKtfa.s:1309   .text:0000000000000709 _Z16getCoordsOfPointP10graphPoint
     /tmp/ccvlKtfa.s:1324   .text:000000000000070f _Z21hasUncalculatedPointsPK10graphPoint
     /tmp/ccvlKtfa.s:1374   .text:0000000000000739 _Z12getMinTargetPK10graphPoint
     /tmp/ccvlKtfa.s:1438   .text:0000000000000782 _Z12calculateWaym
     /tmp/ccvlKtfa.s:8623   .bss:0000000000000000 ways
     /tmp/ccvlKtfa.s:1578   .text:0000000000000862 _Z8drawLineP6coordsS0_
     /tmp/ccvlKtfa.s:1603   .text:0000000000000882 _Z8drawLineP10graphPointS0_
     /tmp/ccvlKtfa.s:1630   .text:0000000000000898 _Z9drawEdgesP10graphPoint
     /tmp/ccvlKtfa.s:1710   .text:00000000000008e6 _Z7drawWaymm
     /tmp/ccvlKtfa.s:1776   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
     /tmp/ccvlKtfa.s:2010   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag
     /tmp/ccvlKtfa.s:2282   .text:000000000000092e _Z12drawObstaclePK8obstacle
     /tmp/ccvlKtfa.s:128095  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccvlKtfa.s:3428   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
     /tmp/ccvlKtfa.s:3658   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/ccvlKtfa.s:3843   .text._ZN4vect8toStringB5cxx11Ev:0000000000000000 _ZN4vect8toStringB5cxx11Ev
     /tmp/ccvlKtfa.s:4655   .text._ZN6coords8toStringB5cxx11Ev:0000000000000000 _ZN6coords8toStringB5cxx11Ev
     /tmp/ccvlKtfa.s:5490   .text:0000000000000beb main
     /tmp/ccvlKtfa.s:8616   .data:0000000000000008 target
     /tmp/ccvlKtfa.s:8610   .data:0000000000000000 home
     /tmp/ccvlKtfa.s:8641   .bss:0000000000000018 startway
     /tmp/ccvlKtfa.s:8635   .bss:0000000000000010 endway
     /tmp/ccvlKtfa.s:8249   .text:00000000000015f1 _Z11renderScenev
     /tmp/ccvlKtfa.s:7268   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag
     /tmp/ccvlKtfa.s:7503   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/ccvlKtfa.s:7686   .text:0000000000001428 _Z10drawWeightP10graphPointS0_
     /tmp/ccvlKtfa.s:7952   .text:00000000000014fd _Z10drawWeightP6coordsS0_
     /tmp/ccvlKtfa.s:8585   .text:000000000000175c _GLOBAL__sub_I_watchRadius
     /tmp/ccvlKtfa.s:8677   .data:0000000000000010 watchRadius
     /tmp/ccvlKtfa.s:162    .rodata.str1.1:0000000000000000 .LC1
     /tmp/ccvlKtfa.s:164    .rodata.str1.1:0000000000000009 .LC2
     /tmp/ccvlKtfa.s:8683   .rodata.cst8:0000000000000000 .LC3
     /tmp/ccvlKtfa.s:8687   .rodata.cst8:0000000000000008 .LC4
     /tmp/ccvlKtfa.s:8691   .rodata.cst8:0000000000000010 .LC5
     /tmp/ccvlKtfa.s:8696   .rodata.cst16:0000000000000000 .LC6
     /tmp/ccvlKtfa.s:8703   .rodata.cst4:0000000000000000 .LC7
GAS LISTING /tmp/ccvlKtfa.s 			page 403


     /tmp/ccvlKtfa.s:8710   .rodata.cst16:0000000000000010 .LC9
     /tmp/ccvlKtfa.s:8717   .rodata.cst4:0000000000000008 .LC10
     /tmp/ccvlKtfa.s:8720   .rodata.cst4:000000000000000c .LC11
     /tmp/ccvlKtfa.s:8723   .rodata.cst4:0000000000000010 .LC12
     /tmp/ccvlKtfa.s:8726   .rodata.cst4:0000000000000014 .LC13
     /tmp/ccvlKtfa.s:699    .rodata.str1.1:000000000000000e .LC14
     /tmp/ccvlKtfa.s:8730   .rodata.cst8:0000000000000018 .LC15
     /tmp/ccvlKtfa.s:8706   .rodata.cst4:0000000000000004 .LC8
     /tmp/ccvlKtfa.s:8735   .rodata.cst4:0000000000000018 .LC16
     /tmp/ccvlKtfa.s:2244   .rodata.str4.4:0000000000000000 .LC18
     /tmp/ccvlKtfa.s:2253   .rodata.str4.4:0000000000000008 .LC19
     /tmp/ccvlKtfa.s:2262   .rodata.str4.4:0000000000000010 .LC20
     /tmp/ccvlKtfa.s:2271   .rodata.str4.4:0000000000000018 .LC21
     /tmp/ccvlKtfa.s:8738   .rodata.cst4:000000000000001c .LC28
     /tmp/ccvlKtfa.s:8741   .rodata.cst4:0000000000000020 .LC29
     /tmp/ccvlKtfa.s:8744   .rodata.cst4:0000000000000024 .LC30
     /tmp/ccvlKtfa.s:8747   .rodata.cst4:0000000000000028 .LC31
     /tmp/ccvlKtfa.s:8750   .rodata.cst4:000000000000002c .LC35
     /tmp/ccvlKtfa.s:5463   .rodata.str1.1:0000000000000021 .LC36
     /tmp/ccvlKtfa.s:5465   .rodata.str1.1:0000000000000029 .LC37
     /tmp/ccvlKtfa.s:3831   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000016 .LC24
     /tmp/ccvlKtfa.s:5467   .rodata.str1.1:0000000000000030 .LC38
     /tmp/ccvlKtfa.s:3837   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:000000000000001e .LC27
     /tmp/ccvlKtfa.s:5469   .rodata.str1.1:0000000000000032 .LC39
     /tmp/ccvlKtfa.s:5471   .rodata.str1.1:0000000000000034 .LC40
     /tmp/ccvlKtfa.s:5473   .rodata.str1.1:000000000000003f .LC41
     /tmp/ccvlKtfa.s:5475   .rodata.str1.1:0000000000000049 .LC42
     /tmp/ccvlKtfa.s:5477   .rodata.str1.1:0000000000000052 .LC43
     /tmp/ccvlKtfa.s:5479   .rodata.str1.1:000000000000005b .LC44
     /tmp/ccvlKtfa.s:5481   .rodata.str1.1:0000000000000065 .LC45
     /tmp/ccvlKtfa.s:5483   .rodata.str1.1:000000000000006e .LC46
     /tmp/ccvlKtfa.s:5485   .rodata.str1.1:0000000000000075 .LC47
     /tmp/ccvlKtfa.s:7672   .rodata.str4.4:0000000000000020 .LC48
     /tmp/ccvlKtfa.s:8753   .rodata.cst4:0000000000000030 .LC49
     /tmp/ccvlKtfa.s:8232   .rodata.str4.4:000000000000002c .LC50
     /tmp/ccvlKtfa.s:8756   .rodata.cst4:0000000000000034 .LC51
     /tmp/ccvlKtfa.s:1770   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.8:0000000000000000 .LC17
     /tmp/ccvlKtfa.s:3827   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000000 .LC22
     /tmp/ccvlKtfa.s:3829   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000001 .LC23
     /tmp/ccvlKtfa.s:3833   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000018 .LC25
     /tmp/ccvlKtfa.s:3835   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:000000000000001b .LC26

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
glViewport
glMatrixMode
glLoadIdentity
gluOrtho2D
glutPostRedisplay
glutTimerFunc
exit
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZSt4cout
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
GAS LISTING /tmp/ccvlKtfa.s 			page 404


_ZNSolsEi
_ZNSo3putEc
_ZNSo5flushEv
_ZSt16__throw_bad_castv
_ZNKSt5ctypeIcE13_M_widen_initEv
malloc
tan
_Z17getCoordsOfCornerPK8obstacleh
free
_Z15hasIntersectionPK8obstaclePK4vect
_Z9addTargetP10graphPointS0_
__stack_chk_fail
_Z11getWayPriceP10graphPointS0_
_Z8drawLineffff
_Z10glSetColorj
memcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
wmemcpy
_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm
_Z8drawQuadfff
wcslen
_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
_ZSt20__throw_length_errorPKc
vsnprintf
_Z14createObstaclefff
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
_ZNSo9_M_insertIdEERSoT_
_Z15getIntersectionPK8obstaclePK4vect
_ZNSo9_M_insertIbEERSoT_
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
glutInit
glutInitDisplayMode
glutCreateWindow
glutReshapeFunc
glutDisplayFunc
glutKeyboardFunc
glutMainLoop
vswprintf
_Z11getWayPriceP6coordsS0_
glClear
glLineWidth
glutSwapBuffers
