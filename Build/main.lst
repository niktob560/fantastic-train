GAS LISTING /tmp/ccZtEYtQ.s 			page 1


   1              		.file	"main.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.globl	_Z7reshapeii
   6              	_Z7reshapeii:
   7              	.LVL0:
   8              	.LFB2509:
   9              		.file 1 "Src/main.cpp"
   1:Src/main.cpp  **** #include <iostream>
   2:Src/main.cpp  **** #include <stdio.h>      // standard input / output functions
   3:Src/main.cpp  **** #include <stdlib.h>
   4:Src/main.cpp  **** #include <string.h>     // string function definitions
   5:Src/main.cpp  **** #include <unistd.h>     // UNIX standard function definitions
   6:Src/main.cpp  **** #include <fcntl.h>      // File control definitions
   7:Src/main.cpp  **** #include <errno.h>      // Error number definitions
   8:Src/main.cpp  **** #include <termios.h>    // POSIX terminal control definitions
   9:Src/main.cpp  **** #include <signal.h>
  10:Src/main.cpp  **** #include <GL/glew.h>
  11:Src/main.cpp  **** #include <GL/glut.h>
  12:Src/main.cpp  **** #include <GL/gl.h>
  13:Src/main.cpp  **** #include <GL/glu.h>
  14:Src/main.cpp  **** #include <FTGL/ftgl.h>
  15:Src/main.cpp  **** #include <FTGL/FTGLPixmapFont.h>
  16:Src/main.cpp  **** 
  17:Src/main.cpp  **** #include "routines.hpp"
  18:Src/main.cpp  **** #include "findwayBases.hpp"
  19:Src/main.cpp  **** 
  20:Src/main.cpp  **** #define GL_TIMER_DELAY	400
  21:Src/main.cpp  **** #define RETURN_CODE_OK 0
  22:Src/main.cpp  **** #define OBST_COLOR 0xFF0000
  23:Src/main.cpp  **** #define GRAPH_COLOR 0x00FFFF
  24:Src/main.cpp  **** #define DATA_COLOR	0xFFFFFF
  25:Src/main.cpp  **** 
  26:Src/main.cpp  **** // #define VECTORS_PER_CHECK	50
  27:Src/main.cpp  **** 
  28:Src/main.cpp  **** #define ZERO_QUAD_CHECK_SIDE 2000;
  29:Src/main.cpp  **** size_t watchRadius = ZERO_QUAD_CHECK_SIDE;
  30:Src/main.cpp  **** 
  31:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_A	0.0
  32:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_B	0.0
  33:Src/main.cpp  **** #define MIN_DATASEIZE_FUNC_C	numOfObstacles
  34:Src/main.cpp  **** 
  35:Src/main.cpp  **** #define FIELD_MAX_LEN		2000
  36:Src/main.cpp  **** 
  37:Src/main.cpp  **** using namespace std;
  38:Src/main.cpp  **** 
  39:Src/main.cpp  **** 
  40:Src/main.cpp  **** bool terminated = false;
  41:Src/main.cpp  **** size_t numOfObstacles = 0;
  42:Src/main.cpp  **** size_t graphSize = 0;
  43:Src/main.cpp  **** size_t calculatedPoints = 0;
  44:Src/main.cpp  **** 
  45:Src/main.cpp  **** 
  46:Src/main.cpp  **** struct obstacle *obstacles;
  47:Src/main.cpp  **** struct coords	startway,
  48:Src/main.cpp  **** 				endway;
  49:Src/main.cpp  **** struct graphPoint **graph;
GAS LISTING /tmp/ccZtEYtQ.s 			page 2


  50:Src/main.cpp  **** size_t *ways;
  51:Src/main.cpp  **** 
  52:Src/main.cpp  **** size_t 	target = 1,
  53:Src/main.cpp  **** 		home = 1;
  54:Src/main.cpp  **** 
  55:Src/main.cpp  **** 
  56:Src/main.cpp  **** struct array
  57:Src/main.cpp  **** {
  58:Src/main.cpp  **** 	void *items;
  59:Src/main.cpp  **** 	size_t size;
  60:Src/main.cpp  **** };
  61:Src/main.cpp  **** 
  62:Src/main.cpp  **** 
  63:Src/main.cpp  **** uint8_t getMinDatasetSize()
  64:Src/main.cpp  **** {
  65:Src/main.cpp  **** 	// int ret = ((MIN_DATASEIZE_FUNC_A * pow((double)calculatedPoints, 2)) + (MIN_DATASEIZE_FUNC_B * 
  66:Src/main.cpp  **** 	int ret = numOfObstacles;
  67:Src/main.cpp  **** 	if(ret < 2)
  68:Src/main.cpp  **** 		ret = 2;
  69:Src/main.cpp  **** 	if(ret >= numOfObstacles)
  70:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
  71:Src/main.cpp  **** 
  72:Src/main.cpp  **** 	// cout << "min size for " << (int)(calculatedPoints) << ": " << (int)ret << endl;
  73:Src/main.cpp  **** 	return ret;
  74:Src/main.cpp  **** }
  75:Src/main.cpp  **** 
  76:Src/main.cpp  **** 
  77:Src/main.cpp  **** 
  78:Src/main.cpp  **** 
  79:Src/main.cpp  **** void initObst(const struct obstacle *obst);
  80:Src/main.cpp  **** void initPoint(struct graphPoint *p, const struct coords *c);
  81:Src/main.cpp  **** 
  82:Src/main.cpp  **** 
  83:Src/main.cpp  **** 
  84:Src/main.cpp  **** /*
  85:Src/main.cpp  ****  *	-------+----->	0
  86:Src/main.cpp  ****  *	<------+------	180
  87:Src/main.cpp  ****  *		  /|\
  88:Src/main.cpp  ****  *         |		90
  89:Src/main.cpp  ****  *		   +
  90:Src/main.cpp  ****  */
  91:Src/main.cpp  **** struct vect createVect(const struct coords *c, const COORDS_DATATYPE angle)
  92:Src/main.cpp  **** {
  93:Src/main.cpp  **** 	struct vect ret;
  94:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
  95:Src/main.cpp  **** 	ret.c->x = c->x;
  96:Src/main.cpp  **** 	ret.c->y = c->y;
  97:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  98:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
  99:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 100:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
 101:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 102:Src/main.cpp  **** 		ret.dy *= -1;
 103:Src/main.cpp  **** 
 104:Src/main.cpp  **** 	if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 105:Src/main.cpp  **** 		ret.dx *= -1;
 106:Src/main.cpp  **** 	return ret;
GAS LISTING /tmp/ccZtEYtQ.s 			page 3


 107:Src/main.cpp  **** }
 108:Src/main.cpp  **** 
 109:Src/main.cpp  **** struct vect createVect(const struct coords *start, const struct coords *end)
 110:Src/main.cpp  **** {
 111:Src/main.cpp  **** 	struct vect ret;
 112:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
 113:Src/main.cpp  **** 	ret.c->x = start->x;
 114:Src/main.cpp  **** 	ret.c->y = start->y;
 115:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 116:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 117:Src/main.cpp  **** 	return ret;
 118:Src/main.cpp  **** }
 119:Src/main.cpp  **** 
 120:Src/main.cpp  **** 
 121:Src/main.cpp  **** struct vect createVect(const struct obstacle *obst, const uint8_t corner, const COORDS_DATATYPE ang
 122:Src/main.cpp  **** {
 123:Src/main.cpp  **** 	struct vect ret;
 124:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 125:Src/main.cpp  **** 	ret = createVect(c, angle);
 126:Src/main.cpp  **** 	free(c);
 127:Src/main.cpp  **** 	return ret;
 128:Src/main.cpp  **** }
 129:Src/main.cpp  **** 
 130:Src/main.cpp  **** 
 131:Src/main.cpp  **** struct array* getDataSet(const struct coords *c)
 132:Src/main.cpp  **** {
 133:Src/main.cpp  **** 	size_t size = 0;
 134:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 135:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 136:Src/main.cpp  **** 		size = 0;
 137:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 138:Src/main.cpp  **** 		{
 139:Src/main.cpp  **** 			if(obstacles[i].c->x + obstacles[i].a >= c->x - watchRadius
 140:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 141:Src/main.cpp  **** 			&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 142:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 143:Src/main.cpp  **** 				size++;
 144:Src/main.cpp  **** 		}
 145:Src/main.cpp  **** 		if(size < getMinDatasetSize())
 146:Src/main.cpp  **** 		{
 147:Src/main.cpp  **** 			cout << "Increacing radius\n";
 148:Src/main.cpp  **** 			watchRadius += 100;
 149:Src/main.cpp  **** 		}
 150:Src/main.cpp  **** 	}
 151:Src/main.cpp  **** 	// cout << "Size: " << size << endl;
 152:Src/main.cpp  **** 	size_t iter = 0;
 153:Src/main.cpp  **** 	struct obstacle **obsts = (struct obstacle**)malloc(sizeof(struct obstacle*) * size);
 154:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 155:Src/main.cpp  **** 	{
 156:Src/main.cpp  **** 		if(obstacles[i].c->x + obstacles[i].a >= c->x - watchRadius
 157:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 158:Src/main.cpp  **** 		&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 159:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 160:Src/main.cpp  **** 			obsts[iter++] = &(obstacles[i]);
 161:Src/main.cpp  **** 	}
 162:Src/main.cpp  **** 	struct array *ret = (struct array*)malloc(sizeof(struct array));
 163:Src/main.cpp  **** 	ret->items = *obsts;
GAS LISTING /tmp/ccZtEYtQ.s 			page 4


 164:Src/main.cpp  **** 	ret->size = size;
 165:Src/main.cpp  **** 	return ret;
 166:Src/main.cpp  **** }
 167:Src/main.cpp  **** 
 168:Src/main.cpp  **** 
 169:Src/main.cpp  **** struct array* getPointsDataSet(const struct coords *c)
 170:Src/main.cpp  **** {
 171:Src/main.cpp  **** 	size_t size = 0;
 172:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 173:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 174:Src/main.cpp  **** 		size = 0;
 175:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 176:Src/main.cpp  **** 		{
 177:Src/main.cpp  **** 			if(graph[i]->c.x >= c->x - watchRadius
 178:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 179:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 180:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 181:Src/main.cpp  **** 				size++;
 182:Src/main.cpp  **** 		}
 183:Src/main.cpp  **** 		if(size < getMinDatasetSize())
 184:Src/main.cpp  **** 		{
 185:Src/main.cpp  **** 			cout << "Increacing radius\n";
 186:Src/main.cpp  **** 			watchRadius += 100;
 187:Src/main.cpp  **** 		}
 188:Src/main.cpp  **** 	}
 189:Src/main.cpp  **** 	// cout << "Size: " << size << endl;
 190:Src/main.cpp  **** 	size_t iter = 0;
 191:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 192:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 193:Src/main.cpp  **** 	{
 194:Src/main.cpp  **** 		if(graph[i]->c.x >= c->x - watchRadius
 195:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 196:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 197:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 198:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 199:Src/main.cpp  **** 	}
 200:Src/main.cpp  **** 	struct array *ret = (struct array*)malloc(sizeof(struct array));
 201:Src/main.cpp  **** 	ret->items = dataset;
 202:Src/main.cpp  **** 	ret->size = size;
 203:Src/main.cpp  **** 	return ret;
 204:Src/main.cpp  **** }
 205:Src/main.cpp  **** 
 206:Src/main.cpp  **** 
 207:Src/main.cpp  **** struct array* getDataSet(const struct obstacle *obst, const uint8_t corner)
 208:Src/main.cpp  **** {
 209:Src/main.cpp  **** 	struct graphPoint *p = getPoint(obst, corner);
 210:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 211:Src/main.cpp  **** 
 212:Src/main.cpp  **** 	struct array *ret = getDataSet(c);
 213:Src/main.cpp  **** 
 214:Src/main.cpp  **** 	free(c);
 215:Src/main.cpp  **** 
 216:Src/main.cpp  **** 	return ret;
 217:Src/main.cpp  **** }
 218:Src/main.cpp  **** 
 219:Src/main.cpp  **** 
 220:Src/main.cpp  **** bool hasIntersections(const struct array *dataset, const struct vect *v)
GAS LISTING /tmp/ccZtEYtQ.s 			page 5


 221:Src/main.cpp  **** {
 222:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 223:Src/main.cpp  **** 	{
 224:Src/main.cpp  **** 		if(hasIntersection(&((struct obstacle*)dataset->items)[i], v))
 225:Src/main.cpp  **** 			return true;
 226:Src/main.cpp  **** 	}
 227:Src/main.cpp  **** 	return false;
 228:Src/main.cpp  **** }
 229:Src/main.cpp  **** 
 230:Src/main.cpp  **** bool hasIntersections(const struct vect *v)
 231:Src/main.cpp  **** {
 232:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 233:Src/main.cpp  **** 	{
 234:Src/main.cpp  **** 		if(hasIntersection(&obstacles[i], v))
 235:Src/main.cpp  **** 			return true;
 236:Src/main.cpp  **** 	}
 237:Src/main.cpp  **** 	return false;
 238:Src/main.cpp  **** }
 239:Src/main.cpp  **** 
 240:Src/main.cpp  **** 
 241:Src/main.cpp  **** #define CONST 0.4
 242:Src/main.cpp  **** 
 243:Src/main.cpp  **** bool isDotInside(const struct coords *c)
 244:Src/main.cpp  **** {
 245:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 246:Src/main.cpp  **** 	{
 247:Src/main.cpp  **** 		if(	(c->x - CONST > obstacles[i].c->x)
 248:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 249:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 250:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 251:Src/main.cpp  **** 			return true;
 252:Src/main.cpp  **** 	}
 253:Src/main.cpp  **** 	return false;
 254:Src/main.cpp  **** }
 255:Src/main.cpp  **** 
 256:Src/main.cpp  **** 
 257:Src/main.cpp  **** struct coords getIntersection(const struct array *dataset, const struct vect *v)
 258:Src/main.cpp  **** {
 259:Src/main.cpp  **** 	struct obstacle *o = NULL;
 260:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 261:Src/main.cpp  **** 	{
 262:Src/main.cpp  **** 		if(hasIntersection(&((struct obstacle*)dataset->items)[i], v))
 263:Src/main.cpp  **** 		{
 264:Src/main.cpp  **** 			o = &((struct obstacle*)dataset->items)[i];
 265:Src/main.cpp  **** 			break;
 266:Src/main.cpp  **** 		}
 267:Src/main.cpp  **** 	}
 268:Src/main.cpp  **** 	if(o != NULL)
 269:Src/main.cpp  **** 		return {0, 0};
 270:Src/main.cpp  **** 
 271:Src/main.cpp  **** 	return getIntersection(o, v);
 272:Src/main.cpp  **** }
 273:Src/main.cpp  **** 
 274:Src/main.cpp  **** 
 275:Src/main.cpp  **** struct obstacle*	getIntersected(const struct array *dataset, const struct vect *v)
 276:Src/main.cpp  **** {
 277:Src/main.cpp  **** 	struct obstacle *o = NULL;
GAS LISTING /tmp/ccZtEYtQ.s 			page 6


 278:Src/main.cpp  **** 	struct coords	inter;
 279:Src/main.cpp  **** 	COORDS_DATATYPE l = INF;
 280:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 281:Src/main.cpp  **** 	{
 282:Src/main.cpp  **** 		inter = getIntersection(&((struct obstacle*)dataset->items)[i], v);
 283:Src/main.cpp  **** 		COORDS_DATATYPE _l = getLen(v->c, &inter);
 284:Src/main.cpp  **** 		if(inter.x != -1 && inter.y != -1 && _l < l)
 285:Src/main.cpp  **** 		{
 286:Src/main.cpp  **** 			o = &((struct obstacle*)dataset->items)[i];
 287:Src/main.cpp  **** 			l = _l;
 288:Src/main.cpp  **** 		}
 289:Src/main.cpp  **** 	}
 290:Src/main.cpp  **** 	return o;
 291:Src/main.cpp  **** }
 292:Src/main.cpp  **** 
 293:Src/main.cpp  **** // void initGraph(const struct array *obsts)
 294:Src/main.cpp  **** // {
 295:Src/main.cpp  **** // 	struct vect v;
 296:Src/main.cpp  **** // 	struct coords *tgt, *start, endpoint;
 297:Src/main.cpp  **** // 	struct obstacle *zeroObst, *oneObst;
 298:Src/main.cpp  **** // 	for(size_t i = 0; i < obsts->size; i++)
 299:Src/main.cpp  **** // 	{
 300:Src/main.cpp  **** // 		zeroObst = &((struct obstacle*)obsts->items)[i];
 301:Src/main.cpp  **** // 		for(uint8_t j = 0; j < 4; j++)
 302:Src/main.cpp  **** // 		{
 303:Src/main.cpp  **** // 			for(size_t ii = 0; ii < obsts->size; ii++)
 304:Src/main.cpp  **** // 			{
 305:Src/main.cpp  **** // 				oneObst = &((struct obstacle*)obsts->items)[ii];
 306:Src/main.cpp  **** // 				for(uint8_t jj = 0; jj < 4; jj++)
 307:Src/main.cpp  **** // 				{
 308:Src/main.cpp  **** // 					tgt = getCoordsOfCorner(oneObst, jj);
 309:Src/main.cpp  **** // 					start = getCoordsOfCorner(zeroObst, j);
 310:Src/main.cpp  **** // 					v = createVect(start, tgt);
 311:Src/main.cpp  **** // 					endpoint = v.getLastCoords();
 312:Src/main.cpp  **** // 					std::cout << "from obst " << i << " corner " << j << " to obst " << ii << " corner " << jj 
 313:Src/main.cpp  **** // 					if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(v.c) && !isDotInside(t
 314:Src/main.cpp  **** // 					{
 315:Src/main.cpp  **** // 						std::cout << "ADD" << endl;
 316:Src/main.cpp  **** // 						if(oneObst->corners[jj]->numOfTargets == 0)
 317:Src/main.cpp  **** // 							calculatedPoints++;
 318:Src/main.cpp  **** // 						if(zeroObst->corners[j]->numOfTargets == 0)
 319:Src/main.cpp  **** // 							calculatedPoints++;
 320:Src/main.cpp  **** // 						addTarget(zeroObst->corners[j], oneObst->corners[jj]);
 321:Src/main.cpp  **** // 					}
 322:Src/main.cpp  **** // 					else
 323:Src/main.cpp  **** // 						std::cout << "NOPE" << endl;
 324:Src/main.cpp  **** // 				}
 325:Src/main.cpp  **** // 			}
 326:Src/main.cpp  **** // 		}
 327:Src/main.cpp  **** // 	}
 328:Src/main.cpp  **** // }
 329:Src/main.cpp  **** 
 330:Src/main.cpp  **** 
 331:Src/main.cpp  **** void initPoint(struct graphPoint *p)
 332:Src/main.cpp  **** {
 333:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 334:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
GAS LISTING /tmp/ccZtEYtQ.s 			page 7


 335:Src/main.cpp  **** 	struct vect v;
 336:Src/main.cpp  **** 	struct coords *tgt;
 337:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 338:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 339:Src/main.cpp  **** 	{
 340:Src/main.cpp  **** 		currP = ((struct graphPoint**)(points->items))[i];
 341:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 342:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 343:Src/main.cpp  **** 		{
 344:Src/main.cpp  **** 			if(p->numOfTargets == 0)
 345:Src/main.cpp  **** 				calculatedPoints++;
 346:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 347:Src/main.cpp  **** 				calculatedPoints++;
 348:Src/main.cpp  **** 			addTarget(p, currP);
 349:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 350:Src/main.cpp  **** 				initPoint(currP);
 351:Src/main.cpp  **** 		}
 352:Src/main.cpp  **** 	}
 353:Src/main.cpp  **** 	free(points);
 354:Src/main.cpp  **** 	// struct obstacle *zeorObst;
 355:Src/main.cpp  **** 	// for(size_t i = 0; i < obsts->size; i++)
 356:Src/main.cpp  **** 	// {
 357:Src/main.cpp  **** 	// 	zeorObst = &((struct obstacle*)obsts->items)[i];
 358:Src/main.cpp  **** 	// 	for(uint8_t j = 0; j < 4; j++)
 359:Src/main.cpp  **** 	// 	{
 360:Src/main.cpp  **** 	// 		tgt = getCoordsOfCorner(zeorObst, j);
 361:Src/main.cpp  **** 	// 		v = createVect(&p->c, tgt);
 362:Src/main.cpp  **** 	// 		struct coords endpoint = v.getLastCoords();
 363:Src/main.cpp  **** 	// 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(v.c) && !isDotInside(&en
 364:Src/main.cpp  **** 	// 		{
 365:Src/main.cpp  **** 	// 			if(p->numOfTargets == 0)
 366:Src/main.cpp  **** 	// 				calculatedPoints++;
 367:Src/main.cpp  **** 	// 			if(zeorObst->corners[j]->numOfTargets == 0)
 368:Src/main.cpp  **** 	// 				calculatedPoints++;
 369:Src/main.cpp  **** 	// 			addTarget(p, zeorObst->corners[j]);
 370:Src/main.cpp  **** 	// 			for(uint8_t h = 0; h < 4; h++)
 371:Src/main.cpp  **** 	// 				if(zeorObst->corners[h]->numOfTargets == 0)
 372:Src/main.cpp  **** 	// 					initPoint(zeorObst->corners[h], obsts);
 373:Src/main.cpp  **** 	// 		}
 374:Src/main.cpp  **** 	// 	}
 375:Src/main.cpp  **** 	// }
 376:Src/main.cpp  **** 	// for(size_t i = 0; i < obsts->size; i++)
 377:Src/main.cpp  **** 	// {
 378:Src/main.cpp  **** 	// 	for(uint8_t j = 0; j < 4; j++)
 379:Src/main.cpp  **** 	// 	{
 380:Src/main.cpp  **** 	// 		tgt = getCoordsOfCorner(&((struct obstacle*)obsts->items)[i], j);
 381:Src/main.cpp  **** 	// 		// tgt = &((struct obstacle*)obsts->items)[i].corners[j]->c;
 382:Src/main.cpp  **** 	// 		v = createVect(&p->c, tgt);
 383:Src/main.cpp  **** 	// 		struct coords endpoint = v.getLastCoords();
 384:Src/main.cpp  **** 
 385:Src/main.cpp  **** 	// 		// if()
 386:Src/main.cpp  **** 
 387:Src/main.cpp  **** 	// 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(v.c) && !isDotInside(&en
 388:Src/main.cpp  **** 	// 		{
 389:Src/main.cpp  **** 	// 			// cout << "Creating tgt\n";
 390:Src/main.cpp  **** 	// 			if(p->numOfTargets == 0)
 391:Src/main.cpp  **** 	// 				calculatedPoints++;
GAS LISTING /tmp/ccZtEYtQ.s 			page 8


 392:Src/main.cpp  **** 	// 			if(((struct obstacle*)obsts->items)[i].corners[j]->numOfTargets == 0)
 393:Src/main.cpp  **** 	// 				calculatedPoints++;
 394:Src/main.cpp  **** 	// 			// cout << "Creating from " << p->c.toString() << " to " << ((struct obstacle*)(obsts->items
 395:Src/main.cpp  **** 	// 			addTarget(p, ((struct obstacle*)(obsts->items))[i].corners[j]);
 396:Src/main.cpp  **** 	// 			for(uint8_t h = 0; h < 4; h++)
 397:Src/main.cpp  **** 	// 				if(((struct obstacle*)obsts->items)[i].corners[h]->numOfTargets == 0)
 398:Src/main.cpp  **** 	// 					initPoint(((struct obstacle*)obsts->items)[i].corners[h], obsts);
 399:Src/main.cpp  **** 	// 			// initObst(&((struct obstacle*)obsts->items)[i]);
 400:Src/main.cpp  **** 	// 		}
 401:Src/main.cpp  **** 	// 		else
 402:Src/main.cpp  **** 	// 		{
 403:Src/main.cpp  **** 	// 			// cout << "checking from p to obst " << i << " corner " << j << endl;
 404:Src/main.cpp  **** 	// 			// cout 	<< "AAA\n" << v.dx << ":" << v.dy << endl 
 405:Src/main.cpp  **** 	// 			// 		<< v.c->toString() << endl;
 406:Src/main.cpp  **** 	// 			// if(hasIntersections(&v))
 407:Src/main.cpp  **** 	// 			// {
 408:Src/main.cpp  **** 	// 			// 	for(int l = 0; l < numOfObstacles; l++)
 409:Src/main.cpp  **** 	// 			// 	{
 410:Src/main.cpp  **** 	// 			// 		if(hasIntersection(&obstacles[i], &v))
 411:Src/main.cpp  **** 	// 			// 			cout << "ASDSAFAS " << i << endl;
 412:Src/main.cpp  **** 	// 			// 	}
 413:Src/main.cpp  **** 	// 			// }
 414:Src/main.cpp  **** 	// 		}
 415:Src/main.cpp  **** 	// 		free(tgt);
 416:Src/main.cpp  **** 	// 	}
 417:Src/main.cpp  **** 	// }
 418:Src/main.cpp  **** }
 419:Src/main.cpp  **** 
 420:Src/main.cpp  **** 
 421:Src/main.cpp  **** 
 422:Src/main.cpp  **** 
 423:Src/main.cpp  **** void initPoint(struct graphPoint *p, const struct coords *c)
 424:Src/main.cpp  **** {
 425:Src/main.cpp  **** 	// struct array *obsts = getDataSet(c);
 426:Src/main.cpp  **** 	initPoint(p);
 427:Src/main.cpp  **** 	// free(obsts);
 428:Src/main.cpp  **** }
 429:Src/main.cpp  **** 
 430:Src/main.cpp  **** 
 431:Src/main.cpp  **** void initObstCorner(const struct obstacle *obst, const uint8_t corner)
 432:Src/main.cpp  **** {
 433:Src/main.cpp  **** 	cout << "Watching corner " << (int)corner << " of obstacle " << obst << endl;
 434:Src/main.cpp  **** 	struct graphPoint *point = getPoint(obst, corner);
 435:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 436:Src/main.cpp  **** 	initPoint(point, c);
 437:Src/main.cpp  **** }
 438:Src/main.cpp  **** 
 439:Src/main.cpp  **** 
 440:Src/main.cpp  **** 
 441:Src/main.cpp  **** void initObst(const struct obstacle *obst)
 442:Src/main.cpp  **** {
 443:Src/main.cpp  **** 	for(uint8_t i = 0; i < 4; i++)
 444:Src/main.cpp  **** 		initObstCorner(obst, i);
 445:Src/main.cpp  **** }
 446:Src/main.cpp  **** 
 447:Src/main.cpp  **** 
 448:Src/main.cpp  **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 9


 449:Src/main.cpp  **** void initGraph(struct graphPoint *startp)
 450:Src/main.cpp  **** {
 451:Src/main.cpp  **** 	struct array *ar = getDataSet(&startp->c);
 452:Src/main.cpp  **** 	// initGraph(ar);
 453:Src/main.cpp  **** 	initPoint(startp);
 454:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 455:Src/main.cpp  **** 	{
 456:Src/main.cpp  **** 		if(graph[i]->numOfTargets == 0)
 457:Src/main.cpp  **** 		{
 458:Src/main.cpp  **** 			free(ar);
 459:Src/main.cpp  **** 			ar = getDataSet(&graph[i]->c);
 460:Src/main.cpp  **** 			initPoint(graph[i]);
 461:Src/main.cpp  **** 		}
 462:Src/main.cpp  **** 	}
 463:Src/main.cpp  **** 	free(ar);
 464:Src/main.cpp  **** }
 465:Src/main.cpp  **** 
 466:Src/main.cpp  **** 
 467:Src/main.cpp  **** 
 468:Src/main.cpp  **** 
 469:Src/main.cpp  **** 
 470:Src/main.cpp  **** 
 471:Src/main.cpp  **** 
 472:Src/main.cpp  **** 
 473:Src/main.cpp  **** struct coords getCoordsOfPoint(struct graphPoint *p)
 474:Src/main.cpp  **** {
 475:Src/main.cpp  **** 	return (p->c);
 476:Src/main.cpp  **** }
 477:Src/main.cpp  **** 
 478:Src/main.cpp  **** 
 479:Src/main.cpp  **** 
 480:Src/main.cpp  **** 
 481:Src/main.cpp  **** 
 482:Src/main.cpp  **** bool hasUncalculatedPoints(const struct graphPoint *p)
 483:Src/main.cpp  **** {
 484:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 485:Src/main.cpp  **** 	{
 486:Src/main.cpp  **** 		if(!(p->targets[i]->calculated))
 487:Src/main.cpp  **** 			return true;
 488:Src/main.cpp  **** 	}
 489:Src/main.cpp  **** 	return false;
 490:Src/main.cpp  **** }
 491:Src/main.cpp  **** 
 492:Src/main.cpp  **** struct graphPoint* getMinTarget(const struct graphPoint *p)
 493:Src/main.cpp  **** {
 494:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 495:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 496:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 497:Src/main.cpp  **** 	{
 498:Src/main.cpp  **** 		if(!p->targets[i]->calculated && p->targets[i]->weight <= w)
 499:Src/main.cpp  **** 		{
 500:Src/main.cpp  **** 			w = p->targets[i]->weight;
 501:Src/main.cpp  **** 			pp = p->targets[i];
 502:Src/main.cpp  **** 		}
 503:Src/main.cpp  **** 	}
 504:Src/main.cpp  **** 	return pp;
 505:Src/main.cpp  **** }
GAS LISTING /tmp/ccZtEYtQ.s 			page 10


 506:Src/main.cpp  **** 
 507:Src/main.cpp  **** void calculateWay(size_t index) 
 508:Src/main.cpp  **** {
 509:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 510:Src/main.cpp  **** 		return;
 511:Src/main.cpp  **** 	graph[index]->calculated = true;
 512:Src/main.cpp  **** 	
 513:Src/main.cpp  **** 	if(graph[index]->numOfTargets == 0)
 514:Src/main.cpp  **** 		return;
 515:Src/main.cpp  **** 
 516:Src/main.cpp  **** 	struct graphPoint * watch;
 517:Src/main.cpp  **** 	COORDS_DATATYPE w;
 518:Src/main.cpp  **** 
 519:Src/main.cpp  **** 	for(size_t i = 0; i < graph[index]->numOfTargets; i++)
 520:Src/main.cpp  **** 	{
 521:Src/main.cpp  **** 		watch = graph[index]->targets[i];
 522:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 523:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 524:Src/main.cpp  **** 		{
 525:Src/main.cpp  **** 			// cout << "\t>new weight\n"; 
 526:Src/main.cpp  **** 			watch->weight = w + graph[index]->weight;
 527:Src/main.cpp  **** 			ways[watch->i] = index;
 528:Src/main.cpp  **** 		}
 529:Src/main.cpp  **** 	}
 530:Src/main.cpp  **** 
 531:Src/main.cpp  **** 	while (hasUncalculatedPoints(graph[index]))
 532:Src/main.cpp  **** 	{
 533:Src/main.cpp  **** 		watch = getMinTarget(graph[index]);
 534:Src/main.cpp  **** 		calculateWay(watch->i);
 535:Src/main.cpp  **** 	}
 536:Src/main.cpp  **** }
 537:Src/main.cpp  **** 
 538:Src/main.cpp  **** 
 539:Src/main.cpp  **** 
 540:Src/main.cpp  **** void drawLine(struct coords *start, struct coords *end)
 541:Src/main.cpp  **** {
 542:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 543:Src/main.cpp  **** }
 544:Src/main.cpp  **** 
 545:Src/main.cpp  **** void drawLine(struct graphPoint *start, struct graphPoint *end)
 546:Src/main.cpp  **** {
 547:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 548:Src/main.cpp  **** }
 549:Src/main.cpp  **** 
 550:Src/main.cpp  **** 
 551:Src/main.cpp  **** void drawWeight(struct graphPoint *start, struct graphPoint *end)
 552:Src/main.cpp  **** {
 553:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 554:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 555:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 556:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 557:Src/main.cpp  **** }
 558:Src/main.cpp  **** 
 559:Src/main.cpp  **** 
 560:Src/main.cpp  **** void drawWeight(struct coords *start, struct coords *end)
 561:Src/main.cpp  **** {
 562:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
GAS LISTING /tmp/ccZtEYtQ.s 			page 11


 563:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 564:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 565:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 566:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 567:Src/main.cpp  **** }
 568:Src/main.cpp  **** 
 569:Src/main.cpp  **** 
 570:Src/main.cpp  **** 
 571:Src/main.cpp  **** void drawEdges(struct graphPoint *p)
 572:Src/main.cpp  **** {
 573:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 574:Src/main.cpp  **** 	{
 575:Src/main.cpp  **** 		// cout << "SHIT\n";
 576:Src/main.cpp  **** 		return;
 577:Src/main.cpp  **** 	}
 578:Src/main.cpp  **** 
 579:Src/main.cpp  **** 	// struct coords start, end;
 580:Src/main.cpp  **** 	// start = getCoordsOfPoint(p);
 581:Src/main.cpp  **** 	// for(size_t i = 0; i < p->numOfTargets; i++)
 582:Src/main.cpp  **** 	// {
 583:Src/main.cpp  **** 	// 	end = getCoordsOfPoint(p->targets[i]);
 584:Src/main.cpp  **** 	// 	glSetColor(GRAPH_COLOR);
 585:Src/main.cpp  **** 	// 	drawLine(&start, &end);
 586:Src/main.cpp  **** 	// 	// drawWeight(&start, &end);
 587:Src/main.cpp  **** 
 588:Src/main.cpp  **** 	// 	// cout 	<< "\tLine: " << endl
 589:Src/main.cpp  **** 	// 	// 		<< "\t\t" << start.x << ":" << start.y << " -> " << end.x << ":" << end.y << endl;
 590:Src/main.cpp  **** 	// }
 591:Src/main.cpp  **** 
 592:Src/main.cpp  **** 	glSetColor(GRAPH_COLOR);
 593:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 594:Src/main.cpp  **** 	{
 595:Src/main.cpp  **** 		drawLine(&p->c, &p->targets[i]->c);
 596:Src/main.cpp  **** 	}
 597:Src/main.cpp  **** }
 598:Src/main.cpp  **** 
 599:Src/main.cpp  **** 
 600:Src/main.cpp  **** 
 601:Src/main.cpp  **** 
 602:Src/main.cpp  **** void drawObstacle(const struct obstacle *o)
 603:Src/main.cpp  **** {
 604:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 605:Src/main.cpp  **** 	glSetColor(OBST_COLOR);
 606:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 607:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 608:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 609:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 610:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 611:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 612:Src/main.cpp  **** }
 613:Src/main.cpp  **** 
 614:Src/main.cpp  **** 
 615:Src/main.cpp  **** void drawWay(size_t pointNum, size_t target)
 616:Src/main.cpp  **** {
 617:Src/main.cpp  **** 	size_t curr = pointNum;
 618:Src/main.cpp  **** 	while(curr != target)
 619:Src/main.cpp  **** 	{
GAS LISTING /tmp/ccZtEYtQ.s 			page 12


 620:Src/main.cpp  **** 		drawLine(graph[curr], graph[ways[curr]]);
 621:Src/main.cpp  **** 		curr = ways[curr];
 622:Src/main.cpp  **** 	}
 623:Src/main.cpp  **** }
 624:Src/main.cpp  **** 
 625:Src/main.cpp  **** 
 626:Src/main.cpp  **** void renderScene(void)
 627:Src/main.cpp  **** {
 628:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 629:Src/main.cpp  **** 
 630:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 631:Src/main.cpp  **** 		{
 632:Src/main.cpp  **** 			drawObstacle(&obstacles[i]);
 633:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 634:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 635:Src/main.cpp  **** 		}
 636:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 637:Src/main.cpp  **** 		{
 638:Src/main.cpp  **** 			glLineWidth(1);
 639:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 640:Src/main.cpp  **** 			drawEdges(graph[i]);
 641:Src/main.cpp  **** 		}
 642:Src/main.cpp  **** 
 643:Src/main.cpp  **** 		// cout << "{";
 644:Src/main.cpp  **** 		// for(int i = 0; i < graphSize; i++)
 645:Src/main.cpp  **** 		// 	cout << i << ((i < graphSize - 1)? ", " : " ");
 646:Src/main.cpp  **** 		// cout << "}\n";
 647:Src/main.cpp  **** 		// cout << "{";
 648:Src/main.cpp  **** 		// for(int i = 0; i < graphSize; i++)
 649:Src/main.cpp  **** 		// 	cout << ways[i] << ((i < graphSize - 1)? ", " : " ");
 650:Src/main.cpp  **** 		// cout << "}\n";
 651:Src/main.cpp  **** 
 652:Src/main.cpp  **** 		glLineWidth(5);
 653:Src/main.cpp  **** 		glSetColor(0x00FF99);
 654:Src/main.cpp  **** 		// drawWay(home, target);
 655:Src/main.cpp  **** 		// struct coords ss[] = {{120.000000, 770.000000}, {120.000000, 770.000000}, {109.599998, 349.600
 656:Src/main.cpp  **** 		// {300.399994, 300.399994}, {99.599998, 99.599998}, {109.599998, 349.600006}, {120.000000, 770.0
 657:Src/main.cpp  **** 
 658:Src/main.cpp  **** 		// for(int i = 0; i < sizeof(ss); i++)
 659:Src/main.cpp  **** 		// {
 660:Src/main.cpp  **** 		// 	drawCircleFilled(ss[i].x, ss[i].y, 4, 10);
 661:Src/main.cpp  **** 		// }
 662:Src/main.cpp  **** 
 663:Src/main.cpp  **** 		// drawText(to_wstring(graph[home]->weight), 12, 10, 10);
 664:Src/main.cpp  **** 
 665:Src/main.cpp  **** 		// drawCircleFilled(283.913025, 550.000000, 10, 100);
 666:Src/main.cpp  **** 
 667:Src/main.cpp  ****     glutSwapBuffers();
 668:Src/main.cpp  **** }
 669:Src/main.cpp  **** 
 670:Src/main.cpp  **** 
 671:Src/main.cpp  **** void handleKeypress(unsigned char key, //The key that was pressed
 672:Src/main.cpp  ****                                         int x, int y) //The current mouse coordinates
 673:Src/main.cpp  **** {
 674:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 675:Src/main.cpp  ****     if(key == 27) //ESC
 676:Src/main.cpp  ****     {
GAS LISTING /tmp/ccZtEYtQ.s 			page 13


 677:Src/main.cpp  **** 	    cout << "ESC\n";
 678:Src/main.cpp  **** 		terminated = true;
 679:Src/main.cpp  ****     }
 680:Src/main.cpp  **** }
 681:Src/main.cpp  **** 
 682:Src/main.cpp  **** 
 683:Src/main.cpp  **** 
 684:Src/main.cpp  **** 
 685:Src/main.cpp  **** 
 686:Src/main.cpp  **** void reshape(int w, int h)
 687:Src/main.cpp  **** {
  10              		.loc 1 687 1 view -0
  11              		.cfi_startproc
  12              		.loc 1 687 1 is_stmt 0 view .LVU1
  13 0000 55       		pushq	%rbp
  14              		.cfi_def_cfa_offset 16
  15              		.cfi_offset 6, -16
  16 0001 53       		pushq	%rbx
  17              		.cfi_def_cfa_offset 24
  18              		.cfi_offset 3, -24
  19 0002 4883EC08 		subq	$8, %rsp
  20              		.cfi_def_cfa_offset 32
  21 0006 89FB     		movl	%edi, %ebx
  22 0008 89F5     		movl	%esi, %ebp
 688:Src/main.cpp  **** 	glViewport(0, 0, w, h);
  23              		.loc 1 688 2 is_stmt 1 view .LVU2
  24              		.loc 1 688 12 is_stmt 0 view .LVU3
  25 000a 89F1     		movl	%esi, %ecx
  26 000c 89FA     		movl	%edi, %edx
  27 000e BE000000 		movl	$0, %esi
  27      00
  28              	.LVL1:
  29              		.loc 1 688 12 view .LVU4
  30 0013 BF000000 		movl	$0, %edi
  30      00
  31              	.LVL2:
  32              		.loc 1 688 12 view .LVU5
  33 0018 E8000000 		call	glViewport@PLT
  33      00
  34              	.LVL3:
 689:Src/main.cpp  **** 
 690:Src/main.cpp  **** 	glMatrixMode(GL_PROJECTION);
  35              		.loc 1 690 2 is_stmt 1 view .LVU6
  36              		.loc 1 690 14 is_stmt 0 view .LVU7
  37 001d BF011700 		movl	$5889, %edi
  37      00
  38 0022 E8000000 		call	glMatrixMode@PLT
  38      00
  39              	.LVL4:
 691:Src/main.cpp  **** 	glLoadIdentity();
  40              		.loc 1 691 2 is_stmt 1 view .LVU8
  41              		.loc 1 691 16 is_stmt 0 view .LVU9
  42 0027 E8000000 		call	glLoadIdentity@PLT
  42      00
  43              	.LVL5:
 692:Src/main.cpp  **** 	gluOrtho2D(0, w, 0, h);
  44              		.loc 1 692 2 is_stmt 1 view .LVU10
GAS LISTING /tmp/ccZtEYtQ.s 			page 14


  45              		.loc 1 692 12 is_stmt 0 view .LVU11
  46 002c 660FEFDB 		pxor	%xmm3, %xmm3
  47 0030 F20F2ADD 		cvtsi2sdl	%ebp, %xmm3
  48 0034 660FEFD2 		pxor	%xmm2, %xmm2
  49 0038 660FEFC9 		pxor	%xmm1, %xmm1
  50 003c F20F2ACB 		cvtsi2sdl	%ebx, %xmm1
  51 0040 660F28C2 		movapd	%xmm2, %xmm0
  52 0044 E8000000 		call	gluOrtho2D@PLT
  52      00
  53              	.LVL6:
 693:Src/main.cpp  **** 
 694:Src/main.cpp  **** 	glMatrixMode(GL_MODELVIEW);
  54              		.loc 1 694 2 is_stmt 1 view .LVU12
  55              		.loc 1 694 14 is_stmt 0 view .LVU13
  56 0049 BF001700 		movl	$5888, %edi
  56      00
  57 004e E8000000 		call	glMatrixMode@PLT
  57      00
  58              	.LVL7:
 695:Src/main.cpp  **** 	glLoadIdentity();
  59              		.loc 1 695 2 is_stmt 1 view .LVU14
  60              		.loc 1 695 16 is_stmt 0 view .LVU15
  61 0053 E8000000 		call	glLoadIdentity@PLT
  61      00
  62              	.LVL8:
 696:Src/main.cpp  **** }
  63              		.loc 1 696 1 view .LVU16
  64 0058 4883C408 		addq	$8, %rsp
  65              		.cfi_def_cfa_offset 24
  66 005c 5B       		popq	%rbx
  67              		.cfi_def_cfa_offset 16
  68              	.LVL9:
  69              		.loc 1 696 1 view .LVU17
  70 005d 5D       		popq	%rbp
  71              		.cfi_def_cfa_offset 8
  72              	.LVL10:
  73              		.loc 1 696 1 view .LVU18
  74 005e C3       		ret
  75              		.cfi_endproc
  76              	.LFE2509:
  78              		.globl	_Z4timfi
  80              	_Z4timfi:
  81              	.LVL11:
  82              	.LFB2510:
 697:Src/main.cpp  **** 
 698:Src/main.cpp  **** 
 699:Src/main.cpp  **** 
 700:Src/main.cpp  **** 
 701:Src/main.cpp  **** void timf(int value)				// Timer function
 702:Src/main.cpp  **** {
  83              		.loc 1 702 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		.loc 1 702 1 is_stmt 0 view .LVU20
  86 005f 4883EC08 		subq	$8, %rsp
  87              		.cfi_def_cfa_offset 16
 703:Src/main.cpp  **** 	if(!terminated)					//if don't wanna terminate
  88              		.loc 1 703 2 is_stmt 1 view .LVU21
GAS LISTING /tmp/ccZtEYtQ.s 			page 15


  89 0063 803D0000 		cmpb	$0, terminated(%rip)
  89      000000
  90 006a 7520     		jne	.L4
 704:Src/main.cpp  **** 	{
 705:Src/main.cpp  **** 		glutPostRedisplay();		//Redraw windows
  91              		.loc 1 705 3 view .LVU22
  92              		.loc 1 705 20 is_stmt 0 view .LVU23
  93 006c E8000000 		call	glutPostRedisplay@PLT
  93      00
  94              	.LVL12:
 706:Src/main.cpp  **** 		glutTimerFunc(GL_TIMER_DELAY, timf, 0);	//Setup next timer
  95              		.loc 1 706 3 is_stmt 1 view .LVU24
  96              		.loc 1 706 16 is_stmt 0 view .LVU25
  97 0071 BA000000 		movl	$0, %edx
  97      00
  98 0076 488D3500 		leaq	_Z4timfi(%rip), %rsi
  98      000000
  99 007d BF900100 		movl	$400, %edi
  99      00
 100 0082 E8000000 		call	glutTimerFunc@PLT
 100      00
 101              	.LVL13:
 707:Src/main.cpp  **** 	}
 708:Src/main.cpp  **** 	else							//if wanna terminate
 709:Src/main.cpp  **** 	{
 710:Src/main.cpp  **** 		terminated = false;			//set terminated flag
 711:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 712:Src/main.cpp  **** 	}
 713:Src/main.cpp  **** }
 102              		.loc 1 713 1 view .LVU26
 103 0087 4883C408 		addq	$8, %rsp
 104              		.cfi_remember_state
 105              		.cfi_def_cfa_offset 8
 106 008b C3       		ret
 107              	.LVL14:
 108              	.L4:
 109              		.cfi_restore_state
 710:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 110              		.loc 1 710 3 is_stmt 1 view .LVU27
 710:Src/main.cpp  **** 		exit(RETURN_CODE_OK);		//terminate thread
 111              		.loc 1 710 14 is_stmt 0 view .LVU28
 112 008c C6050000 		movb	$0, terminated(%rip)
 112      000000
 711:Src/main.cpp  **** 	}
 113              		.loc 1 711 3 is_stmt 1 view .LVU29
 711:Src/main.cpp  **** 	}
 114              		.loc 1 711 7 is_stmt 0 view .LVU30
 115 0093 BF000000 		movl	$0, %edi
 115      00
 116              	.LVL15:
 711:Src/main.cpp  **** 	}
 117              		.loc 1 711 7 view .LVU31
 118 0098 E8000000 		call	exit@PLT
 118      00
 119              	.LVL16:
 120              		.cfi_endproc
 121              	.LFE2510:
GAS LISTING /tmp/ccZtEYtQ.s 			page 16


 124              	_Z41__static_initialization_and_destruction_0ii:
 125              	.LVL17:
 126              	.LFB2887:
 714:Src/main.cpp  **** 
 715:Src/main.cpp  **** 
 716:Src/main.cpp  **** 
 717:Src/main.cpp  **** 
 718:Src/main.cpp  **** int main(int argc, char **argv)
 719:Src/main.cpp  **** {
 720:Src/main.cpp  **** 	numOfObstacles = 30;
 721:Src/main.cpp  **** 	size_t iter = 0;
 722:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 723:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 724:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 725:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 726:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(80, 330, 50);
 727:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(120, 340, 50);
 728:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(60, 400, 30);
 729:Src/main.cpp  **** 	numOfObstacles = iter;
 730:Src/main.cpp  **** 
 731:Src/main.cpp  **** 	graphSize = numOfObstacles * 4 + 2;
 732:Src/main.cpp  **** 
 733:Src/main.cpp  **** 	struct graphPoint *p = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 734:Src/main.cpp  **** 
 735:Src/main.cpp  **** 	struct coords c;
 736:Src/main.cpp  **** 	c.x = 350;
 737:Src/main.cpp  **** 	c.y = 10;
 738:Src/main.cpp  **** 	p->c = c;
 739:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 740:Src/main.cpp  **** 
 741:Src/main.cpp  **** 	struct coords c2;
 742:Src/main.cpp  **** 	c2.x = 120;
 743:Src/main.cpp  **** 	c2.y = 770;
 744:Src/main.cpp  **** 	p2->c = c2;
 745:Src/main.cpp  **** 
 746:Src/main.cpp  **** 	graph = (struct graphPoint**)malloc(graphSize * sizeof(struct graphPoint*));
 747:Src/main.cpp  **** 	target = numOfObstacles * 4;
 748:Src/main.cpp  **** 	home = target + 1;
 749:Src/main.cpp  **** 	p2->i = home;
 750:Src/main.cpp  **** 	p->i = target;
 751:Src/main.cpp  **** 	graph[target] = p;
 752:Src/main.cpp  **** 	graph[home] = p2;
 753:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 754:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 755:Src/main.cpp  **** 
 756:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 757:Src/main.cpp  **** 	{
 758:Src/main.cpp  **** 		graph[i]->i = i;
 759:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 760:Src/main.cpp  **** 	}
 761:Src/main.cpp  **** 	graph[target]->weight = 0;
 762:Src/main.cpp  **** 
 763:Src/main.cpp  **** 	ways = (size_t*)malloc(graphSize * sizeof(size_t));
 764:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 765:Src/main.cpp  **** 		ways[i] = target;
 766:Src/main.cpp  **** 
 767:Src/main.cpp  **** 	startway.x 	= 0;
GAS LISTING /tmp/ccZtEYtQ.s 			page 17


 768:Src/main.cpp  **** 	startway.y 	= 0;
 769:Src/main.cpp  **** 	endway.x	= 150;
 770:Src/main.cpp  **** 	endway.y	= 150;
 771:Src/main.cpp  **** 
 772:Src/main.cpp  **** 
 773:Src/main.cpp  **** 	struct coords c3;
 774:Src/main.cpp  **** 	c3.x = 200;
 775:Src/main.cpp  **** 	c3.y = 0;
 776:Src/main.cpp  **** 
 777:Src/main.cpp  **** 
 778:Src/main.cpp  **** 	// initGraph(p);
 779:Src/main.cpp  **** 	// calculatedPoints = 0;
 780:Src/main.cpp  **** 	initGraph(p);
 781:Src/main.cpp  **** 	
 782:Src/main.cpp  **** 	
 783:Src/main.cpp  **** 
 784:Src/main.cpp  **** 	struct graphPoint startp, endp;
 785:Src/main.cpp  **** 	startp = *graph[7];
 786:Src/main.cpp  **** 	endp = *graph[1];
 787:Src/main.cpp  **** 
 788:Src/main.cpp  **** 	// startp.c.x = obstacles[2].c->x;
 789:Src/main.cpp  **** 	// startp.c.y = obstacles[2].c->y;
 790:Src/main.cpp  **** 	// endp.c.x = obstacles[1].c->x + obstacles[1].a / 2;
 791:Src/main.cpp  **** 	// endp.c.y = obstacles[1].c->y + obstacles[1].a / 2;
 792:Src/main.cpp  **** 	// struct vect v = createVect(&startp.c, &endp.c);
 793:Src/main.cpp  **** 
 794:Src/main.cpp  **** 	// struct graphPoint tgt;
 795:Src/main.cpp  **** 
 796:Src/main.cpp  **** 	// startp.c = *getCoordsOfCorner(&obstacles[2], 0);
 797:Src/main.cpp  **** 	// endp.c = *getCoordsOfCorner(&obstacles[1], 2);
 798:Src/main.cpp  **** 	
 799:Src/main.cpp  **** 	// tgt = &((struct obstacle*)obsts->items)[i].corners[j]->c;
 800:Src/main.cpp  **** 	
 801:Src/main.cpp  **** 	struct vect v = createVect(&startp.c, &endp.c);
 802:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 803:Src/main.cpp  **** 
 804:Src/main.cpp  **** 	cout << "start: " << startp.c.toString() << "\tend: " << endp.c.toString() << endl;
 805:Src/main.cpp  **** 	int shit = 1;
 806:Src/main.cpp  **** 	
 807:Src/main.cpp  **** 	// struct vect v = createVect(&obstacles[1].corners[2]->c, &obstacles[1].corners[3]->c);
 808:Src/main.cpp  **** 	
 809:Src/main.cpp  **** 	cout << v.toString() << endl << v.c->toString() << endl << "{" << (v.dx + v.c->x) << ":" << (v.dy 
 810:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 811:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 812:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 813:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 814:Src/main.cpp  **** 
 815:Src/main.cpp  **** 	
 816:Src/main.cpp  **** 
 817:Src/main.cpp  **** 	// struct coords cc = {150, 150};
 818:Src/main.cpp  **** 
 819:Src/main.cpp  **** 	// cout << isDotInside(&cc) << endl;
 820:Src/main.cpp  **** 
 821:Src/main.cpp  **** 	if(argc == 1)
 822:Src/main.cpp  **** 		exit(0);
 823:Src/main.cpp  **** 	// initGraph(p);
 824:Src/main.cpp  **** 	// calculatedPoints = 0;
GAS LISTING /tmp/ccZtEYtQ.s 			page 18


 825:Src/main.cpp  **** 	// initGraph(p2);
 826:Src/main.cpp  **** 	// calculateWay(target);
 827:Src/main.cpp  **** 	// return 0;
 828:Src/main.cpp  **** 
 829:Src/main.cpp  **** 	
 830:Src/main.cpp  **** 
 831:Src/main.cpp  **** 
 832:Src/main.cpp  ****  	cout << "glut init\n";
 833:Src/main.cpp  **** 	glutInit(&argc, argv);
 834:Src/main.cpp  **** 	cout << "dispmode\n";
 835:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 836:Src/main.cpp  **** 	glutCreateWindow("floating");
 837:Src/main.cpp  **** 	cout << "reshape\n";
 838:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 839:Src/main.cpp  **** 	cout << "dispfunc\n";
 840:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 841:Src/main.cpp  ****     cout << "keyfunc\n";
 842:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 843:Src/main.cpp  **** 	cout << "timer\n";
 844:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 845:Src/main.cpp  **** 	cout << "mainloop\n";
 846:Src/main.cpp  **** 	glutMainLoop();
 847:Src/main.cpp  **** 
 848:Src/main.cpp  **** 
 849:Src/main.cpp  **** 	return 0;
 850:Src/main.cpp  **** }
 127              		.loc 1 850 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		.loc 1 850 1 is_stmt 0 view .LVU33
 130 009d 83FF01   		cmpl	$1, %edi
 131 00a0 7401     		je	.L13
 132              	.L10:
 133 00a2 C3       		ret
 134              	.L13:
 135              		.loc 1 850 1 discriminator 1 view .LVU34
 136 00a3 81FEFFFF 		cmpl	$65535, %esi
 136      0000
 137 00a9 75F7     		jne	.L10
 138              		.loc 1 850 1 view .LVU35
 139 00ab 4883EC08 		subq	$8, %rsp
 140              		.cfi_def_cfa_offset 16
 141              		.file 2 "/usr/include/c++/9.2.0/iostream"
   1:/usr/include/c++/9.2.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.2.0/iostream **** 
   3:/usr/include/c++/9.2.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/iostream **** //
   5:/usr/include/c++/9.2.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/iostream **** // any later version.
  10:/usr/include/c++/9.2.0/iostream **** 
  11:/usr/include/c++/9.2.0/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/iostream **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 19


  16:/usr/include/c++/9.2.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/iostream **** 
  20:/usr/include/c++/9.2.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/iostream **** 
  25:/usr/include/c++/9.2.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.2.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/iostream ****  */
  28:/usr/include/c++/9.2.0/iostream **** 
  29:/usr/include/c++/9.2.0/iostream **** //
  30:/usr/include/c++/9.2.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.2.0/iostream **** //
  32:/usr/include/c++/9.2.0/iostream **** 
  33:/usr/include/c++/9.2.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.2.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.2.0/iostream **** 
  36:/usr/include/c++/9.2.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/iostream **** 
  38:/usr/include/c++/9.2.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/iostream **** #include <ostream>
  40:/usr/include/c++/9.2.0/iostream **** #include <istream>
  41:/usr/include/c++/9.2.0/iostream **** 
  42:/usr/include/c++/9.2.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.2.0/iostream **** {
  44:/usr/include/c++/9.2.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.2.0/iostream **** 
  46:/usr/include/c++/9.2.0/iostream ****   /**
  47:/usr/include/c++/9.2.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.2.0/iostream ****    *
  49:/usr/include/c++/9.2.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/9.2.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.2.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.2.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.2.0/iostream ****    *
  54:/usr/include/c++/9.2.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.2.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.2.0/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/9.2.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.2.0/iostream ****   */
  59:/usr/include/c++/9.2.0/iostream ****   //@{
  60:/usr/include/c++/9.2.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.2.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.2.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.2.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.2.0/iostream **** 
  65:/usr/include/c++/9.2.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.2.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.2.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.2.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/9.2.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.2.0/iostream **** #endif
  71:/usr/include/c++/9.2.0/iostream ****   //@}
  72:/usr/include/c++/9.2.0/iostream **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 20


  73:/usr/include/c++/9.2.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.2.0/iostream ****   static ios_base::Init __ioinit;
 142              		.loc 2 74 25 view .LVU36
 143 00af 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 143      000000
 144              	.LVL18:
 145              		.loc 2 74 25 view .LVU37
 146 00b6 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 146      00
 147              	.LVL19:
 148              		.loc 2 74 25 view .LVU38
 149 00bb 488D1500 		leaq	__dso_handle(%rip), %rdx
 149      000000
 150 00c2 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 150      000000
 151 00c9 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 151      000000
 152 00d0 E8000000 		call	__cxa_atexit@PLT
 152      00
 153              	.LVL20:
 154              		.loc 1 850 1 view .LVU39
 155 00d5 4883C408 		addq	$8, %rsp
 156              		.cfi_def_cfa_offset 8
 157 00d9 C3       		ret
 158              		.cfi_endproc
 159              	.LFE2887:
 161              		.section	.rodata.str1.1,"aMS",@progbits,1
 162              	.LC1:
 163 0000 50524553 		.string	"PRESSED\n"
 163      5345440A 
 163      00
 164              	.LC2:
 165 0009 4553430A 		.string	"ESC\n"
 165      00
 166              		.text
 167              		.globl	_Z14handleKeypresshii
 169              	_Z14handleKeypresshii:
 170              	.LVL21:
 171              	.LFB2508:
 673:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 172              		.loc 1 673 1 is_stmt 1 view -0
 173              		.cfi_startproc
 673:Src/main.cpp  ****     cout << "PRESSED\n" << (int)key << endl;
 174              		.loc 1 673 1 is_stmt 0 view .LVU41
 175 00da 4154     		pushq	%r12
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 12, -16
 178 00dc 55       		pushq	%rbp
 179              		.cfi_def_cfa_offset 24
 180              		.cfi_offset 6, -24
 181 00dd 53       		pushq	%rbx
 182              		.cfi_def_cfa_offset 32
 183              		.cfi_offset 3, -32
 184 00de 89FD     		movl	%edi, %ebp
 674:Src/main.cpp  ****     if(key == 27) //ESC
 185              		.loc 1 674 5 is_stmt 1 view .LVU42
 186              	.LVL22:
GAS LISTING /tmp/ccZtEYtQ.s 			page 21


 187              	.LBB1432:
 188              	.LBI1432:
 189              		.file 3 "/usr/include/c++/9.2.0/ostream"
   1:/usr/include/c++/9.2.0/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/9.2.0/ostream **** 
   3:/usr/include/c++/9.2.0/ostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ostream **** //
   5:/usr/include/c++/9.2.0/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ostream **** // any later version.
  10:/usr/include/c++/9.2.0/ostream **** 
  11:/usr/include/c++/9.2.0/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ostream **** 
  16:/usr/include/c++/9.2.0/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ostream **** 
  20:/usr/include/c++/9.2.0/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ostream **** 
  25:/usr/include/c++/9.2.0/ostream **** /** @file include/ostream
  26:/usr/include/c++/9.2.0/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/ostream ****  */
  28:/usr/include/c++/9.2.0/ostream **** 
  29:/usr/include/c++/9.2.0/ostream **** //
  30:/usr/include/c++/9.2.0/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/9.2.0/ostream **** //
  32:/usr/include/c++/9.2.0/ostream **** 
  33:/usr/include/c++/9.2.0/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/9.2.0/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/9.2.0/ostream **** 
  36:/usr/include/c++/9.2.0/ostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/ostream **** 
  38:/usr/include/c++/9.2.0/ostream **** #include <ios>
  39:/usr/include/c++/9.2.0/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/9.2.0/ostream **** 
  41:/usr/include/c++/9.2.0/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/ostream **** {
  43:/usr/include/c++/9.2.0/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/ostream **** 
  45:/usr/include/c++/9.2.0/ostream ****   /**
  46:/usr/include/c++/9.2.0/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/9.2.0/ostream ****    *  @ingroup io
  48:/usr/include/c++/9.2.0/ostream ****    *
  49:/usr/include/c++/9.2.0/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/9.2.0/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/9.2.0/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/9.2.0/ostream ****    *
  53:/usr/include/c++/9.2.0/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/9.2.0/ostream ****    *  formatting of all builtin types, and communicates with any class
GAS LISTING /tmp/ccZtEYtQ.s 			page 22


  55:/usr/include/c++/9.2.0/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/9.2.0/ostream ****   */
  57:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/9.2.0/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/9.2.0/ostream ****     {
  60:/usr/include/c++/9.2.0/ostream ****     public:
  61:/usr/include/c++/9.2.0/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/9.2.0/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/9.2.0/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/9.2.0/ostream **** 
  68:/usr/include/c++/9.2.0/ostream ****       // Non-standard Types:
  69:/usr/include/c++/9.2.0/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/9.2.0/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/9.2.0/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/9.2.0/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/9.2.0/ostream ****       							__num_put_type;
  74:/usr/include/c++/9.2.0/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/9.2.0/ostream **** 
  76:/usr/include/c++/9.2.0/ostream ****       /**
  77:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/9.2.0/ostream ****        *
  79:/usr/include/c++/9.2.0/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/9.2.0/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/9.2.0/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/9.2.0/ostream ****       */
  83:/usr/include/c++/9.2.0/ostream ****       explicit
  84:/usr/include/c++/9.2.0/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/9.2.0/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/9.2.0/ostream **** 
  87:/usr/include/c++/9.2.0/ostream ****       /**
  88:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/9.2.0/ostream ****        *
  90:/usr/include/c++/9.2.0/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/9.2.0/ostream ****       */
  92:/usr/include/c++/9.2.0/ostream ****       virtual
  93:/usr/include/c++/9.2.0/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/9.2.0/ostream **** 
  95:/usr/include/c++/9.2.0/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/9.2.0/ostream ****       class sentry;
  97:/usr/include/c++/9.2.0/ostream ****       friend class sentry;
  98:/usr/include/c++/9.2.0/ostream **** 
  99:/usr/include/c++/9.2.0/ostream ****       //@{
 100:/usr/include/c++/9.2.0/ostream ****       /**
 101:/usr/include/c++/9.2.0/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/9.2.0/ostream ****        *
 103:/usr/include/c++/9.2.0/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/9.2.0/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/9.2.0/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/9.2.0/ostream ****       */
 107:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 108:/usr/include/c++/9.2.0/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/9.2.0/ostream ****       {
 110:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
GAS LISTING /tmp/ccZtEYtQ.s 			page 23


 112:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/9.2.0/ostream **** 	return __pf(*this);
 114:/usr/include/c++/9.2.0/ostream ****       }
 115:/usr/include/c++/9.2.0/ostream **** 
 116:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 117:/usr/include/c++/9.2.0/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/9.2.0/ostream ****       {
 119:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 123:/usr/include/c++/9.2.0/ostream **** 	return *this;
 124:/usr/include/c++/9.2.0/ostream ****       }
 125:/usr/include/c++/9.2.0/ostream **** 
 126:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 127:/usr/include/c++/9.2.0/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/9.2.0/ostream ****       {
 129:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 133:/usr/include/c++/9.2.0/ostream **** 	return *this;
 134:/usr/include/c++/9.2.0/ostream ****       }
 135:/usr/include/c++/9.2.0/ostream ****       //@}
 136:/usr/include/c++/9.2.0/ostream **** 
 137:/usr/include/c++/9.2.0/ostream ****       //@{
 138:/usr/include/c++/9.2.0/ostream ****       /**
 139:/usr/include/c++/9.2.0/ostream ****        *  @name Inserters
 140:/usr/include/c++/9.2.0/ostream ****        *
 141:/usr/include/c++/9.2.0/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/9.2.0/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/9.2.0/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/9.2.0/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/9.2.0/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/9.2.0/ostream ****        *
 147:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/9.2.0/ostream ****        *
 150:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/9.2.0/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/9.2.0/ostream ****        *  be rethrown.
 154:/usr/include/c++/9.2.0/ostream ****       */
 155:/usr/include/c++/9.2.0/ostream **** 
 156:/usr/include/c++/9.2.0/ostream ****       //@{
 157:/usr/include/c++/9.2.0/ostream ****       /**
 158:/usr/include/c++/9.2.0/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/9.2.0/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/9.2.0/ostream ****        *
 162:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/9.2.0/ostream ****       */
 165:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 166:/usr/include/c++/9.2.0/ostream ****       operator<<(long __n)
 167:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 24


 169:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 170:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/9.2.0/ostream **** 
 173:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 174:/usr/include/c++/9.2.0/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/9.2.0/ostream **** 
 177:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 178:/usr/include/c++/9.2.0/ostream ****       operator<<(short __n);
 179:/usr/include/c++/9.2.0/ostream **** 
 180:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 181:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/9.2.0/ostream ****       {
 183:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/9.2.0/ostream ****       }
 187:/usr/include/c++/9.2.0/ostream **** 
 188:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 189:/usr/include/c++/9.2.0/ostream ****       operator<<(int __n);
 190:/usr/include/c++/9.2.0/ostream **** 
 191:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 192:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/9.2.0/ostream ****       {
 194:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/9.2.0/ostream ****       }
 198:/usr/include/c++/9.2.0/ostream **** 
 199:/usr/include/c++/9.2.0/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 201:/usr/include/c++/9.2.0/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/9.2.0/ostream **** 
 204:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 205:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/9.2.0/ostream **** #endif
 208:/usr/include/c++/9.2.0/ostream ****       //@}
 209:/usr/include/c++/9.2.0/ostream **** 
 210:/usr/include/c++/9.2.0/ostream ****       //@{
 211:/usr/include/c++/9.2.0/ostream ****       /**
 212:/usr/include/c++/9.2.0/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/9.2.0/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/9.2.0/ostream ****        *
 216:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/9.2.0/ostream ****       */
 219:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 220:/usr/include/c++/9.2.0/ostream ****       operator<<(double __f)
 221:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/9.2.0/ostream **** 
 223:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 224:/usr/include/c++/9.2.0/ostream ****       operator<<(float __f)
 225:/usr/include/c++/9.2.0/ostream ****       {
GAS LISTING /tmp/ccZtEYtQ.s 			page 25


 226:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/9.2.0/ostream ****       }
 230:/usr/include/c++/9.2.0/ostream **** 
 231:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 232:/usr/include/c++/9.2.0/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/9.2.0/ostream ****       //@}
 235:/usr/include/c++/9.2.0/ostream **** 
 236:/usr/include/c++/9.2.0/ostream ****       /**
 237:/usr/include/c++/9.2.0/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/9.2.0/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/9.2.0/ostream ****        *
 241:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/9.2.0/ostream ****       */
 244:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 245:/usr/include/c++/9.2.0/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/9.2.0/ostream **** 
 248:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 250:/usr/include/c++/9.2.0/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/9.2.0/ostream ****       { return *this << "nullptr"; }
 252:/usr/include/c++/9.2.0/ostream **** #endif
 253:/usr/include/c++/9.2.0/ostream **** 
 254:/usr/include/c++/9.2.0/ostream ****       /**
 255:/usr/include/c++/9.2.0/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/9.2.0/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/9.2.0/ostream ****        *
 258:/usr/include/c++/9.2.0/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/9.2.0/ostream ****        *  in that it also constructs a sentry object and has the same error
 260:/usr/include/c++/9.2.0/ostream ****        *  handling behavior.
 261:/usr/include/c++/9.2.0/ostream ****        *
 262:/usr/include/c++/9.2.0/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/9.2.0/ostream ****        *
 264:/usr/include/c++/9.2.0/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/9.2.0/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/9.2.0/ostream ****        *
 267:/usr/include/c++/9.2.0/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/9.2.0/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/9.2.0/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/9.2.0/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/9.2.0/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/9.2.0/ostream ****        *
 273:/usr/include/c++/9.2.0/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/9.2.0/ostream ****       */
 275:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 276:/usr/include/c++/9.2.0/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/9.2.0/ostream ****       //@}
 278:/usr/include/c++/9.2.0/ostream **** 
 279:/usr/include/c++/9.2.0/ostream ****       //@{
 280:/usr/include/c++/9.2.0/ostream ****       /**
 281:/usr/include/c++/9.2.0/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/9.2.0/ostream ****        *
GAS LISTING /tmp/ccZtEYtQ.s 			page 26


 283:/usr/include/c++/9.2.0/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/9.2.0/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/9.2.0/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/9.2.0/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/9.2.0/ostream ****        *  for more.
 288:/usr/include/c++/9.2.0/ostream ****        *
 289:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/9.2.0/ostream ****        *
 292:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/9.2.0/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/9.2.0/ostream ****        *  without completing its actions.
 296:/usr/include/c++/9.2.0/ostream ****       */
 297:/usr/include/c++/9.2.0/ostream **** 
 298:/usr/include/c++/9.2.0/ostream ****       /**
 299:/usr/include/c++/9.2.0/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/9.2.0/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 302:/usr/include/c++/9.2.0/ostream ****        *
 303:/usr/include/c++/9.2.0/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/9.2.0/ostream ****        *
 305:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 307:/usr/include/c++/9.2.0/ostream ****       */
 308:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 309:/usr/include/c++/9.2.0/ostream ****       put(char_type __c);
 310:/usr/include/c++/9.2.0/ostream **** 
 311:/usr/include/c++/9.2.0/ostream ****       /**
 312:/usr/include/c++/9.2.0/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/9.2.0/ostream ****       */
 316:/usr/include/c++/9.2.0/ostream ****       void
 317:/usr/include/c++/9.2.0/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/9.2.0/ostream ****       {
 319:/usr/include/c++/9.2.0/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/9.2.0/ostream **** 	if (__put != __n)
 321:/usr/include/c++/9.2.0/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/9.2.0/ostream ****       }
 323:/usr/include/c++/9.2.0/ostream **** 
 324:/usr/include/c++/9.2.0/ostream ****       /**
 325:/usr/include/c++/9.2.0/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 329:/usr/include/c++/9.2.0/ostream ****        *
 330:/usr/include/c++/9.2.0/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/9.2.0/ostream ****        *  one of the following happens:
 332:/usr/include/c++/9.2.0/ostream ****        *
 333:/usr/include/c++/9.2.0/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/9.2.0/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/9.2.0/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/9.2.0/ostream ****        *
 337:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 339:/usr/include/c++/9.2.0/ostream ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 27


 340:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 341:/usr/include/c++/9.2.0/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/9.2.0/ostream ****       //@}
 343:/usr/include/c++/9.2.0/ostream **** 
 344:/usr/include/c++/9.2.0/ostream ****       /**
 345:/usr/include/c++/9.2.0/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 347:/usr/include/c++/9.2.0/ostream ****        *
 348:/usr/include/c++/9.2.0/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/9.2.0/ostream ****        *
 350:/usr/include/c++/9.2.0/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/9.2.0/ostream ****        *  sets badbit.
 352:/usr/include/c++/9.2.0/ostream ****       */
 353:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 354:/usr/include/c++/9.2.0/ostream ****       flush();
 355:/usr/include/c++/9.2.0/ostream **** 
 356:/usr/include/c++/9.2.0/ostream ****       /**
 357:/usr/include/c++/9.2.0/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/9.2.0/ostream ****        *  @return  A file position object.
 359:/usr/include/c++/9.2.0/ostream ****        *
 360:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/9.2.0/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/9.2.0/ostream ****       */
 363:/usr/include/c++/9.2.0/ostream ****       pos_type
 364:/usr/include/c++/9.2.0/ostream ****       tellp();
 365:/usr/include/c++/9.2.0/ostream **** 
 366:/usr/include/c++/9.2.0/ostream ****       /**
 367:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/9.2.0/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 370:/usr/include/c++/9.2.0/ostream ****        *
 371:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/9.2.0/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/9.2.0/ostream ****       */
 374:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 375:/usr/include/c++/9.2.0/ostream ****       seekp(pos_type);
 376:/usr/include/c++/9.2.0/ostream **** 
 377:/usr/include/c++/9.2.0/ostream ****       /**
 378:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/9.2.0/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/9.2.0/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 382:/usr/include/c++/9.2.0/ostream ****        *
 383:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/9.2.0/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/9.2.0/ostream ****       */
 386:/usr/include/c++/9.2.0/ostream ****        __ostream_type&
 387:/usr/include/c++/9.2.0/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/9.2.0/ostream **** 
 389:/usr/include/c++/9.2.0/ostream ****     protected:
 390:/usr/include/c++/9.2.0/ostream ****       basic_ostream()
 391:/usr/include/c++/9.2.0/ostream ****       { this->init(0); }
 392:/usr/include/c++/9.2.0/ostream **** 
 393:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/9.2.0/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 28


 397:/usr/include/c++/9.2.0/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/9.2.0/ostream **** 
 399:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/9.2.0/ostream ****       : __ios_type()
 401:/usr/include/c++/9.2.0/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/9.2.0/ostream **** 
 403:/usr/include/c++/9.2.0/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/9.2.0/ostream **** 
 405:/usr/include/c++/9.2.0/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/9.2.0/ostream **** 
 407:/usr/include/c++/9.2.0/ostream ****       basic_ostream&
 408:/usr/include/c++/9.2.0/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/9.2.0/ostream ****       {
 410:/usr/include/c++/9.2.0/ostream **** 	swap(__rhs);
 411:/usr/include/c++/9.2.0/ostream **** 	return *this;
 412:/usr/include/c++/9.2.0/ostream ****       }
 413:/usr/include/c++/9.2.0/ostream **** 
 414:/usr/include/c++/9.2.0/ostream ****       void
 415:/usr/include/c++/9.2.0/ostream ****       swap(basic_ostream& __rhs)
 416:/usr/include/c++/9.2.0/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/9.2.0/ostream **** #endif
 418:/usr/include/c++/9.2.0/ostream **** 
 419:/usr/include/c++/9.2.0/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/9.2.0/ostream **** 	__ostream_type&
 421:/usr/include/c++/9.2.0/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/9.2.0/ostream ****     };
 423:/usr/include/c++/9.2.0/ostream **** 
 424:/usr/include/c++/9.2.0/ostream ****   /**
 425:/usr/include/c++/9.2.0/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/9.2.0/ostream ****    *
 427:/usr/include/c++/9.2.0/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/9.2.0/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/9.2.0/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/9.2.0/ostream ****   */
 431:/usr/include/c++/9.2.0/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/9.2.0/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/9.2.0/ostream ****     {
 434:/usr/include/c++/9.2.0/ostream ****       // Data Members.
 435:/usr/include/c++/9.2.0/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/9.2.0/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/9.2.0/ostream **** 
 438:/usr/include/c++/9.2.0/ostream ****     public:
 439:/usr/include/c++/9.2.0/ostream ****       /**
 440:/usr/include/c++/9.2.0/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/9.2.0/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/9.2.0/ostream ****        *
 443:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/9.2.0/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/9.2.0/ostream ****        *  is called to synchronize the output sequences.
 446:/usr/include/c++/9.2.0/ostream ****        *
 447:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/9.2.0/ostream ****        *  true (@a okay).
 449:/usr/include/c++/9.2.0/ostream ****       */
 450:/usr/include/c++/9.2.0/ostream ****       explicit
 451:/usr/include/c++/9.2.0/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/9.2.0/ostream **** 
 453:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic push
GAS LISTING /tmp/ccZtEYtQ.s 			page 29


 454:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/9.2.0/ostream ****       /**
 456:/usr/include/c++/9.2.0/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/9.2.0/ostream ****        *
 458:/usr/include/c++/9.2.0/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/9.2.0/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/9.2.0/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/9.2.0/ostream ****       */
 462:/usr/include/c++/9.2.0/ostream ****       ~sentry()
 463:/usr/include/c++/9.2.0/ostream ****       {
 464:/usr/include/c++/9.2.0/ostream **** 	// XXX MT
 465:/usr/include/c++/9.2.0/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/9.2.0/ostream **** 	  {
 467:/usr/include/c++/9.2.0/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 468:/usr/include/c++/9.2.0/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/9.2.0/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/9.2.0/ostream **** 	  }
 471:/usr/include/c++/9.2.0/ostream ****       }
 472:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic pop
 473:/usr/include/c++/9.2.0/ostream **** 
 474:/usr/include/c++/9.2.0/ostream ****       /**
 475:/usr/include/c++/9.2.0/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/9.2.0/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/9.2.0/ostream ****        *
 478:/usr/include/c++/9.2.0/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/9.2.0/ostream ****        *  return value is that of the sentry state (true == okay).
 480:/usr/include/c++/9.2.0/ostream ****       */
 481:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/9.2.0/ostream ****       explicit
 483:/usr/include/c++/9.2.0/ostream **** #endif
 484:/usr/include/c++/9.2.0/ostream ****       operator bool() const
 485:/usr/include/c++/9.2.0/ostream ****       { return _M_ok; }
 486:/usr/include/c++/9.2.0/ostream ****     };
 487:/usr/include/c++/9.2.0/ostream **** 
 488:/usr/include/c++/9.2.0/ostream ****   //@{
 489:/usr/include/c++/9.2.0/ostream ****   /**
 490:/usr/include/c++/9.2.0/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/9.2.0/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 494:/usr/include/c++/9.2.0/ostream ****    *
 495:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/9.2.0/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/9.2.0/ostream ****    *  called.
 500:/usr/include/c++/9.2.0/ostream ****    *
 501:/usr/include/c++/9.2.0/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/9.2.0/ostream ****    *  @c char, the character is widened before insertion.
 503:/usr/include/c++/9.2.0/ostream ****   */
 504:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/9.2.0/ostream **** 
 509:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
GAS LISTING /tmp/ccZtEYtQ.s 			page 30


 511:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/9.2.0/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/9.2.0/ostream **** 
 514:/usr/include/c++/9.2.0/ostream ****   // Specialization
 515:/usr/include/c++/9.2.0/ostream ****   template <class _Traits>
 516:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/9.2.0/ostream **** 
 520:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 521:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 522:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 525:/usr/include/c++/9.2.0/ostream **** 
 526:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 527:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 530:/usr/include/c++/9.2.0/ostream ****   //@}
 531:/usr/include/c++/9.2.0/ostream **** 
 532:/usr/include/c++/9.2.0/ostream ****   //@{
 533:/usr/include/c++/9.2.0/ostream ****   /**
 534:/usr/include/c++/9.2.0/ostream ****    *  @brief  String inserters
 535:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 536:/usr/include/c++/9.2.0/ostream ****    *  @param  __s  A character string.
 537:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 538:/usr/include/c++/9.2.0/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 539:/usr/include/c++/9.2.0/ostream ****    *
 540:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 541:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 542:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 543:/usr/include/c++/9.2.0/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 544:/usr/include/c++/9.2.0/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 545:/usr/include/c++/9.2.0/ostream ****   */
 546:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 547:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 548:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 549:/usr/include/c++/9.2.0/ostream ****     {
 550:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 551:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 552:/usr/include/c++/9.2.0/ostream ****       else
 553:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 554:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 555:/usr/include/c++/9.2.0/ostream ****       return __out;
 556:/usr/include/c++/9.2.0/ostream ****     }
 557:/usr/include/c++/9.2.0/ostream **** 
 558:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/9.2.0/ostream ****     basic_ostream<_CharT, _Traits> &
 560:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 561:/usr/include/c++/9.2.0/ostream **** 
 562:/usr/include/c++/9.2.0/ostream ****   // Partial specializations
 563:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 564:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 565:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 190              		.loc 3 565 5 view .LVU43
 191              		.loc 3 565 5 is_stmt 0 view .LVU44
GAS LISTING /tmp/ccZtEYtQ.s 			page 31


 192              	.LBE1432:
 193              		.file 4 "/usr/include/c++/9.2.0/bits/char_traits.h"
   1:/usr/include/c++/9.2.0/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/char_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/char_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/char_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  31:/usr/include/c++/9.2.0/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  33:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  34:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/9.2.0/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  37:/usr/include/c++/9.2.0/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  43:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/c++/9.2.0/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
  46:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  47:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/9.2.0/bits/char_traits.h **** {
  49:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  51:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  52:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  54:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
GAS LISTING /tmp/ccZtEYtQ.s 			page 32


  56:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  64:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
  69:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  70:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  71:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  72:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  74:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  82:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
  86:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits
  88:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  89:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  95:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  99:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 103:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 107:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 110:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s);
 112:/usr/include/c++/9.2.0/bits/char_traits.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 33


 113:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 117:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 119:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 120:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 122:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 123:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 125:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 129:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 133:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof()
 139:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 141:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
 145:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 146:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 147:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/c++/9.2.0/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 151:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return -1;
 154:/usr/include/c++/9.2.0/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 1;
 156:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 157:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 158:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 159:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/c++/9.2.0/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 164:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/c++/9.2.0/bits/char_traits.h ****         ++__i;
 167:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i;
 168:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 169:/usr/include/c++/9.2.0/bits/char_traits.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 34


 170:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/c++/9.2.0/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 175:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/c++/9.2.0/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/c++/9.2.0/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 179:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 180:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 181:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/c++/9.2.0/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 186:/usr/include/c++/9.2.0/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __s1;
 188:/usr/include/c++/9.2.0/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/c++/9.2.0/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 191:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 192:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/c++/9.2.0/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 197:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s1;
 200:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 201:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 202:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 205:/usr/include/c++/9.2.0/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 207:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s;
 210:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 211:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 212:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/c++/9.2.0/bits/char_traits.h **** } // namespace
 214:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 215:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/c++/9.2.0/bits/char_traits.h **** {
 217:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 219:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/c++/9.2.0/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 223:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __s  The string.
 226:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
GAS LISTING /tmp/ccZtEYtQ.s 			page 35


 227:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 229:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 233:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __s;
 235:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 238:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__s++;
 240:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 242:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 243:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 244:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 245:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 250:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 252:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 253:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 256:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __a;
 258:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __n;
 259:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 262:/usr/include/c++/9.2.0/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__i++;
 265:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 267:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 268:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 269:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 270:/usr/include/c++/9.2.0/bits/char_traits.h ****   // 21.1
 271:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 272:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 274:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 279:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/c++/9.2.0/bits/char_traits.h ****   */
 283:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<class _CharT>
GAS LISTING /tmp/ccZtEYtQ.s 			page 36


 284:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/c++/9.2.0/bits/char_traits.h ****     { };
 286:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 287:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 288:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 290:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 292:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 298:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 302:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 306:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 309:/usr/include/c++/9.2.0/bits/char_traits.h **** 	// LWG 467.
 310:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/c++/9.2.0/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 313:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 314:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 317:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 318:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 319:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 325:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 327:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 328:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 331:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 335:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_strlen(__s);
 194              		.loc 4 335 2 is_stmt 1 view .LVU45
 195              	.LBB1434:
 196              	.LBB1433:
 566:/usr/include/c++/9.2.0/ostream ****     {
 567:/usr/include/c++/9.2.0/ostream ****       if (!__s)
GAS LISTING /tmp/ccZtEYtQ.s 			page 37


 568:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 569:/usr/include/c++/9.2.0/ostream ****       else
 570:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 197              		.loc 3 570 18 is_stmt 0 view .LVU46
 198 00e0 BA080000 		movl	$8, %edx
 198      00
 199              	.LVL23:
 200              		.loc 3 570 18 view .LVU47
 201 00e5 488D3500 		leaq	.LC1(%rip), %rsi
 201      000000
 202              	.LVL24:
 203              		.loc 3 570 18 view .LVU48
 204 00ec 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 204      000000
 205              	.LVL25:
 206              		.loc 3 570 18 view .LVU49
 207 00f3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 207      00
 208              	.LVL26:
 209              		.loc 3 570 18 view .LVU50
 210              	.LBE1433:
 211              	.LBE1434:
 674:Src/main.cpp  ****     if(key == 27) //ESC
 212              		.loc 1 674 33 view .LVU51
 213 00f8 400FB6F5 		movzbl	%bpl, %esi
 214 00fc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 214      000000
 215 0103 E8000000 		call	_ZNSolsEi@PLT
 215      00
 216              	.LVL27:
 217 0108 4889C3   		movq	%rax, %rbx
 218              	.LVL28:
 219              	.LBB1435:
 220              	.LBI1435:
 108:/usr/include/c++/9.2.0/ostream ****       {
 221              		.loc 3 108 7 is_stmt 1 view .LVU52
 222              	.LBB1436:
 223              	.LBI1436:
 571:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 572:/usr/include/c++/9.2.0/ostream ****       return __out;
 573:/usr/include/c++/9.2.0/ostream ****     }
 574:/usr/include/c++/9.2.0/ostream **** 
 575:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 576:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 577:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 578:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 579:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 580:/usr/include/c++/9.2.0/ostream **** 
 581:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 582:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits> &
 583:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 584:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 585:/usr/include/c++/9.2.0/ostream ****   //@}
 586:/usr/include/c++/9.2.0/ostream **** 
 587:/usr/include/c++/9.2.0/ostream ****   // Standard basic_ostream manipulators
 588:/usr/include/c++/9.2.0/ostream **** 
 589:/usr/include/c++/9.2.0/ostream ****   /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 38


 590:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a newline and flush the stream.
 591:/usr/include/c++/9.2.0/ostream ****    *
 592:/usr/include/c++/9.2.0/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 593:/usr/include/c++/9.2.0/ostream ****    *  desired, leading to poor buffering performance.  See
 594:/usr/include/c++/9.2.0/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 595:/usr/include/c++/9.2.0/ostream ****    *  for more on this subject.
 596:/usr/include/c++/9.2.0/ostream ****   */
 597:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 598:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 599:/usr/include/c++/9.2.0/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 224              		.loc 3 599 5 view .LVU53
 225              	.LBB1437:
 600:/usr/include/c++/9.2.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 226              		.loc 3 600 19 is_stmt 0 view .LVU54
 227 010b 488B00   		movq	(%rax), %rax
 228              	.LVL29:
 229              		.loc 3 600 19 view .LVU55
 230 010e 4889D9   		movq	%rbx, %rcx
 231 0111 480348E8 		addq	-24(%rax), %rcx
 232              	.LVL30:
 233              	.LBB1438:
 234              	.LBI1438:
 235              		.file 5 "/usr/include/c++/9.2.0/bits/basic_ios.h"
   1:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_ios.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/9.2.0/bits/basic_ios.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/9.2.0/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  33:/usr/include/c++/9.2.0/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 39


  35:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  41:/usr/include/c++/9.2.0/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/basic_ios.h **** {
  43:/usr/include/c++/9.2.0/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  45:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/9.2.0/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  49:/usr/include/c++/9.2.0/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
  51:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/9.2.0/bits/basic_ios.h ****     }
  53:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  54:/usr/include/c++/9.2.0/bits/basic_ios.h ****   /**
  55:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  59:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  63:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/9.2.0/bits/basic_ios.h ****   */
  66:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/9.2.0/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  69:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
  70:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  72:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  76:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  82:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  85:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  87:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_get_type;
GAS LISTING /tmp/ccZtEYtQ.s 			page 40


  92:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  94:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/9.2.0/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 101:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 108:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
 109:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 111:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 113:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 116:/usr/include/c++/9.2.0/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit operator bool() const
 118:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/9.2.0/bits/basic_ios.h **** #else
 120:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/9.2.0/bits/basic_ios.h **** #endif
 123:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 124:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 125:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator!() const
 126:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 129:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 130:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 133:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 136:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf_state; }
 139:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 140:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 141:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 144:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 147:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 148:/usr/include/c++/9.2.0/bits/basic_ios.h ****       clear(iostate __state = goodbit);
GAS LISTING /tmp/ccZtEYtQ.s 			page 41


 149:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 150:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 151:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 154:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 156:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 157:/usr/include/c++/9.2.0/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 160:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 164:/usr/include/c++/9.2.0/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 166:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 172:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 173:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 174:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 175:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 177:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 179:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 180:/usr/include/c++/9.2.0/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 183:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 184:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 187:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 189:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 190:/usr/include/c++/9.2.0/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 193:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 194:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 197:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 200:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 201:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 204:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 205:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
GAS LISTING /tmp/ccZtEYtQ.s 			page 42


 206:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 208:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 210:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 211:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 214:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 215:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 218:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 221:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 225:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 226:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 229:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 232:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 234:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <fstream>
 240:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 242:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 246:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
 247:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 248:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 251:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 256:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 257:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 259:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/9.2.0/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 262:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 43


 263:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 265:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 267:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 269:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/9.2.0/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 276:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 278:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 281:/usr/include/c++/9.2.0/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/9.2.0/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 284:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 286:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           not tied.
 289:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 290:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 294:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_tie; }
 297:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 298:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 299:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 304:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 306:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 309:/usr/include/c++/9.2.0/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/9.2.0/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 313:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 314:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 315:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 318:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 44


 320:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 324:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 325:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 329:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 332:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 339:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 343:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 346:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 349:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 350:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 354:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 360:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios&
 361:/usr/include/c++/9.2.0/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 364:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 367:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 369:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 370:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 372:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  }
GAS LISTING /tmp/ccZtEYtQ.s 			page 45


 377:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 379:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 380:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 381:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 385:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 389:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 392:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 396:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 397:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 399:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 403:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 406:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 409:/usr/include/c++/9.2.0/bits/basic_ios.h ****       locale
 410:/usr/include/c++/9.2.0/bits/basic_ios.h ****       imbue(const locale& __loc);
 411:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 412:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 413:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 418:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 421:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 426:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 427:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 429:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char
 430:/usr/include/c++/9.2.0/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 433:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 46


 434:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 438:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 440:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 445:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 448:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/9.2.0/bits/basic_ios.h ****       widen(char __c) const
 236              		.loc 5 449 7 is_stmt 1 view .LVU56
 237              	.LBB1439:
 450:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 238              		.loc 5 450 30 is_stmt 0 view .LVU57
 239 0115 4C8BA1F0 		movq	240(%rcx), %r12
 239      000000
 240              	.LVL31:
 241              	.LBB1440:
 242              	.LBI1440:
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
 243              		.loc 5 47 5 is_stmt 1 view .LVU58
 244              	.LBB1441:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 245              		.loc 5 49 7 is_stmt 0 view .LVU59
 246 011c 4D85E4   		testq	%r12, %r12
 247 011f 742D     		je	.L20
 248              	.LVL32:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 249              		.loc 5 49 7 view .LVU60
 250              	.LBE1441:
 251              	.LBE1440:
 252              	.LBB1443:
 253              	.LBI1443:
 254              		.file 6 "/usr/include/c++/9.2.0/bits/locale_facets.h"
   1:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
   3:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
   5:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  11:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  16:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
GAS LISTING /tmp/ccZtEYtQ.s 			page 47


  18:/usr/include/c++/9.2.0/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  20:/usr/include/c++/9.2.0/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  25:/usr/include/c++/9.2.0/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/9.2.0/bits/locale_facets.h ****  */
  29:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  30:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  31:/usr/include/c++/9.2.0/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  33:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  34:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/9.2.0/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  37:/usr/include/c++/9.2.0/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  39:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  50:/usr/include/c++/9.2.0/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/9.2.0/bits/locale_facets.h **** {
  52:/usr/include/c++/9.2.0/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  54:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
  58:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  59:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  62:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  65:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  67:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  68:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _Tp>
  72:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  73:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
GAS LISTING /tmp/ccZtEYtQ.s 			page 48


  75:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  76:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  79:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  82:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  84:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  87:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  89:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  92:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/9.2.0/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
  97:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static void
  98:/usr/include/c++/9.2.0/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 101:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 102:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _CharT*
 109:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 113:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 115:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 118:/usr/include/c++/9.2.0/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 121:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 124:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 125:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 128:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _OutIter
 129:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 131:/usr/include/c++/9.2.0/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
GAS LISTING /tmp/ccZtEYtQ.s 			page 49


 132:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 135:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 136:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 137:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 140:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 141:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 143:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 146:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 149:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 152:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 153:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 157:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 158:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 160:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 164:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 166:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 168:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool
 169:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 172:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 173:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 175:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 180:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 185:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 186:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 50


 189:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 190:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 192:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 196:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 201:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 205:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 206:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 208:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 212:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 217:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 221:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 222:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 223:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 224:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 228:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 229:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 231:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 234:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 235:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 236:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 238:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 242:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 51


 246:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 250:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 251:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 253:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 257:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 260:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 264:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 265:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 267:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 271:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 275:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 279:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 280:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 282:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 286:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 289:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type.
 291:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 292:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 296:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 297:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 299:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
GAS LISTING /tmp/ccZtEYtQ.s 			page 52


 303:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 306:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 311:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 315:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 316:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 318:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 323:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 326:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 329:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 330:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char
 331:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 334:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 335:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 337:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 343:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 346:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 352:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 357:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
GAS LISTING /tmp/ccZtEYtQ.s 			page 53


 360:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 361:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 364:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 365:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 367:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 369:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 373:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 377:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 380:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 381:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 383:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the input.
 386:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 387:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 391:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 396:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 400:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 401:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 403:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 406:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 410:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 415:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
GAS LISTING /tmp/ccZtEYtQ.s 			page 54


 417:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 419:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 420:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 422:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 425:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 429:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 434:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 438:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 439:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 441:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 445:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 449:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 452:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 455:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 456:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 457:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 458:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 461:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 465:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 469:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 472:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 473:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
GAS LISTING /tmp/ccZtEYtQ.s 			page 55


 474:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 475:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 478:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 482:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 485:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 488:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 489:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 491:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 494:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 498:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 502:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 505:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 506:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 508:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 511:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 514:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 515:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 518:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 519:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 521:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 524:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 525:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 527:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 530:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
GAS LISTING /tmp/ccZtEYtQ.s 			page 56


 531:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 534:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 537:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 542:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 545:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 546:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 548:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 552:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 556:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 559:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 563:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 566:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 567:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 569:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 571:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 575:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 579:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 582:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 57


 588:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 592:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 593:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 594:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 597:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 601:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 608:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 611:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 614:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 615:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 619:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 622:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 625:/usr/include/c++/9.2.0/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~ctype();
 628:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 629:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 632:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 633:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 635:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 638:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 642:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 58


 645:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 648:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 651:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 654:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 657:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 660:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 663:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 667:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 668:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/9.2.0/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 671:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 672:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 675:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  optimizations as well.
 679:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 680:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 683:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 684:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 685:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 688:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Data Members:
 690:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:/usr/include/c++/9.2.0/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 701:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
GAS LISTING /tmp/ccZtEYtQ.s 			page 59


 702:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 707:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 708:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 710:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 712:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 717:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 720:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 721:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 723:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 725:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 730:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 734:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 735:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char classification.
 736:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 737:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 739:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 742:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 743:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 746:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 747:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 749:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 753:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 758:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
GAS LISTING /tmp/ccZtEYtQ.s 			page 60


 759:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 761:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 762:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 764:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 767:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 772:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 775:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 776:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 778:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 781:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 786:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 789:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 790:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 792:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 795:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 798:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 799:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 801:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 804:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 805:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 806:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 808:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 811:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 814:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
GAS LISTING /tmp/ccZtEYtQ.s 			page 61


 816:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 818:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 822:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 823:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 825:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 828:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 831:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 834:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 838:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 839:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 841:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 844:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 847:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 850:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 851:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 855:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 856:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 858:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument will be returned unchanged.
 861:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 862:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 865:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 868:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted character.
 870:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 871:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
GAS LISTING /tmp/ccZtEYtQ.s 			page 62


 255              		.loc 6 872 7 is_stmt 1 view .LVU61
 256              	.LBB1444:
 873:/usr/include/c++/9.2.0/bits/locale_facets.h ****       {
 874:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	if (_M_widen_ok)
 257              		.loc 6 874 2 view .LVU62
 258 0121 41807C24 		cmpb	$0, 56(%r12)
 258      3800
 259 0127 742A     		je	.L16
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 260              		.loc 6 875 4 view .LVU63
 261              		.loc 6 875 51 is_stmt 0 view .LVU64
 262 0129 410FB674 		movzbl	67(%r12), %esi
 262      2443
 263              	.LVL33:
 264              	.L17:
 265              		.loc 6 875 51 view .LVU65
 266              	.LBE1444:
 267              	.LBE1443:
 268              	.LBE1439:
 269              	.LBE1438:
 270              		.loc 3 600 19 view .LVU66
 271 012f 400FBEF6 		movsbl	%sil, %esi
 272 0133 4889DF   		movq	%rbx, %rdi
 273 0136 E8000000 		call	_ZNSo3putEc@PLT
 273      00
 274              	.LVL34:
 275 013b 4889C7   		movq	%rax, %rdi
 276              	.LVL35:
 277              	.LBB1449:
 278              	.LBI1449:
 601:/usr/include/c++/9.2.0/ostream **** 
 602:/usr/include/c++/9.2.0/ostream ****   /**
 603:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a null character into the output sequence.
 604:/usr/include/c++/9.2.0/ostream ****    *
 605:/usr/include/c++/9.2.0/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 606:/usr/include/c++/9.2.0/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 607:/usr/include/c++/9.2.0/ostream ****    *  string terminator.
 608:/usr/include/c++/9.2.0/ostream ****   */
 609:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 610:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 611:/usr/include/c++/9.2.0/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 612:/usr/include/c++/9.2.0/ostream ****     { return __os.put(_CharT()); }
 613:/usr/include/c++/9.2.0/ostream **** 
 614:/usr/include/c++/9.2.0/ostream ****   /**
 615:/usr/include/c++/9.2.0/ostream ****    *  @brief  Flushes the output stream.
 616:/usr/include/c++/9.2.0/ostream ****    *
 617:/usr/include/c++/9.2.0/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 618:/usr/include/c++/9.2.0/ostream ****   */
 619:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 620:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 621:/usr/include/c++/9.2.0/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 279              		.loc 3 621 5 is_stmt 1 view .LVU67
 280              	.LBB1450:
 622:/usr/include/c++/9.2.0/ostream ****     { return __os.flush(); }
 281              		.loc 3 622 25 is_stmt 0 view .LVU68
 282 013e E8000000 		call	_ZNSo5flushEv@PLT
 282      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 63


 283              	.LVL36:
 284              		.loc 3 622 25 view .LVU69
 285              	.LBE1450:
 286              	.LBE1449:
 287              	.LBE1437:
 288              	.LBE1436:
 289              	.LBE1435:
 675:Src/main.cpp  ****     {
 290              		.loc 1 675 5 is_stmt 1 view .LVU70
 291 0143 4080FD1B 		cmpb	$27, %bpl
 292 0147 7425     		je	.L21
 293              	.L14:
 680:Src/main.cpp  **** 
 294              		.loc 1 680 1 is_stmt 0 view .LVU71
 295 0149 5B       		popq	%rbx
 296              		.cfi_remember_state
 297              		.cfi_def_cfa_offset 24
 298 014a 5D       		popq	%rbp
 299              		.cfi_def_cfa_offset 16
 300 014b 415C     		popq	%r12
 301              		.cfi_def_cfa_offset 8
 302 014d C3       		ret
 303              	.LVL37:
 304              	.L20:
 305              		.cfi_restore_state
 306              	.LBB1454:
 307              	.LBB1453:
 308              	.LBB1452:
 309              	.LBB1451:
 310              	.LBB1448:
 311              	.LBB1446:
 312              	.LBB1442:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 313              		.loc 5 50 18 view .LVU72
 314 014e E8000000 		call	_ZSt16__throw_bad_castv@PLT
 314      00
 315              	.LVL38:
 316              	.L16:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 317              		.loc 5 50 18 view .LVU73
 318              	.LBE1442:
 319              	.LBE1446:
 320              	.LBB1447:
 321              	.LBB1445:
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 322              		.loc 6 876 2 is_stmt 1 view .LVU74
 323              		.loc 6 876 21 is_stmt 0 view .LVU75
 324 0153 4C89E7   		movq	%r12, %rdi
 325 0156 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 325      00
 326              	.LVL39:
 877:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 327              		.loc 6 877 2 is_stmt 1 view .LVU76
 328              		.loc 6 877 27 is_stmt 0 view .LVU77
 329 015b 498B0424 		movq	(%r12), %rax
 330              		.loc 6 877 23 view .LVU78
 331 015f BE0A0000 		movl	$10, %esi
GAS LISTING /tmp/ccZtEYtQ.s 			page 64


 331      00
 332 0164 4C89E7   		movq	%r12, %rdi
 333 0167 FF5030   		call	*48(%rax)
 334              	.LVL40:
 335 016a 89C6     		movl	%eax, %esi
 336              		.loc 6 877 27 view .LVU79
 337 016c EBC1     		jmp	.L17
 338              	.LVL41:
 339              	.L21:
 340              		.loc 6 877 27 view .LVU80
 341              	.LBE1445:
 342              	.LBE1447:
 343              	.LBE1448:
 344              	.LBE1451:
 345              	.LBE1452:
 346              	.LBE1453:
 347              	.LBE1454:
 677:Src/main.cpp  **** 		terminated = true;
 348              		.loc 1 677 6 is_stmt 1 view .LVU81
 349              	.LBB1455:
 350              	.LBI1455:
 565:/usr/include/c++/9.2.0/ostream ****     {
 351              		.loc 3 565 5 view .LVU82
 565:/usr/include/c++/9.2.0/ostream ****     {
 352              		.loc 3 565 5 is_stmt 0 view .LVU83
 353              	.LBE1455:
 354              		.loc 4 335 2 is_stmt 1 view .LVU84
 355              	.LBB1457:
 356              	.LBB1456:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 357              		.loc 3 570 18 is_stmt 0 view .LVU85
 358 016e BA040000 		movl	$4, %edx
 358      00
 359 0173 488D3500 		leaq	.LC2(%rip), %rsi
 359      000000
 360 017a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 360      000000
 361 0181 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 361      00
 362              	.LVL42:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 363              		.loc 3 570 18 view .LVU86
 364              	.LBE1456:
 365              	.LBE1457:
 678:Src/main.cpp  ****     }
 366              		.loc 1 678 3 is_stmt 1 view .LVU87
 678:Src/main.cpp  ****     }
 367              		.loc 1 678 14 is_stmt 0 view .LVU88
 368 0186 C6050000 		movb	$1, terminated(%rip)
 368      000001
 680:Src/main.cpp  **** 
 369              		.loc 1 680 1 view .LVU89
 370 018d EBBA     		jmp	.L14
 371              		.cfi_endproc
 372              	.LFE2508:
 374              		.globl	_Z17getMinDatasetSizev
 376              	_Z17getMinDatasetSizev:
GAS LISTING /tmp/ccZtEYtQ.s 			page 65


 377              	.LFB2476:
  64:Src/main.cpp  **** 	// int ret = ((MIN_DATASEIZE_FUNC_A * pow((double)calculatedPoints, 2)) + (MIN_DATASEIZE_FUNC_B * 
 378              		.loc 1 64 1 is_stmt 1 view -0
 379              		.cfi_startproc
  66:Src/main.cpp  **** 	if(ret < 2)
 380              		.loc 1 66 2 view .LVU91
  66:Src/main.cpp  **** 	if(ret < 2)
 381              		.loc 1 66 6 is_stmt 0 view .LVU92
 382 018f 488B1500 		movq	numOfObstacles(%rip), %rdx
 382      000000
 383 0196 89D0     		movl	%edx, %eax
 384              	.LVL43:
  67:Src/main.cpp  **** 		ret = 2;
 385              		.loc 1 67 2 is_stmt 1 view .LVU93
 386 0198 83FA01   		cmpl	$1, %edx
 387 019b 7E0C     		jle	.L26
 388              	.LVL44:
 389              	.L23:
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 390              		.loc 1 69 2 view .LVU94
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 391              		.loc 1 69 5 is_stmt 0 view .LVU95
 392 019d 4863C8   		movslq	%eax, %rcx
  69:Src/main.cpp  **** 		ret = (numOfObstacles) - 1;
 393              		.loc 1 69 2 view .LVU96
 394 01a0 4839CA   		cmpq	%rcx, %rdx
 395 01a3 7703     		ja	.L24
  70:Src/main.cpp  **** 
 396              		.loc 1 70 3 is_stmt 1 view .LVU97
  70:Src/main.cpp  **** 
 397              		.loc 1 70 7 is_stmt 0 view .LVU98
 398 01a5 8D42FF   		leal	-1(%rdx), %eax
 399              	.LVL45:
 400              	.L24:
  73:Src/main.cpp  **** }
 401              		.loc 1 73 2 is_stmt 1 view .LVU99
  74:Src/main.cpp  **** 
 402              		.loc 1 74 1 is_stmt 0 view .LVU100
 403 01a8 C3       		ret
 404              	.L26:
  68:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 405              		.loc 1 68 7 view .LVU101
 406 01a9 B8020000 		movl	$2, %eax
 406      00
 407              	.LVL46:
  68:Src/main.cpp  **** 	if(ret >= numOfObstacles)
 408              		.loc 1 68 7 view .LVU102
 409 01ae EBED     		jmp	.L23
 410              		.cfi_endproc
 411              	.LFE2476:
 413              		.globl	_Z10createVectPK6coordsf
 415              	_Z10createVectPK6coordsf:
 416              	.LVL47:
 417              	.LFB2477:
  92:Src/main.cpp  **** 	struct vect ret;
 418              		.loc 1 92 1 is_stmt 1 view -0
 419              		.cfi_startproc
GAS LISTING /tmp/ccZtEYtQ.s 			page 66


  92:Src/main.cpp  **** 	struct vect ret;
 420              		.loc 1 92 1 is_stmt 0 view .LVU104
 421 01b0 55       		pushq	%rbp
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 6, -16
 424 01b1 53       		pushq	%rbx
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 3, -24
 427 01b2 4883EC18 		subq	$24, %rsp
 428              		.cfi_def_cfa_offset 48
 429 01b6 4889FD   		movq	%rdi, %rbp
 430 01b9 F30F1144 		movss	%xmm0, 12(%rsp)
 430      240C
  93:Src/main.cpp  **** 	ret.c  = (struct coords*)malloc(sizeof(struct coords));
 431              		.loc 1 93 2 is_stmt 1 view .LVU105
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 432              		.loc 1 94 2 view .LVU106
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 433              		.loc 1 94 33 is_stmt 0 view .LVU107
 434 01bf BF080000 		movl	$8, %edi
 434      00
 435              	.LVL48:
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 436              		.loc 1 94 33 view .LVU108
 437 01c4 E8000000 		call	malloc@PLT
 437      00
 438              	.LVL49:
  94:Src/main.cpp  **** 	ret.c->x = c->x;
 439              		.loc 1 94 33 view .LVU109
 440 01c9 4889C3   		movq	%rax, %rbx
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 441              		.loc 1 95 2 is_stmt 1 view .LVU110
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 442              		.loc 1 95 16 is_stmt 0 view .LVU111
 443 01cc F30F1045 		movss	0(%rbp), %xmm0
 443      00
  95:Src/main.cpp  **** 	ret.c->y = c->y;
 444              		.loc 1 95 11 view .LVU112
 445 01d1 F30F1100 		movss	%xmm0, (%rax)
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 446              		.loc 1 96 2 is_stmt 1 view .LVU113
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 447              		.loc 1 96 16 is_stmt 0 view .LVU114
 448 01d5 F30F1045 		movss	4(%rbp), %xmm0
 448      04
  96:Src/main.cpp  **** 	ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
 449              		.loc 1 96 11 view .LVU115
 450 01da F30F1140 		movss	%xmm0, 4(%rax)
 450      04
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 451              		.loc 1 97 2 is_stmt 1 view .LVU116
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 452              		.loc 1 97 38 is_stmt 0 view .LVU117
 453 01df 660FEFC0 		pxor	%xmm0, %xmm0
 454 01e3 F30F5A44 		cvtss2sd	12(%rsp), %xmm0
 454      240C
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
GAS LISTING /tmp/ccZtEYtQ.s 			page 67


 455              		.loc 1 97 44 view .LVU118
 456 01e9 F20F5E05 		divsd	.LC3(%rip), %xmm0
 456      00000000 
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 457              		.loc 1 97 37 view .LVU119
 458 01f1 F20F5905 		mulsd	.LC4(%rip), %xmm0
 458      00000000 
 459 01f9 E8000000 		call	tan@PLT
 459      00
 460              	.LVL50:
  97:Src/main.cpp  **** 	ret.dy = ret.dx * tan(angle / 180.0 * PI);
 461              		.loc 1 97 32 view .LVU120
 462 01fe F20F100D 		movsd	.LC5(%rip), %xmm1
 462      00000000 
 463 0206 F20F5EC8 		divsd	%xmm0, %xmm1
 464 020a F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 465              		.loc 1 98 2 is_stmt 1 view .LVU121
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 466              		.loc 1 98 15 is_stmt 0 view .LVU122
 467 020e 660FEFD2 		pxor	%xmm2, %xmm2
 468 0212 F30F5AD1 		cvtss2sd	%xmm1, %xmm2
  98:Src/main.cpp  **** 	ret.dx = abs(ret.dx);
 469              		.loc 1 98 18 view .LVU123
 470 0216 F20F59C2 		mulsd	%xmm2, %xmm0
 471 021a F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
  99:Src/main.cpp  **** 	ret.dy = abs(ret.dy);
 472              		.loc 1 99 2 is_stmt 1 view .LVU124
 473              	.LVL51:
 474              	.LBB1458:
 475              	.LBI1458:
 476              		.file 7 "/usr/include/c++/9.2.0/bits/std_abs.h"
   1:/usr/include/c++/9.2.0/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/c++/9.2.0/bits/std_abs.h **** 
   3:/usr/include/c++/9.2.0/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/std_abs.h **** //
   5:/usr/include/c++/9.2.0/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/std_abs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  11:/usr/include/c++/9.2.0/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  16:/usr/include/c++/9.2.0/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  20:/usr/include/c++/9.2.0/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  25:/usr/include/c++/9.2.0/bits/std_abs.h **** /** @file include/bits/std_abs.h
GAS LISTING /tmp/ccZtEYtQ.s 			page 68


  26:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/c++/9.2.0/bits/std_abs.h ****  */
  29:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  30:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  33:/usr/include/c++/9.2.0/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  35:/usr/include/c++/9.2.0/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  37:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/c++/9.2.0/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/c++/9.2.0/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  42:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  44:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef abs
  45:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  46:/usr/include/c++/9.2.0/bits/std_abs.h **** extern "C++"
  47:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  48:/usr/include/c++/9.2.0/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  50:/usr/include/c++/9.2.0/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  52:/usr/include/c++/9.2.0/bits/std_abs.h ****   using ::abs;
  53:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  54:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long
  56:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  58:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  59:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long long
  61:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  63:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  64:/usr/include/c++/9.2.0/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  69:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  74:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(float __x)
 477              		.loc 7 75 3 view .LVU125
 478              	.LBB1459:
  76:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 479              		.loc 7 76 5 view .LVU126
 480              		.loc 7 76 31 is_stmt 0 view .LVU127
 481 021e F30F1015 		movss	.LC6(%rip), %xmm2
 481      00000000 
GAS LISTING /tmp/ccZtEYtQ.s 			page 69


 482 0226 0F54CA   		andps	%xmm2, %xmm1
 483              	.LVL52:
 484              		.loc 7 76 31 view .LVU128
 485              	.LBE1459:
 486              	.LBE1458:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 487              		.loc 1 100 2 is_stmt 1 view .LVU129
 488              	.LBB1460:
 489              	.LBI1460:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 490              		.loc 7 75 3 view .LVU130
 491              	.LBB1461:
 492              		.loc 7 76 5 view .LVU131
 493              		.loc 7 76 31 is_stmt 0 view .LVU132
 494 0229 0F54C2   		andps	%xmm2, %xmm0
 495              	.LVL53:
 496              		.loc 7 76 31 view .LVU133
 497              	.LBE1461:
 498              	.LBE1460:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 499              		.loc 1 100 9 view .LVU134
 500 022c 660F7EC0 		movd	%xmm0, %eax
 501 0230 48C1E020 		salq	$32, %rax
 502 0234 660F7ECA 		movd	%xmm1, %edx
 503              	.LVL54:
 100:Src/main.cpp  **** 	if(angle > 180 || angle < 0)
 504              		.loc 1 100 9 view .LVU135
 505 0238 4809C2   		orq	%rax, %rdx
 101:Src/main.cpp  **** 		ret.dy *= -1;
 506              		.loc 1 101 2 is_stmt 1 view .LVU136
 507 023b F30F1064 		movss	12(%rsp), %xmm4
 507      240C
 508 0241 0F2F2500 		comiss	.LC7(%rip), %xmm4
 508      000000
 509 0248 770C     		ja	.L28
 510 024a 4889D1   		movq	%rdx, %rcx
 101:Src/main.cpp  **** 		ret.dy *= -1;
 511              		.loc 1 101 17 is_stmt 0 discriminator 1 view .LVU137
 512 024d 660FEFD2 		pxor	%xmm2, %xmm2
 513 0251 0F2FD4   		comiss	%xmm4, %xmm2
 514 0254 7614     		jbe	.L29
 515              	.L28:
 102:Src/main.cpp  **** 
 516              		.loc 1 102 3 is_stmt 1 view .LVU138
 102:Src/main.cpp  **** 
 517              		.loc 1 102 10 is_stmt 0 view .LVU139
 518 0256 0F570500 		xorps	.LC9(%rip), %xmm0
 518      000000
 519 025d 660F7EC0 		movd	%xmm0, %eax
 520 0261 48C1E020 		salq	$32, %rax
 521 0265 89D1     		movl	%edx, %ecx
 102:Src/main.cpp  **** 
 522              		.loc 1 102 10 view .LVU140
 523 0267 4809C1   		orq	%rax, %rcx
 524              	.L29:
 104:Src/main.cpp  **** 		ret.dx *= -1;
 525              		.loc 1 104 2 is_stmt 1 view .LVU141
GAS LISTING /tmp/ccZtEYtQ.s 			page 70


 526 026a F30F106C 		movss	12(%rsp), %xmm5
 526      240C
 527 0270 0F2F2D00 		comiss	.LC10(%rip), %xmm5
 527      000000
 528 0277 720D     		jb	.L31
 104:Src/main.cpp  **** 		ret.dx *= -1;
 529              		.loc 1 104 21 is_stmt 0 discriminator 2 view .LVU142
 530 0279 F30F1005 		movss	.LC11(%rip), %xmm0
 530      00000000 
 531 0281 0F2FC5   		comiss	%xmm5, %xmm0
 532 0284 733A     		jnb	.L33
 533              	.L31:
 104:Src/main.cpp  **** 		ret.dx *= -1;
 534              		.loc 1 104 5 discriminator 3 view .LVU143
 535 0286 F30F1074 		movss	12(%rsp), %xmm6
 535      240C
 536 028c 0F2F3500 		comiss	.LC12(%rip), %xmm6
 536      000000
 537 0293 720D     		jb	.L34
 104:Src/main.cpp  **** 		ret.dx *= -1;
 538              		.loc 1 104 59 discriminator 4 view .LVU144
 539 0295 F30F1005 		movss	.LC13(%rip), %xmm0
 539      00000000 
 540 029d 0F2FC6   		comiss	%xmm6, %xmm0
 541 02a0 731E     		jnb	.L33
 542              	.L34:
 105:Src/main.cpp  **** 	return ret;
 543              		.loc 1 105 3 is_stmt 1 view .LVU145
 105:Src/main.cpp  **** 	return ret;
 544              		.loc 1 105 10 is_stmt 0 view .LVU146
 545 02a2 0F570D00 		xorps	.LC9(%rip), %xmm1
 545      000000
 546 02a9 660F7ECA 		movd	%xmm1, %edx
 547 02ad 48B80000 		movabsq	$-4294967296, %rax
 547      0000FFFF 
 547      FFFF
 105:Src/main.cpp  **** 	return ret;
 548              		.loc 1 105 10 view .LVU147
 549 02b7 4821C8   		andq	%rcx, %rax
 550 02ba 4809D0   		orq	%rdx, %rax
 551 02bd 4889C1   		movq	%rax, %rcx
 552              	.L33:
 106:Src/main.cpp  **** }
 553              		.loc 1 106 2 is_stmt 1 view .LVU148
 107:Src/main.cpp  **** 
 554              		.loc 1 107 1 is_stmt 0 view .LVU149
 555 02c0 4889D8   		movq	%rbx, %rax
 107:Src/main.cpp  **** 
 556              		.loc 1 107 1 view .LVU150
 557 02c3 66480F6E 		movq	%rcx, %xmm0
 557      C1
 558 02c8 4883C418 		addq	$24, %rsp
 559              		.cfi_def_cfa_offset 24
 560 02cc 5B       		popq	%rbx
 561              		.cfi_def_cfa_offset 16
 562 02cd 5D       		popq	%rbp
 563              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccZtEYtQ.s 			page 71


 564              	.LVL55:
 107:Src/main.cpp  **** 
 565              		.loc 1 107 1 view .LVU151
 566 02ce C3       		ret
 567              		.cfi_endproc
 568              	.LFE2477:
 570              		.globl	_Z10createVectPK6coordsS1_
 572              	_Z10createVectPK6coordsS1_:
 573              	.LVL56:
 574              	.LFB2481:
 110:Src/main.cpp  **** 	struct vect ret;
 575              		.loc 1 110 1 is_stmt 1 view -0
 576              		.cfi_startproc
 110:Src/main.cpp  **** 	struct vect ret;
 577              		.loc 1 110 1 is_stmt 0 view .LVU153
 578 02cf 55       		pushq	%rbp
 579              		.cfi_def_cfa_offset 16
 580              		.cfi_offset 6, -16
 581 02d0 53       		pushq	%rbx
 582              		.cfi_def_cfa_offset 24
 583              		.cfi_offset 3, -24
 584 02d1 4883EC08 		subq	$8, %rsp
 585              		.cfi_def_cfa_offset 32
 586 02d5 4889FD   		movq	%rdi, %rbp
 587 02d8 4889F3   		movq	%rsi, %rbx
 111:Src/main.cpp  **** 	ret.c = (struct coords*)malloc(sizeof(struct coords));
 588              		.loc 1 111 2 is_stmt 1 view .LVU154
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 589              		.loc 1 112 2 view .LVU155
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 590              		.loc 1 112 32 is_stmt 0 view .LVU156
 591 02db BF080000 		movl	$8, %edi
 591      00
 592              	.LVL57:
 112:Src/main.cpp  **** 	ret.c->x = start->x;
 593              		.loc 1 112 32 view .LVU157
 594 02e0 E8000000 		call	malloc@PLT
 594      00
 595              	.LVL58:
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 596              		.loc 1 113 2 is_stmt 1 view .LVU158
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 597              		.loc 1 113 20 is_stmt 0 view .LVU159
 598 02e5 F30F1055 		movss	0(%rbp), %xmm2
 598      00
 113:Src/main.cpp  **** 	ret.c->y = start->y;
 599              		.loc 1 113 11 view .LVU160
 600 02ea F30F1110 		movss	%xmm2, (%rax)
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 601              		.loc 1 114 2 is_stmt 1 view .LVU161
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 602              		.loc 1 114 20 is_stmt 0 view .LVU162
 603 02ee F30F104D 		movss	4(%rbp), %xmm1
 603      04
 114:Src/main.cpp  **** 	ret.dx = end->x - start->x;
 604              		.loc 1 114 11 view .LVU163
 605 02f3 F30F1148 		movss	%xmm1, 4(%rax)
GAS LISTING /tmp/ccZtEYtQ.s 			page 72


 605      04
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 606              		.loc 1 115 2 is_stmt 1 view .LVU164
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 607              		.loc 1 115 16 is_stmt 0 view .LVU165
 608 02f8 F30F1003 		movss	(%rbx), %xmm0
 115:Src/main.cpp  **** 	ret.dy = end->y - start->y;
 609              		.loc 1 115 9 view .LVU166
 610 02fc F30F5CC2 		subss	%xmm2, %xmm0
 116:Src/main.cpp  **** 	return ret;
 611              		.loc 1 116 2 is_stmt 1 view .LVU167
 116:Src/main.cpp  **** 	return ret;
 612              		.loc 1 116 16 is_stmt 0 view .LVU168
 613 0300 F30F1053 		movss	4(%rbx), %xmm2
 613      04
 116:Src/main.cpp  **** 	return ret;
 614              		.loc 1 116 9 view .LVU169
 615 0305 F30F5CD1 		subss	%xmm1, %xmm2
 616 0309 660F7ED2 		movd	%xmm2, %edx
 617 030d 4889D1   		movq	%rdx, %rcx
 618 0310 48C1E120 		salq	$32, %rcx
 619 0314 660F7EC2 		movd	%xmm0, %edx
 620              	.LVL59:
 116:Src/main.cpp  **** 	return ret;
 621              		.loc 1 116 9 view .LVU170
 622 0318 4809CA   		orq	%rcx, %rdx
 117:Src/main.cpp  **** }
 623              		.loc 1 117 2 is_stmt 1 view .LVU171
 118:Src/main.cpp  **** 
 624              		.loc 1 118 1 is_stmt 0 view .LVU172
 625 031b 66480F6E 		movq	%rdx, %xmm0
 625      C2
 626 0320 4883C408 		addq	$8, %rsp
 627              		.cfi_def_cfa_offset 24
 628 0324 5B       		popq	%rbx
 629              		.cfi_def_cfa_offset 16
 630              	.LVL60:
 118:Src/main.cpp  **** 
 631              		.loc 1 118 1 view .LVU173
 632 0325 5D       		popq	%rbp
 633              		.cfi_def_cfa_offset 8
 634              	.LVL61:
 118:Src/main.cpp  **** 
 635              		.loc 1 118 1 view .LVU174
 636 0326 C3       		ret
 637              		.cfi_endproc
 638              	.LFE2481:
 640              		.globl	_Z10createVectPK8obstaclehf
 642              	_Z10createVectPK8obstaclehf:
 643              	.LVL62:
 644              	.LFB2482:
 122:Src/main.cpp  **** 	struct vect ret;
 645              		.loc 1 122 1 is_stmt 1 view -0
 646              		.cfi_startproc
 122:Src/main.cpp  **** 	struct vect ret;
 647              		.loc 1 122 1 is_stmt 0 view .LVU176
 648 0327 55       		pushq	%rbp
GAS LISTING /tmp/ccZtEYtQ.s 			page 73


 649              		.cfi_def_cfa_offset 16
 650              		.cfi_offset 6, -16
 651 0328 53       		pushq	%rbx
 652              		.cfi_def_cfa_offset 24
 653              		.cfi_offset 3, -24
 654 0329 4883EC18 		subq	$24, %rsp
 655              		.cfi_def_cfa_offset 48
 656 032d F30F1144 		movss	%xmm0, 8(%rsp)
 656      2408
 123:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 657              		.loc 1 123 2 is_stmt 1 view .LVU177
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 658              		.loc 1 124 2 view .LVU178
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 659              		.loc 1 124 38 is_stmt 0 view .LVU179
 660 0333 400FB6F6 		movzbl	%sil, %esi
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 661              		.loc 1 124 38 view .LVU180
 662 0337 E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh@PLT
 662      00
 663              	.LVL63:
 124:Src/main.cpp  **** 	ret = createVect(c, angle);
 664              		.loc 1 124 38 view .LVU181
 665 033c 4889C3   		movq	%rax, %rbx
 666              	.LVL64:
 125:Src/main.cpp  **** 	free(c);
 667              		.loc 1 125 2 is_stmt 1 view .LVU182
 125:Src/main.cpp  **** 	free(c);
 668              		.loc 1 125 27 is_stmt 0 view .LVU183
 669 033f F30F1044 		movss	8(%rsp), %xmm0
 669      2408
 670 0345 4889C7   		movq	%rax, %rdi
 671 0348 E8000000 		call	_Z10createVectPK6coordsf
 671      00
 672              	.LVL65:
 125:Src/main.cpp  **** 	free(c);
 673              		.loc 1 125 27 view .LVU184
 674 034d 4889C5   		movq	%rax, %rbp
 675 0350 660FD644 		movq	%xmm0, 8(%rsp)
 675      2408
 676              	.LVL66:
 126:Src/main.cpp  **** 	return ret;
 677              		.loc 1 126 2 is_stmt 1 view .LVU185
 126:Src/main.cpp  **** 	return ret;
 678              		.loc 1 126 6 is_stmt 0 view .LVU186
 679 0356 4889DF   		movq	%rbx, %rdi
 680 0359 E8000000 		call	free@PLT
 680      00
 681              	.LVL67:
 127:Src/main.cpp  **** }
 682              		.loc 1 127 2 is_stmt 1 view .LVU187
 128:Src/main.cpp  **** 
 683              		.loc 1 128 1 is_stmt 0 view .LVU188
 684 035e 4889E8   		movq	%rbp, %rax
 685 0361 F30F7E44 		movq	8(%rsp), %xmm0
 685      2408
 686 0367 4883C418 		addq	$24, %rsp
GAS LISTING /tmp/ccZtEYtQ.s 			page 74


 687              		.cfi_def_cfa_offset 24
 688 036b 5B       		popq	%rbx
 689              		.cfi_def_cfa_offset 16
 690              	.LVL68:
 128:Src/main.cpp  **** 
 691              		.loc 1 128 1 view .LVU189
 692 036c 5D       		popq	%rbp
 693              		.cfi_def_cfa_offset 8
 694 036d C3       		ret
 695              		.cfi_endproc
 696              	.LFE2482:
 698              		.section	.rodata.str1.1
 699              	.LC14:
 700 000e 496E6372 		.string	"Increacing radius\n"
 700      65616369 
 700      6E672072 
 700      61646975 
 700      730A00
 701              		.text
 702              		.globl	_Z10getDataSetPK6coords
 704              	_Z10getDataSetPK6coords:
 705              	.LVL69:
 706              	.LFB2483:
 132:Src/main.cpp  **** 	size_t size = 0;
 707              		.loc 1 132 1 is_stmt 1 view -0
 708              		.cfi_startproc
 132:Src/main.cpp  **** 	size_t size = 0;
 709              		.loc 1 132 1 is_stmt 0 view .LVU191
 710 036e 4155     		pushq	%r13
 711              		.cfi_def_cfa_offset 16
 712              		.cfi_offset 13, -16
 713 0370 4154     		pushq	%r12
 714              		.cfi_def_cfa_offset 24
 715              		.cfi_offset 12, -24
 716 0372 55       		pushq	%rbp
 717              		.cfi_def_cfa_offset 32
 718              		.cfi_offset 6, -32
 719 0373 53       		pushq	%rbx
 720              		.cfi_def_cfa_offset 40
 721              		.cfi_offset 3, -40
 722 0374 4883EC08 		subq	$8, %rsp
 723              		.cfi_def_cfa_offset 48
 724 0378 4889FB   		movq	%rdi, %rbx
 133:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 725              		.loc 1 133 2 is_stmt 1 view .LVU192
 726              	.LVL70:
 134:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 727              		.loc 1 134 2 view .LVU193
 134:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 728              		.loc 1 134 11 is_stmt 0 view .LVU194
 729 037b BDD00700 		movl	$2000, %ebp
 729      00
 133:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 730              		.loc 1 133 9 view .LVU195
 731 0380 41BC0000 		movl	$0, %r12d
 731      0000
 732 0386 E9970000 		jmp	.L44
GAS LISTING /tmp/ccZtEYtQ.s 			page 75


 732      00
 733              	.LVL71:
 734              	.L47:
 735              	.LBB1475:
 736              	.LBB1476:
 137:Src/main.cpp  **** 		{
 737              		.loc 1 137 3 is_stmt 1 discriminator 2 view .LVU196
 738 038b 4883C101 		addq	$1, %rcx
 739              	.LVL72:
 740              	.L52:
 137:Src/main.cpp  **** 		{
 741              		.loc 1 137 23 discriminator 1 view .LVU197
 742 038f 48390D00 		cmpq	%rcx, numOfObstacles(%rip)
 742      000000
 743 0396 0F868100 		jbe	.L46
 743      0000
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 744              		.loc 1 139 4 view .LVU198
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 745              		.loc 1 139 18 is_stmt 0 view .LVU199
 746 039c 488D1449 		leaq	(%rcx,%rcx,2), %rdx
 747 03a0 48C1E204 		salq	$4, %rdx
 748 03a4 48031500 		addq	obstacles(%rip), %rdx
 748      000000
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 749              		.loc 1 139 20 view .LVU200
 750 03ab 488B32   		movq	(%rdx), %rsi
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 751              		.loc 1 139 23 view .LVU201
 752 03ae F30F101E 		movss	(%rsi), %xmm3
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 753              		.loc 1 139 40 view .LVU202
 754 03b2 F30F1052 		movss	40(%rdx), %xmm2
 754      28
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 755              		.loc 1 139 25 view .LVU203
 756 03b7 0F28EB   		movaps	%xmm3, %xmm5
 757 03ba F30F58EA 		addss	%xmm2, %xmm5
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 758              		.loc 1 139 48 view .LVU204
 759 03be F30F100B 		movss	(%rbx), %xmm1
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 760              		.loc 1 139 52 view .LVU205
 761 03c2 0FB7D5   		movzwl	%bp, %edx
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 762              		.loc 1 139 50 view .LVU206
 763 03c5 660FEFC0 		pxor	%xmm0, %xmm0
 764 03c9 F30F2AC2 		cvtsi2ssl	%edx, %xmm0
 765 03cd 0F28E1   		movaps	%xmm1, %xmm4
 766 03d0 F30F5CE0 		subss	%xmm0, %xmm4
 139:Src/main.cpp  **** 			&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 767              		.loc 1 139 4 view .LVU207
 768 03d4 0F2FEC   		comiss	%xmm4, %xmm5
 769 03d7 72B2     		jb	.L47
 140:Src/main.cpp  **** 			&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 770              		.loc 1 140 33 view .LVU208
 771 03d9 F30F58CA 		addss	%xmm2, %xmm1
GAS LISTING /tmp/ccZtEYtQ.s 			page 76


 140:Src/main.cpp  **** 			&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 772              		.loc 1 140 50 view .LVU209
 773 03dd F30F58C8 		addss	%xmm0, %xmm1
 140:Src/main.cpp  **** 			&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 774              		.loc 1 140 4 view .LVU210
 775 03e1 0F2FCB   		comiss	%xmm3, %xmm1
 776 03e4 72A5     		jb	.L47
 141:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 777              		.loc 1 141 23 view .LVU211
 778 03e6 F30F104E 		movss	4(%rsi), %xmm1
 778      04
 141:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 779              		.loc 1 141 25 view .LVU212
 780 03eb 0F28EA   		movaps	%xmm2, %xmm5
 781 03ee F30F58E9 		addss	%xmm1, %xmm5
 141:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 782              		.loc 1 141 48 view .LVU213
 783 03f2 F30F105B 		movss	4(%rbx), %xmm3
 783      04
 141:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 784              		.loc 1 141 50 view .LVU214
 785 03f7 0F28E3   		movaps	%xmm3, %xmm4
 786 03fa F30F5CE0 		subss	%xmm0, %xmm4
 141:Src/main.cpp  **** 			&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 787              		.loc 1 141 4 view .LVU215
 788 03fe 0F2FEC   		comiss	%xmm4, %xmm5
 789 0401 7288     		jb	.L47
 142:Src/main.cpp  **** 				size++;
 790              		.loc 1 142 33 view .LVU216
 791 0403 F30F58D3 		addss	%xmm3, %xmm2
 142:Src/main.cpp  **** 				size++;
 792              		.loc 1 142 50 view .LVU217
 793 0407 F30F58C2 		addss	%xmm2, %xmm0
 142:Src/main.cpp  **** 				size++;
 794              		.loc 1 142 4 view .LVU218
 795 040b 0F2FC1   		comiss	%xmm1, %xmm0
 796 040e 0F8277FF 		jb	.L47
 796      FFFF
 143:Src/main.cpp  **** 		}
 797              		.loc 1 143 5 is_stmt 1 view .LVU219
 143:Src/main.cpp  **** 		}
 798              		.loc 1 143 9 is_stmt 0 view .LVU220
 799 0414 4983C401 		addq	$1, %r12
 800              	.LVL73:
 143:Src/main.cpp  **** 		}
 801              		.loc 1 143 9 view .LVU221
 802 0418 E96EFFFF 		jmp	.L47
 802      FF
 803              	.L46:
 143:Src/main.cpp  **** 		}
 804              		.loc 1 143 9 view .LVU222
 805              	.LBE1476:
 145:Src/main.cpp  **** 		{
 806              		.loc 1 145 3 is_stmt 1 view .LVU223
 807 041d 4C39E0   		cmpq	%r12, %rax
 808 0420 771D     		ja	.L70
 809              	.LVL74:
GAS LISTING /tmp/ccZtEYtQ.s 			page 77


 810              	.L44:
 145:Src/main.cpp  **** 		{
 811              		.loc 1 145 3 is_stmt 0 view .LVU224
 812              	.LBE1475:
 134:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 813              		.loc 1 134 45 is_stmt 1 discriminator 1 view .LVU225
 135:Src/main.cpp  **** 		size = 0;
 814              		.loc 1 135 2 discriminator 1 view .LVU226
 135:Src/main.cpp  **** 		size = 0;
 815              		.loc 1 135 14 discriminator 1 view .LVU227
 135:Src/main.cpp  **** 		size = 0;
 816              		.loc 1 135 33 is_stmt 0 discriminator 1 view .LVU228
 817 0422 E8000000 		call	_Z17getMinDatasetSizev
 817      00
 818              	.LVL75:
 819 0427 0FB6C0   		movzbl	%al, %eax
 135:Src/main.cpp  **** 		size = 0;
 820              		.loc 1 135 14 discriminator 1 view .LVU229
 821 042a 4C39E0   		cmpq	%r12, %rax
 822 042d 762D     		jbe	.L45
 823              	.LBB1481:
 824              	.LBB1477:
 137:Src/main.cpp  **** 		{
 825              		.loc 1 137 14 view .LVU230
 826 042f B9000000 		movl	$0, %ecx
 826      00
 827              	.LBE1477:
 136:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 828              		.loc 1 136 8 view .LVU231
 829 0434 41BC0000 		movl	$0, %r12d
 829      0000
 830              	.LVL76:
 136:Src/main.cpp  **** 		for(size_t i = 0; i < numOfObstacles; i++)
 831              		.loc 1 136 8 view .LVU232
 832 043a E950FFFF 		jmp	.L52
 832      FF
 833              	.LVL77:
 834              	.L70:
 147:Src/main.cpp  **** 			watchRadius += 100;
 835              		.loc 1 147 4 is_stmt 1 view .LVU233
 836              	.LBB1478:
 837              	.LBI1478:
 565:/usr/include/c++/9.2.0/ostream ****     {
 838              		.loc 3 565 5 view .LVU234
 565:/usr/include/c++/9.2.0/ostream ****     {
 839              		.loc 3 565 5 is_stmt 0 view .LVU235
 840              	.LBE1478:
 841              	.LBE1481:
 842              		.loc 4 335 2 is_stmt 1 view .LVU236
 843              	.LBB1482:
 844              	.LBB1480:
 845              	.LBB1479:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 846              		.loc 3 570 18 is_stmt 0 view .LVU237
 847 043f BA120000 		movl	$18, %edx
 847      00
 848 0444 488D3500 		leaq	.LC14(%rip), %rsi
GAS LISTING /tmp/ccZtEYtQ.s 			page 78


 848      000000
 849 044b 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 849      000000
 850 0452 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 850      00
 851              	.LVL78:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 852              		.loc 3 570 18 view .LVU238
 853              	.LBE1479:
 854              	.LBE1480:
 148:Src/main.cpp  **** 		}
 855              		.loc 1 148 4 is_stmt 1 view .LVU239
 148:Src/main.cpp  **** 		}
 856              		.loc 1 148 16 is_stmt 0 view .LVU240
 857 0457 83C564   		addl	$100, %ebp
 858              	.LVL79:
 148:Src/main.cpp  **** 		}
 859              		.loc 1 148 16 view .LVU241
 860 045a EBC6     		jmp	.L44
 861              	.L45:
 148:Src/main.cpp  **** 		}
 862              		.loc 1 148 16 view .LVU242
 863              	.LBE1482:
 152:Src/main.cpp  **** 	struct obstacle **obsts = (struct obstacle**)malloc(sizeof(struct obstacle*) * size);
 864              		.loc 1 152 2 is_stmt 1 view .LVU243
 865              	.LVL80:
 153:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 866              		.loc 1 153 2 view .LVU244
 153:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 867              		.loc 1 153 53 is_stmt 0 view .LVU245
 868 045c 4A8D3CE5 		leaq	0(,%r12,8), %rdi
 868      00000000 
 869 0464 E8000000 		call	malloc@PLT
 869      00
 870              	.LVL81:
 871 0469 4989C5   		movq	%rax, %r13
 872              	.LVL82:
 154:Src/main.cpp  **** 	{
 873              		.loc 1 154 2 is_stmt 1 view .LVU246
 874              	.LBB1483:
 154:Src/main.cpp  **** 	{
 875              		.loc 1 154 13 is_stmt 0 view .LVU247
 876 046c BA000000 		movl	$0, %edx
 876      00
 877              	.LBE1483:
 152:Src/main.cpp  **** 	struct obstacle **obsts = (struct obstacle**)malloc(sizeof(struct obstacle*) * size);
 878              		.loc 1 152 9 view .LVU248
 879 0471 BF000000 		movl	$0, %edi
 879      00
 880 0476 EB04     		jmp	.L60
 881              	.LVL83:
 882              	.L55:
 883              	.LBB1484:
 154:Src/main.cpp  **** 	{
 884              		.loc 1 154 2 is_stmt 1 discriminator 2 view .LVU249
 885 0478 4883C201 		addq	$1, %rdx
 886              	.LVL84:
GAS LISTING /tmp/ccZtEYtQ.s 			page 79


 887              	.L60:
 154:Src/main.cpp  **** 	{
 888              		.loc 1 154 22 discriminator 1 view .LVU250
 889 047c 48391500 		cmpq	%rdx, numOfObstacles(%rip)
 889      000000
 890 0483 0F868600 		jbe	.L54
 890      0000
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 891              		.loc 1 156 3 view .LVU251
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 892              		.loc 1 156 17 is_stmt 0 view .LVU252
 893 0489 488D0452 		leaq	(%rdx,%rdx,2), %rax
 894 048d 48C1E004 		salq	$4, %rax
 895 0491 48030500 		addq	obstacles(%rip), %rax
 895      000000
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 896              		.loc 1 156 19 view .LVU253
 897 0498 488B30   		movq	(%rax), %rsi
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 898              		.loc 1 156 22 view .LVU254
 899 049b F30F101E 		movss	(%rsi), %xmm3
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 900              		.loc 1 156 39 view .LVU255
 901 049f F30F1050 		movss	40(%rax), %xmm2
 901      28
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 902              		.loc 1 156 24 view .LVU256
 903 04a4 0F28EB   		movaps	%xmm3, %xmm5
 904 04a7 F30F58EA 		addss	%xmm2, %xmm5
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 905              		.loc 1 156 47 view .LVU257
 906 04ab F30F100B 		movss	(%rbx), %xmm1
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 907              		.loc 1 156 51 view .LVU258
 908 04af 0FB7CD   		movzwl	%bp, %ecx
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 909              		.loc 1 156 49 view .LVU259
 910 04b2 660FEFC0 		pxor	%xmm0, %xmm0
 911 04b6 F30F2AC1 		cvtsi2ssl	%ecx, %xmm0
 912 04ba 0F28E1   		movaps	%xmm1, %xmm4
 913 04bd F30F5CE0 		subss	%xmm0, %xmm4
 156:Src/main.cpp  **** 		&& obstacles[i].c->x <= c->x + obstacles[i].a + watchRadius
 914              		.loc 1 156 3 view .LVU260
 915 04c1 0F2FEC   		comiss	%xmm4, %xmm5
 916 04c4 72B2     		jb	.L55
 157:Src/main.cpp  **** 		&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 917              		.loc 1 157 32 view .LVU261
 918 04c6 F30F58CA 		addss	%xmm2, %xmm1
 157:Src/main.cpp  **** 		&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 919              		.loc 1 157 49 view .LVU262
 920 04ca F30F58C8 		addss	%xmm0, %xmm1
 157:Src/main.cpp  **** 		&& obstacles[i].c->y + obstacles[i].a >= c->y - watchRadius
 921              		.loc 1 157 3 view .LVU263
 922 04ce 0F2FCB   		comiss	%xmm3, %xmm1
 923 04d1 72A5     		jb	.L55
 158:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 924              		.loc 1 158 22 view .LVU264
GAS LISTING /tmp/ccZtEYtQ.s 			page 80


 925 04d3 F30F104E 		movss	4(%rsi), %xmm1
 925      04
 158:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 926              		.loc 1 158 24 view .LVU265
 927 04d8 0F28EA   		movaps	%xmm2, %xmm5
 928 04db F30F58E9 		addss	%xmm1, %xmm5
 158:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 929              		.loc 1 158 47 view .LVU266
 930 04df F30F105B 		movss	4(%rbx), %xmm3
 930      04
 158:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 931              		.loc 1 158 49 view .LVU267
 932 04e4 0F28E3   		movaps	%xmm3, %xmm4
 933 04e7 F30F5CE0 		subss	%xmm0, %xmm4
 158:Src/main.cpp  **** 		&& obstacles[i].c->y <= c->y + obstacles[i].a + watchRadius)
 934              		.loc 1 158 3 view .LVU268
 935 04eb 0F2FEC   		comiss	%xmm4, %xmm5
 936 04ee 7288     		jb	.L55
 159:Src/main.cpp  **** 			obsts[iter++] = &(obstacles[i]);
 937              		.loc 1 159 32 view .LVU269
 938 04f0 F30F58D3 		addss	%xmm3, %xmm2
 159:Src/main.cpp  **** 			obsts[iter++] = &(obstacles[i]);
 939              		.loc 1 159 49 view .LVU270
 940 04f4 F30F58C2 		addss	%xmm2, %xmm0
 159:Src/main.cpp  **** 			obsts[iter++] = &(obstacles[i]);
 941              		.loc 1 159 3 view .LVU271
 942 04f8 0F2FC1   		comiss	%xmm1, %xmm0
 943 04fb 0F8277FF 		jb	.L55
 943      FFFF
 160:Src/main.cpp  **** 	}
 944              		.loc 1 160 4 is_stmt 1 view .LVU272
 945              	.LVL85:
 160:Src/main.cpp  **** 	}
 946              		.loc 1 160 18 is_stmt 0 view .LVU273
 947 0501 498944FD 		movq	%rax, 0(%r13,%rdi,8)
 947      00
 160:Src/main.cpp  **** 	}
 948              		.loc 1 160 14 view .LVU274
 949 0506 488D7F01 		leaq	1(%rdi), %rdi
 950              	.LVL86:
 160:Src/main.cpp  **** 	}
 951              		.loc 1 160 14 view .LVU275
 952 050a E969FFFF 		jmp	.L55
 952      FF
 953              	.L54:
 160:Src/main.cpp  **** 	}
 954              		.loc 1 160 14 view .LVU276
 955              	.LBE1484:
 162:Src/main.cpp  **** 	ret->items = *obsts;
 956              		.loc 1 162 2 is_stmt 1 view .LVU277
 162:Src/main.cpp  **** 	ret->items = *obsts;
 957              		.loc 1 162 43 is_stmt 0 view .LVU278
 958 050f BF100000 		movl	$16, %edi
 958      00
 959              	.LVL87:
 162:Src/main.cpp  **** 	ret->items = *obsts;
 960              		.loc 1 162 43 view .LVU279
GAS LISTING /tmp/ccZtEYtQ.s 			page 81


 961 0514 E8000000 		call	malloc@PLT
 961      00
 962              	.LVL88:
 163:Src/main.cpp  **** 	ret->size = size;
 963              		.loc 1 163 2 is_stmt 1 view .LVU280
 163:Src/main.cpp  **** 	ret->size = size;
 964              		.loc 1 163 15 is_stmt 0 view .LVU281
 965 0519 498B5500 		movq	0(%r13), %rdx
 163:Src/main.cpp  **** 	ret->size = size;
 966              		.loc 1 163 13 view .LVU282
 967 051d 488910   		movq	%rdx, (%rax)
 164:Src/main.cpp  **** 	return ret;
 968              		.loc 1 164 2 is_stmt 1 view .LVU283
 164:Src/main.cpp  **** 	return ret;
 969              		.loc 1 164 12 is_stmt 0 view .LVU284
 970 0520 4C896008 		movq	%r12, 8(%rax)
 165:Src/main.cpp  **** }
 971              		.loc 1 165 2 is_stmt 1 view .LVU285
 166:Src/main.cpp  **** 
 972              		.loc 1 166 1 is_stmt 0 view .LVU286
 973 0524 4883C408 		addq	$8, %rsp
 974              		.cfi_def_cfa_offset 40
 975 0528 5B       		popq	%rbx
 976              		.cfi_def_cfa_offset 32
 977              	.LVL89:
 166:Src/main.cpp  **** 
 978              		.loc 1 166 1 view .LVU287
 979 0529 5D       		popq	%rbp
 980              		.cfi_def_cfa_offset 24
 981              	.LVL90:
 166:Src/main.cpp  **** 
 982              		.loc 1 166 1 view .LVU288
 983 052a 415C     		popq	%r12
 984              		.cfi_def_cfa_offset 16
 985              	.LVL91:
 166:Src/main.cpp  **** 
 986              		.loc 1 166 1 view .LVU289
 987 052c 415D     		popq	%r13
 988              		.cfi_def_cfa_offset 8
 989              	.LVL92:
 166:Src/main.cpp  **** 
 990              		.loc 1 166 1 view .LVU290
 991 052e C3       		ret
 992              		.cfi_endproc
 993              	.LFE2483:
 995              		.globl	_Z16getPointsDataSetPK6coords
 997              	_Z16getPointsDataSetPK6coords:
 998              	.LVL93:
 999              	.LFB2484:
 170:Src/main.cpp  **** 	size_t size = 0;
 1000              		.loc 1 170 1 is_stmt 1 view -0
 1001              		.cfi_startproc
 170:Src/main.cpp  **** 	size_t size = 0;
 1002              		.loc 1 170 1 is_stmt 0 view .LVU292
 1003 052f 4155     		pushq	%r13
 1004              		.cfi_def_cfa_offset 16
 1005              		.cfi_offset 13, -16
GAS LISTING /tmp/ccZtEYtQ.s 			page 82


 1006 0531 4154     		pushq	%r12
 1007              		.cfi_def_cfa_offset 24
 1008              		.cfi_offset 12, -24
 1009 0533 55       		pushq	%rbp
 1010              		.cfi_def_cfa_offset 32
 1011              		.cfi_offset 6, -32
 1012 0534 53       		pushq	%rbx
 1013              		.cfi_def_cfa_offset 40
 1014              		.cfi_offset 3, -40
 1015 0535 4883EC08 		subq	$8, %rsp
 1016              		.cfi_def_cfa_offset 48
 1017 0539 4889FB   		movq	%rdi, %rbx
 171:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 1018              		.loc 1 171 2 is_stmt 1 view .LVU293
 1019              	.LVL94:
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 1020              		.loc 1 172 2 view .LVU294
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 1021              		.loc 1 172 11 is_stmt 0 view .LVU295
 1022 053c BDD00700 		movl	$2000, %ebp
 1022      00
 171:Src/main.cpp  **** 	uint16_t watchRadius = ZERO_QUAD_CHECK_SIDE;
 1023              		.loc 1 171 9 view .LVU296
 1024 0541 41BC0000 		movl	$0, %r12d
 1024      0000
 1025 0547 EB6B     		jmp	.L72
 1026              	.LVL95:
 1027              	.L75:
 1028              	.LBB1498:
 1029              	.LBB1499:
 175:Src/main.cpp  **** 		{
 1030              		.loc 1 175 3 is_stmt 1 discriminator 2 view .LVU297
 1031 0549 4883C101 		addq	$1, %rcx
 1032              	.LVL96:
 1033              	.L80:
 175:Src/main.cpp  **** 		{
 1034              		.loc 1 175 23 discriminator 1 view .LVU298
 1035 054d 48390D00 		cmpq	%rcx, graphSize(%rip)
 1035      000000
 1036 0554 7659     		jbe	.L74
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1037              		.loc 1 177 4 view .LVU299
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1038              		.loc 1 177 14 is_stmt 0 view .LVU300
 1039 0556 488B1500 		movq	graph(%rip), %rdx
 1039      000000
 1040 055d 488B34CA 		movq	(%rdx,%rcx,8), %rsi
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1041              		.loc 1 177 19 view .LVU301
 1042 0561 F30F1056 		movss	16(%rsi), %xmm2
 1042      10
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1043              		.loc 1 177 27 view .LVU302
 1044 0566 F30F100B 		movss	(%rbx), %xmm1
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1045              		.loc 1 177 31 view .LVU303
 1046 056a 0FB7D5   		movzwl	%bp, %edx
GAS LISTING /tmp/ccZtEYtQ.s 			page 83


 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1047              		.loc 1 177 29 view .LVU304
 1048 056d 660FEFC0 		pxor	%xmm0, %xmm0
 1049 0571 F30F2AC2 		cvtsi2ssl	%edx, %xmm0
 1050 0575 0F28D9   		movaps	%xmm1, %xmm3
 1051 0578 F30F5CD8 		subss	%xmm0, %xmm3
 177:Src/main.cpp  **** 			&& graph[i]->c.x <= c->x + watchRadius
 1052              		.loc 1 177 4 view .LVU305
 1053 057c 0F2FD3   		comiss	%xmm3, %xmm2
 1054 057f 72C8     		jb	.L75
 178:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 1055              		.loc 1 178 29 view .LVU306
 1056 0581 F30F58C8 		addss	%xmm0, %xmm1
 178:Src/main.cpp  **** 			&& graph[i]->c.y >= c->y - watchRadius
 1057              		.loc 1 178 4 view .LVU307
 1058 0585 0F2FCA   		comiss	%xmm2, %xmm1
 1059 0588 72BF     		jb	.L75
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 1060              		.loc 1 179 19 view .LVU308
 1061 058a F30F104E 		movss	20(%rsi), %xmm1
 1061      14
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 1062              		.loc 1 179 27 view .LVU309
 1063 058f F30F1053 		movss	4(%rbx), %xmm2
 1063      04
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 1064              		.loc 1 179 29 view .LVU310
 1065 0594 0F28DA   		movaps	%xmm2, %xmm3
 1066 0597 F30F5CD8 		subss	%xmm0, %xmm3
 179:Src/main.cpp  **** 			&& graph[i]->c.y <= c->y + watchRadius)
 1067              		.loc 1 179 4 view .LVU311
 1068 059b 0F2FCB   		comiss	%xmm3, %xmm1
 1069 059e 72A9     		jb	.L75
 180:Src/main.cpp  **** 				size++;
 1070              		.loc 1 180 29 view .LVU312
 1071 05a0 F30F58C2 		addss	%xmm2, %xmm0
 180:Src/main.cpp  **** 				size++;
 1072              		.loc 1 180 4 view .LVU313
 1073 05a4 0F2FC1   		comiss	%xmm1, %xmm0
 1074 05a7 72A0     		jb	.L75
 181:Src/main.cpp  **** 		}
 1075              		.loc 1 181 5 is_stmt 1 view .LVU314
 181:Src/main.cpp  **** 		}
 1076              		.loc 1 181 9 is_stmt 0 view .LVU315
 1077 05a9 4983C401 		addq	$1, %r12
 1078              	.LVL97:
 181:Src/main.cpp  **** 		}
 1079              		.loc 1 181 9 view .LVU316
 1080 05ad EB9A     		jmp	.L75
 1081              	.L74:
 181:Src/main.cpp  **** 		}
 1082              		.loc 1 181 9 view .LVU317
 1083              	.LBE1499:
 183:Src/main.cpp  **** 		{
 1084              		.loc 1 183 3 is_stmt 1 view .LVU318
 1085 05af 4C39E0   		cmpq	%r12, %rax
 1086 05b2 771D     		ja	.L98
GAS LISTING /tmp/ccZtEYtQ.s 			page 84


 1087              	.LVL98:
 1088              	.L72:
 183:Src/main.cpp  **** 		{
 1089              		.loc 1 183 3 is_stmt 0 view .LVU319
 1090              	.LBE1498:
 172:Src/main.cpp  **** 	while (size < getMinDatasetSize()) {
 1091              		.loc 1 172 45 is_stmt 1 discriminator 1 view .LVU320
 173:Src/main.cpp  **** 		size = 0;
 1092              		.loc 1 173 2 discriminator 1 view .LVU321
 173:Src/main.cpp  **** 		size = 0;
 1093              		.loc 1 173 14 discriminator 1 view .LVU322
 173:Src/main.cpp  **** 		size = 0;
 1094              		.loc 1 173 33 is_stmt 0 discriminator 1 view .LVU323
 1095 05b4 E8000000 		call	_Z17getMinDatasetSizev
 1095      00
 1096              	.LVL99:
 1097 05b9 0FB6C0   		movzbl	%al, %eax
 173:Src/main.cpp  **** 		size = 0;
 1098              		.loc 1 173 14 discriminator 1 view .LVU324
 1099 05bc 4C39E0   		cmpq	%r12, %rax
 1100 05bf 762D     		jbe	.L73
 1101              	.LBB1504:
 1102              	.LBB1500:
 175:Src/main.cpp  **** 		{
 1103              		.loc 1 175 14 view .LVU325
 1104 05c1 B9000000 		movl	$0, %ecx
 1104      00
 1105              	.LBE1500:
 174:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 1106              		.loc 1 174 8 view .LVU326
 1107 05c6 41BC0000 		movl	$0, %r12d
 1107      0000
 1108              	.LVL100:
 174:Src/main.cpp  **** 		for(size_t i = 0; i < graphSize; i++)
 1109              		.loc 1 174 8 view .LVU327
 1110 05cc E97CFFFF 		jmp	.L80
 1110      FF
 1111              	.LVL101:
 1112              	.L98:
 185:Src/main.cpp  **** 			watchRadius += 100;
 1113              		.loc 1 185 4 is_stmt 1 view .LVU328
 1114              	.LBB1501:
 1115              	.LBI1501:
 565:/usr/include/c++/9.2.0/ostream ****     {
 1116              		.loc 3 565 5 view .LVU329
 565:/usr/include/c++/9.2.0/ostream ****     {
 1117              		.loc 3 565 5 is_stmt 0 view .LVU330
 1118              	.LBE1501:
 1119              	.LBE1504:
 1120              		.loc 4 335 2 is_stmt 1 view .LVU331
 1121              	.LBB1505:
 1122              	.LBB1503:
 1123              	.LBB1502:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1124              		.loc 3 570 18 is_stmt 0 view .LVU332
 1125 05d1 BA120000 		movl	$18, %edx
 1125      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 85


 1126 05d6 488D3500 		leaq	.LC14(%rip), %rsi
 1126      000000
 1127 05dd 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 1127      000000
 1128 05e4 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 1128      00
 1129              	.LVL102:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1130              		.loc 3 570 18 view .LVU333
 1131              	.LBE1502:
 1132              	.LBE1503:
 186:Src/main.cpp  **** 		}
 1133              		.loc 1 186 4 is_stmt 1 view .LVU334
 186:Src/main.cpp  **** 		}
 1134              		.loc 1 186 16 is_stmt 0 view .LVU335
 1135 05e9 83C564   		addl	$100, %ebp
 1136              	.LVL103:
 186:Src/main.cpp  **** 		}
 1137              		.loc 1 186 16 view .LVU336
 1138 05ec EBC6     		jmp	.L72
 1139              	.L73:
 186:Src/main.cpp  **** 		}
 1140              		.loc 1 186 16 view .LVU337
 1141              	.LBE1505:
 190:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 1142              		.loc 1 190 2 is_stmt 1 view .LVU338
 1143              	.LVL104:
 191:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 1144              		.loc 1 191 2 view .LVU339
 191:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 1145              		.loc 1 191 59 is_stmt 0 view .LVU340
 1146 05ee 4A8D3CE5 		leaq	0(,%r12,8), %rdi
 1146      00000000 
 1147 05f6 E8000000 		call	malloc@PLT
 1147      00
 1148              	.LVL105:
 1149 05fb 4989C5   		movq	%rax, %r13
 1150              	.LVL106:
 192:Src/main.cpp  **** 	{
 1151              		.loc 1 192 2 is_stmt 1 view .LVU341
 1152              	.LBB1506:
 192:Src/main.cpp  **** 	{
 1153              		.loc 1 192 13 is_stmt 0 view .LVU342
 1154 05fe BA000000 		movl	$0, %edx
 1154      00
 1155              	.LBE1506:
 190:Src/main.cpp  **** 	struct graphPoint **dataset = (struct graphPoint**)malloc(sizeof(struct graphPoint*) * size);
 1156              		.loc 1 190 9 view .LVU343
 1157 0603 BE000000 		movl	$0, %esi
 1157      00
 1158 0608 EB04     		jmp	.L88
 1159              	.LVL107:
 1160              	.L83:
 1161              	.LBB1507:
 192:Src/main.cpp  **** 	{
 1162              		.loc 1 192 2 is_stmt 1 discriminator 2 view .LVU344
 1163 060a 4883C201 		addq	$1, %rdx
GAS LISTING /tmp/ccZtEYtQ.s 			page 86


 1164              	.LVL108:
 1165              	.L88:
 192:Src/main.cpp  **** 	{
 1166              		.loc 1 192 22 discriminator 1 view .LVU345
 1167 060e 48391500 		cmpq	%rdx, graphSize(%rip)
 1167      000000
 1168 0615 765E     		jbe	.L82
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1169              		.loc 1 194 3 view .LVU346
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1170              		.loc 1 194 13 is_stmt 0 view .LVU347
 1171 0617 488B0500 		movq	graph(%rip), %rax
 1171      000000
 1172 061e 488B0CD0 		movq	(%rax,%rdx,8), %rcx
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1173              		.loc 1 194 18 view .LVU348
 1174 0622 F30F1051 		movss	16(%rcx), %xmm2
 1174      10
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1175              		.loc 1 194 26 view .LVU349
 1176 0627 F30F100B 		movss	(%rbx), %xmm1
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1177              		.loc 1 194 30 view .LVU350
 1178 062b 0FB7C5   		movzwl	%bp, %eax
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1179              		.loc 1 194 28 view .LVU351
 1180 062e 660FEFC0 		pxor	%xmm0, %xmm0
 1181 0632 F30F2AC0 		cvtsi2ssl	%eax, %xmm0
 1182 0636 0F28D9   		movaps	%xmm1, %xmm3
 1183 0639 F30F5CD8 		subss	%xmm0, %xmm3
 194:Src/main.cpp  **** 		&& graph[i]->c.x <= c->x + watchRadius
 1184              		.loc 1 194 3 view .LVU352
 1185 063d 0F2FD3   		comiss	%xmm3, %xmm2
 1186 0640 72C8     		jb	.L83
 195:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 1187              		.loc 1 195 28 view .LVU353
 1188 0642 F30F58C8 		addss	%xmm0, %xmm1
 195:Src/main.cpp  **** 		&& graph[i]->c.y >= c->y - watchRadius
 1189              		.loc 1 195 3 view .LVU354
 1190 0646 0F2FCA   		comiss	%xmm2, %xmm1
 1191 0649 72BF     		jb	.L83
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 1192              		.loc 1 196 18 view .LVU355
 1193 064b F30F1049 		movss	20(%rcx), %xmm1
 1193      14
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 1194              		.loc 1 196 26 view .LVU356
 1195 0650 F30F1053 		movss	4(%rbx), %xmm2
 1195      04
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 1196              		.loc 1 196 28 view .LVU357
 1197 0655 0F28DA   		movaps	%xmm2, %xmm3
 1198 0658 F30F5CD8 		subss	%xmm0, %xmm3
 196:Src/main.cpp  **** 		&& graph[i]->c.y <= c->y + watchRadius)
 1199              		.loc 1 196 3 view .LVU358
 1200 065c 0F2FCB   		comiss	%xmm3, %xmm1
 1201 065f 72A9     		jb	.L83
GAS LISTING /tmp/ccZtEYtQ.s 			page 87


 197:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 1202              		.loc 1 197 28 view .LVU359
 1203 0661 F30F58C2 		addss	%xmm2, %xmm0
 197:Src/main.cpp  **** 			dataset[iter++] = graph[i];
 1204              		.loc 1 197 3 view .LVU360
 1205 0665 0F2FC1   		comiss	%xmm1, %xmm0
 1206 0668 72A0     		jb	.L83
 198:Src/main.cpp  **** 	}
 1207              		.loc 1 198 4 is_stmt 1 view .LVU361
 1208              	.LVL109:
 198:Src/main.cpp  **** 	}
 1209              		.loc 1 198 20 is_stmt 0 view .LVU362
 1210 066a 49894CF5 		movq	%rcx, 0(%r13,%rsi,8)
 1210      00
 198:Src/main.cpp  **** 	}
 1211              		.loc 1 198 16 view .LVU363
 1212 066f 488D7601 		leaq	1(%rsi), %rsi
 1213              	.LVL110:
 198:Src/main.cpp  **** 	}
 1214              		.loc 1 198 16 view .LVU364
 1215 0673 EB95     		jmp	.L83
 1216              	.L82:
 198:Src/main.cpp  **** 	}
 1217              		.loc 1 198 16 view .LVU365
 1218              	.LBE1507:
 200:Src/main.cpp  **** 	ret->items = dataset;
 1219              		.loc 1 200 2 is_stmt 1 view .LVU366
 200:Src/main.cpp  **** 	ret->items = dataset;
 1220              		.loc 1 200 43 is_stmt 0 view .LVU367
 1221 0675 BF100000 		movl	$16, %edi
 1221      00
 1222 067a E8000000 		call	malloc@PLT
 1222      00
 1223              	.LVL111:
 201:Src/main.cpp  **** 	ret->size = size;
 1224              		.loc 1 201 2 is_stmt 1 view .LVU368
 201:Src/main.cpp  **** 	ret->size = size;
 1225              		.loc 1 201 13 is_stmt 0 view .LVU369
 1226 067f 4C8928   		movq	%r13, (%rax)
 202:Src/main.cpp  **** 	return ret;
 1227              		.loc 1 202 2 is_stmt 1 view .LVU370
 202:Src/main.cpp  **** 	return ret;
 1228              		.loc 1 202 12 is_stmt 0 view .LVU371
 1229 0682 4C896008 		movq	%r12, 8(%rax)
 203:Src/main.cpp  **** }
 1230              		.loc 1 203 2 is_stmt 1 view .LVU372
 204:Src/main.cpp  **** 
 1231              		.loc 1 204 1 is_stmt 0 view .LVU373
 1232 0686 4883C408 		addq	$8, %rsp
 1233              		.cfi_def_cfa_offset 40
 1234 068a 5B       		popq	%rbx
 1235              		.cfi_def_cfa_offset 32
 1236              	.LVL112:
 204:Src/main.cpp  **** 
 1237              		.loc 1 204 1 view .LVU374
 1238 068b 5D       		popq	%rbp
 1239              		.cfi_def_cfa_offset 24
GAS LISTING /tmp/ccZtEYtQ.s 			page 88


 1240              	.LVL113:
 204:Src/main.cpp  **** 
 1241              		.loc 1 204 1 view .LVU375
 1242 068c 415C     		popq	%r12
 1243              		.cfi_def_cfa_offset 16
 1244              	.LVL114:
 204:Src/main.cpp  **** 
 1245              		.loc 1 204 1 view .LVU376
 1246 068e 415D     		popq	%r13
 1247              		.cfi_def_cfa_offset 8
 1248              	.LVL115:
 204:Src/main.cpp  **** 
 1249              		.loc 1 204 1 view .LVU377
 1250 0690 C3       		ret
 1251              		.cfi_endproc
 1252              	.LFE2484:
 1254              		.globl	_Z10getDataSetPK8obstacleh
 1256              	_Z10getDataSetPK8obstacleh:
 1257              	.LVL116:
 1258              	.LFB2485:
 208:Src/main.cpp  **** 	struct graphPoint *p = getPoint(obst, corner);
 1259              		.loc 1 208 1 is_stmt 1 view -0
 1260              		.cfi_startproc
 208:Src/main.cpp  **** 	struct graphPoint *p = getPoint(obst, corner);
 1261              		.loc 1 208 1 is_stmt 0 view .LVU379
 1262 0691 55       		pushq	%rbp
 1263              		.cfi_def_cfa_offset 16
 1264              		.cfi_offset 6, -16
 1265 0692 53       		pushq	%rbx
 1266              		.cfi_def_cfa_offset 24
 1267              		.cfi_offset 3, -24
 1268 0693 4883EC08 		subq	$8, %rsp
 1269              		.cfi_def_cfa_offset 32
 1270 0697 4889FB   		movq	%rdi, %rbx
 209:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 1271              		.loc 1 209 2 is_stmt 1 view .LVU380
 209:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 1272              		.loc 1 209 33 is_stmt 0 view .LVU381
 1273 069a 400FB6EE 		movzbl	%sil, %ebp
 1274 069e 89EE     		movl	%ebp, %esi
 209:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 1275              		.loc 1 209 33 view .LVU382
 1276 06a0 E8000000 		call	_Z8getPointPK8obstacleh@PLT
 1276      00
 1277              	.LVL117:
 210:Src/main.cpp  **** 
 1278              		.loc 1 210 2 is_stmt 1 view .LVU383
 210:Src/main.cpp  **** 
 1279              		.loc 1 210 38 is_stmt 0 view .LVU384
 1280 06a5 89EE     		movl	%ebp, %esi
 1281 06a7 4889DF   		movq	%rbx, %rdi
 1282 06aa E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh@PLT
 1282      00
 1283              	.LVL118:
 1284 06af 4889C3   		movq	%rax, %rbx
 1285              	.LVL119:
 212:Src/main.cpp  **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 89


 1286              		.loc 1 212 2 is_stmt 1 view .LVU385
 212:Src/main.cpp  **** 
 1287              		.loc 1 212 32 is_stmt 0 view .LVU386
 1288 06b2 4889C7   		movq	%rax, %rdi
 1289 06b5 E8000000 		call	_Z10getDataSetPK6coords
 1289      00
 1290              	.LVL120:
 212:Src/main.cpp  **** 
 1291              		.loc 1 212 32 view .LVU387
 1292 06ba 4889C5   		movq	%rax, %rbp
 1293              	.LVL121:
 214:Src/main.cpp  **** 
 1294              		.loc 1 214 2 is_stmt 1 view .LVU388
 214:Src/main.cpp  **** 
 1295              		.loc 1 214 6 is_stmt 0 view .LVU389
 1296 06bd 4889DF   		movq	%rbx, %rdi
 1297 06c0 E8000000 		call	free@PLT
 1297      00
 1298              	.LVL122:
 216:Src/main.cpp  **** }
 1299              		.loc 1 216 2 is_stmt 1 view .LVU390
 217:Src/main.cpp  **** 
 1300              		.loc 1 217 1 is_stmt 0 view .LVU391
 1301 06c5 4889E8   		movq	%rbp, %rax
 1302 06c8 4883C408 		addq	$8, %rsp
 1303              		.cfi_def_cfa_offset 24
 1304 06cc 5B       		popq	%rbx
 1305              		.cfi_def_cfa_offset 16
 1306              	.LVL123:
 217:Src/main.cpp  **** 
 1307              		.loc 1 217 1 view .LVU392
 1308 06cd 5D       		popq	%rbp
 1309              		.cfi_def_cfa_offset 8
 1310              	.LVL124:
 217:Src/main.cpp  **** 
 1311              		.loc 1 217 1 view .LVU393
 1312 06ce C3       		ret
 1313              		.cfi_endproc
 1314              	.LFE2485:
 1316              		.globl	_Z16hasIntersectionsPK5arrayPK4vect
 1318              	_Z16hasIntersectionsPK5arrayPK4vect:
 1319              	.LVL125:
 1320              	.LFB2486:
 221:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1321              		.loc 1 221 1 is_stmt 1 view -0
 1322              		.cfi_startproc
 221:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1323              		.loc 1 221 1 is_stmt 0 view .LVU395
 1324 06cf 4154     		pushq	%r12
 1325              		.cfi_def_cfa_offset 16
 1326              		.cfi_offset 12, -16
 1327 06d1 55       		pushq	%rbp
 1328              		.cfi_def_cfa_offset 24
 1329              		.cfi_offset 6, -24
 1330 06d2 53       		pushq	%rbx
 1331              		.cfi_def_cfa_offset 32
 1332              		.cfi_offset 3, -32
GAS LISTING /tmp/ccZtEYtQ.s 			page 90


 1333 06d3 4889FD   		movq	%rdi, %rbp
 1334 06d6 4989F4   		movq	%rsi, %r12
 222:Src/main.cpp  **** 	{
 1335              		.loc 1 222 2 is_stmt 1 view .LVU396
 1336              	.LVL126:
 1337              	.LBB1508:
 222:Src/main.cpp  **** 	{
 1338              		.loc 1 222 13 is_stmt 0 view .LVU397
 1339 06d9 BB000000 		movl	$0, %ebx
 1339      00
 1340              	.LVL127:
 1341              	.L103:
 222:Src/main.cpp  **** 	{
 1342              		.loc 1 222 22 is_stmt 1 discriminator 1 view .LVU398
 1343 06de 48395D08 		cmpq	%rbx, 8(%rbp)
 1344 06e2 761E     		jbe	.L104
 224:Src/main.cpp  **** 			return true;
 1345              		.loc 1 224 3 view .LVU399
 224:Src/main.cpp  **** 			return true;
 1346              		.loc 1 224 59 is_stmt 0 view .LVU400
 1347 06e4 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 1348 06e8 48C1E704 		salq	$4, %rdi
 224:Src/main.cpp  **** 			return true;
 1349              		.loc 1 224 21 view .LVU401
 1350 06ec 48037D00 		addq	0(%rbp), %rdi
 1351 06f0 4C89E6   		movq	%r12, %rsi
 1352 06f3 E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 1352      00
 1353              	.LVL128:
 224:Src/main.cpp  **** 			return true;
 1354              		.loc 1 224 3 view .LVU402
 1355 06f8 84C0     		testb	%al, %al
 1356 06fa 750B     		jne	.L101
 222:Src/main.cpp  **** 	{
 1357              		.loc 1 222 2 is_stmt 1 discriminator 2 view .LVU403
 1358 06fc 4883C301 		addq	$1, %rbx
 1359              	.LVL129:
 222:Src/main.cpp  **** 	{
 1360              		.loc 1 222 2 is_stmt 0 discriminator 2 view .LVU404
 1361 0700 EBDC     		jmp	.L103
 1362              	.L104:
 222:Src/main.cpp  **** 	{
 1363              		.loc 1 222 2 discriminator 2 view .LVU405
 1364              	.LBE1508:
 227:Src/main.cpp  **** }
 1365              		.loc 1 227 9 view .LVU406
 1366 0702 B8000000 		movl	$0, %eax
 1366      00
 1367              	.L101:
 228:Src/main.cpp  **** 
 1368              		.loc 1 228 1 view .LVU407
 1369 0707 5B       		popq	%rbx
 1370              		.cfi_def_cfa_offset 24
 1371              	.LVL130:
 228:Src/main.cpp  **** 
 1372              		.loc 1 228 1 view .LVU408
 1373 0708 5D       		popq	%rbp
GAS LISTING /tmp/ccZtEYtQ.s 			page 91


 1374              		.cfi_def_cfa_offset 16
 1375              	.LVL131:
 228:Src/main.cpp  **** 
 1376              		.loc 1 228 1 view .LVU409
 1377 0709 415C     		popq	%r12
 1378              		.cfi_def_cfa_offset 8
 1379              	.LVL132:
 228:Src/main.cpp  **** 
 1380              		.loc 1 228 1 view .LVU410
 1381 070b C3       		ret
 1382              		.cfi_endproc
 1383              	.LFE2486:
 1385              		.globl	_Z16hasIntersectionsPK4vect
 1387              	_Z16hasIntersectionsPK4vect:
 1388              	.LVL133:
 1389              	.LFB2487:
 231:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 1390              		.loc 1 231 1 is_stmt 1 view -0
 1391              		.cfi_startproc
 231:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles; i++)
 1392              		.loc 1 231 1 is_stmt 0 view .LVU412
 1393 070c 55       		pushq	%rbp
 1394              		.cfi_def_cfa_offset 16
 1395              		.cfi_offset 6, -16
 1396 070d 53       		pushq	%rbx
 1397              		.cfi_def_cfa_offset 24
 1398              		.cfi_offset 3, -24
 1399 070e 4883EC08 		subq	$8, %rsp
 1400              		.cfi_def_cfa_offset 32
 1401 0712 4889FD   		movq	%rdi, %rbp
 232:Src/main.cpp  **** 	{
 1402              		.loc 1 232 2 is_stmt 1 view .LVU413
 1403              	.LVL134:
 1404              	.LBB1509:
 232:Src/main.cpp  **** 	{
 1405              		.loc 1 232 13 is_stmt 0 view .LVU414
 1406 0715 BB000000 		movl	$0, %ebx
 1406      00
 1407              	.LVL135:
 1408              	.L108:
 232:Src/main.cpp  **** 	{
 1409              		.loc 1 232 22 is_stmt 1 discriminator 1 view .LVU415
 1410 071a 48391D00 		cmpq	%rbx, numOfObstacles(%rip)
 1410      000000
 1411 0721 7621     		jbe	.L109
 234:Src/main.cpp  **** 			return true;
 1412              		.loc 1 234 3 view .LVU416
 234:Src/main.cpp  **** 			return true;
 1413              		.loc 1 234 34 is_stmt 0 view .LVU417
 1414 0723 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 1415 0727 48C1E704 		salq	$4, %rdi
 234:Src/main.cpp  **** 			return true;
 1416              		.loc 1 234 22 view .LVU418
 1417 072b 48033D00 		addq	obstacles(%rip), %rdi
 1417      000000
 234:Src/main.cpp  **** 			return true;
 1418              		.loc 1 234 21 view .LVU419
GAS LISTING /tmp/ccZtEYtQ.s 			page 92


 1419 0732 4889EE   		movq	%rbp, %rsi
 1420 0735 E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 1420      00
 1421              	.LVL136:
 234:Src/main.cpp  **** 			return true;
 1422              		.loc 1 234 3 view .LVU420
 1423 073a 84C0     		testb	%al, %al
 1424 073c 750B     		jne	.L106
 232:Src/main.cpp  **** 	{
 1425              		.loc 1 232 2 is_stmt 1 discriminator 2 view .LVU421
 1426 073e 4883C301 		addq	$1, %rbx
 1427              	.LVL137:
 232:Src/main.cpp  **** 	{
 1428              		.loc 1 232 2 is_stmt 0 discriminator 2 view .LVU422
 1429 0742 EBD6     		jmp	.L108
 1430              	.L109:
 232:Src/main.cpp  **** 	{
 1431              		.loc 1 232 2 discriminator 2 view .LVU423
 1432              	.LBE1509:
 237:Src/main.cpp  **** }
 1433              		.loc 1 237 9 view .LVU424
 1434 0744 B8000000 		movl	$0, %eax
 1434      00
 1435              	.L106:
 238:Src/main.cpp  **** 
 1436              		.loc 1 238 1 view .LVU425
 1437 0749 4883C408 		addq	$8, %rsp
 1438              		.cfi_def_cfa_offset 24
 1439 074d 5B       		popq	%rbx
 1440              		.cfi_def_cfa_offset 16
 1441              	.LVL138:
 238:Src/main.cpp  **** 
 1442              		.loc 1 238 1 view .LVU426
 1443 074e 5D       		popq	%rbp
 1444              		.cfi_def_cfa_offset 8
 1445              	.LVL139:
 238:Src/main.cpp  **** 
 1446              		.loc 1 238 1 view .LVU427
 1447 074f C3       		ret
 1448              		.cfi_endproc
 1449              	.LFE2487:
 1451              		.globl	_Z11isDotInsidePK6coords
 1453              	_Z11isDotInsidePK6coords:
 1454              	.LVL140:
 1455              	.LFB2488:
 244:Src/main.cpp  ****     for(size_t i = 0; i < numOfObstacles; i++)
 1456              		.loc 1 244 1 is_stmt 1 view -0
 1457              		.cfi_startproc
 245:Src/main.cpp  **** 	{
 1458              		.loc 1 245 5 view .LVU429
 1459              	.LBB1510:
 245:Src/main.cpp  **** 	{
 1460              		.loc 1 245 16 is_stmt 0 view .LVU430
 1461 0750 BA000000 		movl	$0, %edx
 1461      00
 1462 0755 EB04     		jmp	.L117
 1463              	.LVL141:
GAS LISTING /tmp/ccZtEYtQ.s 			page 93


 1464              	.L113:
 245:Src/main.cpp  **** 	{
 1465              		.loc 1 245 5 is_stmt 1 discriminator 2 view .LVU431
 1466 0757 4883C201 		addq	$1, %rdx
 1467              	.LVL142:
 1468              	.L117:
 245:Src/main.cpp  **** 	{
 1469              		.loc 1 245 25 discriminator 1 view .LVU432
 1470 075b 48391500 		cmpq	%rdx, numOfObstacles(%rip)
 1470      000000
 1471 0762 0F869F00 		jbe	.L118
 1471      0000
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1472              		.loc 1 247 3 view .LVU433
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1473              		.loc 1 247 11 is_stmt 0 view .LVU434
 1474 0768 660FEFC9 		pxor	%xmm1, %xmm1
 1475 076c F30F5A0F 		cvtss2sd	(%rdi), %xmm1
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1476              		.loc 1 247 13 view .LVU435
 1477 0770 660F28D9 		movapd	%xmm1, %xmm3
 1478 0774 F20F5C1D 		subsd	.LC15(%rip), %xmm3
 1478      00000000 
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1479              		.loc 1 247 34 view .LVU436
 1480 077c 488D0452 		leaq	(%rdx,%rdx,2), %rax
 1481 0780 48C1E004 		salq	$4, %rax
 1482 0784 48030500 		addq	obstacles(%rip), %rax
 1482      000000
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1483              		.loc 1 247 36 view .LVU437
 1484 078b 488B08   		movq	(%rax), %rcx
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1485              		.loc 1 247 39 view .LVU438
 1486 078e F30F1001 		movss	(%rcx), %xmm0
 1487 0792 660FEFD2 		pxor	%xmm2, %xmm2
 1488 0796 F30F5AD0 		cvtss2sd	%xmm0, %xmm2
 247:Src/main.cpp  **** 		&&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 1489              		.loc 1 247 3 view .LVU439
 1490 079a 660F2FDA 		comisd	%xmm2, %xmm3
 1491 079e 76B7     		jbe	.L113
 248:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1492              		.loc 1 248 13 view .LVU440
 1493 07a0 F20F580D 		addsd	.LC15(%rip), %xmm1
 1493      00000000 
 248:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1494              		.loc 1 248 56 view .LVU441
 1495 07a8 F30F1050 		movss	40(%rax), %xmm2
 1495      28
 248:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1496              		.loc 1 248 41 view .LVU442
 1497 07ad F30F58C2 		addss	%xmm2, %xmm0
 1498 07b1 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 248:Src/main.cpp  **** 		&&  (c->y - CONST > obstacles[i].c->y)
 1499              		.loc 1 248 3 view .LVU443
 1500 07b5 660F2FC1 		comisd	%xmm1, %xmm0
 1501 07b9 769C     		jbe	.L113
GAS LISTING /tmp/ccZtEYtQ.s 			page 94


 249:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1502              		.loc 1 249 11 view .LVU444
 1503 07bb 660FEFC0 		pxor	%xmm0, %xmm0
 1504 07bf F30F5A47 		cvtss2sd	4(%rdi), %xmm0
 1504      04
 249:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1505              		.loc 1 249 13 view .LVU445
 1506 07c4 660F28E0 		movapd	%xmm0, %xmm4
 1507 07c8 F20F5C25 		subsd	.LC15(%rip), %xmm4
 1507      00000000 
 249:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1508              		.loc 1 249 39 view .LVU446
 1509 07d0 F30F1049 		movss	4(%rcx), %xmm1
 1509      04
 1510 07d5 660FEFDB 		pxor	%xmm3, %xmm3
 1511 07d9 F30F5AD9 		cvtss2sd	%xmm1, %xmm3
 249:Src/main.cpp  **** 		&&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 1512              		.loc 1 249 3 view .LVU447
 1513 07dd 660F2FE3 		comisd	%xmm3, %xmm4
 1514 07e1 0F8670FF 		jbe	.L113
 1514      FFFF
 250:Src/main.cpp  **** 			return true;
 1515              		.loc 1 250 13 view .LVU448
 1516 07e7 F20F5805 		addsd	.LC15(%rip), %xmm0
 1516      00000000 
 250:Src/main.cpp  **** 			return true;
 1517              		.loc 1 250 41 view .LVU449
 1518 07ef F30F58D1 		addss	%xmm1, %xmm2
 1519 07f3 F30F5AD2 		cvtss2sd	%xmm2, %xmm2
 250:Src/main.cpp  **** 			return true;
 1520              		.loc 1 250 3 view .LVU450
 1521 07f7 660F2FD0 		comisd	%xmm0, %xmm2
 1522 07fb 0F8656FF 		jbe	.L113
 1522      FFFF
 251:Src/main.cpp  **** 	}
 1523              		.loc 1 251 11 view .LVU451
 1524 0801 B8010000 		movl	$1, %eax
 1524      00
 1525              	.LBE1510:
 254:Src/main.cpp  **** 
 1526              		.loc 1 254 1 view .LVU452
 1527 0806 C3       		ret
 1528              	.L118:
 253:Src/main.cpp  **** }
 1529              		.loc 1 253 9 view .LVU453
 1530 0807 B8000000 		movl	$0, %eax
 1530      00
 1531 080c C3       		ret
 1532              		.cfi_endproc
 1533              	.LFE2488:
 1535              		.globl	_Z15getIntersectionPK5arrayPK4vect
 1537              	_Z15getIntersectionPK5arrayPK4vect:
 1538              	.LVL143:
 1539              	.LFB2489:
 258:Src/main.cpp  **** 	struct obstacle *o = NULL;
 1540              		.loc 1 258 1 is_stmt 1 view -0
 1541              		.cfi_startproc
GAS LISTING /tmp/ccZtEYtQ.s 			page 95


 258:Src/main.cpp  **** 	struct obstacle *o = NULL;
 1542              		.loc 1 258 1 is_stmt 0 view .LVU455
 1543 080d 4155     		pushq	%r13
 1544              		.cfi_def_cfa_offset 16
 1545              		.cfi_offset 13, -16
 1546 080f 4154     		pushq	%r12
 1547              		.cfi_def_cfa_offset 24
 1548              		.cfi_offset 12, -24
 1549 0811 55       		pushq	%rbp
 1550              		.cfi_def_cfa_offset 32
 1551              		.cfi_offset 6, -32
 1552 0812 53       		pushq	%rbx
 1553              		.cfi_def_cfa_offset 40
 1554              		.cfi_offset 3, -40
 1555 0813 4883EC08 		subq	$8, %rsp
 1556              		.cfi_def_cfa_offset 48
 1557 0817 4889FD   		movq	%rdi, %rbp
 1558 081a 4989F4   		movq	%rsi, %r12
 259:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1559              		.loc 1 259 2 is_stmt 1 view .LVU456
 1560              	.LVL144:
 260:Src/main.cpp  **** 	{
 1561              		.loc 1 260 2 view .LVU457
 1562              	.LBB1511:
 260:Src/main.cpp  **** 	{
 1563              		.loc 1 260 13 is_stmt 0 view .LVU458
 1564 081d BB000000 		movl	$0, %ebx
 1564      00
 1565              	.LVL145:
 1566              	.L126:
 260:Src/main.cpp  **** 	{
 1567              		.loc 1 260 22 is_stmt 1 discriminator 1 view .LVU459
 1568 0822 48395D08 		cmpq	%rbx, 8(%rbp)
 1569 0826 762A     		jbe	.L129
 262:Src/main.cpp  **** 		{
 1570              		.loc 1 262 3 view .LVU460
 262:Src/main.cpp  **** 		{
 1571              		.loc 1 262 59 is_stmt 0 view .LVU461
 1572 0828 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 1573 082c 48C1E704 		salq	$4, %rdi
 1574 0830 4989FD   		movq	%rdi, %r13
 262:Src/main.cpp  **** 		{
 1575              		.loc 1 262 21 view .LVU462
 1576 0833 48037D00 		addq	0(%rbp), %rdi
 1577 0837 4C89E6   		movq	%r12, %rsi
 1578 083a E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 1578      00
 1579              	.LVL146:
 262:Src/main.cpp  **** 		{
 1580              		.loc 1 262 3 view .LVU463
 1581 083f 84C0     		testb	%al, %al
 1582 0841 7506     		jne	.L131
 260:Src/main.cpp  **** 	{
 1583              		.loc 1 260 2 is_stmt 1 discriminator 2 view .LVU464
 1584 0843 4883C301 		addq	$1, %rbx
 1585              	.LVL147:
 260:Src/main.cpp  **** 	{
GAS LISTING /tmp/ccZtEYtQ.s 			page 96


 1586              		.loc 1 260 2 is_stmt 0 discriminator 2 view .LVU465
 1587 0847 EBD9     		jmp	.L126
 1588              	.L131:
 264:Src/main.cpp  **** 			break;
 1589              		.loc 1 264 4 is_stmt 1 view .LVU466
 264:Src/main.cpp  **** 			break;
 1590              		.loc 1 264 6 is_stmt 0 view .LVU467
 1591 0849 4C89EF   		movq	%r13, %rdi
 1592 084c 48037D00 		addq	0(%rbp), %rdi
 1593              	.LVL148:
 265:Src/main.cpp  **** 		}
 1594              		.loc 1 265 4 is_stmt 1 view .LVU468
 1595 0850 EB05     		jmp	.L124
 1596              	.LVL149:
 1597              	.L129:
 265:Src/main.cpp  **** 		}
 1598              		.loc 1 265 4 is_stmt 0 view .LVU469
 1599              	.LBE1511:
 259:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1600              		.loc 1 259 19 view .LVU470
 1601 0852 BF000000 		movl	$0, %edi
 1601      00
 1602              	.LVL150:
 1603              	.L124:
 268:Src/main.cpp  **** 		return {0, 0};
 1604              		.loc 1 268 2 is_stmt 1 view .LVU471
 1605 0857 4885FF   		testq	%rdi, %rdi
 1606 085a 740F     		je	.L127
 269:Src/main.cpp  **** 
 1607              		.loc 1 269 3 view .LVU472
 269:Src/main.cpp  **** 
 1608              		.loc 1 269 15 is_stmt 0 view .LVU473
 1609 085c 660FEFC0 		pxor	%xmm0, %xmm0
 1610              	.LVL151:
 1611              	.L128:
 272:Src/main.cpp  **** 
 1612              		.loc 1 272 1 view .LVU474
 1613 0860 4883C408 		addq	$8, %rsp
 1614              		.cfi_remember_state
 1615              		.cfi_def_cfa_offset 40
 1616 0864 5B       		popq	%rbx
 1617              		.cfi_def_cfa_offset 32
 1618              	.LVL152:
 272:Src/main.cpp  **** 
 1619              		.loc 1 272 1 view .LVU475
 1620 0865 5D       		popq	%rbp
 1621              		.cfi_def_cfa_offset 24
 1622              	.LVL153:
 272:Src/main.cpp  **** 
 1623              		.loc 1 272 1 view .LVU476
 1624 0866 415C     		popq	%r12
 1625              		.cfi_def_cfa_offset 16
 1626              	.LVL154:
 272:Src/main.cpp  **** 
 1627              		.loc 1 272 1 view .LVU477
 1628 0868 415D     		popq	%r13
 1629              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccZtEYtQ.s 			page 97


 1630 086a C3       		ret
 1631              	.LVL155:
 1632              	.L127:
 1633              		.cfi_restore_state
 271:Src/main.cpp  **** }
 1634              		.loc 1 271 2 is_stmt 1 view .LVU478
 271:Src/main.cpp  **** }
 1635              		.loc 1 271 29 is_stmt 0 view .LVU479
 1636 086b 4C89E6   		movq	%r12, %rsi
 1637 086e E8000000 		call	_Z15getIntersectionPK8obstaclePK4vect@PLT
 1637      00
 1638              	.LVL156:
 271:Src/main.cpp  **** }
 1639              		.loc 1 271 29 view .LVU480
 1640 0873 EBEB     		jmp	.L128
 1641              		.cfi_endproc
 1642              	.LFE2489:
 1644              		.globl	_Z14getIntersectedPK5arrayPK4vect
 1646              	_Z14getIntersectedPK5arrayPK4vect:
 1647              	.LVL157:
 1648              	.LFB2490:
 276:Src/main.cpp  **** 	struct obstacle *o = NULL;
 1649              		.loc 1 276 1 is_stmt 1 view -0
 1650              		.cfi_startproc
 276:Src/main.cpp  **** 	struct obstacle *o = NULL;
 1651              		.loc 1 276 1 is_stmt 0 view .LVU482
 1652 0875 4156     		pushq	%r14
 1653              		.cfi_def_cfa_offset 16
 1654              		.cfi_offset 14, -16
 1655 0877 4155     		pushq	%r13
 1656              		.cfi_def_cfa_offset 24
 1657              		.cfi_offset 13, -24
 1658 0879 4154     		pushq	%r12
 1659              		.cfi_def_cfa_offset 32
 1660              		.cfi_offset 12, -32
 1661 087b 55       		pushq	%rbp
 1662              		.cfi_def_cfa_offset 40
 1663              		.cfi_offset 6, -40
 1664 087c 53       		pushq	%rbx
 1665              		.cfi_def_cfa_offset 48
 1666              		.cfi_offset 3, -48
 1667 087d 4883EC20 		subq	$32, %rsp
 1668              		.cfi_def_cfa_offset 80
 1669 0881 4989FC   		movq	%rdi, %r12
 1670 0884 4989F5   		movq	%rsi, %r13
 276:Src/main.cpp  **** 	struct obstacle *o = NULL;
 1671              		.loc 1 276 1 view .LVU483
 1672 0887 64488B04 		movq	%fs:40, %rax
 1672      25280000 
 1672      00
 1673 0890 48894424 		movq	%rax, 24(%rsp)
 1673      18
 1674 0895 31C0     		xorl	%eax, %eax
 277:Src/main.cpp  **** 	struct coords	inter;
 1675              		.loc 1 277 2 is_stmt 1 view .LVU484
 1676              	.LVL158:
 278:Src/main.cpp  **** 	COORDS_DATATYPE l = INF;
GAS LISTING /tmp/ccZtEYtQ.s 			page 98


 1677              		.loc 1 278 2 view .LVU485
 279:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1678              		.loc 1 279 2 view .LVU486
 279:Src/main.cpp  **** 	for(size_t i = 0; i < dataset->size; i++)
 1679              		.loc 1 279 18 is_stmt 0 view .LVU487
 1680 0897 F30F1005 		movss	.LC16(%rip), %xmm0
 1680      00000000 
 1681 089f F30F5E05 		divss	.LC8(%rip), %xmm0
 1681      00000000 
 1682 08a7 F30F1144 		movss	%xmm0, 12(%rsp)
 1682      240C
 1683              	.LVL159:
 280:Src/main.cpp  **** 	{
 1684              		.loc 1 280 2 is_stmt 1 view .LVU488
 1685              	.LBB1512:
 280:Src/main.cpp  **** 	{
 1686              		.loc 1 280 13 is_stmt 0 view .LVU489
 1687 08ad BB000000 		movl	$0, %ebx
 1687      00
 1688              	.LBE1512:
 277:Src/main.cpp  **** 	struct coords	inter;
 1689              		.loc 1 277 19 view .LVU490
 1690 08b2 41BE0000 		movl	$0, %r14d
 1690      0000
 1691 08b8 EB04     		jmp	.L138
 1692              	.LVL160:
 1693              	.L134:
 1694              	.LBB1514:
 280:Src/main.cpp  **** 	{
 1695              		.loc 1 280 2 is_stmt 1 discriminator 2 view .LVU491
 1696 08ba 4883C301 		addq	$1, %rbx
 1697              	.LVL161:
 1698              	.L138:
 280:Src/main.cpp  **** 	{
 1699              		.loc 1 280 22 discriminator 1 view .LVU492
 1700 08be 49395C24 		cmpq	%rbx, 8(%r12)
 1700      08
 1701 08c3 7667     		jbe	.L132
 1702              	.LBB1513:
 282:Src/main.cpp  **** 		COORDS_DATATYPE _l = getLen(v->c, &inter);
 1703              		.loc 1 282 3 view .LVU493
 282:Src/main.cpp  **** 		COORDS_DATATYPE _l = getLen(v->c, &inter);
 1704              		.loc 1 282 64 is_stmt 0 view .LVU494
 1705 08c5 488D2C5B 		leaq	(%rbx,%rbx,2), %rbp
 1706 08c9 48C1E504 		salq	$4, %rbp
 282:Src/main.cpp  **** 		COORDS_DATATYPE _l = getLen(v->c, &inter);
 1707              		.loc 1 282 68 view .LVU495
 1708 08cd 4889EF   		movq	%rbp, %rdi
 1709 08d0 49033C24 		addq	(%r12), %rdi
 1710 08d4 4C89EE   		movq	%r13, %rsi
 1711 08d7 E8000000 		call	_Z15getIntersectionPK8obstaclePK4vect@PLT
 1711      00
 1712              	.LVL162:
 1713 08dc 660FD644 		movq	%xmm0, 16(%rsp)
 1713      2410
 283:Src/main.cpp  **** 		if(inter.x != -1 && inter.y != -1 && _l < l)
 1714              		.loc 1 283 3 is_stmt 1 view .LVU496
GAS LISTING /tmp/ccZtEYtQ.s 			page 99


 283:Src/main.cpp  **** 		if(inter.x != -1 && inter.y != -1 && _l < l)
 1715              		.loc 1 283 34 is_stmt 0 view .LVU497
 1716 08e2 498B7D00 		movq	0(%r13), %rdi
 283:Src/main.cpp  **** 		if(inter.x != -1 && inter.y != -1 && _l < l)
 1717              		.loc 1 283 30 view .LVU498
 1718 08e6 488D7424 		leaq	16(%rsp), %rsi
 1718      10
 1719 08eb E8000000 		call	_Z6getLenPK6coordsS1_@PLT
 1719      00
 1720              	.LVL163:
 284:Src/main.cpp  **** 		{
 1721              		.loc 1 284 3 is_stmt 1 view .LVU499
 284:Src/main.cpp  **** 		{
 1722              		.loc 1 284 12 is_stmt 0 view .LVU500
 1723 08f0 F30F104C 		movss	16(%rsp), %xmm1
 1723      2410
 284:Src/main.cpp  **** 		{
 1724              		.loc 1 284 3 view .LVU501
 1725 08f6 0F2E0D00 		ucomiss	.LC17(%rip), %xmm1
 1725      000000
 1726 08fd 7A02     		jp	.L140
 1727 08ff 74B9     		je	.L134
 1728              	.L140:
 284:Src/main.cpp  **** 		{
 1729              		.loc 1 284 29 discriminator 1 view .LVU502
 1730 0901 F30F104C 		movss	20(%rsp), %xmm1
 1730      2414
 284:Src/main.cpp  **** 		{
 1731              		.loc 1 284 20 discriminator 1 view .LVU503
 1732 0907 0F2E0D00 		ucomiss	.LC17(%rip), %xmm1
 1732      000000
 1733 090e 7A02     		jp	.L141
 1734 0910 74A8     		je	.L134
 1735              	.L141:
 284:Src/main.cpp  **** 		{
 1736              		.loc 1 284 37 discriminator 2 view .LVU504
 1737 0912 F30F1054 		movss	12(%rsp), %xmm2
 1737      240C
 1738 0918 0F2FD0   		comiss	%xmm0, %xmm2
 1739 091b 769D     		jbe	.L134
 286:Src/main.cpp  **** 			l = _l;
 1740              		.loc 1 286 4 is_stmt 1 view .LVU505
 286:Src/main.cpp  **** 			l = _l;
 1741              		.loc 1 286 6 is_stmt 0 view .LVU506
 1742 091d 4989EE   		movq	%rbp, %r14
 1743              	.LVL164:
 286:Src/main.cpp  **** 			l = _l;
 1744              		.loc 1 286 6 view .LVU507
 1745 0920 4D033424 		addq	(%r12), %r14
 1746              	.LVL165:
 287:Src/main.cpp  **** 		}
 1747              		.loc 1 287 4 is_stmt 1 view .LVU508
 287:Src/main.cpp  **** 		}
 1748              		.loc 1 287 6 is_stmt 0 view .LVU509
 1749 0924 F30F1144 		movss	%xmm0, 12(%rsp)
 1749      240C
 1750 092a EB8E     		jmp	.L134
GAS LISTING /tmp/ccZtEYtQ.s 			page 100


 1751              	.LVL166:
 1752              	.L132:
 287:Src/main.cpp  **** 		}
 1753              		.loc 1 287 6 view .LVU510
 1754              	.LBE1513:
 1755              	.LBE1514:
 291:Src/main.cpp  **** 
 1756              		.loc 1 291 1 view .LVU511
 1757 092c 488B4424 		movq	24(%rsp), %rax
 1757      18
 1758 0931 64483304 		xorq	%fs:40, %rax
 1758      25280000 
 1758      00
 1759 093a 7510     		jne	.L144
 1760 093c 4C89F0   		movq	%r14, %rax
 1761 093f 4883C420 		addq	$32, %rsp
 1762              		.cfi_remember_state
 1763              		.cfi_def_cfa_offset 48
 1764 0943 5B       		popq	%rbx
 1765              		.cfi_def_cfa_offset 40
 1766              	.LVL167:
 291:Src/main.cpp  **** 
 1767              		.loc 1 291 1 view .LVU512
 1768 0944 5D       		popq	%rbp
 1769              		.cfi_def_cfa_offset 32
 1770 0945 415C     		popq	%r12
 1771              		.cfi_def_cfa_offset 24
 1772              	.LVL168:
 291:Src/main.cpp  **** 
 1773              		.loc 1 291 1 view .LVU513
 1774 0947 415D     		popq	%r13
 1775              		.cfi_def_cfa_offset 16
 1776              	.LVL169:
 291:Src/main.cpp  **** 
 1777              		.loc 1 291 1 view .LVU514
 1778 0949 415E     		popq	%r14
 1779              		.cfi_def_cfa_offset 8
 1780              	.LVL170:
 291:Src/main.cpp  **** 
 1781              		.loc 1 291 1 view .LVU515
 1782 094b C3       		ret
 1783              	.LVL171:
 1784              	.L144:
 1785              		.cfi_restore_state
 291:Src/main.cpp  **** 
 1786              		.loc 1 291 1 view .LVU516
 1787 094c E8000000 		call	__stack_chk_fail@PLT
 1787      00
 1788              	.LVL172:
 1789              		.cfi_endproc
 1790              	.LFE2490:
 1792              		.globl	_Z9initPointP10graphPoint
 1794              	_Z9initPointP10graphPoint:
 1795              	.LVL173:
 1796              	.LFB2491:
 332:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1797              		.loc 1 332 1 is_stmt 1 view -0
GAS LISTING /tmp/ccZtEYtQ.s 			page 101


 1798              		.cfi_startproc
 332:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1799              		.loc 1 332 1 is_stmt 0 view .LVU518
 1800 0951 4157     		pushq	%r15
 1801              		.cfi_def_cfa_offset 16
 1802              		.cfi_offset 15, -16
 1803 0953 4156     		pushq	%r14
 1804              		.cfi_def_cfa_offset 24
 1805              		.cfi_offset 14, -24
 1806 0955 4155     		pushq	%r13
 1807              		.cfi_def_cfa_offset 32
 1808              		.cfi_offset 13, -32
 1809 0957 4154     		pushq	%r12
 1810              		.cfi_def_cfa_offset 40
 1811              		.cfi_offset 12, -40
 1812 0959 55       		pushq	%rbp
 1813              		.cfi_def_cfa_offset 48
 1814              		.cfi_offset 6, -48
 1815 095a 53       		pushq	%rbx
 1816              		.cfi_def_cfa_offset 56
 1817              		.cfi_offset 3, -56
 1818 095b 4883EC28 		subq	$40, %rsp
 1819              		.cfi_def_cfa_offset 96
 1820 095f 4989FD   		movq	%rdi, %r13
 332:Src/main.cpp  **** 	struct array* points = getPointsDataSet(&p->c);
 1821              		.loc 1 332 1 view .LVU519
 1822 0962 64488B04 		movq	%fs:40, %rax
 1822      25280000 
 1822      00
 1823 096b 48894424 		movq	%rax, 24(%rsp)
 1823      18
 1824 0970 31C0     		xorl	%eax, %eax
 333:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1825              		.loc 1 333 2 is_stmt 1 view .LVU520
 333:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1826              		.loc 1 333 42 is_stmt 0 view .LVU521
 1827 0972 4C8D6710 		leaq	16(%rdi), %r12
 333:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1828              		.loc 1 333 41 view .LVU522
 1829 0976 4C89E7   		movq	%r12, %rdi
 1830              	.LVL174:
 333:Src/main.cpp  **** 	// cout << "checking point " << p->toString() << endl;
 1831              		.loc 1 333 41 view .LVU523
 1832 0979 E8000000 		call	_Z16getPointsDataSetPK6coords
 1832      00
 1833              	.LVL175:
 1834 097e 4889C5   		movq	%rax, %rbp
 1835              	.LVL176:
 335:Src/main.cpp  **** 	struct coords *tgt;
 1836              		.loc 1 335 2 is_stmt 1 view .LVU524
 335:Src/main.cpp  **** 	struct coords *tgt;
 1837              		.loc 1 335 14 is_stmt 0 view .LVU525
 1838 0981 48C70424 		movq	$0, (%rsp)
 1838      00000000 
 1839 0989 C7442408 		movl	$0x00000000, 8(%rsp)
 1839      00000000 
 1840 0991 C744240C 		movl	$0x00000000, 12(%rsp)
GAS LISTING /tmp/ccZtEYtQ.s 			page 102


 1840      00000000 
 336:Src/main.cpp  **** 	struct graphPoint *currP = 0x00;
 1841              		.loc 1 336 2 is_stmt 1 view .LVU526
 337:Src/main.cpp  **** 	for(int i = 0; i < points->size; i++)
 1842              		.loc 1 337 2 view .LVU527
 1843              	.LVL177:
 338:Src/main.cpp  **** 	{
 1844              		.loc 1 338 2 view .LVU528
 1845              	.LBB1515:
 338:Src/main.cpp  **** 	{
 1846              		.loc 1 338 10 is_stmt 0 view .LVU529
 1847 0999 BB000000 		movl	$0, %ebx
 1847      00
 1848 099e EB0F     		jmp	.L152
 1849              	.LVL178:
 1850              	.L147:
 342:Src/main.cpp  **** 		{
 1851              		.loc 1 342 51 discriminator 3 view .LVU530
 1852 09a0 4889E7   		movq	%rsp, %rdi
 1853 09a3 E8000000 		call	_Z16hasIntersectionsPK4vect
 1853      00
 1854              	.LVL179:
 342:Src/main.cpp  **** 		{
 1855              		.loc 1 342 31 discriminator 3 view .LVU531
 1856 09a8 84C0     		testb	%al, %al
 1857 09aa 7458     		je	.L155
 1858              	.L148:
 338:Src/main.cpp  **** 	{
 1859              		.loc 1 338 2 is_stmt 1 discriminator 2 view .LVU532
 1860 09ac 83C301   		addl	$1, %ebx
 1861              	.LVL180:
 1862              	.L152:
 338:Src/main.cpp  **** 	{
 1863              		.loc 1 338 19 discriminator 1 view .LVU533
 338:Src/main.cpp  **** 	{
 1864              		.loc 1 338 17 is_stmt 0 discriminator 1 view .LVU534
 1865 09af 4863C3   		movslq	%ebx, %rax
 338:Src/main.cpp  **** 	{
 1866              		.loc 1 338 19 discriminator 1 view .LVU535
 1867 09b2 483B4508 		cmpq	8(%rbp), %rax
 1868 09b6 0F83A100 		jnb	.L146
 1868      0000
 340:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1869              		.loc 1 340 3 is_stmt 1 view .LVU536
 340:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1870              		.loc 1 340 51 is_stmt 0 view .LVU537
 1871 09bc 48C1E003 		salq	$3, %rax
 1872 09c0 48034500 		addq	0(%rbp), %rax
 340:Src/main.cpp  **** 		v = createVect(&p->c, &currP->c);
 1873              		.loc 1 340 9 view .LVU538
 1874 09c4 4C8B30   		movq	(%rax), %r14
 1875              	.LVL181:
 341:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1876              		.loc 1 341 3 is_stmt 1 view .LVU539
 341:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1877              		.loc 1 341 25 is_stmt 0 view .LVU540
 1878 09c7 4D8D7E10 		leaq	16(%r14), %r15
GAS LISTING /tmp/ccZtEYtQ.s 			page 103


 341:Src/main.cpp  **** 		if((v.dx != 0 || v.dy != 0) && !hasIntersections(&v) && !isDotInside(&p->c) && !isDotInside(&curr
 1879              		.loc 1 341 34 view .LVU541
 1880 09cb 4C89FE   		movq	%r15, %rsi
 1881 09ce 4C89E7   		movq	%r12, %rdi
 1882 09d1 E8000000 		call	_Z10createVectPK6coordsS1_
 1882      00
 1883              	.LVL182:
 1884 09d6 48890424 		movq	%rax, (%rsp)
 1885 09da 660FD644 		movq	%xmm0, 8(%rsp)
 1885      2408
 342:Src/main.cpp  **** 		{
 1886              		.loc 1 342 3 is_stmt 1 view .LVU542
 342:Src/main.cpp  **** 		{
 1887              		.loc 1 342 9 is_stmt 0 view .LVU543
 1888 09e0 F30F1044 		movss	8(%rsp), %xmm0
 1888      2408
 342:Src/main.cpp  **** 		{
 1889              		.loc 1 342 79 view .LVU544
 1890 09e6 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1890      000000
 1891 09ed 7AB1     		jp	.L147
 1892 09ef 75AF     		jne	.L147
 342:Src/main.cpp  **** 		{
 1893              		.loc 1 342 22 discriminator 2 view .LVU545
 1894 09f1 F30F1044 		movss	12(%rsp), %xmm0
 1894      240C
 342:Src/main.cpp  **** 		{
 1895              		.loc 1 342 17 discriminator 2 view .LVU546
 1896 09f7 0F2E0500 		ucomiss	.LC8(%rip), %xmm0
 1896      000000
 1897 09fe 7AA0     		jp	.L147
 1898 0a00 74AA     		je	.L148
 1899 0a02 EB9C     		jmp	.L147
 1900              	.L155:
 342:Src/main.cpp  **** 		{
 1901              		.loc 1 342 71 discriminator 6 view .LVU547
 1902 0a04 4C89E7   		movq	%r12, %rdi
 1903 0a07 E8000000 		call	_Z11isDotInsidePK6coords
 1903      00
 1904              	.LVL183:
 342:Src/main.cpp  **** 		{
 1905              		.loc 1 342 56 discriminator 6 view .LVU548
 1906 0a0c 84C0     		testb	%al, %al
 1907 0a0e 759C     		jne	.L148
 342:Src/main.cpp  **** 		{
 1908              		.loc 1 342 94 discriminator 8 view .LVU549
 1909 0a10 4C89FF   		movq	%r15, %rdi
 1910 0a13 E8000000 		call	_Z11isDotInsidePK6coords
 1910      00
 1911              	.LVL184:
 342:Src/main.cpp  **** 		{
 1912              		.loc 1 342 79 discriminator 8 view .LVU550
 1913 0a18 84C0     		testb	%al, %al
 1914 0a1a 7590     		jne	.L148
 344:Src/main.cpp  **** 				calculatedPoints++;
 1915              		.loc 1 344 4 is_stmt 1 view .LVU551
 1916 0a1c 49837D08 		cmpq	$0, 8(%r13)
GAS LISTING /tmp/ccZtEYtQ.s 			page 104


 1916      00
 1917 0a21 7508     		jne	.L150
 345:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1918              		.loc 1 345 5 view .LVU552
 345:Src/main.cpp  **** 			if(currP->numOfTargets == 0)
 1919              		.loc 1 345 21 is_stmt 0 view .LVU553
 1920 0a23 48830500 		addq	$1, calculatedPoints(%rip)
 1920      00000001 
 1921              	.L150:
 346:Src/main.cpp  **** 				calculatedPoints++;
 1922              		.loc 1 346 4 is_stmt 1 view .LVU554
 1923 0a2b 49837E08 		cmpq	$0, 8(%r14)
 1923      00
 1924 0a30 7508     		jne	.L151
 347:Src/main.cpp  **** 			addTarget(p, currP);
 1925              		.loc 1 347 5 view .LVU555
 347:Src/main.cpp  **** 			addTarget(p, currP);
 1926              		.loc 1 347 21 is_stmt 0 view .LVU556
 1927 0a32 48830500 		addq	$1, calculatedPoints(%rip)
 1927      00000001 
 1928              	.L151:
 348:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1929              		.loc 1 348 4 is_stmt 1 view .LVU557
 348:Src/main.cpp  **** 			if(currP->numOfTargets == 1)
 1930              		.loc 1 348 13 is_stmt 0 view .LVU558
 1931 0a3a 4C89F6   		movq	%r14, %rsi
 1932 0a3d 4C89EF   		movq	%r13, %rdi
 1933 0a40 E8000000 		call	_Z9addTargetP10graphPointS0_@PLT
 1933      00
 1934              	.LVL185:
 349:Src/main.cpp  **** 				initPoint(currP);
 1935              		.loc 1 349 4 is_stmt 1 view .LVU559
 1936 0a45 49837E08 		cmpq	$1, 8(%r14)
 1936      01
 1937 0a4a 0F855CFF 		jne	.L148
 1937      FFFF
 350:Src/main.cpp  **** 		}
 1938              		.loc 1 350 5 view .LVU560
 350:Src/main.cpp  **** 		}
 1939              		.loc 1 350 14 is_stmt 0 view .LVU561
 1940 0a50 4C89F7   		movq	%r14, %rdi
 1941 0a53 E8000000 		call	_Z9initPointP10graphPoint
 1941      00
 1942              	.LVL186:
 1943 0a58 E94FFFFF 		jmp	.L148
 1943      FF
 1944              	.LVL187:
 1945              	.L146:
 350:Src/main.cpp  **** 		}
 1946              		.loc 1 350 14 view .LVU562
 1947              	.LBE1515:
 353:Src/main.cpp  **** 	// struct obstacle *zeorObst;
 1948              		.loc 1 353 2 is_stmt 1 view .LVU563
 353:Src/main.cpp  **** 	// struct obstacle *zeorObst;
 1949              		.loc 1 353 6 is_stmt 0 view .LVU564
 1950 0a5d 4889EF   		movq	%rbp, %rdi
 1951 0a60 E8000000 		call	free@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 105


 1951      00
 1952              	.LVL188:
 418:Src/main.cpp  **** 
 1953              		.loc 1 418 1 view .LVU565
 1954 0a65 488B4424 		movq	24(%rsp), %rax
 1954      18
 1955 0a6a 64483304 		xorq	%fs:40, %rax
 1955      25280000 
 1955      00
 1956 0a73 750F     		jne	.L156
 1957 0a75 4883C428 		addq	$40, %rsp
 1958              		.cfi_remember_state
 1959              		.cfi_def_cfa_offset 56
 1960 0a79 5B       		popq	%rbx
 1961              		.cfi_def_cfa_offset 48
 1962              	.LVL189:
 418:Src/main.cpp  **** 
 1963              		.loc 1 418 1 view .LVU566
 1964 0a7a 5D       		popq	%rbp
 1965              		.cfi_def_cfa_offset 40
 1966              	.LVL190:
 418:Src/main.cpp  **** 
 1967              		.loc 1 418 1 view .LVU567
 1968 0a7b 415C     		popq	%r12
 1969              		.cfi_def_cfa_offset 32
 1970 0a7d 415D     		popq	%r13
 1971              		.cfi_def_cfa_offset 24
 1972              	.LVL191:
 418:Src/main.cpp  **** 
 1973              		.loc 1 418 1 view .LVU568
 1974 0a7f 415E     		popq	%r14
 1975              		.cfi_def_cfa_offset 16
 1976 0a81 415F     		popq	%r15
 1977              		.cfi_def_cfa_offset 8
 1978 0a83 C3       		ret
 1979              	.LVL192:
 1980              	.L156:
 1981              		.cfi_restore_state
 418:Src/main.cpp  **** 
 1982              		.loc 1 418 1 view .LVU569
 1983 0a84 E8000000 		call	__stack_chk_fail@PLT
 1983      00
 1984              	.LVL193:
 1985              		.cfi_endproc
 1986              	.LFE2491:
 1988              		.globl	_Z9initPointP10graphPointPK6coords
 1990              	_Z9initPointP10graphPointPK6coords:
 1991              	.LVL194:
 1992              	.LFB2492:
 424:Src/main.cpp  **** 	// struct array *obsts = getDataSet(c);
 1993              		.loc 1 424 1 is_stmt 1 view -0
 1994              		.cfi_startproc
 424:Src/main.cpp  **** 	// struct array *obsts = getDataSet(c);
 1995              		.loc 1 424 1 is_stmt 0 view .LVU571
 1996 0a89 4883EC08 		subq	$8, %rsp
 1997              		.cfi_def_cfa_offset 16
 426:Src/main.cpp  **** 	// free(obsts);
GAS LISTING /tmp/ccZtEYtQ.s 			page 106


 1998              		.loc 1 426 2 is_stmt 1 view .LVU572
 426:Src/main.cpp  **** 	// free(obsts);
 1999              		.loc 1 426 11 is_stmt 0 view .LVU573
 2000 0a8d E8000000 		call	_Z9initPointP10graphPoint
 2000      00
 2001              	.LVL195:
 428:Src/main.cpp  **** 
 2002              		.loc 1 428 1 view .LVU574
 2003 0a92 4883C408 		addq	$8, %rsp
 2004              		.cfi_def_cfa_offset 8
 2005 0a96 C3       		ret
 2006              		.cfi_endproc
 2007              	.LFE2492:
 2009              		.section	.rodata.str1.1
 2010              	.LC18:
 2011 0021 57617463 		.string	"Watching corner "
 2011      68696E67 
 2011      20636F72 
 2011      6E657220 
 2011      00
 2012              	.LC19:
 2013 0032 206F6620 		.string	" of obstacle "
 2013      6F627374 
 2013      61636C65 
 2013      2000
 2014              		.text
 2015              		.globl	_Z14initObstCornerPK8obstacleh
 2017              	_Z14initObstCornerPK8obstacleh:
 2018              	.LVL196:
 2019              	.LFB2493:
 432:Src/main.cpp  **** 	cout << "Watching corner " << (int)corner << " of obstacle " << obst << endl;
 2020              		.loc 1 432 1 is_stmt 1 view -0
 2021              		.cfi_startproc
 432:Src/main.cpp  **** 	cout << "Watching corner " << (int)corner << " of obstacle " << obst << endl;
 2022              		.loc 1 432 1 is_stmt 0 view .LVU576
 2023 0a97 4155     		pushq	%r13
 2024              		.cfi_def_cfa_offset 16
 2025              		.cfi_offset 13, -16
 2026 0a99 4154     		pushq	%r12
 2027              		.cfi_def_cfa_offset 24
 2028              		.cfi_offset 12, -24
 2029 0a9b 55       		pushq	%rbp
 2030              		.cfi_def_cfa_offset 32
 2031              		.cfi_offset 6, -32
 2032 0a9c 53       		pushq	%rbx
 2033              		.cfi_def_cfa_offset 40
 2034              		.cfi_offset 3, -40
 2035 0a9d 4883EC08 		subq	$8, %rsp
 2036              		.cfi_def_cfa_offset 48
 2037 0aa1 4989FC   		movq	%rdi, %r12
 2038 0aa4 89F3     		movl	%esi, %ebx
 433:Src/main.cpp  **** 	struct graphPoint *point = getPoint(obst, corner);
 2039              		.loc 1 433 2 is_stmt 1 view .LVU577
 2040              	.LVL197:
 2041              	.LBB1534:
 2042              	.LBI1534:
 565:/usr/include/c++/9.2.0/ostream ****     {
GAS LISTING /tmp/ccZtEYtQ.s 			page 107


 2043              		.loc 3 565 5 view .LVU578
 565:/usr/include/c++/9.2.0/ostream ****     {
 2044              		.loc 3 565 5 is_stmt 0 view .LVU579
 2045              	.LBE1534:
 2046              		.loc 4 335 2 is_stmt 1 view .LVU580
 2047              	.LBB1536:
 2048              	.LBB1535:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2049              		.loc 3 570 18 is_stmt 0 view .LVU581
 2050 0aa6 BA100000 		movl	$16, %edx
 2050      00
 2051 0aab 488D3500 		leaq	.LC18(%rip), %rsi
 2051      000000
 2052              	.LVL198:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2053              		.loc 3 570 18 view .LVU582
 2054 0ab2 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2054      000000
 2055              	.LVL199:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2056              		.loc 3 570 18 view .LVU583
 2057 0ab9 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 2057      00
 2058              	.LVL200:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2059              		.loc 3 570 18 view .LVU584
 2060              	.LBE1535:
 2061              	.LBE1536:
 433:Src/main.cpp  **** 	struct graphPoint *point = getPoint(obst, corner);
 2062              		.loc 1 433 47 view .LVU585
 2063 0abe 0FB6DB   		movzbl	%bl, %ebx
 2064 0ac1 89DE     		movl	%ebx, %esi
 2065 0ac3 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2065      000000
 2066 0aca E8000000 		call	_ZNSolsEi@PLT
 2066      00
 2067              	.LVL201:
 2068 0acf 4889C5   		movq	%rax, %rbp
 2069              	.LVL202:
 2070              	.LBB1537:
 2071              	.LBI1537:
 565:/usr/include/c++/9.2.0/ostream ****     {
 2072              		.loc 3 565 5 is_stmt 1 view .LVU586
 565:/usr/include/c++/9.2.0/ostream ****     {
 2073              		.loc 3 565 5 is_stmt 0 view .LVU587
 2074              	.LBE1537:
 2075              		.loc 4 335 2 is_stmt 1 view .LVU588
 2076              	.LBB1539:
 2077              	.LBB1538:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2078              		.loc 3 570 18 is_stmt 0 view .LVU589
 2079 0ad2 BA0D0000 		movl	$13, %edx
 2079      00
 2080 0ad7 488D3500 		leaq	.LC19(%rip), %rsi
 2080      000000
 2081 0ade 4889C7   		movq	%rax, %rdi
 2082 0ae1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 108


 2082      00
 2083              	.LVL203:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 2084              		.loc 3 570 18 view .LVU590
 2085              	.LBE1538:
 2086              	.LBE1539:
 2087              	.LBB1540:
 2088              	.LBI1540:
 245:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__p); }
 2089              		.loc 3 245 7 is_stmt 1 view .LVU591
 2090              	.LBB1541:
 246:/usr/include/c++/9.2.0/ostream **** 
 2091              		.loc 3 246 29 is_stmt 0 view .LVU592
 2092 0ae6 4C89E6   		movq	%r12, %rsi
 2093 0ae9 4889EF   		movq	%rbp, %rdi
 2094 0aec E8000000 		call	_ZNSo9_M_insertIPKvEERSoT_@PLT
 2094      00
 2095              	.LVL204:
 2096 0af1 4889C5   		movq	%rax, %rbp
 2097              	.LVL205:
 246:/usr/include/c++/9.2.0/ostream **** 
 2098              		.loc 3 246 29 view .LVU593
 2099              	.LBE1541:
 2100              	.LBE1540:
 2101              	.LBB1542:
 2102              	.LBI1542:
 108:/usr/include/c++/9.2.0/ostream ****       {
 2103              		.loc 3 108 7 is_stmt 1 view .LVU594
 2104              	.LBB1543:
 2105              	.LBI1543:
 599:/usr/include/c++/9.2.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 2106              		.loc 3 599 5 view .LVU595
 2107              	.LBB1544:
 600:/usr/include/c++/9.2.0/ostream **** 
 2108              		.loc 3 600 19 is_stmt 0 view .LVU596
 2109 0af4 488B00   		movq	(%rax), %rax
 2110              	.LVL206:
 600:/usr/include/c++/9.2.0/ostream **** 
 2111              		.loc 3 600 19 view .LVU597
 2112 0af7 4889E9   		movq	%rbp, %rcx
 2113 0afa 480348E8 		addq	-24(%rax), %rcx
 2114              	.LVL207:
 2115              	.LBB1545:
 2116              	.LBI1545:
 449:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 2117              		.loc 5 449 7 is_stmt 1 view .LVU598
 2118              	.LBB1546:
 2119              		.loc 5 450 30 is_stmt 0 view .LVU599
 2120 0afe 4C8BA9F0 		movq	240(%rcx), %r13
 2120      000000
 2121              	.LVL208:
 2122              	.LBB1547:
 2123              	.LBI1547:
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
 2124              		.loc 5 47 5 is_stmt 1 view .LVU600
 2125              	.LBB1548:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
GAS LISTING /tmp/ccZtEYtQ.s 			page 109


 2126              		.loc 5 49 7 is_stmt 0 view .LVU601
 2127 0b05 4D85ED   		testq	%r13, %r13
 2128 0b08 744D     		je	.L164
 2129              	.LVL209:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 2130              		.loc 5 49 7 view .LVU602
 2131              	.LBE1548:
 2132              	.LBE1547:
 2133              	.LBB1550:
 2134              	.LBI1550:
 872:/usr/include/c++/9.2.0/bits/locale_facets.h ****       {
 2135              		.loc 6 872 7 is_stmt 1 view .LVU603
 2136              	.LBB1551:
 874:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 2137              		.loc 6 874 2 view .LVU604
 2138 0b0a 41807D38 		cmpb	$0, 56(%r13)
 2138      00
 2139 0b0f 744B     		je	.L161
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 2140              		.loc 6 875 4 view .LVU605
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 2141              		.loc 6 875 51 is_stmt 0 view .LVU606
 2142 0b11 410FB675 		movzbl	67(%r13), %esi
 2142      43
 2143              	.LVL210:
 2144              	.L162:
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 2145              		.loc 6 875 51 view .LVU607
 2146              	.LBE1551:
 2147              	.LBE1550:
 2148              	.LBE1546:
 2149              	.LBE1545:
 600:/usr/include/c++/9.2.0/ostream **** 
 2150              		.loc 3 600 19 view .LVU608
 2151 0b16 400FBEF6 		movsbl	%sil, %esi
 2152 0b1a 4889EF   		movq	%rbp, %rdi
 2153 0b1d E8000000 		call	_ZNSo3putEc@PLT
 2153      00
 2154              	.LVL211:
 2155 0b22 4889C7   		movq	%rax, %rdi
 2156              	.LVL212:
 2157              	.LBB1556:
 2158              	.LBI1556:
 621:/usr/include/c++/9.2.0/ostream ****     { return __os.flush(); }
 2159              		.loc 3 621 5 is_stmt 1 view .LVU609
 2160              	.LBB1557:
 2161              		.loc 3 622 25 is_stmt 0 view .LVU610
 2162 0b25 E8000000 		call	_ZNSo5flushEv@PLT
 2162      00
 2163              	.LVL213:
 2164              		.loc 3 622 25 view .LVU611
 2165              	.LBE1557:
 2166              	.LBE1556:
 2167              	.LBE1544:
 2168              	.LBE1543:
 2169              	.LBE1542:
 434:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
GAS LISTING /tmp/ccZtEYtQ.s 			page 110


 2170              		.loc 1 434 2 is_stmt 1 view .LVU612
 434:Src/main.cpp  **** 	struct coords *c = getCoordsOfCorner(obst, corner);
 2171              		.loc 1 434 37 is_stmt 0 view .LVU613
 2172 0b2a 89DE     		movl	%ebx, %esi
 2173 0b2c 4C89E7   		movq	%r12, %rdi
 2174 0b2f E8000000 		call	_Z8getPointPK8obstacleh@PLT
 2174      00
 2175              	.LVL214:
 2176 0b34 4889C5   		movq	%rax, %rbp
 2177              	.LVL215:
 435:Src/main.cpp  **** 	initPoint(point, c);
 2178              		.loc 1 435 2 is_stmt 1 view .LVU614
 435:Src/main.cpp  **** 	initPoint(point, c);
 2179              		.loc 1 435 38 is_stmt 0 view .LVU615
 2180 0b37 89DE     		movl	%ebx, %esi
 2181 0b39 4C89E7   		movq	%r12, %rdi
 2182 0b3c E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh@PLT
 2182      00
 2183              	.LVL216:
 435:Src/main.cpp  **** 	initPoint(point, c);
 2184              		.loc 1 435 38 view .LVU616
 2185 0b41 4889C6   		movq	%rax, %rsi
 2186              	.LVL217:
 436:Src/main.cpp  **** }
 2187              		.loc 1 436 2 is_stmt 1 view .LVU617
 436:Src/main.cpp  **** }
 2188              		.loc 1 436 11 is_stmt 0 view .LVU618
 2189 0b44 4889EF   		movq	%rbp, %rdi
 2190 0b47 E8000000 		call	_Z9initPointP10graphPointPK6coords
 2190      00
 2191              	.LVL218:
 437:Src/main.cpp  **** 
 2192              		.loc 1 437 1 view .LVU619
 2193 0b4c 4883C408 		addq	$8, %rsp
 2194              		.cfi_remember_state
 2195              		.cfi_def_cfa_offset 40
 2196 0b50 5B       		popq	%rbx
 2197              		.cfi_def_cfa_offset 32
 2198 0b51 5D       		popq	%rbp
 2199              		.cfi_def_cfa_offset 24
 2200              	.LVL219:
 437:Src/main.cpp  **** 
 2201              		.loc 1 437 1 view .LVU620
 2202 0b52 415C     		popq	%r12
 2203              		.cfi_def_cfa_offset 16
 2204              	.LVL220:
 437:Src/main.cpp  **** 
 2205              		.loc 1 437 1 view .LVU621
 2206 0b54 415D     		popq	%r13
 2207              		.cfi_def_cfa_offset 8
 2208 0b56 C3       		ret
 2209              	.LVL221:
 2210              	.L164:
 2211              		.cfi_restore_state
 2212              	.LBB1561:
 2213              	.LBB1560:
 2214              	.LBB1559:
GAS LISTING /tmp/ccZtEYtQ.s 			page 111


 2215              	.LBB1558:
 2216              	.LBB1555:
 2217              	.LBB1553:
 2218              	.LBB1549:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 2219              		.loc 5 50 18 view .LVU622
 2220 0b57 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 2220      00
 2221              	.LVL222:
 2222              	.L161:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 2223              		.loc 5 50 18 view .LVU623
 2224              	.LBE1549:
 2225              	.LBE1553:
 2226              	.LBB1554:
 2227              	.LBB1552:
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 2228              		.loc 6 876 2 is_stmt 1 view .LVU624
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 2229              		.loc 6 876 21 is_stmt 0 view .LVU625
 2230 0b5c 4C89EF   		movq	%r13, %rdi
 2231 0b5f E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 2231      00
 2232              	.LVL223:
 2233              		.loc 6 877 2 is_stmt 1 view .LVU626
 2234              		.loc 6 877 27 is_stmt 0 view .LVU627
 2235 0b64 498B4500 		movq	0(%r13), %rax
 2236              		.loc 6 877 23 view .LVU628
 2237 0b68 BE0A0000 		movl	$10, %esi
 2237      00
 2238 0b6d 4C89EF   		movq	%r13, %rdi
 2239 0b70 FF5030   		call	*48(%rax)
 2240              	.LVL224:
 2241 0b73 89C6     		movl	%eax, %esi
 2242              		.loc 6 877 27 view .LVU629
 2243 0b75 EB9F     		jmp	.L162
 2244              	.LBE1552:
 2245              	.LBE1554:
 2246              	.LBE1555:
 2247              	.LBE1558:
 2248              	.LBE1559:
 2249              	.LBE1560:
 2250              	.LBE1561:
 2251              		.cfi_endproc
 2252              	.LFE2493:
 2254              		.globl	_Z8initObstPK8obstacle
 2256              	_Z8initObstPK8obstacle:
 2257              	.LVL225:
 2258              	.LFB2494:
 442:Src/main.cpp  **** 	for(uint8_t i = 0; i < 4; i++)
 2259              		.loc 1 442 1 is_stmt 1 view -0
 2260              		.cfi_startproc
 442:Src/main.cpp  **** 	for(uint8_t i = 0; i < 4; i++)
 2261              		.loc 1 442 1 is_stmt 0 view .LVU631
 2262 0b77 55       		pushq	%rbp
 2263              		.cfi_def_cfa_offset 16
 2264              		.cfi_offset 6, -16
GAS LISTING /tmp/ccZtEYtQ.s 			page 112


 2265 0b78 53       		pushq	%rbx
 2266              		.cfi_def_cfa_offset 24
 2267              		.cfi_offset 3, -24
 2268 0b79 4883EC08 		subq	$8, %rsp
 2269              		.cfi_def_cfa_offset 32
 2270 0b7d 4889FD   		movq	%rdi, %rbp
 443:Src/main.cpp  **** 		initObstCorner(obst, i);
 2271              		.loc 1 443 2 is_stmt 1 view .LVU632
 2272              	.LVL226:
 2273              	.LBB1562:
 443:Src/main.cpp  **** 		initObstCorner(obst, i);
 2274              		.loc 1 443 14 is_stmt 0 view .LVU633
 2275 0b80 BB000000 		movl	$0, %ebx
 2275      00
 2276 0b85 EB0E     		jmp	.L167
 2277              	.LVL227:
 2278              	.L169:
 444:Src/main.cpp  **** }
 2279              		.loc 1 444 3 is_stmt 1 discriminator 2 view .LVU634
 444:Src/main.cpp  **** }
 2280              		.loc 1 444 17 is_stmt 0 discriminator 2 view .LVU635
 2281 0b87 0FB6F3   		movzbl	%bl, %esi
 2282 0b8a 4889EF   		movq	%rbp, %rdi
 2283 0b8d E8000000 		call	_Z14initObstCornerPK8obstacleh
 2283      00
 2284              	.LVL228:
 443:Src/main.cpp  **** 		initObstCorner(obst, i);
 2285              		.loc 1 443 2 is_stmt 1 discriminator 2 view .LVU636
 2286 0b92 83C301   		addl	$1, %ebx
 2287              	.LVL229:
 2288              	.L167:
 443:Src/main.cpp  **** 		initObstCorner(obst, i);
 2289              		.loc 1 443 23 discriminator 3 view .LVU637
 2290 0b95 80FB03   		cmpb	$3, %bl
 2291 0b98 76ED     		jbe	.L169
 2292              	.LBE1562:
 445:Src/main.cpp  **** 
 2293              		.loc 1 445 1 is_stmt 0 view .LVU638
 2294 0b9a 4883C408 		addq	$8, %rsp
 2295              		.cfi_def_cfa_offset 24
 2296 0b9e 5B       		popq	%rbx
 2297              		.cfi_def_cfa_offset 16
 2298              	.LVL230:
 445:Src/main.cpp  **** 
 2299              		.loc 1 445 1 view .LVU639
 2300 0b9f 5D       		popq	%rbp
 2301              		.cfi_def_cfa_offset 8
 2302              	.LVL231:
 445:Src/main.cpp  **** 
 2303              		.loc 1 445 1 view .LVU640
 2304 0ba0 C3       		ret
 2305              		.cfi_endproc
 2306              	.LFE2494:
 2308              		.globl	_Z9initGraphP10graphPoint
 2310              	_Z9initGraphP10graphPoint:
 2311              	.LVL232:
 2312              	.LFB2495:
GAS LISTING /tmp/ccZtEYtQ.s 			page 113


 450:Src/main.cpp  **** 	struct array *ar = getDataSet(&startp->c);
 2313              		.loc 1 450 1 is_stmt 1 view -0
 2314              		.cfi_startproc
 450:Src/main.cpp  **** 	struct array *ar = getDataSet(&startp->c);
 2315              		.loc 1 450 1 is_stmt 0 view .LVU642
 2316 0ba1 4154     		pushq	%r12
 2317              		.cfi_def_cfa_offset 16
 2318              		.cfi_offset 12, -16
 2319 0ba3 55       		pushq	%rbp
 2320              		.cfi_def_cfa_offset 24
 2321              		.cfi_offset 6, -24
 2322 0ba4 53       		pushq	%rbx
 2323              		.cfi_def_cfa_offset 32
 2324              		.cfi_offset 3, -32
 2325 0ba5 4889FB   		movq	%rdi, %rbx
 451:Src/main.cpp  **** 	// initGraph(ar);
 2326              		.loc 1 451 2 is_stmt 1 view .LVU643
 451:Src/main.cpp  **** 	// initGraph(ar);
 2327              		.loc 1 451 32 is_stmt 0 view .LVU644
 2328 0ba8 488D7F10 		leaq	16(%rdi), %rdi
 2329              	.LVL233:
 451:Src/main.cpp  **** 	// initGraph(ar);
 2330              		.loc 1 451 31 view .LVU645
 2331 0bac E8000000 		call	_Z10getDataSetPK6coords
 2331      00
 2332              	.LVL234:
 2333 0bb1 4989C4   		movq	%rax, %r12
 2334              	.LVL235:
 453:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 2335              		.loc 1 453 2 is_stmt 1 view .LVU646
 453:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 2336              		.loc 1 453 11 is_stmt 0 view .LVU647
 2337 0bb4 4889DF   		movq	%rbx, %rdi
 2338 0bb7 E8000000 		call	_Z9initPointP10graphPoint
 2338      00
 2339              	.LVL236:
 454:Src/main.cpp  **** 	{
 2340              		.loc 1 454 2 is_stmt 1 view .LVU648
 2341              	.LBB1563:
 454:Src/main.cpp  **** 	{
 2342              		.loc 1 454 13 is_stmt 0 view .LVU649
 2343 0bbc BB000000 		movl	$0, %ebx
 2343      00
 2344              	.LVL237:
 454:Src/main.cpp  **** 	{
 2345              		.loc 1 454 13 view .LVU650
 2346 0bc1 EB33     		jmp	.L173
 2347              	.LVL238:
 2348              	.L175:
 458:Src/main.cpp  **** 			ar = getDataSet(&graph[i]->c);
 2349              		.loc 1 458 4 is_stmt 1 view .LVU651
 458:Src/main.cpp  **** 			ar = getDataSet(&graph[i]->c);
 2350              		.loc 1 458 8 is_stmt 0 view .LVU652
 2351 0bc3 4C89E7   		movq	%r12, %rdi
 2352 0bc6 E8000000 		call	free@PLT
 2352      00
 2353              	.LVL239:
GAS LISTING /tmp/ccZtEYtQ.s 			page 114


 459:Src/main.cpp  **** 			initPoint(graph[i]);
 2354              		.loc 1 459 4 is_stmt 1 view .LVU653
 459:Src/main.cpp  **** 			initPoint(graph[i]);
 2355              		.loc 1 459 28 is_stmt 0 view .LVU654
 2356 0bcb 488B0500 		movq	graph(%rip), %rax
 2356      000000
 2357 0bd2 488B3CD8 		movq	(%rax,%rbx,8), %rdi
 459:Src/main.cpp  **** 			initPoint(graph[i]);
 2358              		.loc 1 459 20 view .LVU655
 2359 0bd6 4883C710 		addq	$16, %rdi
 459:Src/main.cpp  **** 			initPoint(graph[i]);
 2360              		.loc 1 459 19 view .LVU656
 2361 0bda E8000000 		call	_Z10getDataSetPK6coords
 2361      00
 2362              	.LVL240:
 2363 0bdf 4989C4   		movq	%rax, %r12
 2364              	.LVL241:
 460:Src/main.cpp  **** 		}
 2365              		.loc 1 460 4 is_stmt 1 view .LVU657
 460:Src/main.cpp  **** 		}
 2366              		.loc 1 460 21 is_stmt 0 view .LVU658
 2367 0be2 48032D00 		addq	graph(%rip), %rbp
 2367      000000
 460:Src/main.cpp  **** 		}
 2368              		.loc 1 460 13 view .LVU659
 2369 0be9 488B7D00 		movq	0(%rbp), %rdi
 2370 0bed E8000000 		call	_Z9initPointP10graphPoint
 2370      00
 2371              	.LVL242:
 2372              	.L172:
 454:Src/main.cpp  **** 	{
 2373              		.loc 1 454 2 is_stmt 1 discriminator 2 view .LVU660
 2374 0bf2 4883C301 		addq	$1, %rbx
 2375              	.LVL243:
 2376              	.L173:
 454:Src/main.cpp  **** 	{
 2377              		.loc 1 454 22 discriminator 1 view .LVU661
 2378 0bf6 48391D00 		cmpq	%rbx, graphSize(%rip)
 2378      000000
 2379 0bfd 761C     		jbe	.L171
 456:Src/main.cpp  **** 		{
 2380              		.loc 1 456 3 view .LVU662
 456:Src/main.cpp  **** 		{
 2381              		.loc 1 456 13 is_stmt 0 view .LVU663
 2382 0bff 488D2CDD 		leaq	0(,%rbx,8), %rbp
 2382      00000000 
 2383 0c07 488B1500 		movq	graph(%rip), %rdx
 2383      000000
 2384 0c0e 488B14DA 		movq	(%rdx,%rbx,8), %rdx
 456:Src/main.cpp  **** 		{
 2385              		.loc 1 456 3 view .LVU664
 2386 0c12 48837A08 		cmpq	$0, 8(%rdx)
 2386      00
 2387 0c17 75D9     		jne	.L172
 2388 0c19 EBA8     		jmp	.L175
 2389              	.L171:
 2390              	.LBE1563:
GAS LISTING /tmp/ccZtEYtQ.s 			page 115


 463:Src/main.cpp  **** }
 2391              		.loc 1 463 2 is_stmt 1 view .LVU665
 463:Src/main.cpp  **** }
 2392              		.loc 1 463 6 is_stmt 0 view .LVU666
 2393 0c1b 4C89E7   		movq	%r12, %rdi
 2394 0c1e E8000000 		call	free@PLT
 2394      00
 2395              	.LVL244:
 464:Src/main.cpp  **** 
 2396              		.loc 1 464 1 view .LVU667
 2397 0c23 5B       		popq	%rbx
 2398              		.cfi_def_cfa_offset 24
 2399              	.LVL245:
 464:Src/main.cpp  **** 
 2400              		.loc 1 464 1 view .LVU668
 2401 0c24 5D       		popq	%rbp
 2402              		.cfi_def_cfa_offset 16
 2403 0c25 415C     		popq	%r12
 2404              		.cfi_def_cfa_offset 8
 2405              	.LVL246:
 464:Src/main.cpp  **** 
 2406              		.loc 1 464 1 view .LVU669
 2407 0c27 C3       		ret
 2408              		.cfi_endproc
 2409              	.LFE2495:
 2411              		.globl	_Z16getCoordsOfPointP10graphPoint
 2413              	_Z16getCoordsOfPointP10graphPoint:
 2414              	.LVL247:
 2415              	.LFB2496:
 474:Src/main.cpp  **** 	return (p->c);
 2416              		.loc 1 474 1 is_stmt 1 view -0
 2417              		.cfi_startproc
 475:Src/main.cpp  **** }
 2418              		.loc 1 475 2 view .LVU671
 475:Src/main.cpp  **** }
 2419              		.loc 1 475 14 is_stmt 0 view .LVU672
 2420 0c28 F30F7E47 		movq	16(%rdi), %xmm0
 2420      10
 476:Src/main.cpp  **** 
 2421              		.loc 1 476 1 view .LVU673
 2422 0c2d C3       		ret
 2423              		.cfi_endproc
 2424              	.LFE2496:
 2426              		.globl	_Z21hasUncalculatedPointsPK10graphPoint
 2428              	_Z21hasUncalculatedPointsPK10graphPoint:
 2429              	.LVL248:
 2430              	.LFB2497:
 483:Src/main.cpp  **** 	for(size_t i = 0; i < (p->numOfTargets); i++)
 2431              		.loc 1 483 1 is_stmt 1 view -0
 2432              		.cfi_startproc
 484:Src/main.cpp  **** 	{
 2433              		.loc 1 484 2 view .LVU675
 2434              	.LBB1564:
 484:Src/main.cpp  **** 	{
 2435              		.loc 1 484 13 is_stmt 0 view .LVU676
 2436 0c2e B8000000 		movl	$0, %eax
 2436      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 116


 2437              	.LVL249:
 2438              	.L179:
 484:Src/main.cpp  **** 	{
 2439              		.loc 1 484 22 is_stmt 1 discriminator 1 view .LVU677
 2440 0c33 48394708 		cmpq	%rax, 8(%rdi)
 2441 0c37 7613     		jbe	.L180
 486:Src/main.cpp  **** 			return true;
 2442              		.loc 1 486 3 view .LVU678
 486:Src/main.cpp  **** 			return true;
 2443              		.loc 1 486 11 is_stmt 0 view .LVU679
 2444 0c39 488B17   		movq	(%rdi), %rdx
 486:Src/main.cpp  **** 			return true;
 2445              		.loc 1 486 20 view .LVU680
 2446 0c3c 488B14C2 		movq	(%rdx,%rax,8), %rdx
 486:Src/main.cpp  **** 			return true;
 2447              		.loc 1 486 3 view .LVU681
 2448 0c40 807A1800 		cmpb	$0, 24(%rdx)
 2449 0c44 740C     		je	.L181
 484:Src/main.cpp  **** 	{
 2450              		.loc 1 484 2 is_stmt 1 discriminator 2 view .LVU682
 2451 0c46 4883C001 		addq	$1, %rax
 2452              	.LVL250:
 484:Src/main.cpp  **** 	{
 2453              		.loc 1 484 2 is_stmt 0 discriminator 2 view .LVU683
 2454 0c4a EBE7     		jmp	.L179
 2455              	.L180:
 484:Src/main.cpp  **** 	{
 2456              		.loc 1 484 2 discriminator 2 view .LVU684
 2457              	.LBE1564:
 489:Src/main.cpp  **** }
 2458              		.loc 1 489 9 view .LVU685
 2459 0c4c B8000000 		movl	$0, %eax
 2459      00
 2460              	.LVL251:
 489:Src/main.cpp  **** }
 2461              		.loc 1 489 9 view .LVU686
 2462 0c51 C3       		ret
 2463              	.LVL252:
 2464              	.L181:
 2465              	.LBB1565:
 487:Src/main.cpp  **** 	}
 2466              		.loc 1 487 11 view .LVU687
 2467 0c52 B8010000 		movl	$1, %eax
 2467      00
 2468              	.LVL253:
 487:Src/main.cpp  **** 	}
 2469              		.loc 1 487 11 view .LVU688
 2470              	.LBE1565:
 490:Src/main.cpp  **** 
 2471              		.loc 1 490 1 view .LVU689
 2472 0c57 C3       		ret
 2473              		.cfi_endproc
 2474              	.LFE2497:
 2476              		.globl	_Z12getMinTargetPK10graphPoint
 2478              	_Z12getMinTargetPK10graphPoint:
 2479              	.LVL254:
 2480              	.LFB2498:
GAS LISTING /tmp/ccZtEYtQ.s 			page 117


 493:Src/main.cpp  **** 	COORDS_DATATYPE w = INF;
 2481              		.loc 1 493 1 is_stmt 1 view -0
 2482              		.cfi_startproc
 494:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 2483              		.loc 1 494 2 view .LVU691
 494:Src/main.cpp  **** 	struct graphPoint * pp = 0;
 2484              		.loc 1 494 18 is_stmt 0 view .LVU692
 2485 0c58 F30F100D 		movss	.LC16(%rip), %xmm1
 2485      00000000 
 2486 0c60 F30F5E0D 		divss	.LC8(%rip), %xmm1
 2486      00000000 
 2487              	.LVL255:
 495:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 2488              		.loc 1 495 2 is_stmt 1 view .LVU693
 496:Src/main.cpp  **** 	{
 2489              		.loc 1 496 2 view .LVU694
 2490              	.LBB1566:
 496:Src/main.cpp  **** 	{
 2491              		.loc 1 496 13 is_stmt 0 view .LVU695
 2492 0c68 B8000000 		movl	$0, %eax
 2492      00
 2493              	.LBE1566:
 495:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 2494              		.loc 1 495 22 view .LVU696
 2495 0c6d B9000000 		movl	$0, %ecx
 2495      00
 2496 0c72 EB04     		jmp	.L185
 2497              	.LVL256:
 2498              	.L184:
 2499              	.LBB1567:
 496:Src/main.cpp  **** 	{
 2500              		.loc 1 496 2 is_stmt 1 discriminator 2 view .LVU697
 2501 0c74 4883C001 		addq	$1, %rax
 2502              	.LVL257:
 2503              	.L185:
 496:Src/main.cpp  **** 	{
 2504              		.loc 1 496 22 discriminator 1 view .LVU698
 2505 0c78 48394708 		cmpq	%rax, 8(%rdi)
 2506 0c7c 761F     		jbe	.L182
 498:Src/main.cpp  **** 		{
 2507              		.loc 1 498 3 view .LVU699
 498:Src/main.cpp  **** 		{
 2508              		.loc 1 498 10 is_stmt 0 view .LVU700
 2509 0c7e 488B17   		movq	(%rdi), %rdx
 498:Src/main.cpp  **** 		{
 2510              		.loc 1 498 19 view .LVU701
 2511 0c81 488B14C2 		movq	(%rdx,%rax,8), %rdx
 498:Src/main.cpp  **** 		{
 2512              		.loc 1 498 3 view .LVU702
 2513 0c85 807A1800 		cmpb	$0, 24(%rdx)
 2514 0c89 75E9     		jne	.L184
 498:Src/main.cpp  **** 		{
 2515              		.loc 1 498 51 discriminator 1 view .LVU703
 2516 0c8b F30F1042 		movss	28(%rdx), %xmm0
 2516      1C
 498:Src/main.cpp  **** 		{
 2517              		.loc 1 498 33 discriminator 1 view .LVU704
GAS LISTING /tmp/ccZtEYtQ.s 			page 118


 2518 0c90 0F2FC8   		comiss	%xmm0, %xmm1
 2519 0c93 72DF     		jb	.L184
 501:Src/main.cpp  **** 		}
 2520              		.loc 1 501 7 view .LVU705
 2521 0c95 4889D1   		movq	%rdx, %rcx
 2522              	.LVL258:
 500:Src/main.cpp  **** 			pp = p->targets[i];
 2523              		.loc 1 500 6 view .LVU706
 2524 0c98 0F28C8   		movaps	%xmm0, %xmm1
 2525              	.LVL259:
 500:Src/main.cpp  **** 			pp = p->targets[i];
 2526              		.loc 1 500 6 view .LVU707
 2527 0c9b EBD7     		jmp	.L184
 2528              	.LVL260:
 2529              	.L182:
 500:Src/main.cpp  **** 			pp = p->targets[i];
 2530              		.loc 1 500 6 view .LVU708
 2531              	.LBE1567:
 505:Src/main.cpp  **** 
 2532              		.loc 1 505 1 view .LVU709
 2533 0c9d 4889C8   		movq	%rcx, %rax
 2534              	.LVL261:
 505:Src/main.cpp  **** 
 2535              		.loc 1 505 1 view .LVU710
 2536 0ca0 C3       		ret
 2537              		.cfi_endproc
 2538              	.LFE2498:
 2540              		.globl	_Z12calculateWaym
 2542              	_Z12calculateWaym:
 2543              	.LVL262:
 2544              	.LFB2499:
 508:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 2545              		.loc 1 508 1 is_stmt 1 view -0
 2546              		.cfi_startproc
 508:Src/main.cpp  **** 	if(graph[index] == NULL || graph[index]->calculated)
 2547              		.loc 1 508 1 is_stmt 0 view .LVU712
 2548 0ca1 4155     		pushq	%r13
 2549              		.cfi_def_cfa_offset 16
 2550              		.cfi_offset 13, -16
 2551 0ca3 4154     		pushq	%r12
 2552              		.cfi_def_cfa_offset 24
 2553              		.cfi_offset 12, -24
 2554 0ca5 55       		pushq	%rbp
 2555              		.cfi_def_cfa_offset 32
 2556              		.cfi_offset 6, -32
 2557 0ca6 53       		pushq	%rbx
 2558              		.cfi_def_cfa_offset 40
 2559              		.cfi_offset 3, -40
 2560 0ca7 4883EC08 		subq	$8, %rsp
 2561              		.cfi_def_cfa_offset 48
 509:Src/main.cpp  **** 		return;
 2562              		.loc 1 509 2 is_stmt 1 view .LVU713
 509:Src/main.cpp  **** 		return;
 2563              		.loc 1 509 16 is_stmt 0 view .LVU714
 2564 0cab 4C8D24FD 		leaq	0(,%rdi,8), %r12
 2564      00000000 
 2565 0cb3 4C89E2   		movq	%r12, %rdx
GAS LISTING /tmp/ccZtEYtQ.s 			page 119


 2566 0cb6 48031500 		addq	graph(%rip), %rdx
 2566      000000
 2567 0cbd 488B02   		movq	(%rdx), %rax
 509:Src/main.cpp  **** 		return;
 2568              		.loc 1 509 2 view .LVU715
 2569 0cc0 4885C0   		testq	%rax, %rax
 2570 0cc3 0F84AD00 		je	.L187
 2570      0000
 2571 0cc9 4989FD   		movq	%rdi, %r13
 509:Src/main.cpp  **** 		return;
 2572              		.loc 1 509 26 discriminator 1 view .LVU716
 2573 0ccc 80781800 		cmpb	$0, 24(%rax)
 2574 0cd0 0F85A000 		jne	.L187
 2574      0000
 511:Src/main.cpp  **** 	
 2575              		.loc 1 511 2 is_stmt 1 view .LVU717
 511:Src/main.cpp  **** 	
 2576              		.loc 1 511 27 is_stmt 0 view .LVU718
 2577 0cd6 C6401801 		movb	$1, 24(%rax)
 513:Src/main.cpp  **** 		return;
 2578              		.loc 1 513 2 is_stmt 1 view .LVU719
 513:Src/main.cpp  **** 		return;
 2579              		.loc 1 513 16 is_stmt 0 view .LVU720
 2580 0cda 488B02   		movq	(%rdx), %rax
 513:Src/main.cpp  **** 		return;
 2581              		.loc 1 513 2 view .LVU721
 2582 0cdd 48837808 		cmpq	$0, 8(%rax)
 2582      00
 2583 0ce2 0F848E00 		je	.L187
 2583      0000
 2584              	.LBB1568:
 519:Src/main.cpp  **** 	{
 2585              		.loc 1 519 13 view .LVU722
 2586 0ce8 BB000000 		movl	$0, %ebx
 2586      00
 2587 0ced EB04     		jmp	.L192
 2588              	.LVL263:
 2589              	.L190:
 519:Src/main.cpp  **** 	{
 2590              		.loc 1 519 2 is_stmt 1 discriminator 2 view .LVU723
 2591 0cef 4883C301 		addq	$1, %rbx
 2592              	.LVL264:
 2593              	.L192:
 519:Src/main.cpp  **** 	{
 2594              		.loc 1 519 22 discriminator 1 view .LVU724
 519:Src/main.cpp  **** 	{
 2595              		.loc 1 519 35 is_stmt 0 discriminator 1 view .LVU725
 2596 0cf3 488B0500 		movq	graph(%rip), %rax
 2596      000000
 2597 0cfa 4A8B3C20 		movq	(%rax,%r12), %rdi
 519:Src/main.cpp  **** 	{
 2598              		.loc 1 519 22 discriminator 1 view .LVU726
 2599 0cfe 48395F08 		cmpq	%rbx, 8(%rdi)
 2600 0d02 7646     		jbe	.L189
 521:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 2601              		.loc 1 521 3 is_stmt 1 view .LVU727
 521:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
GAS LISTING /tmp/ccZtEYtQ.s 			page 120


 2602              		.loc 1 521 34 is_stmt 0 view .LVU728
 2603 0d04 488D04DD 		leaq	0(,%rbx,8), %rax
 2603      00000000 
 2604 0d0c 480307   		addq	(%rdi), %rax
 521:Src/main.cpp  **** 		w = getWayPrice(graph[index], watch);
 2605              		.loc 1 521 9 view .LVU729
 2606 0d0f 488B28   		movq	(%rax), %rbp
 2607              	.LVL265:
 522:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 2608              		.loc 1 522 3 is_stmt 1 view .LVU730
 522:Src/main.cpp  **** 		if(watch->weight > graph[index]->weight + w)
 2609              		.loc 1 522 18 is_stmt 0 view .LVU731
 2610 0d12 4889EE   		movq	%rbp, %rsi
 2611 0d15 E8000000 		call	_Z11getWayPriceP10graphPointS0_@PLT
 2611      00
 2612              	.LVL266:
 523:Src/main.cpp  **** 		{
 2613              		.loc 1 523 3 is_stmt 1 view .LVU732
 523:Src/main.cpp  **** 		{
 2614              		.loc 1 523 13 is_stmt 0 view .LVU733
 2615 0d1a F30F104D 		movss	28(%rbp), %xmm1
 2615      1C
 523:Src/main.cpp  **** 		{
 2616              		.loc 1 523 33 view .LVU734
 2617 0d1f 488B0500 		movq	graph(%rip), %rax
 2617      000000
 2618 0d26 4A8B0420 		movq	(%rax,%r12), %rax
 523:Src/main.cpp  **** 		{
 2619              		.loc 1 523 43 view .LVU735
 2620 0d2a F30F5840 		addss	28(%rax), %xmm0
 2620      1C
 2621              	.LVL267:
 523:Src/main.cpp  **** 		{
 2622              		.loc 1 523 3 view .LVU736
 2623 0d2f 0F2FC8   		comiss	%xmm0, %xmm1
 2624 0d32 76BB     		jbe	.L190
 526:Src/main.cpp  **** 			ways[watch->i] = index;
 2625              		.loc 1 526 4 is_stmt 1 view .LVU737
 526:Src/main.cpp  **** 			ways[watch->i] = index;
 2626              		.loc 1 526 18 is_stmt 0 view .LVU738
 2627 0d34 F30F1145 		movss	%xmm0, 28(%rbp)
 2627      1C
 527:Src/main.cpp  **** 		}
 2628              		.loc 1 527 4 is_stmt 1 view .LVU739
 527:Src/main.cpp  **** 		}
 2629              		.loc 1 527 16 is_stmt 0 view .LVU740
 2630 0d39 488B5520 		movq	32(%rbp), %rdx
 527:Src/main.cpp  **** 		}
 2631              		.loc 1 527 19 view .LVU741
 2632 0d3d 488B0500 		movq	ways(%rip), %rax
 2632      000000
 2633 0d44 4C892CD0 		movq	%r13, (%rax,%rdx,8)
 2634 0d48 EBA5     		jmp	.L190
 2635              	.LVL268:
 2636              	.L189:
 527:Src/main.cpp  **** 		}
 2637              		.loc 1 527 19 view .LVU742
GAS LISTING /tmp/ccZtEYtQ.s 			page 121


 2638              	.LBE1568:
 531:Src/main.cpp  **** 	{
 2639              		.loc 1 531 2 is_stmt 1 view .LVU743
 531:Src/main.cpp  **** 	{
 2640              		.loc 1 531 30 view .LVU744
 531:Src/main.cpp  **** 	{
 2641              		.loc 1 531 42 is_stmt 0 view .LVU745
 2642 0d4a 4C89E0   		movq	%r12, %rax
 2643 0d4d 48030500 		addq	graph(%rip), %rax
 2643      000000
 531:Src/main.cpp  **** 	{
 2644              		.loc 1 531 30 view .LVU746
 2645 0d54 488B18   		movq	(%rax), %rbx
 2646 0d57 4889DF   		movq	%rbx, %rdi
 2647 0d5a E8000000 		call	_Z21hasUncalculatedPointsPK10graphPoint
 2647      00
 2648              	.LVL269:
 2649 0d5f 84C0     		testb	%al, %al
 2650 0d61 7413     		je	.L187
 533:Src/main.cpp  **** 		calculateWay(watch->i);
 2651              		.loc 1 533 3 is_stmt 1 view .LVU747
 533:Src/main.cpp  **** 		calculateWay(watch->i);
 2652              		.loc 1 533 23 is_stmt 0 view .LVU748
 2653 0d63 4889DF   		movq	%rbx, %rdi
 2654 0d66 E8000000 		call	_Z12getMinTargetPK10graphPoint
 2654      00
 2655              	.LVL270:
 534:Src/main.cpp  **** 	}
 2656              		.loc 1 534 3 is_stmt 1 view .LVU749
 534:Src/main.cpp  **** 	}
 2657              		.loc 1 534 15 is_stmt 0 view .LVU750
 2658 0d6b 488B7820 		movq	32(%rax), %rdi
 2659 0d6f E8000000 		call	_Z12calculateWaym
 2659      00
 2660              	.LVL271:
 531:Src/main.cpp  **** 	{
 2661              		.loc 1 531 2 view .LVU751
 2662 0d74 EBD4     		jmp	.L189
 2663              	.LVL272:
 2664              	.L187:
 536:Src/main.cpp  **** 
 2665              		.loc 1 536 1 view .LVU752
 2666 0d76 4883C408 		addq	$8, %rsp
 2667              		.cfi_def_cfa_offset 40
 2668 0d7a 5B       		popq	%rbx
 2669              		.cfi_def_cfa_offset 32
 2670 0d7b 5D       		popq	%rbp
 2671              		.cfi_def_cfa_offset 24
 2672 0d7c 415C     		popq	%r12
 2673              		.cfi_def_cfa_offset 16
 2674 0d7e 415D     		popq	%r13
 2675              		.cfi_def_cfa_offset 8
 2676 0d80 C3       		ret
 2677              		.cfi_endproc
 2678              	.LFE2499:
 2680              		.globl	_Z8drawLineP6coordsS0_
 2682              	_Z8drawLineP6coordsS0_:
GAS LISTING /tmp/ccZtEYtQ.s 			page 122


 2683              	.LVL273:
 2684              	.LFB2500:
 541:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 2685              		.loc 1 541 1 is_stmt 1 view -0
 2686              		.cfi_startproc
 541:Src/main.cpp  **** 	drawLine(start->x, start->y, end->x, end->y);
 2687              		.loc 1 541 1 is_stmt 0 view .LVU754
 2688 0d81 4883EC08 		subq	$8, %rsp
 2689              		.cfi_def_cfa_offset 16
 542:Src/main.cpp  **** }
 2690              		.loc 1 542 2 is_stmt 1 view .LVU755
 542:Src/main.cpp  **** }
 2691              		.loc 1 542 10 is_stmt 0 view .LVU756
 2692 0d85 F30F105E 		movss	4(%rsi), %xmm3
 2692      04
 2693 0d8a F30F1016 		movss	(%rsi), %xmm2
 2694 0d8e F30F104F 		movss	4(%rdi), %xmm1
 2694      04
 2695 0d93 F30F1007 		movss	(%rdi), %xmm0
 2696 0d97 E8000000 		call	_Z8drawLineffff@PLT
 2696      00
 2697              	.LVL274:
 543:Src/main.cpp  **** 
 2698              		.loc 1 543 1 view .LVU757
 2699 0d9c 4883C408 		addq	$8, %rsp
 2700              		.cfi_def_cfa_offset 8
 2701 0da0 C3       		ret
 2702              		.cfi_endproc
 2703              	.LFE2500:
 2705              		.globl	_Z8drawLineP10graphPointS0_
 2707              	_Z8drawLineP10graphPointS0_:
 2708              	.LVL275:
 2709              	.LFB2501:
 546:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 2710              		.loc 1 546 1 is_stmt 1 view -0
 2711              		.cfi_startproc
 546:Src/main.cpp  **** 	drawLine(&start->c, &end->c);
 2712              		.loc 1 546 1 is_stmt 0 view .LVU759
 2713 0da1 4883EC08 		subq	$8, %rsp
 2714              		.cfi_def_cfa_offset 16
 547:Src/main.cpp  **** }
 2715              		.loc 1 547 2 is_stmt 1 view .LVU760
 547:Src/main.cpp  **** }
 2716              		.loc 1 547 10 is_stmt 0 view .LVU761
 2717 0da5 4883C610 		addq	$16, %rsi
 2718              	.LVL276:
 547:Src/main.cpp  **** }
 2719              		.loc 1 547 10 view .LVU762
 2720 0da9 4883C710 		addq	$16, %rdi
 2721              	.LVL277:
 547:Src/main.cpp  **** }
 2722              		.loc 1 547 10 view .LVU763
 2723 0dad E8000000 		call	_Z8drawLineP6coordsS0_
 2723      00
 2724              	.LVL278:
 548:Src/main.cpp  **** 
 2725              		.loc 1 548 1 view .LVU764
GAS LISTING /tmp/ccZtEYtQ.s 			page 123


 2726 0db2 4883C408 		addq	$8, %rsp
 2727              		.cfi_def_cfa_offset 8
 2728 0db6 C3       		ret
 2729              		.cfi_endproc
 2730              	.LFE2501:
 2732              		.globl	_Z9drawEdgesP10graphPoint
 2734              	_Z9drawEdgesP10graphPoint:
 2735              	.LVL279:
 2736              	.LFB2504:
 572:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 2737              		.loc 1 572 1 is_stmt 1 view -0
 2738              		.cfi_startproc
 573:Src/main.cpp  **** 	{
 2739              		.loc 1 573 2 view .LVU766
 2740 0db7 4885FF   		testq	%rdi, %rdi
 2741 0dba 7448     		je	.L203
 572:Src/main.cpp  **** 	if(p == NULL || p->numOfTargets == 0) 
 2742              		.loc 1 572 1 is_stmt 0 discriminator 1 view .LVU767
 2743 0dbc 55       		pushq	%rbp
 2744              		.cfi_def_cfa_offset 16
 2745              		.cfi_offset 6, -16
 2746 0dbd 53       		pushq	%rbx
 2747              		.cfi_def_cfa_offset 24
 2748              		.cfi_offset 3, -24
 2749 0dbe 4883EC08 		subq	$8, %rsp
 2750              		.cfi_def_cfa_offset 32
 2751 0dc2 4889FB   		movq	%rdi, %rbx
 573:Src/main.cpp  **** 	{
 2752              		.loc 1 573 15 discriminator 1 view .LVU768
 2753 0dc5 48837F08 		cmpq	$0, 8(%rdi)
 2753      00
 2754 0dca 7507     		jne	.L206
 2755              	.LVL280:
 2756              	.L199:
 597:Src/main.cpp  **** 
 2757              		.loc 1 597 1 view .LVU769
 2758 0dcc 4883C408 		addq	$8, %rsp
 2759              		.cfi_remember_state
 2760              		.cfi_def_cfa_offset 24
 2761 0dd0 5B       		popq	%rbx
 2762              		.cfi_def_cfa_offset 16
 2763              	.LVL281:
 597:Src/main.cpp  **** 
 2764              		.loc 1 597 1 view .LVU770
 2765 0dd1 5D       		popq	%rbp
 2766              		.cfi_def_cfa_offset 8
 2767 0dd2 C3       		ret
 2768              	.LVL282:
 2769              	.L206:
 2770              		.cfi_restore_state
 592:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 2771              		.loc 1 592 2 is_stmt 1 view .LVU771
 592:Src/main.cpp  **** 	for(size_t i = 0; i < p->numOfTargets; i++)
 2772              		.loc 1 592 12 is_stmt 0 view .LVU772
 2773 0dd3 BFFFFF00 		movl	$65535, %edi
 2773      00
 2774 0dd8 E8000000 		call	_Z10glSetColorj@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 124


 2774      00
 2775              	.LVL283:
 593:Src/main.cpp  **** 	{
 2776              		.loc 1 593 2 is_stmt 1 view .LVU773
 2777              	.LBB1569:
 593:Src/main.cpp  **** 	{
 2778              		.loc 1 593 13 is_stmt 0 view .LVU774
 2779 0ddd BD000000 		movl	$0, %ebp
 2779      00
 2780 0de2 EB18     		jmp	.L201
 2781              	.LVL284:
 2782              	.L207:
 595:Src/main.cpp  **** 	}
 2783              		.loc 1 595 3 is_stmt 1 discriminator 2 view .LVU775
 595:Src/main.cpp  **** 	}
 2784              		.loc 1 595 23 is_stmt 0 discriminator 2 view .LVU776
 2785 0de4 488B03   		movq	(%rbx), %rax
 595:Src/main.cpp  **** 	}
 2786              		.loc 1 595 32 discriminator 2 view .LVU777
 2787 0de7 488B34E8 		movq	(%rax,%rbp,8), %rsi
 595:Src/main.cpp  **** 	}
 2788              		.loc 1 595 11 discriminator 2 view .LVU778
 2789 0deb 4883C610 		addq	$16, %rsi
 2790 0def 488D7B10 		leaq	16(%rbx), %rdi
 2791 0df3 E8000000 		call	_Z8drawLineP6coordsS0_
 2791      00
 2792              	.LVL285:
 593:Src/main.cpp  **** 	{
 2793              		.loc 1 593 2 is_stmt 1 discriminator 2 view .LVU779
 2794 0df8 4883C501 		addq	$1, %rbp
 2795              	.LVL286:
 2796              	.L201:
 593:Src/main.cpp  **** 	{
 2797              		.loc 1 593 22 discriminator 3 view .LVU780
 2798 0dfc 48396B08 		cmpq	%rbp, 8(%rbx)
 2799 0e00 77E2     		ja	.L207
 2800 0e02 EBC8     		jmp	.L199
 2801              	.LVL287:
 2802              	.L203:
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_restore 3
 2805              		.cfi_restore 6
 593:Src/main.cpp  **** 	{
 2806              		.loc 1 593 22 is_stmt 0 discriminator 3 view .LVU781
 2807 0e04 C3       		ret
 2808              	.LBE1569:
 2809              		.cfi_endproc
 2810              	.LFE2504:
 2812              		.globl	_Z7drawWaymm
 2814              	_Z7drawWaymm:
 2815              	.LVL288:
 2816              	.LFB2506:
 616:Src/main.cpp  **** 	size_t curr = pointNum;
 2817              		.loc 1 616 1 is_stmt 1 view -0
 2818              		.cfi_startproc
 616:Src/main.cpp  **** 	size_t curr = pointNum;
 2819              		.loc 1 616 1 is_stmt 0 view .LVU783
GAS LISTING /tmp/ccZtEYtQ.s 			page 125


 2820 0e05 55       		pushq	%rbp
 2821              		.cfi_def_cfa_offset 16
 2822              		.cfi_offset 6, -16
 2823 0e06 53       		pushq	%rbx
 2824              		.cfi_def_cfa_offset 24
 2825              		.cfi_offset 3, -24
 2826 0e07 4883EC08 		subq	$8, %rsp
 2827              		.cfi_def_cfa_offset 32
 2828 0e0b 4889F5   		movq	%rsi, %rbp
 617:Src/main.cpp  **** 	while(curr != target)
 2829              		.loc 1 617 2 is_stmt 1 view .LVU784
 2830              	.LVL289:
 2831              	.L210:
 618:Src/main.cpp  **** 	{
 2832              		.loc 1 618 2 view .LVU785
 618:Src/main.cpp  **** 	{
 2833              		.loc 1 618 13 view .LVU786
 2834 0e0e 4839EF   		cmpq	%rbp, %rdi
 2835 0e11 7433     		je	.L208
 620:Src/main.cpp  **** 		curr = ways[curr];
 2836              		.loc 1 620 3 view .LVU787
 620:Src/main.cpp  **** 		curr = ways[curr];
 2837              		.loc 1 620 41 is_stmt 0 view .LVU788
 2838 0e13 488B0500 		movq	graph(%rip), %rax
 2838      000000
 620:Src/main.cpp  **** 		curr = ways[curr];
 2839              		.loc 1 620 40 view .LVU789
 2840 0e1a 488D1CFD 		leaq	0(,%rdi,8), %rbx
 2840      00000000 
 2841 0e22 488B1500 		movq	ways(%rip), %rdx
 2841      000000
 2842 0e29 488B14FA 		movq	(%rdx,%rdi,8), %rdx
 620:Src/main.cpp  **** 		curr = ways[curr];
 2843              		.loc 1 620 11 view .LVU790
 2844 0e2d 488B34D0 		movq	(%rax,%rdx,8), %rsi
 2845 0e31 488B3C18 		movq	(%rax,%rbx), %rdi
 2846              	.LVL290:
 620:Src/main.cpp  **** 		curr = ways[curr];
 2847              		.loc 1 620 11 view .LVU791
 2848 0e35 E8000000 		call	_Z8drawLineP10graphPointS0_
 2848      00
 2849              	.LVL291:
 621:Src/main.cpp  **** 	}
 2850              		.loc 1 621 3 is_stmt 1 view .LVU792
 621:Src/main.cpp  **** 	}
 2851              		.loc 1 621 19 is_stmt 0 view .LVU793
 2852 0e3a 48031D00 		addq	ways(%rip), %rbx
 2852      000000
 621:Src/main.cpp  **** 	}
 2853              		.loc 1 621 8 view .LVU794
 2854 0e41 488B3B   		movq	(%rbx), %rdi
 2855              	.LVL292:
 618:Src/main.cpp  **** 	{
 2856              		.loc 1 618 2 view .LVU795
 2857 0e44 EBC8     		jmp	.L210
 2858              	.L208:
 623:Src/main.cpp  **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 126


 2859              		.loc 1 623 1 view .LVU796
 2860 0e46 4883C408 		addq	$8, %rsp
 2861              		.cfi_def_cfa_offset 24
 2862 0e4a 5B       		popq	%rbx
 2863              		.cfi_def_cfa_offset 16
 2864 0e4b 5D       		popq	%rbp
 2865              		.cfi_def_cfa_offset 8
 2866              	.LVL293:
 623:Src/main.cpp  **** 
 2867              		.loc 1 623 1 view .LVU797
 2868 0e4c C3       		ret
 2869              		.cfi_endproc
 2870              	.LFE2506:
 2872              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 2873              		.align 8
 2874              	.LC20:
 2875 0000 62617369 		.string	"basic_string::_M_construct null not valid"
 2875      635F7374 
 2875      72696E67 
 2875      3A3A5F4D 
 2875      5F636F6E 
 2876              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 2877              		.align 2
 2878              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_i
 2880              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 2881              	.LVL294:
 2882              	.LFB2853:
 2883              		.file 8 "/usr/include/c++/9.2.0/bits/basic_string.tcc"
   1:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 127


  30:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  42:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  44:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  46:/usr/include/c++/9.2.0/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/bits/basic_string.tcc **** {
  48:/usr/include/c++/9.2.0/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  50:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     void
  58:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
  61:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	return;
  63:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  64:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  66:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (_M_is_local())
  67:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  69:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  71:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  79:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  81:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  86:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
GAS LISTING /tmp/ccZtEYtQ.s 			page 128


  87:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (length())
  88:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  89:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  94:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  95:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
  96:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	else
  97:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  98:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 105:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       else
 106:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 107:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 110:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 115:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  else
 116:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 117:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 122:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 124:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 125:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 129:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 130:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
 135:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 140:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
GAS LISTING /tmp/ccZtEYtQ.s 			page 129


 144:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 145:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 150:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 151:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // null char_type() element.
 153:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 155:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 156:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 163:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 167:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 170:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 172:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    ++__beg;
 174:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 175:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 176:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 177:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 178:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
 180:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  {
 182:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_dispose();
 187:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  }
 190:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		++__beg;
 192:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
 193:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 194:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 195:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 196:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 197:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 199:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 200:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__len);
GAS LISTING /tmp/ccZtEYtQ.s 			page 130


 201:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 202:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 203:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 2884              		.loc 8 206 7 is_stmt 1 view -0
 2885              		.cfi_startproc
 2886              		.loc 8 206 7 is_stmt 0 view .LVU799
 2887 0000 4154     		pushq	%r12
 2888              		.cfi_def_cfa_offset 16
 2889              		.cfi_offset 12, -16
 2890 0002 55       		pushq	%rbp
 2891              		.cfi_def_cfa_offset 24
 2892              		.cfi_offset 6, -24
 2893 0003 53       		pushq	%rbx
 2894              		.cfi_def_cfa_offset 32
 2895              		.cfi_offset 3, -32
 2896 0004 4883EC10 		subq	$16, %rsp
 2897              		.cfi_def_cfa_offset 48
 2898 0008 4889FD   		movq	%rdi, %rbp
 2899 000b 4989F4   		movq	%rsi, %r12
 2900 000e 4889D3   		movq	%rdx, %rbx
 2901              		.loc 8 206 7 view .LVU800
 2902 0011 64488B04 		movq	%fs:40, %rax
 2902      25280000 
 2902      00
 2903 001a 48894424 		movq	%rax, 8(%rsp)
 2903      08
 2904 001f 31C0     		xorl	%eax, %eax
 207:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 210:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 2905              		.loc 8 211 42 view .LVU801
 2906 0021 4885F6   		testq	%rsi, %rsi
 2907 0024 7429     		je	.L219
 2908              	.L213:
 2909              	.LVL295:
 2910              	.LBB1570:
 2911              	.LBI1570:
 2912              		.file 9 "/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h"
   1:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
GAS LISTING /tmp/ccZtEYtQ.s 			page 131


  15:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  16:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
GAS LISTING /tmp/ccZtEYtQ.s 			page 132


  72:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  77:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
  83:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  86:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	{
  89:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	}
  92:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
  94:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  95:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
 101:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 106:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 107:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 115:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #endif
 121:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 122:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   /**
 123:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 128:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
GAS LISTING /tmp/ccZtEYtQ.s 			page 133


 129:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 132:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   */
 135:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 2913              		.loc 9 138 5 is_stmt 1 view .LVU802
 2914              	.LBB1571:
 2915              	.LBI1571:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2916              		.loc 9 98 5 view .LVU803
 2917              	.LBB1572:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2918              		.loc 9 104 23 is_stmt 0 view .LVU804
 2919 0026 4C29E3   		subq	%r12, %rbx
 2920              	.LVL296:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 2921              		.loc 9 104 23 view .LVU805
 2922              	.LBE1572:
 2923              	.LBE1571:
 2924              	.LBE1570:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 2925              		.loc 8 215 12 view .LVU806
 2926 0029 48891C24 		movq	%rbx, (%rsp)
 216:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 2927              		.loc 8 217 2 view .LVU807
 2928 002d 4883FB0F 		cmpq	$15, %rbx
 2929 0031 772D     		ja	.L220
 2930              	.LVL297:
 2931              	.L214:
 2932              	.LBB1573:
 2933              	.LBI1573:
 2934              		.file 10 "/usr/include/c++/9.2.0/bits/basic_string.h"
   1:/usr/include/c++/9.2.0/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
GAS LISTING /tmp/ccZtEYtQ.s 			page 134


  17:/usr/include/c++/9.2.0/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/9.2.0/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  37:/usr/include/c++/9.2.0/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  43:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  46:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  47:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/9.2.0/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  50:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  51:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/9.2.0/bits/basic_string.h **** {
  54:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
  59:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  62:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  65:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  70:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
GAS LISTING /tmp/ccZtEYtQ.s 			page 135


  74:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
  76:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
  79:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
  85:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/9.2.0/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 100:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 103:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
 104:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 108:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 111:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 112:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 116:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
 125:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 128:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
GAS LISTING /tmp/ccZtEYtQ.s 			page 136


 131:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
 132:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 144:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 145:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 152:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 162:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 163:/usr/include/c++/9.2.0/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 166:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 169:/usr/include/c++/9.2.0/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 171:/usr/include/c++/9.2.0/bits/basic_string.h ****       union
 172:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 173:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 176:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 177:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 181:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 185:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const
 2935              		.loc 10 186 7 is_stmt 1 view .LVU808
GAS LISTING /tmp/ccZtEYtQ.s 			page 137


 2936              	.LBB1574:
 187:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2937              		.loc 10 187 28 is_stmt 0 view .LVU809
 2938 0033 488B7D00 		movq	0(%rbp), %rdi
 2939              	.LVL298:
 2940              		.loc 10 187 28 view .LVU810
 2941              	.LBE1574:
 2942              	.LBE1573:
 2943              	.LBB1575:
 2944              	.LBI1575:
 188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 189:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 197:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 199:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_pointer
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 202:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 207:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 209:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 213:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 219:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 220:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 224:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 226:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 228:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 234:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 138


 235:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 239:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 243:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 246:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/c++/9.2.0/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 249:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 250:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 254:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 257:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 258:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 261:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 263:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
 268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 269:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 272:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 279:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 282:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 283:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 285:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type&
 286:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 289:/usr/include/c++/9.2.0/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
GAS LISTING /tmp/ccZtEYtQ.s 			page 139


 292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 293:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 295:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/usr/include/c++/9.2.0/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/c++/9.2.0/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 308:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 309:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 310:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 312:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
 317:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 319:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 327:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 329:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 334:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 335:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 337:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 343:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
GAS LISTING /tmp/ccZtEYtQ.s 			page 140


 349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 354:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 355:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 357:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 360:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 362:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 364:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 369:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 371:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 372:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
 376:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
 378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 382:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 383:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 386:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 391:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 395:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 396:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 2945              		.loc 10 396 7 is_stmt 1 view .LVU811
 2946              	.LBB1576:
 2947              	.LBI1576:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2948              		.loc 10 346 7 view .LVU812
 2949              	.LBB1577:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2950              		.loc 10 348 2 is_stmt 0 view .LVU813
 2951 0037 4883FB01 		cmpq	$1, %rbx
GAS LISTING /tmp/ccZtEYtQ.s 			page 141


 2952 003b 7441     		je	.L221
 2953              	.LVL299:
 2954              	.LBB1578:
 2955              	.LBI1578:
 336:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 337:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 338:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 341:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 342:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 343:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 349:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 351:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 352:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 353:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 355:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 356:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 357:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 359:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 360:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 2956              		.loc 4 361 7 is_stmt 1 view .LVU814
 2957              	.LBB1579:
 362:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 2958              		.loc 4 363 2 view .LVU815
 2959 003d 4885DB   		testq	%rbx, %rbx
 2960 0040 7443     		je	.L216
 364:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 365:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 2961              		.loc 4 365 2 view .LVU816
 2962              		.loc 4 365 49 is_stmt 0 view .LVU817
 2963 0042 4889DA   		movq	%rbx, %rdx
 2964 0045 4C89E6   		movq	%r12, %rsi
 2965 0048 E8000000 		call	memcpy@PLT
 2965      00
 2966              	.LVL300:
 2967              		.loc 4 365 66 view .LVU818
 2968 004d EB36     		jmp	.L216
 2969              	.LVL301:
 2970              	.L219:
 2971              		.loc 4 365 66 view .LVU819
 2972              	.LBE1579:
 2973              	.LBE1578:
 2974              	.LBE1577:
 2975              	.LBE1576:
 2976              	.LBE1575:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
GAS LISTING /tmp/ccZtEYtQ.s 			page 142


 2977              		.loc 8 211 42 discriminator 1 view .LVU820
 2978 004f 4839D6   		cmpq	%rdx, %rsi
 2979 0052 74D2     		je	.L213
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2980              		.loc 8 212 28 view .LVU821
 2981 0054 488D3D00 		leaq	.LC20(%rip), %rdi
 2981      000000
 2982              	.LVL302:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2983              		.loc 8 212 28 view .LVU822
 2984 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 2984      00
 2985              	.LVL303:
 2986              	.L220:
 218:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 2987              		.loc 8 219 6 view .LVU823
 2988 0060 4889E6   		movq	%rsp, %rsi
 2989              	.LVL304:
 2990              		.loc 8 219 6 view .LVU824
 2991 0063 BA000000 		movl	$0, %edx
 2991      00
 2992              	.LVL305:
 2993              		.loc 8 219 6 view .LVU825
 2994 0068 4889EF   		movq	%rbp, %rdi
 2995              	.LVL306:
 2996              		.loc 8 219 6 view .LVU826
 2997 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 2997      00
 2998              	.LVL307:
 2999              	.LBB1584:
 3000              	.LBI1584:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3001              		.loc 10 178 7 is_stmt 1 view .LVU827
 3002              	.LBB1585:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3003              		.loc 10 179 9 is_stmt 0 view .LVU828
 3004 0070 48894500 		movq	%rax, 0(%rbp)
 3005              	.LVL308:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3006              		.loc 10 179 9 view .LVU829
 3007              	.LBE1585:
 3008              	.LBE1584:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3009              		.loc 8 220 6 view .LVU830
 3010 0074 488B0424 		movq	(%rsp), %rax
 3011              	.LVL309:
 3012              	.LBB1586:
 3013              	.LBI1586:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3014              		.loc 10 210 7 is_stmt 1 view .LVU831
 3015              	.LBB1587:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3016              		.loc 10 211 9 is_stmt 0 view .LVU832
 3017 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3018              		.loc 10 211 45 view .LVU833
GAS LISTING /tmp/ccZtEYtQ.s 			page 143


 3019 007c EBB5     		jmp	.L214
 3020              	.LVL310:
 3021              	.L221:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3022              		.loc 10 211 45 view .LVU834
 3023              	.LBE1587:
 3024              	.LBE1586:
 3025              	.LBB1588:
 3026              	.LBB1583:
 3027              	.LBB1582:
 3028              	.LBB1580:
 3029              	.LBI1580:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3030              		.loc 4 299 7 is_stmt 1 view .LVU835
 3031              	.LBB1581:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3032              		.loc 4 300 9 view .LVU836
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3033              		.loc 4 300 16 is_stmt 0 view .LVU837
 3034 007e 410FB604 		movzbl	(%r12), %eax
 3034      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3035              		.loc 4 300 14 view .LVU838
 3036 0083 8807     		movb	%al, (%rdi)
 3037              	.LVL311:
 3038              	.L216:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3039              		.loc 4 300 14 view .LVU839
 3040              	.LBE1581:
 3041              	.LBE1580:
 3042              	.LBE1582:
 3043              	.LBE1583:
 3044              	.LBE1588:
 221:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 222:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 223:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 225:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 227:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 228:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 229:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 231:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 3045              		.loc 8 232 2 view .LVU840
 3046 0085 488B0424 		movq	(%rsp), %rax
 3047              	.LVL312:
 3048              	.LBB1589:
 3049              	.LBI1589:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3050              		.loc 10 214 7 is_stmt 1 view .LVU841
 3051              	.LBB1590:
 3052              	.LBB1591:
 3053              	.LBI1591:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 3054              		.loc 10 182 7 view .LVU842
GAS LISTING /tmp/ccZtEYtQ.s 			page 144


 3055              	.LBB1592:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3056              		.loc 10 183 9 is_stmt 0 view .LVU843
 3057 0089 48894508 		movq	%rax, 8(%rbp)
 3058              	.LVL313:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3059              		.loc 10 183 9 view .LVU844
 3060              	.LBE1592:
 3061              	.LBE1591:
 3062              	.LBB1593:
 3063              	.LBI1593:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3064              		.loc 10 186 7 is_stmt 1 view .LVU845
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3065              		.loc 10 186 7 is_stmt 0 view .LVU846
 3066              	.LBE1593:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3067              		.loc 10 217 31 view .LVU847
 3068 008d 48034500 		addq	0(%rbp), %rax
 3069              	.LVL314:
 3070              	.LBB1594:
 3071              	.LBI1594:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3072              		.loc 4 299 7 is_stmt 1 view .LVU848
 3073              	.LBB1595:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3074              		.loc 4 300 9 view .LVU849
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3075              		.loc 4 300 14 is_stmt 0 view .LVU850
 3076 0091 C60000   		movb	$0, (%rax)
 3077              	.LVL315:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3078              		.loc 4 300 14 view .LVU851
 3079              	.LBE1595:
 3080              	.LBE1594:
 3081              	.LBE1590:
 3082              	.LBE1589:
 233:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 3083              		.loc 8 233 7 view .LVU852
 3084 0094 488B4424 		movq	8(%rsp), %rax
 3084      08
 3085 0099 64483304 		xorq	%fs:40, %rax
 3085      25280000 
 3085      00
 3086 00a2 7509     		jne	.L222
 3087 00a4 4883C410 		addq	$16, %rsp
 3088              		.cfi_remember_state
 3089              		.cfi_def_cfa_offset 32
 3090 00a8 5B       		popq	%rbx
 3091              		.cfi_def_cfa_offset 24
 3092 00a9 5D       		popq	%rbp
 3093              		.cfi_def_cfa_offset 16
 3094              	.LVL316:
 3095              		.loc 8 233 7 view .LVU853
 3096 00aa 415C     		popq	%r12
 3097              		.cfi_def_cfa_offset 8
 3098              	.LVL317:
GAS LISTING /tmp/ccZtEYtQ.s 			page 145


 3099              		.loc 8 233 7 view .LVU854
 3100 00ac C3       		ret
 3101              	.LVL318:
 3102              	.L222:
 3103              		.cfi_restore_state
 3104              		.loc 8 233 7 view .LVU855
 3105 00ad E8000000 		call	__stack_chk_fail@PLT
 3105      00
 3106              	.LVL319:
 3107              		.cfi_endproc
 3108              	.LFE2853:
 3110              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20
 3111              		.align 2
 3112              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_i
 3114              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator
 3115              	.LVL320:
 3116              	.LFB2854:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3117              		.loc 8 206 7 is_stmt 1 view -0
 3118              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3119              		.loc 8 206 7 is_stmt 0 view .LVU857
 3120 0000 4154     		pushq	%r12
 3121              		.cfi_def_cfa_offset 16
 3122              		.cfi_offset 12, -16
 3123 0002 55       		pushq	%rbp
 3124              		.cfi_def_cfa_offset 24
 3125              		.cfi_offset 6, -24
 3126 0003 53       		pushq	%rbx
 3127              		.cfi_def_cfa_offset 32
 3128              		.cfi_offset 3, -32
 3129 0004 4883EC10 		subq	$16, %rsp
 3130              		.cfi_def_cfa_offset 48
 3131 0008 4889FD   		movq	%rdi, %rbp
 3132 000b 4989F4   		movq	%rsi, %r12
 3133 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3134              		.loc 8 206 7 view .LVU858
 3135 0011 64488B04 		movq	%fs:40, %rax
 3135      25280000 
 3135      00
 3136 001a 48894424 		movq	%rax, 8(%rsp)
 3136      08
 3137 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3138              		.loc 8 211 42 view .LVU859
 3139 0021 4885F6   		testq	%rsi, %rsi
 3140 0024 742D     		je	.L230
 3141              	.L224:
 3142              	.LVL321:
 3143              	.LBB1596:
 3144              	.LBI1596:
 3145              		.loc 9 138 5 is_stmt 1 view .LVU860
 3146              	.LBB1597:
 3147              	.LBI1597:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 3148              		.loc 9 98 5 view .LVU861
GAS LISTING /tmp/ccZtEYtQ.s 			page 146


 3149              	.LBB1598:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3150              		.loc 9 104 21 is_stmt 0 view .LVU862
 3151 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3152              		.loc 9 104 23 view .LVU863
 3153 0029 48C1FB02 		sarq	$2, %rbx
 3154              	.LVL322:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 3155              		.loc 9 104 23 view .LVU864
 3156              	.LBE1598:
 3157              	.LBE1597:
 3158              	.LBE1596:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 3159              		.loc 8 215 12 view .LVU865
 3160 002d 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 3161              		.loc 8 217 2 view .LVU866
 3162 0031 4883FB03 		cmpq	$3, %rbx
 3163 0035 772D     		ja	.L231
 3164              	.LVL323:
 3165              	.L225:
 3166              	.LBB1599:
 3167              	.LBI1599:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3168              		.loc 10 186 7 is_stmt 1 view .LVU867
 3169              	.LBB1600:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3170              		.loc 10 187 28 is_stmt 0 view .LVU868
 3171 0037 488B7D00 		movq	0(%rbp), %rdi
 3172              	.LVL324:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3173              		.loc 10 187 28 view .LVU869
 3174              	.LBE1600:
 3175              	.LBE1599:
 3176              	.LBB1601:
 3177              	.LBI1601:
 3178              		.loc 10 396 7 is_stmt 1 view .LVU870
 3179              	.LBB1602:
 3180              	.LBI1602:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3181              		.loc 10 346 7 view .LVU871
 3182              	.LBB1603:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3183              		.loc 10 348 2 is_stmt 0 view .LVU872
 3184 003b 4883FB01 		cmpq	$1, %rbx
 3185 003f 7441     		je	.L232
 3186              	.LVL325:
 3187              	.LBB1604:
 3188              	.LBI1604:
 366:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 367:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 368:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 369:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, size_t __n, char_type __a)
 370:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 371:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 372:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s;
GAS LISTING /tmp/ccZtEYtQ.s 			page 147


 373:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memset(__s, __a, __n));
 374:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 375:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 376:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 377:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c) _GLIBCXX_NOEXCEPT
 378:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 379:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 380:/usr/include/c++/9.2.0/bits/char_traits.h ****       // To keep both the byte 0xff and the eof symbol 0xffffffff
 381:/usr/include/c++/9.2.0/bits/char_traits.h ****       // from ending up as 0xffffffff.
 382:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 383:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(static_cast<unsigned char>(__c)); }
 385:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 386:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 387:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2) _GLIBCXX_NOEXCEPT
 388:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 389:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 391:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof() _GLIBCXX_NOEXCEPT
 392:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 393:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 394:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 395:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c) _GLIBCXX_NOEXCEPT
 396:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return (__c == eof()) ? 0 : __c; }
 397:/usr/include/c++/9.2.0/bits/char_traits.h ****   };
 398:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 400:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_USE_WCHAR_T
 401:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.2  char_traits specializations
 402:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 403:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<wchar_t>
 404:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 405:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wchar_t           char_type;
 406:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wint_t            int_type;
 407:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 408:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef wstreampos        pos_type;
 409:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 410:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 413:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 414:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 415:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 416:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 417:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 418:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 419:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 420:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 421:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 422:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 424:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 425:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 426:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 427:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 428:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 429:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
GAS LISTING /tmp/ccZtEYtQ.s 			page 148


 430:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 431:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 432:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 433:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 434:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcmp(__s1, __s2, __n);
 435:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 436:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 437:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 439:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 440:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 441:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 442:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 443:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 444:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wcslen(__s);
 445:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 446:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 447:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 448:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 449:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 450:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 451:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 452:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 453:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 454:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 455:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 456:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 457:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 458:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemchr(__s, __a, __n);
 459:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 460:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 461:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 462:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 463:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 464:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 465:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 466:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemmove(__s1, __s2, __n);
 467:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 468:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 469:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 3189              		.loc 4 470 7 is_stmt 1 view .LVU873
 3190              	.LBB1605:
 471:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 3191              		.loc 4 472 2 view .LVU874
 3192 0041 4885DB   		testq	%rbx, %rbx
 3193 0044 7442     		je	.L227
 473:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 474:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return wmemcpy(__s1, __s2, __n);
 3194              		.loc 4 474 2 view .LVU875
 3195              		.loc 4 474 16 is_stmt 0 view .LVU876
 3196 0046 4889DA   		movq	%rbx, %rdx
 3197 0049 4C89E6   		movq	%r12, %rsi
 3198 004c E8000000 		call	wmemcpy@PLT
 3198      00
 3199              	.LVL326:
GAS LISTING /tmp/ccZtEYtQ.s 			page 149


 3200              		.loc 4 474 32 view .LVU877
 3201 0051 EB35     		jmp	.L227
 3202              	.LVL327:
 3203              	.L230:
 3204              		.loc 4 474 32 view .LVU878
 3205              	.LBE1605:
 3206              	.LBE1604:
 3207              	.LBE1603:
 3208              	.LBE1602:
 3209              	.LBE1601:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3210              		.loc 8 211 42 discriminator 1 view .LVU879
 3211 0053 4839D6   		cmpq	%rdx, %rsi
 3212 0056 74CE     		je	.L224
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3213              		.loc 8 212 28 view .LVU880
 3214 0058 488D3D00 		leaq	.LC20(%rip), %rdi
 3214      000000
 3215              	.LVL328:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3216              		.loc 8 212 28 view .LVU881
 3217 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 3217      00
 3218              	.LVL329:
 3219              	.L231:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3220              		.loc 8 219 6 view .LVU882
 3221 0064 4889E6   		movq	%rsp, %rsi
 3222              	.LVL330:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3223              		.loc 8 219 6 view .LVU883
 3224 0067 BA000000 		movl	$0, %edx
 3224      00
 3225              	.LVL331:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3226              		.loc 8 219 6 view .LVU884
 3227 006c 4889EF   		movq	%rbp, %rdi
 3228              	.LVL332:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3229              		.loc 8 219 6 view .LVU885
 3230 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 3230      00
 3231              	.LVL333:
 3232              	.LBB1610:
 3233              	.LBI1610:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3234              		.loc 10 178 7 is_stmt 1 view .LVU886
 3235              	.LBB1611:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3236              		.loc 10 179 9 is_stmt 0 view .LVU887
 3237 0074 48894500 		movq	%rax, 0(%rbp)
 3238              	.LVL334:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3239              		.loc 10 179 9 view .LVU888
 3240              	.LBE1611:
 3241              	.LBE1610:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
GAS LISTING /tmp/ccZtEYtQ.s 			page 150


 3242              		.loc 8 220 6 view .LVU889
 3243 0078 488B0424 		movq	(%rsp), %rax
 3244              	.LVL335:
 3245              	.LBB1612:
 3246              	.LBI1612:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3247              		.loc 10 210 7 is_stmt 1 view .LVU890
 3248              	.LBB1613:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3249              		.loc 10 211 9 is_stmt 0 view .LVU891
 3250 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3251              		.loc 10 211 45 view .LVU892
 3252 0080 EBB5     		jmp	.L225
 3253              	.LVL336:
 3254              	.L232:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3255              		.loc 10 211 45 view .LVU893
 3256              	.LBE1613:
 3257              	.LBE1612:
 3258              	.LBB1614:
 3259              	.LBB1609:
 3260              	.LBB1608:
 3261              	.LBB1606:
 3262              	.LBI1606:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3263              		.loc 4 412 7 is_stmt 1 view .LVU894
 3264              	.LBB1607:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3265              		.loc 4 413 9 view .LVU895
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3266              		.loc 4 413 16 is_stmt 0 view .LVU896
 3267 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3268              		.loc 4 413 14 view .LVU897
 3269 0086 8907     		movl	%eax, (%rdi)
 3270              	.LVL337:
 3271              	.L227:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3272              		.loc 4 413 14 view .LVU898
 3273              	.LBE1607:
 3274              	.LBE1606:
 3275              	.LBE1608:
 3276              	.LBE1609:
 3277              	.LBE1614:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 3278              		.loc 8 232 2 view .LVU899
 3279 0088 488B0424 		movq	(%rsp), %rax
 3280              	.LVL338:
 3281              	.LBB1615:
 3282              	.LBI1615:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3283              		.loc 10 214 7 is_stmt 1 view .LVU900
 3284              	.LBB1616:
 3285              	.LBB1617:
 3286              	.LBI1617:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
GAS LISTING /tmp/ccZtEYtQ.s 			page 151


 3287              		.loc 10 182 7 view .LVU901
 3288              	.LBB1618:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3289              		.loc 10 183 9 is_stmt 0 view .LVU902
 3290 008c 48894508 		movq	%rax, 8(%rbp)
 3291              	.LVL339:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3292              		.loc 10 183 9 view .LVU903
 3293              	.LBE1618:
 3294              	.LBE1617:
 3295              	.LBB1619:
 3296              	.LBI1619:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3297              		.loc 10 186 7 is_stmt 1 view .LVU904
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3298              		.loc 10 186 7 is_stmt 0 view .LVU905
 3299              	.LBE1619:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3300              		.loc 10 217 31 view .LVU906
 3301 0090 48C1E002 		salq	$2, %rax
 3302              	.LVL340:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3303              		.loc 10 217 31 view .LVU907
 3304 0094 48034500 		addq	0(%rbp), %rax
 3305              	.LVL341:
 3306              	.LBB1620:
 3307              	.LBI1620:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 3308              		.loc 4 412 7 is_stmt 1 view .LVU908
 3309              	.LBB1621:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3310              		.loc 4 413 9 view .LVU909
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3311              		.loc 4 413 14 is_stmt 0 view .LVU910
 3312 0098 C7000000 		movl	$0, (%rax)
 3312      0000
 3313              	.LVL342:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 3314              		.loc 4 413 14 view .LVU911
 3315              	.LBE1621:
 3316              	.LBE1620:
 3317              	.LBE1616:
 3318              	.LBE1615:
 3319              		.loc 8 233 7 view .LVU912
 3320 009e 488B4424 		movq	8(%rsp), %rax
 3320      08
 3321 00a3 64483304 		xorq	%fs:40, %rax
 3321      25280000 
 3321      00
 3322 00ac 7509     		jne	.L233
 3323 00ae 4883C410 		addq	$16, %rsp
 3324              		.cfi_remember_state
 3325              		.cfi_def_cfa_offset 32
 3326 00b2 5B       		popq	%rbx
 3327              		.cfi_def_cfa_offset 24
 3328 00b3 5D       		popq	%rbp
 3329              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccZtEYtQ.s 			page 152


 3330              	.LVL343:
 3331              		.loc 8 233 7 view .LVU913
 3332 00b4 415C     		popq	%r12
 3333              		.cfi_def_cfa_offset 8
 3334              	.LVL344:
 3335              		.loc 8 233 7 view .LVU914
 3336 00b6 C3       		ret
 3337              	.LVL345:
 3338              	.L233:
 3339              		.cfi_restore_state
 3340              		.loc 8 233 7 view .LVU915
 3341 00b7 E8000000 		call	__stack_chk_fail@PLT
 3341      00
 3342              	.LVL346:
 3343              		.cfi_endproc
 3344              	.LFE2854:
 3346              		.section	.rodata.str4.4,"aMS",@progbits,4
 3347              		.align 4
 3348              	.LC21:
 3349 0000 3000     		.string	"0"
 3350 0002 00       		.string	""
 3351 0003 00       		.string	""
 3352 0004 00       		.string	""
 3353 0005 00       		.string	""
 3354 0006 00       		.string	""
 3355 0007 00       		.string	""
 3356              		.align 4
 3357              	.LC22:
 3358 0008 3100     		.string	"1"
 3359 000a 00       		.string	""
 3360 000b 00       		.string	""
 3361 000c 00       		.string	""
 3362 000d 00       		.string	""
 3363 000e 00       		.string	""
 3364 000f 00       		.string	""
 3365              		.align 4
 3366              	.LC23:
 3367 0010 3200     		.string	"2"
 3368 0012 00       		.string	""
 3369 0013 00       		.string	""
 3370 0014 00       		.string	""
 3371 0015 00       		.string	""
 3372 0016 00       		.string	""
 3373 0017 00       		.string	""
 3374              		.align 4
 3375              	.LC24:
 3376 0018 3300     		.string	"3"
 3377 001a 00       		.string	""
 3378 001b 00       		.string	""
 3379 001c 00       		.string	""
 3380 001d 00       		.string	""
 3381 001e 00       		.string	""
 3382 001f 00       		.string	""
 3383              		.text
 3384              		.globl	_Z12drawObstaclePK8obstacle
 3386              	_Z12drawObstaclePK8obstacle:
 3387              	.LVL347:
GAS LISTING /tmp/ccZtEYtQ.s 			page 153


 3388              	.LFB2505:
 603:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 3389              		.loc 1 603 1 is_stmt 1 view -0
 3390              		.cfi_startproc
 3391              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 3392              		.cfi_lsda 0x1b,.LLSDA2505
 603:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 3393              		.loc 1 603 1 is_stmt 0 view .LVU917
 3394 0e4d 55       		pushq	%rbp
 3395              		.cfi_def_cfa_offset 16
 3396              		.cfi_offset 6, -16
 3397 0e4e 53       		pushq	%rbx
 3398              		.cfi_def_cfa_offset 24
 3399              		.cfi_offset 3, -24
 3400 0e4f 4883EC48 		subq	$72, %rsp
 3401              		.cfi_def_cfa_offset 96
 3402 0e53 4889FB   		movq	%rdi, %rbx
 603:Src/main.cpp  **** 	// cout << "Draw obst: x=" << o->c->x << ", y=" << o->c->y << ", a=" << o->a << endl;
 3403              		.loc 1 603 1 view .LVU918
 3404 0e56 64488B04 		movq	%fs:40, %rax
 3404      25280000 
 3404      00
 3405 0e5f 48894424 		movq	%rax, 56(%rsp)
 3405      38
 3406 0e64 31C0     		xorl	%eax, %eax
 605:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 3407              		.loc 1 605 2 is_stmt 1 view .LVU919
 605:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 3408              		.loc 1 605 12 is_stmt 0 view .LVU920
 3409 0e66 BF0000FF 		movl	$16711680, %edi
 3409      00
 3410              	.LVL348:
 3411              	.LEHB0:
 605:Src/main.cpp  **** 	drawQuad(o->c->x, o->c->y, o->a);
 3412              		.loc 1 605 12 view .LVU921
 3413 0e6b E8000000 		call	_Z10glSetColorj@PLT
 3413      00
 3414              	.LVL349:
 606:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 3415              		.loc 1 606 2 is_stmt 1 view .LVU922
 606:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 3416              		.loc 1 606 23 is_stmt 0 view .LVU923
 3417 0e70 488B03   		movq	(%rbx), %rax
 606:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 3418              		.loc 1 606 10 view .LVU924
 3419 0e73 F30F1053 		movss	40(%rbx), %xmm2
 3419      28
 3420 0e78 F30F1048 		movss	4(%rax), %xmm1
 3420      04
 3421 0e7d F30F1000 		movss	(%rax), %xmm0
 3422 0e81 E8000000 		call	_Z8drawQuadfff@PLT
 3422      00
 3423              	.LVL350:
 607:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 3424              		.loc 1 607 2 is_stmt 1 view .LVU925
 607:Src/main.cpp  **** 	drawText(L"0", 10, o->c->x, o->c->y);
 3425              		.loc 1 607 12 is_stmt 0 view .LVU926
GAS LISTING /tmp/ccZtEYtQ.s 			page 154


 3426 0e86 BFFFFFFF 		movl	$16777215, %edi
 3426      00
 3427 0e8b E8000000 		call	_Z10glSetColorj@PLT
 3427      00
 3428              	.LVL351:
 608:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 3429              		.loc 1 608 2 is_stmt 1 view .LVU927
 608:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 3430              		.loc 1 608 33 is_stmt 0 view .LVU928
 3431 0e90 488B03   		movq	(%rbx), %rax
 608:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 3432              		.loc 1 608 36 view .LVU929
 3433 0e93 F30F1060 		movss	4(%rax), %xmm4
 3433      04
 3434 0e98 F30F1164 		movss	%xmm4, 8(%rsp)
 3434      2408
 608:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 3435              		.loc 1 608 27 view .LVU930
 3436 0e9e F30F1028 		movss	(%rax), %xmm5
 3437 0ea2 F30F116C 		movss	%xmm5, 12(%rsp)
 3437      240C
 3438              	.LVL352:
 3439              	.LBB1842:
 3440              	.LBI1842:
 3441              		.file 11 "/usr/include/c++/9.2.0/bits/allocator.h"
   1:/usr/include/c++/9.2.0/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/allocator.h **** 
   3:/usr/include/c++/9.2.0/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/allocator.h **** //
   5:/usr/include/c++/9.2.0/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/allocator.h **** 
  11:/usr/include/c++/9.2.0/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/allocator.h **** 
  16:/usr/include/c++/9.2.0/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/allocator.h **** 
  20:/usr/include/c++/9.2.0/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/allocator.h **** 
  25:/usr/include/c++/9.2.0/bits/allocator.h **** /*
  26:/usr/include/c++/9.2.0/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/9.2.0/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/9.2.0/bits/allocator.h ****  *
  29:/usr/include/c++/9.2.0/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/9.2.0/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/9.2.0/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/9.2.0/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
GAS LISTING /tmp/ccZtEYtQ.s 			page 155


  33:/usr/include/c++/9.2.0/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/9.2.0/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/9.2.0/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  37:/usr/include/c++/9.2.0/bits/allocator.h **** 
  38:/usr/include/c++/9.2.0/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/9.2.0/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/9.2.0/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  42:/usr/include/c++/9.2.0/bits/allocator.h **** 
  43:/usr/include/c++/9.2.0/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/9.2.0/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/9.2.0/bits/allocator.h **** 
  46:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/9.2.0/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  51:/usr/include/c++/9.2.0/bits/allocator.h **** 
  52:/usr/include/c++/9.2.0/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/9.2.0/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  56:/usr/include/c++/9.2.0/bits/allocator.h **** 
  57:/usr/include/c++/9.2.0/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/9.2.0/bits/allocator.h **** {
  59:/usr/include/c++/9.2.0/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/9.2.0/bits/allocator.h **** 
  61:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
  62:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @{
  64:/usr/include/c++/9.2.0/bits/allocator.h ****    */
  65:/usr/include/c++/9.2.0/bits/allocator.h **** 
  66:/usr/include/c++/9.2.0/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/9.2.0/bits/allocator.h ****   template<>
  68:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/9.2.0/bits/allocator.h ****     {
  70:/usr/include/c++/9.2.0/bits/allocator.h ****     public:
  71:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/9.2.0/bits/allocator.h **** 
  77:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/9.2.0/bits/allocator.h **** 
  81:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/9.2.0/bits/allocator.h **** 
  86:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/9.2.0/bits/allocator.h **** 
  88:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
GAS LISTING /tmp/ccZtEYtQ.s 			page 156


  90:/usr/include/c++/9.2.0/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/usr/include/c++/9.2.0/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/usr/include/c++/9.2.0/bits/allocator.h **** 
  95:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up>
  96:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  97:/usr/include/c++/9.2.0/bits/allocator.h **** 	destroy(_Up* __p)
  98:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 101:/usr/include/c++/9.2.0/bits/allocator.h ****     };
 102:/usr/include/c++/9.2.0/bits/allocator.h **** 
 103:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
 104:/usr/include/c++/9.2.0/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 106:/usr/include/c++/9.2.0/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/usr/include/c++/9.2.0/bits/allocator.h ****    *  for further details.
 108:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 109:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/usr/include/c++/9.2.0/bits/allocator.h ****    */
 111:/usr/include/c++/9.2.0/bits/allocator.h ****   template<typename _Tp>
 112:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/usr/include/c++/9.2.0/bits/allocator.h ****     {
 114:/usr/include/c++/9.2.0/bits/allocator.h ****    public:
 115:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t     size_type;
 116:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp&       reference;
 120:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp        value_type;
 122:/usr/include/c++/9.2.0/bits/allocator.h **** 
 123:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 124:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
 125:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/usr/include/c++/9.2.0/bits/allocator.h **** 
 127:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/usr/include/c++/9.2.0/bits/allocator.h **** 
 132:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 134:/usr/include/c++/9.2.0/bits/allocator.h **** 
 135:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 3442              		.loc 11 138 7 is_stmt 1 view .LVU931
 3443              	.LBB1843:
 3444              	.LBI1843:
 3445              		.file 12 "/usr/include/c++/9.2.0/ext/new_allocator.h"
   1:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
   3:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/new_allocator.h **** //
GAS LISTING /tmp/ccZtEYtQ.s 			page 157


   5:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  11:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  16:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  20:/usr/include/c++/9.2.0/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  25:/usr/include/c++/9.2.0/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/9.2.0/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/new_allocator.h ****  */
  28:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  29:/usr/include/c++/9.2.0/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/9.2.0/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  32:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  39:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  40:/usr/include/c++/9.2.0/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/9.2.0/ext/new_allocator.h **** {
  42:/usr/include/c++/9.2.0/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  44:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  47:/usr/include/c++/9.2.0/ext/new_allocator.h ****   /**
  48:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  51:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  55:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/9.2.0/ext/new_allocator.h ****    */
  57:/usr/include/c++/9.2.0/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/9.2.0/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/9.2.0/ext/new_allocator.h ****     {
  60:/usr/include/c++/9.2.0/ext/new_allocator.h ****     public:
  61:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef size_t     size_type;
GAS LISTING /tmp/ccZtEYtQ.s 			page 158


  62:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  69:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  73:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  78:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  79:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 3446              		.loc 12 80 7 view .LVU932
 3447              		.loc 12 80 7 is_stmt 0 view .LVU933
 3448              	.LBE1843:
 3449              	.LBE1842:
 3450              	.LBB1844:
 3451              	.LBI1844:
 397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 400:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
 401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 403:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 405:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 410:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 412:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 413:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 414:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 416:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 417:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 420:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 421:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 423:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 424:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 159


 429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 431:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
 432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 436:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 437:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 439:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 440:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 448:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 453:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 461:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 469:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 470:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 471:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 476:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n)
 478:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 480:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 484:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 160


 486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 492:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 500:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 501:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 510:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 515:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 516:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 520:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 3452              		.loc 10 525 7 is_stmt 1 view .LVU934
 3453              	.LBB1845:
 3454              	.LBB1846:
 3455              	.LBB1847:
 3456              	.LBI1847:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3457              		.loc 10 190 7 view .LVU935
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3458              		.loc 10 190 7 is_stmt 0 view .LVU936
 3459              	.LBE1847:
 3460              	.LBB1848:
 3461              	.LBI1848:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3462              		.loc 10 156 2 is_stmt 1 view .LVU937
 3463              	.LBB1849:
 3464              	.LBB1850:
 3465              	.LBB1851:
GAS LISTING /tmp/ccZtEYtQ.s 			page 161


 3466              	.LBI1851:
 139:/usr/include/c++/9.2.0/bits/allocator.h **** 
 140:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 3467              		.loc 11 141 7 view .LVU938
 3468              	.LBB1852:
 3469              	.LBI1852:
  81:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  82:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 3470              		.loc 12 83 7 view .LVU939
 3471              		.loc 12 83 7 is_stmt 0 view .LVU940
 3472              	.LBE1852:
 3473              	.LBE1851:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3474              		.loc 10 157 35 view .LVU941
 3475 0ea8 488D6C24 		leaq	16(%rsp), %rbp
 3475      10
 3476              	.LVL353:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3477              		.loc 10 157 35 view .LVU942
 3478 0ead 488D4424 		leaq	32(%rsp), %rax
 3478      20
 3479              	.LVL354:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3480              		.loc 10 157 35 view .LVU943
 3481 0eb2 48894424 		movq	%rax, 16(%rsp)
 3481      10
 3482              	.LVL355:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3483              		.loc 10 157 35 view .LVU944
 3484              	.LBE1850:
 3485              	.LBE1849:
 3486              	.LBE1848:
 3487              	.LBB1853:
 3488              	.LBI1853:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3489              		.loc 4 438 7 is_stmt 1 view .LVU945
 3490              	.LBB1854:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3491              		.loc 4 444 2 view .LVU946
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3492              		.loc 4 444 15 is_stmt 0 view .LVU947
 3493 0eb7 488D3D00 		leaq	.LC21(%rip), %rdi
 3493      000000
 3494 0ebe E8000000 		call	wcslen@PLT
 3494      00
 3495              	.LVL356:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3496              		.loc 4 444 15 view .LVU948
 3497              	.LBE1854:
 3498              	.LBE1853:
 526:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 3499              		.loc 10 527 9 view .LVU949
 3500 0ec3 488D3500 		leaq	.LC21(%rip), %rsi
 3500      000000
GAS LISTING /tmp/ccZtEYtQ.s 			page 162


 3501 0eca 488D1486 		leaq	(%rsi,%rax,4), %rdx
 3502              	.LVL357:
 3503              	.LBB1855:
 3504              	.LBI1855:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3505              		.loc 10 263 9 is_stmt 1 view .LVU950
 3506              	.LBB1856:
 3507              	.LBB1857:
 3508              	.LBI1857:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3509              		.loc 10 243 9 view .LVU951
 3510              	.LBB1858:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3511              		.loc 10 247 11 is_stmt 0 view .LVU952
 3512 0ece 4889EF   		movq	%rbp, %rdi
 3513 0ed1 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 3513      00
 3514              	.LVL358:
 3515              	.LEHE0:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3516              		.loc 10 247 11 view .LVU953
 3517              	.LBE1858:
 3518              	.LBE1857:
 3519              	.LBE1856:
 3520              	.LBE1855:
 3521              	.LBE1846:
 3522              	.LBE1845:
 3523              	.LBE1844:
 608:Src/main.cpp  **** 	drawText(L"1", 10, o->c->x, o->c->y + o->a);
 3524              		.loc 1 608 10 view .LVU954
 3525 0ed6 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 3525      2408
 3526 0edc F30F2C54 		cvttss2sil	12(%rsp), %edx
 3526      240C
 3527 0ee2 BE0A0000 		movl	$10, %esi
 3527      00
 3528 0ee7 4889EF   		movq	%rbp, %rdi
 3529              	.LEHB1:
 3530 0eea E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 3530      00
 3531              	.LVL359:
 3532              	.LEHE1:
 3533              	.LBB1859:
 3534              	.LBI1859:
 528:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 529:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 535:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 540:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
GAS LISTING /tmp/ccZtEYtQ.s 			page 163


 541:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 544:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 552:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 557:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 560:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 561:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 562:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 566:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__str.length());
 570:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 579:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 587:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 591:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 593:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
GAS LISTING /tmp/ccZtEYtQ.s 			page 164


 598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 607:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 608:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 610:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 611:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 613:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 623:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 625:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 630:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 638:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 648:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
 650:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 653:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 654:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 165


 655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string()
 3535              		.loc 10 657 7 is_stmt 1 view .LVU955
 3536              	.LBB1860:
 3537              	.LBI1860:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3538              		.loc 10 229 7 view .LVU956
 3539              	.LBB1861:
 3540              	.LBB1862:
 3541              	.LBI1862:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3542              		.loc 10 221 7 view .LVU957
 3543              	.LBB1863:
 3544              	.LBI1863:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3545              		.loc 10 186 7 view .LVU958
 3546              	.LBB1864:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3547              		.loc 10 187 28 is_stmt 0 view .LVU959
 3548 0eef 488B7C24 		movq	16(%rsp), %rdi
 3548      10
 3549              	.LVL360:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3550              		.loc 10 187 28 view .LVU960
 3551              	.LBE1864:
 3552              	.LBE1863:
 3553              	.LBB1865:
 3554              	.LBI1865:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3555              		.loc 10 200 7 is_stmt 1 view .LVU961
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3556              		.loc 10 200 7 is_stmt 0 view .LVU962
 3557              	.LBE1865:
 3558              	.LBE1862:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3559              		.loc 10 231 2 view .LVU963
 3560 0ef4 488D4424 		leaq	32(%rsp), %rax
 3560      20
 3561 0ef9 4839C7   		cmpq	%rax, %rdi
 3562 0efc 7405     		je	.L235
 3563              	.LVL361:
 3564              	.LBB1866:
 3565              	.LBI1866:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3566              		.loc 10 236 7 is_stmt 1 view .LVU964
 3567              	.LBB1867:
 3568              	.LBB1868:
 3569              	.LBI1868:
 3570              		.file 13 "/usr/include/c++/9.2.0/bits/alloc_traits.h"
   1:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/alloc_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
GAS LISTING /tmp/ccZtEYtQ.s 			page 166


   8:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  33:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  35:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  41:/usr/include/c++/9.2.0/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/alloc_traits.h **** {
  43:/usr/include/c++/9.2.0/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  45:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   {
  47:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  50:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  55:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
GAS LISTING /tmp/ccZtEYtQ.s 			page 167


  65:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   };
  73:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  74:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  78:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   */
  82:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
  85:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  90:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
  93:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
  95:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  97:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr
 101:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 105:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 111:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 120:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
GAS LISTING /tmp/ccZtEYtQ.s 			page 168


 122:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 124:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 128:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 132:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 135:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 140:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 143:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 145:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 148:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 151:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 153:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 156:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 159:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 161:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 164:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 167:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 169:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 172:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 175:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 178:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 169


 179:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 181:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 184:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 187:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 190:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 193:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 196:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 199:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 202:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 205:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 210:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 217:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 230:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 233:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 170


 236:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 240:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 246:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static
 248:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 255:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 257:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 262:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void
 264:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 268:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 270:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 274:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static size_type
 276:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 278:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	}
 283:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 284:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 286:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 290:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Alloc2
 292:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
GAS LISTING /tmp/ccZtEYtQ.s 			page 171


 293:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a; }
 294:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 295:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 296:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 297:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 298:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 302:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 304:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 308:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 309:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 315:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 316:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 319:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 323:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 324:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 329:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 331:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 332:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 335:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 341:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 346:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
GAS LISTING /tmp/ccZtEYtQ.s 			page 172


 350:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 353:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 354:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 358:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 361:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 362:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 366:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 371:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 374:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 377:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 378:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 382:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 385:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static _Alloc
 386:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     };
 389:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Tp>
 392:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
 394:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
 395:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
 397:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 402:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 405:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = void*;
GAS LISTING /tmp/ccZtEYtQ.s 			page 173


 407:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 408:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 414:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's size type
 415:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 417:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 420:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 426:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 429:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 430:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 432:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 433:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 435:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 436:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 440:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 442:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 446:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 447:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 453:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 454:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 456:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 460:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 461:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
GAS LISTING /tmp/ccZtEYtQ.s 			page 174


 464:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 466:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 468:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 469:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 3571              		.loc 13 469 7 view .LVU965
 3572              	.LBB1869:
 3573              	.LBI1869:
  84:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  85:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  86:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  89:/usr/include/c++/9.2.0/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  91:/usr/include/c++/9.2.0/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  95:/usr/include/c++/9.2.0/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  99:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/usr/include/c++/9.2.0/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 104:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 107:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 110:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 113:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 114:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/usr/include/c++/9.2.0/ext/new_allocator.h ****       }
 116:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 117:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/usr/include/c++/9.2.0/ext/new_allocator.h ****       void
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 3574              		.loc 12 119 7 view .LVU966
 3575              	.LBB1870:
 120:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 121:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 124:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return;
 126:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 127:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 128:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	::operator delete(__p);
 3576              		.loc 12 128 19 is_stmt 0 view .LVU967
GAS LISTING /tmp/ccZtEYtQ.s 			page 175


 3577 0efe E8000000 		call	_ZdlPv@PLT
 3577      00
 3578              	.LVL362:
 3579              	.L235:
 3580              		.loc 12 128 19 view .LVU968
 3581              	.LBE1870:
 3582              	.LBE1869:
 3583              	.LBE1868:
 3584              	.LBE1867:
 3585              	.LBE1866:
 3586              	.LBE1861:
 3587              	.LBE1860:
 3588              	.LBB1871:
 3589              	.LBI1871:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3590              		.loc 10 150 14 is_stmt 1 view .LVU969
 3591              	.LBB1872:
 3592              	.LBI1872:
 142:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/usr/include/c++/9.2.0/bits/allocator.h **** 
 144:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/usr/include/c++/9.2.0/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 148:/usr/include/c++/9.2.0/bits/allocator.h **** 
 149:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 150:/usr/include/c++/9.2.0/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/usr/include/c++/9.2.0/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/usr/include/c++/9.2.0/bits/allocator.h **** 
 153:/usr/include/c++/9.2.0/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 3593              		.loc 11 153 7 view .LVU970
 3594              	.LBB1873:
 3595              	.LBI1873:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3596              		.loc 12 89 7 view .LVU971
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3597              		.loc 12 89 7 is_stmt 0 view .LVU972
 3598              	.LBE1873:
 3599              	.LBE1872:
 3600              	.LBE1871:
 3601              	.LBE1859:
 3602              	.LBB1874:
 3603              	.LBI1874:
 3604              		.loc 11 153 7 is_stmt 1 view .LVU973
 3605              	.LBB1875:
 3606              	.LBI1875:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3607              		.loc 12 89 7 view .LVU974
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3608              		.loc 12 89 7 is_stmt 0 view .LVU975
 3609              	.LBE1875:
 3610              	.LBE1874:
 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3611              		.loc 1 609 2 is_stmt 1 view .LVU976
 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3612              		.loc 1 609 33 is_stmt 0 view .LVU977
 3613 0f03 488B03   		movq	(%rbx), %rax
GAS LISTING /tmp/ccZtEYtQ.s 			page 176


 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3614              		.loc 1 609 43 view .LVU978
 3615 0f06 F30F1043 		movss	40(%rbx), %xmm0
 3615      28
 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3616              		.loc 1 609 38 view .LVU979
 3617 0f0b F30F5840 		addss	4(%rax), %xmm0
 3617      04
 3618 0f10 F30F1144 		movss	%xmm0, 8(%rsp)
 3618      2408
 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3619              		.loc 1 609 27 view .LVU980
 3620 0f16 F30F1030 		movss	(%rax), %xmm6
 3621 0f1a F30F1174 		movss	%xmm6, 12(%rsp)
 3621      240C
 3622              	.LVL363:
 3623              	.LBB1876:
 3624              	.LBI1876:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3625              		.loc 11 138 7 is_stmt 1 view .LVU981
 3626              	.LBB1877:
 3627              	.LBI1877:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3628              		.loc 12 80 7 view .LVU982
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3629              		.loc 12 80 7 is_stmt 0 view .LVU983
 3630              	.LBE1877:
 3631              	.LBE1876:
 3632              	.LBB1878:
 3633              	.LBI1878:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3634              		.loc 10 525 7 is_stmt 1 view .LVU984
 3635              	.LBB1879:
 3636              	.LBB1880:
 3637              	.LBB1881:
 3638              	.LBI1881:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3639              		.loc 10 190 7 view .LVU985
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3640              		.loc 10 190 7 is_stmt 0 view .LVU986
 3641              	.LBE1881:
 3642              	.LBB1882:
 3643              	.LBI1882:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3644              		.loc 10 156 2 is_stmt 1 view .LVU987
 3645              	.LBB1883:
 3646              	.LBB1884:
 3647              	.LBB1885:
 3648              	.LBI1885:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3649              		.loc 11 141 7 view .LVU988
 3650              	.LBB1886:
 3651              	.LBI1886:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3652              		.loc 12 83 7 view .LVU989
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3653              		.loc 12 83 7 is_stmt 0 view .LVU990
GAS LISTING /tmp/ccZtEYtQ.s 			page 177


 3654              	.LBE1886:
 3655              	.LBE1885:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3656              		.loc 10 157 35 view .LVU991
 3657 0f20 488D6C24 		leaq	16(%rsp), %rbp
 3657      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3658              		.loc 10 157 35 view .LVU992
 3659 0f25 488D4424 		leaq	32(%rsp), %rax
 3659      20
 3660              	.LVL364:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3661              		.loc 10 157 35 view .LVU993
 3662 0f2a 48894424 		movq	%rax, 16(%rsp)
 3662      10
 3663              	.LVL365:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3664              		.loc 10 157 35 view .LVU994
 3665              	.LBE1884:
 3666              	.LBE1883:
 3667              	.LBE1882:
 3668              	.LBB1887:
 3669              	.LBI1887:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3670              		.loc 4 438 7 is_stmt 1 view .LVU995
 3671              	.LBB1888:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3672              		.loc 4 444 2 view .LVU996
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3673              		.loc 4 444 15 is_stmt 0 view .LVU997
 3674 0f2f 488D3D00 		leaq	.LC22(%rip), %rdi
 3674      000000
 3675 0f36 E8000000 		call	wcslen@PLT
 3675      00
 3676              	.LVL366:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3677              		.loc 4 444 15 view .LVU998
 3678              	.LBE1888:
 3679              	.LBE1887:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3680              		.loc 10 527 9 view .LVU999
 3681 0f3b 488D3500 		leaq	.LC22(%rip), %rsi
 3681      000000
 3682 0f42 488D1486 		leaq	(%rsi,%rax,4), %rdx
 3683              	.LVL367:
 3684              	.LBB1889:
 3685              	.LBI1889:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3686              		.loc 10 263 9 is_stmt 1 view .LVU1000
 3687              	.LBB1890:
 3688              	.LBB1891:
 3689              	.LBI1891:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3690              		.loc 10 243 9 view .LVU1001
 3691              	.LBB1892:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3692              		.loc 10 247 11 is_stmt 0 view .LVU1002
GAS LISTING /tmp/ccZtEYtQ.s 			page 178


 3693 0f46 4889EF   		movq	%rbp, %rdi
 3694              	.LEHB2:
 3695 0f49 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 3695      00
 3696              	.LVL368:
 3697              	.LEHE2:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3698              		.loc 10 247 11 view .LVU1003
 3699              	.LBE1892:
 3700              	.LBE1891:
 3701              	.LBE1890:
 3702              	.LBE1889:
 3703              	.LBE1880:
 3704              	.LBE1879:
 3705              	.LBE1878:
 609:Src/main.cpp  **** 	drawText(L"2", 10, o->c->x + o->a, o->c->y + o->a);
 3706              		.loc 1 609 10 view .LVU1004
 3707 0f4e F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 3707      2408
 3708 0f54 F30F2C54 		cvttss2sil	12(%rsp), %edx
 3708      240C
 3709 0f5a BE0A0000 		movl	$10, %esi
 3709      00
 3710 0f5f 4889EF   		movq	%rbp, %rdi
 3711              	.LEHB3:
 3712 0f62 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 3712      00
 3713              	.LVL369:
 3714              	.LEHE3:
 3715              	.LBB1893:
 3716              	.LBI1893:
 3717              		.loc 10 657 7 is_stmt 1 view .LVU1005
 3718              	.LBB1894:
 3719              	.LBI1894:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3720              		.loc 10 229 7 view .LVU1006
 3721              	.LBB1895:
 3722              	.LBB1896:
 3723              	.LBI1896:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3724              		.loc 10 221 7 view .LVU1007
 3725              	.LBB1897:
 3726              	.LBI1897:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3727              		.loc 10 186 7 view .LVU1008
 3728              	.LBB1898:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3729              		.loc 10 187 28 is_stmt 0 view .LVU1009
 3730 0f67 488B7C24 		movq	16(%rsp), %rdi
 3730      10
 3731              	.LVL370:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3732              		.loc 10 187 28 view .LVU1010
 3733              	.LBE1898:
 3734              	.LBE1897:
 3735              	.LBB1899:
 3736              	.LBI1899:
GAS LISTING /tmp/ccZtEYtQ.s 			page 179


 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3737              		.loc 10 200 7 is_stmt 1 view .LVU1011
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3738              		.loc 10 200 7 is_stmt 0 view .LVU1012
 3739              	.LBE1899:
 3740              	.LBE1896:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3741              		.loc 10 231 2 view .LVU1013
 3742 0f6c 488D4424 		leaq	32(%rsp), %rax
 3742      20
 3743 0f71 4839C7   		cmpq	%rax, %rdi
 3744 0f74 7405     		je	.L236
 3745              	.LVL371:
 3746              	.LBB1900:
 3747              	.LBI1900:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3748              		.loc 10 236 7 is_stmt 1 view .LVU1014
 3749              	.LBB1901:
 3750              	.LBB1902:
 3751              	.LBI1902:
 3752              		.loc 13 469 7 view .LVU1015
 3753              	.LBB1903:
 3754              	.LBI1903:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3755              		.loc 12 119 7 view .LVU1016
 3756              	.LBB1904:
 3757              		.loc 12 128 19 is_stmt 0 view .LVU1017
 3758 0f76 E8000000 		call	_ZdlPv@PLT
 3758      00
 3759              	.LVL372:
 3760              	.L236:
 3761              		.loc 12 128 19 view .LVU1018
 3762              	.LBE1904:
 3763              	.LBE1903:
 3764              	.LBE1902:
 3765              	.LBE1901:
 3766              	.LBE1900:
 3767              	.LBE1895:
 3768              	.LBE1894:
 3769              	.LBB1905:
 3770              	.LBI1905:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3771              		.loc 10 150 14 is_stmt 1 view .LVU1019
 3772              	.LBB1906:
 3773              	.LBI1906:
 3774              		.loc 11 153 7 view .LVU1020
 3775              	.LBB1907:
 3776              	.LBI1907:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3777              		.loc 12 89 7 view .LVU1021
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3778              		.loc 12 89 7 is_stmt 0 view .LVU1022
 3779              	.LBE1907:
 3780              	.LBE1906:
 3781              	.LBE1905:
 3782              	.LBE1893:
 3783              	.LBB1908:
GAS LISTING /tmp/ccZtEYtQ.s 			page 180


 3784              	.LBI1908:
 3785              		.loc 11 153 7 is_stmt 1 view .LVU1023
 3786              	.LBB1909:
 3787              	.LBI1909:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3788              		.loc 12 89 7 view .LVU1024
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3789              		.loc 12 89 7 is_stmt 0 view .LVU1025
 3790              	.LBE1909:
 3791              	.LBE1908:
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3792              		.loc 1 610 2 is_stmt 1 view .LVU1026
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3793              		.loc 1 610 40 is_stmt 0 view .LVU1027
 3794 0f7b 488B03   		movq	(%rbx), %rax
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3795              		.loc 1 610 50 view .LVU1028
 3796 0f7e F30F1043 		movss	40(%rbx), %xmm0
 3796      28
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3797              		.loc 1 610 45 view .LVU1029
 3798 0f83 0F28D8   		movaps	%xmm0, %xmm3
 3799 0f86 F30F5858 		addss	4(%rax), %xmm3
 3799      04
 3800 0f8b F30F115C 		movss	%xmm3, 8(%rsp)
 3800      2408
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3801              		.loc 1 610 29 view .LVU1030
 3802 0f91 F30F5800 		addss	(%rax), %xmm0
 3803 0f95 F30F1144 		movss	%xmm0, 12(%rsp)
 3803      240C
 3804              	.LVL373:
 3805              	.LBB1910:
 3806              	.LBI1910:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3807              		.loc 11 138 7 is_stmt 1 view .LVU1031
 3808              	.LBB1911:
 3809              	.LBI1911:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3810              		.loc 12 80 7 view .LVU1032
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3811              		.loc 12 80 7 is_stmt 0 view .LVU1033
 3812              	.LBE1911:
 3813              	.LBE1910:
 3814              	.LBB1912:
 3815              	.LBI1912:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3816              		.loc 10 525 7 is_stmt 1 view .LVU1034
 3817              	.LBB1913:
 3818              	.LBB1914:
 3819              	.LBB1915:
 3820              	.LBI1915:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3821              		.loc 10 190 7 view .LVU1035
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3822              		.loc 10 190 7 is_stmt 0 view .LVU1036
 3823              	.LBE1915:
GAS LISTING /tmp/ccZtEYtQ.s 			page 181


 3824              	.LBB1916:
 3825              	.LBI1916:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3826              		.loc 10 156 2 is_stmt 1 view .LVU1037
 3827              	.LBB1917:
 3828              	.LBB1918:
 3829              	.LBB1919:
 3830              	.LBI1919:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3831              		.loc 11 141 7 view .LVU1038
 3832              	.LBB1920:
 3833              	.LBI1920:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3834              		.loc 12 83 7 view .LVU1039
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3835              		.loc 12 83 7 is_stmt 0 view .LVU1040
 3836              	.LBE1920:
 3837              	.LBE1919:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3838              		.loc 10 157 35 view .LVU1041
 3839 0f9b 488D6C24 		leaq	16(%rsp), %rbp
 3839      10
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3840              		.loc 10 157 35 view .LVU1042
 3841 0fa0 488D4424 		leaq	32(%rsp), %rax
 3841      20
 3842              	.LVL374:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3843              		.loc 10 157 35 view .LVU1043
 3844 0fa5 48894424 		movq	%rax, 16(%rsp)
 3844      10
 3845              	.LVL375:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3846              		.loc 10 157 35 view .LVU1044
 3847              	.LBE1918:
 3848              	.LBE1917:
 3849              	.LBE1916:
 3850              	.LBB1921:
 3851              	.LBI1921:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3852              		.loc 4 438 7 is_stmt 1 view .LVU1045
 3853              	.LBB1922:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3854              		.loc 4 444 2 view .LVU1046
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3855              		.loc 4 444 15 is_stmt 0 view .LVU1047
 3856 0faa 488D3D00 		leaq	.LC23(%rip), %rdi
 3856      000000
 3857 0fb1 E8000000 		call	wcslen@PLT
 3857      00
 3858              	.LVL376:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3859              		.loc 4 444 15 view .LVU1048
 3860              	.LBE1922:
 3861              	.LBE1921:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3862              		.loc 10 527 9 view .LVU1049
GAS LISTING /tmp/ccZtEYtQ.s 			page 182


 3863 0fb6 488D3500 		leaq	.LC23(%rip), %rsi
 3863      000000
 3864 0fbd 488D1486 		leaq	(%rsi,%rax,4), %rdx
 3865              	.LVL377:
 3866              	.LBB1923:
 3867              	.LBI1923:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3868              		.loc 10 263 9 is_stmt 1 view .LVU1050
 3869              	.LBB1924:
 3870              	.LBB1925:
 3871              	.LBI1925:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3872              		.loc 10 243 9 view .LVU1051
 3873              	.LBB1926:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3874              		.loc 10 247 11 is_stmt 0 view .LVU1052
 3875 0fc1 4889EF   		movq	%rbp, %rdi
 3876              	.LEHB4:
 3877 0fc4 E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 3877      00
 3878              	.LVL378:
 3879              	.LEHE4:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3880              		.loc 10 247 11 view .LVU1053
 3881              	.LBE1926:
 3882              	.LBE1925:
 3883              	.LBE1924:
 3884              	.LBE1923:
 3885              	.LBE1914:
 3886              	.LBE1913:
 3887              	.LBE1912:
 610:Src/main.cpp  **** 	drawText(L"3", 10, o->c->x + o->a, o->c->y);
 3888              		.loc 1 610 10 view .LVU1054
 3889 0fc9 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 3889      2408
 3890 0fcf F30F2C54 		cvttss2sil	12(%rsp), %edx
 3890      240C
 3891 0fd5 BE0A0000 		movl	$10, %esi
 3891      00
 3892 0fda 4889EF   		movq	%rbp, %rdi
 3893              	.LEHB5:
 3894 0fdd E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 3894      00
 3895              	.LVL379:
 3896              	.LEHE5:
 3897              	.LBB1927:
 3898              	.LBI1927:
 3899              		.loc 10 657 7 is_stmt 1 view .LVU1055
 3900              	.LBB1928:
 3901              	.LBI1928:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3902              		.loc 10 229 7 view .LVU1056
 3903              	.LBB1929:
 3904              	.LBB1930:
 3905              	.LBI1930:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3906              		.loc 10 221 7 view .LVU1057
GAS LISTING /tmp/ccZtEYtQ.s 			page 183


 3907              	.LBB1931:
 3908              	.LBI1931:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3909              		.loc 10 186 7 view .LVU1058
 3910              	.LBB1932:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3911              		.loc 10 187 28 is_stmt 0 view .LVU1059
 3912 0fe2 488B7C24 		movq	16(%rsp), %rdi
 3912      10
 3913              	.LVL380:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3914              		.loc 10 187 28 view .LVU1060
 3915              	.LBE1932:
 3916              	.LBE1931:
 3917              	.LBB1933:
 3918              	.LBI1933:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3919              		.loc 10 200 7 is_stmt 1 view .LVU1061
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3920              		.loc 10 200 7 is_stmt 0 view .LVU1062
 3921              	.LBE1933:
 3922              	.LBE1930:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3923              		.loc 10 231 2 view .LVU1063
 3924 0fe7 488D4424 		leaq	32(%rsp), %rax
 3924      20
 3925 0fec 4839C7   		cmpq	%rax, %rdi
 3926 0fef 7405     		je	.L237
 3927              	.LVL381:
 3928              	.LBB1934:
 3929              	.LBI1934:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3930              		.loc 10 236 7 is_stmt 1 view .LVU1064
 3931              	.LBB1935:
 3932              	.LBB1936:
 3933              	.LBI1936:
 3934              		.loc 13 469 7 view .LVU1065
 3935              	.LBB1937:
 3936              	.LBI1937:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3937              		.loc 12 119 7 view .LVU1066
 3938              	.LBB1938:
 3939              		.loc 12 128 19 is_stmt 0 view .LVU1067
 3940 0ff1 E8000000 		call	_ZdlPv@PLT
 3940      00
 3941              	.LVL382:
 3942              	.L237:
 3943              		.loc 12 128 19 view .LVU1068
 3944              	.LBE1938:
 3945              	.LBE1937:
 3946              	.LBE1936:
 3947              	.LBE1935:
 3948              	.LBE1934:
 3949              	.LBE1929:
 3950              	.LBE1928:
 3951              	.LBB1939:
 3952              	.LBI1939:
GAS LISTING /tmp/ccZtEYtQ.s 			page 184


 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3953              		.loc 10 150 14 is_stmt 1 view .LVU1069
 3954              	.LBB1940:
 3955              	.LBI1940:
 3956              		.loc 11 153 7 view .LVU1070
 3957              	.LBB1941:
 3958              	.LBI1941:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3959              		.loc 12 89 7 view .LVU1071
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3960              		.loc 12 89 7 is_stmt 0 view .LVU1072
 3961              	.LBE1941:
 3962              	.LBE1940:
 3963              	.LBE1939:
 3964              	.LBE1927:
 3965              	.LBB1942:
 3966              	.LBI1942:
 3967              		.loc 11 153 7 is_stmt 1 view .LVU1073
 3968              	.LBB1943:
 3969              	.LBI1943:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3970              		.loc 12 89 7 view .LVU1074
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3971              		.loc 12 89 7 is_stmt 0 view .LVU1075
 3972              	.LBE1943:
 3973              	.LBE1942:
 611:Src/main.cpp  **** }
 3974              		.loc 1 611 2 is_stmt 1 view .LVU1076
 611:Src/main.cpp  **** }
 3975              		.loc 1 611 40 is_stmt 0 view .LVU1077
 3976 0ff6 488B03   		movq	(%rbx), %rax
 611:Src/main.cpp  **** }
 3977              		.loc 1 611 43 view .LVU1078
 3978 0ff9 F30F1078 		movss	4(%rax), %xmm7
 3978      04
 3979 0ffe F30F117C 		movss	%xmm7, 8(%rsp)
 3979      2408
 611:Src/main.cpp  **** }
 3980              		.loc 1 611 34 view .LVU1079
 3981 1004 F30F1043 		movss	40(%rbx), %xmm0
 3981      28
 611:Src/main.cpp  **** }
 3982              		.loc 1 611 29 view .LVU1080
 3983 1009 F30F5800 		addss	(%rax), %xmm0
 3984 100d F30F1144 		movss	%xmm0, 12(%rsp)
 3984      240C
 3985              	.LVL383:
 3986              	.LBB1944:
 3987              	.LBI1944:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3988              		.loc 11 138 7 is_stmt 1 view .LVU1081
 3989              	.LBB1945:
 3990              	.LBI1945:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3991              		.loc 12 80 7 view .LVU1082
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3992              		.loc 12 80 7 is_stmt 0 view .LVU1083
GAS LISTING /tmp/ccZtEYtQ.s 			page 185


 3993              	.LBE1945:
 3994              	.LBE1944:
 3995              	.LBB1946:
 3996              	.LBI1946:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3997              		.loc 10 525 7 is_stmt 1 view .LVU1084
 3998              	.LBB1947:
 3999              	.LBB1948:
 4000              	.LBB1949:
 4001              	.LBI1949:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4002              		.loc 10 190 7 view .LVU1085
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4003              		.loc 10 190 7 is_stmt 0 view .LVU1086
 4004              	.LBE1949:
 4005              	.LBB1950:
 4006              	.LBI1950:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4007              		.loc 10 156 2 is_stmt 1 view .LVU1087
 4008              	.LBB1951:
 4009              	.LBB1952:
 4010              	.LBB1953:
 4011              	.LBI1953:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4012              		.loc 11 141 7 view .LVU1088
 4013              	.LBB1954:
 4014              	.LBI1954:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4015              		.loc 12 83 7 view .LVU1089
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4016              		.loc 12 83 7 is_stmt 0 view .LVU1090
 4017              	.LBE1954:
 4018              	.LBE1953:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4019              		.loc 10 157 35 view .LVU1091
 4020 1013 488D5C24 		leaq	16(%rsp), %rbx
 4020      10
 4021              	.LVL384:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4022              		.loc 10 157 35 view .LVU1092
 4023 1018 488D4424 		leaq	32(%rsp), %rax
 4023      20
 4024              	.LVL385:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4025              		.loc 10 157 35 view .LVU1093
 4026 101d 48894424 		movq	%rax, 16(%rsp)
 4026      10
 4027              	.LVL386:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4028              		.loc 10 157 35 view .LVU1094
 4029              	.LBE1952:
 4030              	.LBE1951:
 4031              	.LBE1950:
 4032              	.LBB1955:
 4033              	.LBI1955:
 438:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 4034              		.loc 4 438 7 is_stmt 1 view .LVU1095
GAS LISTING /tmp/ccZtEYtQ.s 			page 186


 4035              	.LBB1956:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4036              		.loc 4 444 2 view .LVU1096
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4037              		.loc 4 444 15 is_stmt 0 view .LVU1097
 4038 1022 488D3D00 		leaq	.LC24(%rip), %rdi
 4038      000000
 4039 1029 E8000000 		call	wcslen@PLT
 4039      00
 4040              	.LVL387:
 444:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4041              		.loc 4 444 15 view .LVU1098
 4042              	.LBE1956:
 4043              	.LBE1955:
 527:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4044              		.loc 10 527 9 view .LVU1099
 4045 102e 488D3500 		leaq	.LC24(%rip), %rsi
 4045      000000
 4046 1035 488D1486 		leaq	(%rsi,%rax,4), %rdx
 4047              	.LVL388:
 4048              	.LBB1957:
 4049              	.LBI1957:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 4050              		.loc 10 263 9 is_stmt 1 view .LVU1100
 4051              	.LBB1958:
 4052              	.LBB1959:
 4053              	.LBI1959:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 4054              		.loc 10 243 9 view .LVU1101
 4055              	.LBB1960:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4056              		.loc 10 247 11 is_stmt 0 view .LVU1102
 4057 1039 4889DF   		movq	%rbx, %rdi
 4058              	.LEHB6:
 4059 103c E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_it
 4059      00
 4060              	.LVL389:
 4061              	.LEHE6:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4062              		.loc 10 247 11 view .LVU1103
 4063              	.LBE1960:
 4064              	.LBE1959:
 4065              	.LBE1958:
 4066              	.LBE1957:
 4067              	.LBE1948:
 4068              	.LBE1947:
 4069              	.LBE1946:
 611:Src/main.cpp  **** }
 4070              		.loc 1 611 10 view .LVU1104
 4071 1041 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 4071      2408
 4072 1047 F30F2C54 		cvttss2sil	12(%rsp), %edx
 4072      240C
 4073 104d BE0A0000 		movl	$10, %esi
 4073      00
 4074 1052 4889DF   		movq	%rbx, %rdi
 4075              	.LEHB7:
GAS LISTING /tmp/ccZtEYtQ.s 			page 187


 4076 1055 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 4076      00
 4077              	.LVL390:
 4078              	.LEHE7:
 4079              	.LBB1961:
 4080              	.LBI1961:
 4081              		.loc 10 657 7 is_stmt 1 view .LVU1105
 4082              	.LBB1962:
 4083              	.LBI1962:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4084              		.loc 10 229 7 view .LVU1106
 4085              	.LBB1963:
 4086              	.LBB1964:
 4087              	.LBI1964:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4088              		.loc 10 221 7 view .LVU1107
 4089              	.LBB1965:
 4090              	.LBI1965:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4091              		.loc 10 186 7 view .LVU1108
 4092              	.LBB1966:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4093              		.loc 10 187 28 is_stmt 0 view .LVU1109
 4094 105a 488B7C24 		movq	16(%rsp), %rdi
 4094      10
 4095              	.LVL391:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4096              		.loc 10 187 28 view .LVU1110
 4097              	.LBE1966:
 4098              	.LBE1965:
 4099              	.LBB1967:
 4100              	.LBI1967:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4101              		.loc 10 200 7 is_stmt 1 view .LVU1111
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4102              		.loc 10 200 7 is_stmt 0 view .LVU1112
 4103              	.LBE1967:
 4104              	.LBE1964:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4105              		.loc 10 231 2 view .LVU1113
 4106 105f 488D4424 		leaq	32(%rsp), %rax
 4106      20
 4107 1064 4839C7   		cmpq	%rax, %rdi
 4108 1067 7405     		je	.L234
 4109              	.LVL392:
 4110              	.LBB1968:
 4111              	.LBI1968:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4112              		.loc 10 236 7 is_stmt 1 view .LVU1114
 4113              	.LBB1969:
 4114              	.LBB1970:
 4115              	.LBI1970:
 4116              		.loc 13 469 7 view .LVU1115
 4117              	.LBB1971:
 4118              	.LBI1971:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4119              		.loc 12 119 7 view .LVU1116
GAS LISTING /tmp/ccZtEYtQ.s 			page 188


 4120              	.LBB1972:
 4121              		.loc 12 128 19 is_stmt 0 view .LVU1117
 4122 1069 E8000000 		call	_ZdlPv@PLT
 4122      00
 4123              	.LVL393:
 4124              		.loc 12 128 19 view .LVU1118
 4125              	.LBE1972:
 4126              	.LBE1971:
 4127              	.LBE1970:
 4128              	.LBE1969:
 4129              	.LBE1968:
 4130              	.LBE1963:
 4131              	.LBE1962:
 4132              	.LBB1973:
 4133              	.LBI1973:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4134              		.loc 10 150 14 is_stmt 1 view .LVU1119
 4135              	.LBB1974:
 4136              	.LBI1974:
 4137              		.loc 11 153 7 view .LVU1120
 4138              	.LBB1975:
 4139              	.LBI1975:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4140              		.loc 12 89 7 view .LVU1121
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4141              		.loc 12 89 7 is_stmt 0 view .LVU1122
 4142              	.LBE1975:
 4143              	.LBE1974:
 4144              	.LBE1973:
 4145              	.LBE1961:
 4146              	.LBB1976:
 4147              	.LBI1976:
 4148              		.loc 11 153 7 is_stmt 1 view .LVU1123
 4149              	.LBB1977:
 4150              	.LBI1977:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4151              		.loc 12 89 7 view .LVU1124
 4152              	.L234:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4153              		.loc 12 89 7 is_stmt 0 view .LVU1125
 4154              	.LBE1977:
 4155              	.LBE1976:
 612:Src/main.cpp  **** 
 4156              		.loc 1 612 1 view .LVU1126
 4157 106e 488B4424 		movq	56(%rsp), %rax
 4157      38
 4158 1073 64483304 		xorq	%fs:40, %rax
 4158      25280000 
 4158      00
 4159 107c 0F858300 		jne	.L253
 4159      0000
 4160 1082 4883C448 		addq	$72, %rsp
 4161              		.cfi_remember_state
 4162              		.cfi_def_cfa_offset 24
 4163 1086 5B       		popq	%rbx
 4164              		.cfi_def_cfa_offset 16
 4165 1087 5D       		popq	%rbp
GAS LISTING /tmp/ccZtEYtQ.s 			page 189


 4166              		.cfi_def_cfa_offset 8
 4167 1088 C3       		ret
 4168              	.LVL394:
 4169              	.L248:
 4170              		.cfi_restore_state
 612:Src/main.cpp  **** 
 4171              		.loc 1 612 1 view .LVU1127
 4172 1089 4889C3   		movq	%rax, %rbx
 4173              	.LVL395:
 4174              	.LBB1978:
 4175              	.LBI1978:
 4176              		.loc 10 657 7 is_stmt 1 view .LVU1128
 4177              	.LBB1979:
 4178              	.LBI1979:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4179              		.loc 10 229 7 view .LVU1129
 4180              	.LBB1980:
 4181              	.LBB1981:
 4182              	.LBI1981:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4183              		.loc 10 221 7 view .LVU1130
 4184              	.LBB1982:
 4185              	.LBI1982:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4186              		.loc 10 186 7 view .LVU1131
 4187              	.LBB1983:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4188              		.loc 10 187 28 is_stmt 0 view .LVU1132
 4189 108c 488B7C24 		movq	16(%rsp), %rdi
 4189      10
 4190              	.LVL396:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4191              		.loc 10 187 28 view .LVU1133
 4192              	.LBE1983:
 4193              	.LBE1982:
 4194              	.LBB1984:
 4195              	.LBI1984:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4196              		.loc 10 200 7 is_stmt 1 view .LVU1134
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4197              		.loc 10 200 7 is_stmt 0 view .LVU1135
 4198              	.LBE1984:
 4199              	.LBE1981:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4200              		.loc 10 231 2 view .LVU1136
 4201 1091 488D4424 		leaq	32(%rsp), %rax
 4201      20
 4202 1096 4839C7   		cmpq	%rax, %rdi
 4203 1099 7405     		je	.L240
 4204              	.LVL397:
 4205              	.LBB1985:
 4206              	.LBI1985:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4207              		.loc 10 236 7 is_stmt 1 view .LVU1137
 4208              	.LBB1986:
 4209              	.LBB1987:
 4210              	.LBI1987:
GAS LISTING /tmp/ccZtEYtQ.s 			page 190


 4211              		.loc 13 469 7 view .LVU1138
 4212              	.LBB1988:
 4213              	.LBI1988:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4214              		.loc 12 119 7 view .LVU1139
 4215              	.LBB1989:
 4216              		.loc 12 128 19 is_stmt 0 view .LVU1140
 4217 109b E8000000 		call	_ZdlPv@PLT
 4217      00
 4218              	.LVL398:
 4219              	.L240:
 4220              		.loc 12 128 19 view .LVU1141
 4221              	.LBE1989:
 4222              	.LBE1988:
 4223              	.LBE1987:
 4224              	.LBE1986:
 4225              	.LBE1985:
 4226              	.LBE1980:
 4227              	.LBE1979:
 4228              	.LBB1990:
 4229              	.LBI1990:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4230              		.loc 10 150 14 is_stmt 1 view .LVU1142
 4231              	.LBB1991:
 4232              	.LBI1991:
 4233              		.loc 11 153 7 view .LVU1143
 4234              	.LBB1992:
 4235              	.LBI1992:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4236              		.loc 12 89 7 view .LVU1144
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4237              		.loc 12 89 7 is_stmt 0 view .LVU1145
 4238 10a0 4889DF   		movq	%rbx, %rdi
 4239              	.LEHB8:
 4240 10a3 E8000000 		call	_Unwind_Resume@PLT
 4240      00
 4241              	.LVL399:
 4242              	.L249:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4243              		.loc 12 89 7 view .LVU1146
 4244 10a8 4889C3   		movq	%rax, %rbx
 4245              	.LVL400:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4246              		.loc 12 89 7 view .LVU1147
 4247              	.LBE1992:
 4248              	.LBE1991:
 4249              	.LBE1990:
 4250              	.LBE1978:
 4251              	.LBB1993:
 4252              	.LBI1993:
 4253              		.loc 10 657 7 is_stmt 1 view .LVU1148
 4254              	.LBB1994:
 4255              	.LBI1994:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4256              		.loc 10 229 7 view .LVU1149
 4257              	.LBB1995:
 4258              	.LBB1996:
GAS LISTING /tmp/ccZtEYtQ.s 			page 191


 4259              	.LBI1996:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4260              		.loc 10 221 7 view .LVU1150
 4261              	.LBB1997:
 4262              	.LBI1997:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4263              		.loc 10 186 7 view .LVU1151
 4264              	.LBB1998:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4265              		.loc 10 187 28 is_stmt 0 view .LVU1152
 4266 10ab 488B7C24 		movq	16(%rsp), %rdi
 4266      10
 4267              	.LVL401:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4268              		.loc 10 187 28 view .LVU1153
 4269              	.LBE1998:
 4270              	.LBE1997:
 4271              	.LBB1999:
 4272              	.LBI1999:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4273              		.loc 10 200 7 is_stmt 1 view .LVU1154
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4274              		.loc 10 200 7 is_stmt 0 view .LVU1155
 4275              	.LBE1999:
 4276              	.LBE1996:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4277              		.loc 10 231 2 view .LVU1156
 4278 10b0 488D4424 		leaq	32(%rsp), %rax
 4278      20
 4279 10b5 4839C7   		cmpq	%rax, %rdi
 4280 10b8 7405     		je	.L242
 4281              	.LVL402:
 4282              	.LBB2000:
 4283              	.LBI2000:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4284              		.loc 10 236 7 is_stmt 1 view .LVU1157
 4285              	.LBB2001:
 4286              	.LBB2002:
 4287              	.LBI2002:
 4288              		.loc 13 469 7 view .LVU1158
 4289              	.LBB2003:
 4290              	.LBI2003:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4291              		.loc 12 119 7 view .LVU1159
 4292              	.LBB2004:
 4293              		.loc 12 128 19 is_stmt 0 view .LVU1160
 4294 10ba E8000000 		call	_ZdlPv@PLT
 4294      00
 4295              	.LVL403:
 4296              	.L242:
 4297              		.loc 12 128 19 view .LVU1161
 4298              	.LBE2004:
 4299              	.LBE2003:
 4300              	.LBE2002:
 4301              	.LBE2001:
 4302              	.LBE2000:
 4303              	.LBE1995:
GAS LISTING /tmp/ccZtEYtQ.s 			page 192


 4304              	.LBE1994:
 4305              	.LBB2005:
 4306              	.LBI2005:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4307              		.loc 10 150 14 is_stmt 1 view .LVU1162
 4308              	.LBB2006:
 4309              	.LBI2006:
 4310              		.loc 11 153 7 view .LVU1163
 4311              	.LBB2007:
 4312              	.LBI2007:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4313              		.loc 12 89 7 view .LVU1164
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4314              		.loc 12 89 7 is_stmt 0 view .LVU1165
 4315 10bf 4889DF   		movq	%rbx, %rdi
 4316 10c2 E8000000 		call	_Unwind_Resume@PLT
 4316      00
 4317              	.LVL404:
 4318              	.L250:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4319              		.loc 12 89 7 view .LVU1166
 4320 10c7 4889C3   		movq	%rax, %rbx
 4321              	.LVL405:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4322              		.loc 12 89 7 view .LVU1167
 4323              	.LBE2007:
 4324              	.LBE2006:
 4325              	.LBE2005:
 4326              	.LBE1993:
 4327              	.LBB2008:
 4328              	.LBI2008:
 4329              		.loc 10 657 7 is_stmt 1 view .LVU1168
 4330              	.LBB2009:
 4331              	.LBI2009:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4332              		.loc 10 229 7 view .LVU1169
 4333              	.LBB2010:
 4334              	.LBB2011:
 4335              	.LBI2011:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4336              		.loc 10 221 7 view .LVU1170
 4337              	.LBB2012:
 4338              	.LBI2012:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4339              		.loc 10 186 7 view .LVU1171
 4340              	.LBB2013:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4341              		.loc 10 187 28 is_stmt 0 view .LVU1172
 4342 10ca 488B7C24 		movq	16(%rsp), %rdi
 4342      10
 4343              	.LVL406:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4344              		.loc 10 187 28 view .LVU1173
 4345              	.LBE2013:
 4346              	.LBE2012:
 4347              	.LBB2014:
 4348              	.LBI2014:
GAS LISTING /tmp/ccZtEYtQ.s 			page 193


 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4349              		.loc 10 200 7 is_stmt 1 view .LVU1174
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4350              		.loc 10 200 7 is_stmt 0 view .LVU1175
 4351              	.LBE2014:
 4352              	.LBE2011:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4353              		.loc 10 231 2 view .LVU1176
 4354 10cf 488D4424 		leaq	32(%rsp), %rax
 4354      20
 4355 10d4 4839C7   		cmpq	%rax, %rdi
 4356 10d7 7405     		je	.L244
 4357              	.LVL407:
 4358              	.LBB2015:
 4359              	.LBI2015:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4360              		.loc 10 236 7 is_stmt 1 view .LVU1177
 4361              	.LBB2016:
 4362              	.LBB2017:
 4363              	.LBI2017:
 4364              		.loc 13 469 7 view .LVU1178
 4365              	.LBB2018:
 4366              	.LBI2018:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4367              		.loc 12 119 7 view .LVU1179
 4368              	.LBB2019:
 4369              		.loc 12 128 19 is_stmt 0 view .LVU1180
 4370 10d9 E8000000 		call	_ZdlPv@PLT
 4370      00
 4371              	.LVL408:
 4372              	.L244:
 4373              		.loc 12 128 19 view .LVU1181
 4374              	.LBE2019:
 4375              	.LBE2018:
 4376              	.LBE2017:
 4377              	.LBE2016:
 4378              	.LBE2015:
 4379              	.LBE2010:
 4380              	.LBE2009:
 4381              	.LBB2020:
 4382              	.LBI2020:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4383              		.loc 10 150 14 is_stmt 1 view .LVU1182
 4384              	.LBB2021:
 4385              	.LBI2021:
 4386              		.loc 11 153 7 view .LVU1183
 4387              	.LBB2022:
 4388              	.LBI2022:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4389              		.loc 12 89 7 view .LVU1184
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4390              		.loc 12 89 7 is_stmt 0 view .LVU1185
 4391 10de 4889DF   		movq	%rbx, %rdi
 4392 10e1 E8000000 		call	_Unwind_Resume@PLT
 4392      00
 4393              	.LVL409:
 4394              	.L251:
GAS LISTING /tmp/ccZtEYtQ.s 			page 194


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4395              		.loc 12 89 7 view .LVU1186
 4396 10e6 4889C3   		movq	%rax, %rbx
 4397              	.LVL410:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4398              		.loc 12 89 7 view .LVU1187
 4399              	.LBE2022:
 4400              	.LBE2021:
 4401              	.LBE2020:
 4402              	.LBE2008:
 4403              	.LBB2023:
 4404              	.LBI2023:
 4405              		.loc 10 657 7 is_stmt 1 view .LVU1188
 4406              	.LBB2024:
 4407              	.LBI2024:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4408              		.loc 10 229 7 view .LVU1189
 4409              	.LBB2025:
 4410              	.LBB2026:
 4411              	.LBI2026:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4412              		.loc 10 221 7 view .LVU1190
 4413              	.LBB2027:
 4414              	.LBI2027:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4415              		.loc 10 186 7 view .LVU1191
 4416              	.LBB2028:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4417              		.loc 10 187 28 is_stmt 0 view .LVU1192
 4418 10e9 488B7C24 		movq	16(%rsp), %rdi
 4418      10
 4419              	.LVL411:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4420              		.loc 10 187 28 view .LVU1193
 4421              	.LBE2028:
 4422              	.LBE2027:
 4423              	.LBB2029:
 4424              	.LBI2029:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4425              		.loc 10 200 7 is_stmt 1 view .LVU1194
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4426              		.loc 10 200 7 is_stmt 0 view .LVU1195
 4427              	.LBE2029:
 4428              	.LBE2026:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4429              		.loc 10 231 2 view .LVU1196
 4430 10ee 488D4424 		leaq	32(%rsp), %rax
 4430      20
 4431 10f3 4839C7   		cmpq	%rax, %rdi
 4432 10f6 7405     		je	.L246
 4433              	.LVL412:
 4434              	.LBB2030:
 4435              	.LBI2030:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4436              		.loc 10 236 7 is_stmt 1 view .LVU1197
 4437              	.LBB2031:
 4438              	.LBB2032:
GAS LISTING /tmp/ccZtEYtQ.s 			page 195


 4439              	.LBI2032:
 4440              		.loc 13 469 7 view .LVU1198
 4441              	.LBB2033:
 4442              	.LBI2033:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4443              		.loc 12 119 7 view .LVU1199
 4444              	.LBB2034:
 4445              		.loc 12 128 19 is_stmt 0 view .LVU1200
 4446 10f8 E8000000 		call	_ZdlPv@PLT
 4446      00
 4447              	.LVL413:
 4448              	.L246:
 4449              		.loc 12 128 19 view .LVU1201
 4450              	.LBE2034:
 4451              	.LBE2033:
 4452              	.LBE2032:
 4453              	.LBE2031:
 4454              	.LBE2030:
 4455              	.LBE2025:
 4456              	.LBE2024:
 4457              	.LBB2035:
 4458              	.LBI2035:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4459              		.loc 10 150 14 is_stmt 1 view .LVU1202
 4460              	.LBB2036:
 4461              	.LBI2036:
 4462              		.loc 11 153 7 view .LVU1203
 4463              	.LBB2037:
 4464              	.LBI2037:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4465              		.loc 12 89 7 view .LVU1204
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4466              		.loc 12 89 7 is_stmt 0 view .LVU1205
 4467 10fd 4889DF   		movq	%rbx, %rdi
 4468 1100 E8000000 		call	_Unwind_Resume@PLT
 4468      00
 4469              	.LVL414:
 4470              	.LEHE8:
 4471              	.L253:
 4472              	.LBE2037:
 4473              	.LBE2036:
 4474              	.LBE2035:
 4475              	.LBE2023:
 612:Src/main.cpp  **** 
 4476              		.loc 1 612 1 view .LVU1206
 4477 1105 E8000000 		call	__stack_chk_fail@PLT
 4477      00
 4478              	.LVL415:
 4479              		.cfi_endproc
 4480              	.LFE2505:
 4481              		.globl	__gxx_personality_v0
 4482              		.section	.gcc_except_table,"a",@progbits
 4483              	.LLSDA2505:
 4484 0000 FF       		.byte	0xff
 4485 0001 FF       		.byte	0xff
 4486 0002 01       		.byte	0x1
 4487 0003 30       		.uleb128 .LLSDACSE2505-.LLSDACSB2505
GAS LISTING /tmp/ccZtEYtQ.s 			page 196


 4488              	.LLSDACSB2505:
 4489 0004 1E       		.uleb128 .LEHB0-.LFB2505
 4490 0005 6B       		.uleb128 .LEHE0-.LEHB0
 4491 0006 00       		.uleb128 0
 4492 0007 00       		.uleb128 0
 4493 0008 9D01     		.uleb128 .LEHB1-.LFB2505
 4494 000a 05       		.uleb128 .LEHE1-.LEHB1
 4495 000b BC04     		.uleb128 .L248-.LFB2505
 4496 000d 00       		.uleb128 0
 4497 000e FC01     		.uleb128 .LEHB2-.LFB2505
 4498 0010 05       		.uleb128 .LEHE2-.LEHB2
 4499 0011 00       		.uleb128 0
 4500 0012 00       		.uleb128 0
 4501 0013 9502     		.uleb128 .LEHB3-.LFB2505
 4502 0015 05       		.uleb128 .LEHE3-.LEHB3
 4503 0016 DB04     		.uleb128 .L249-.LFB2505
 4504 0018 00       		.uleb128 0
 4505 0019 F702     		.uleb128 .LEHB4-.LFB2505
 4506 001b 05       		.uleb128 .LEHE4-.LEHB4
 4507 001c 00       		.uleb128 0
 4508 001d 00       		.uleb128 0
 4509 001e 9003     		.uleb128 .LEHB5-.LFB2505
 4510 0020 05       		.uleb128 .LEHE5-.LEHB5
 4511 0021 FA04     		.uleb128 .L250-.LFB2505
 4512 0023 00       		.uleb128 0
 4513 0024 EF03     		.uleb128 .LEHB6-.LFB2505
 4514 0026 05       		.uleb128 .LEHE6-.LEHB6
 4515 0027 00       		.uleb128 0
 4516 0028 00       		.uleb128 0
 4517 0029 8804     		.uleb128 .LEHB7-.LFB2505
 4518 002b 05       		.uleb128 .LEHE7-.LEHB7
 4519 002c 9905     		.uleb128 .L251-.LFB2505
 4520 002e 00       		.uleb128 0
 4521 002f D604     		.uleb128 .LEHB8-.LFB2505
 4522 0031 62       		.uleb128 .LEHE8-.LEHB8
 4523 0032 00       		.uleb128 0
 4524 0033 00       		.uleb128 0
 4525              	.LLSDACSE2505:
 4526              		.text
 4528              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 4529              		.align 2
 4530              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
 4532              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 4533              	.LVL416:
 4534              	.LFB2855:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 4535              		.loc 8 206 7 is_stmt 1 view -0
 4536              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 4537              		.loc 8 206 7 is_stmt 0 view .LVU1208
 4538 0000 4154     		pushq	%r12
 4539              		.cfi_def_cfa_offset 16
 4540              		.cfi_offset 12, -16
 4541 0002 55       		pushq	%rbp
 4542              		.cfi_def_cfa_offset 24
 4543              		.cfi_offset 6, -24
 4544 0003 53       		pushq	%rbx
GAS LISTING /tmp/ccZtEYtQ.s 			page 197


 4545              		.cfi_def_cfa_offset 32
 4546              		.cfi_offset 3, -32
 4547 0004 4883EC10 		subq	$16, %rsp
 4548              		.cfi_def_cfa_offset 48
 4549 0008 4889FD   		movq	%rdi, %rbp
 4550 000b 4989F4   		movq	%rsi, %r12
 4551 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 4552              		.loc 8 206 7 view .LVU1209
 4553 0011 64488B04 		movq	%fs:40, %rax
 4553      25280000 
 4553      00
 4554 001a 48894424 		movq	%rax, 8(%rsp)
 4554      08
 4555 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 4556              		.loc 8 211 42 view .LVU1210
 4557 0021 4885F6   		testq	%rsi, %rsi
 4558 0024 7429     		je	.L261
 4559              	.L255:
 4560              	.LVL417:
 4561              	.LBB2038:
 4562              	.LBI2038:
 4563              		.loc 9 138 5 is_stmt 1 view .LVU1211
 4564              	.LBB2039:
 4565              	.LBI2039:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 4566              		.loc 9 98 5 view .LVU1212
 4567              	.LBB2040:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 4568              		.loc 9 104 23 is_stmt 0 view .LVU1213
 4569 0026 4C29E3   		subq	%r12, %rbx
 4570              	.LVL418:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 4571              		.loc 9 104 23 view .LVU1214
 4572              	.LBE2040:
 4573              	.LBE2039:
 4574              	.LBE2038:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 4575              		.loc 8 215 12 view .LVU1215
 4576 0029 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 4577              		.loc 8 217 2 view .LVU1216
 4578 002d 4883FB0F 		cmpq	$15, %rbx
 4579 0031 772D     		ja	.L262
 4580              	.LVL419:
 4581              	.L256:
 4582              	.LBB2041:
 4583              	.LBI2041:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4584              		.loc 10 186 7 is_stmt 1 view .LVU1217
 4585              	.LBB2042:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4586              		.loc 10 187 28 is_stmt 0 view .LVU1218
 4587 0033 488B7D00 		movq	0(%rbp), %rdi
 4588              	.LVL420:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 198


 4589              		.loc 10 187 28 view .LVU1219
 4590              	.LBE2042:
 4591              	.LBE2041:
 4592              	.LBB2043:
 4593              	.LBI2043:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 4594              		.loc 10 392 7 is_stmt 1 view .LVU1220
 4595              	.LBB2044:
 4596              	.LBI2044:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4597              		.loc 10 346 7 view .LVU1221
 4598              	.LBB2045:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 4599              		.loc 10 348 2 is_stmt 0 view .LVU1222
 4600 0037 4883FB01 		cmpq	$1, %rbx
 4601 003b 7441     		je	.L263
 4602              	.LVL421:
 4603              	.LBB2046:
 4604              	.LBI2046:
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 4605              		.loc 4 361 7 is_stmt 1 view .LVU1223
 4606              	.LBB2047:
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 4607              		.loc 4 363 2 view .LVU1224
 4608 003d 4885DB   		testq	%rbx, %rbx
 4609 0040 7443     		je	.L258
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4610              		.loc 4 365 2 view .LVU1225
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4611              		.loc 4 365 49 is_stmt 0 view .LVU1226
 4612 0042 4889DA   		movq	%rbx, %rdx
 4613 0045 4C89E6   		movq	%r12, %rsi
 4614 0048 E8000000 		call	memcpy@PLT
 4614      00
 4615              	.LVL422:
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4616              		.loc 4 365 66 view .LVU1227
 4617 004d EB36     		jmp	.L258
 4618              	.LVL423:
 4619              	.L261:
 365:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4620              		.loc 4 365 66 view .LVU1228
 4621              	.LBE2047:
 4622              	.LBE2046:
 4623              	.LBE2045:
 4624              	.LBE2044:
 4625              	.LBE2043:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 4626              		.loc 8 211 42 discriminator 1 view .LVU1229
 4627 004f 4839D6   		cmpq	%rdx, %rsi
 4628 0052 74D2     		je	.L255
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 4629              		.loc 8 212 28 view .LVU1230
 4630 0054 488D3D00 		leaq	.LC20(%rip), %rdi
 4630      000000
 4631              	.LVL424:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
GAS LISTING /tmp/ccZtEYtQ.s 			page 199


 4632              		.loc 8 212 28 view .LVU1231
 4633 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 4633      00
 4634              	.LVL425:
 4635              	.L262:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 4636              		.loc 8 219 6 view .LVU1232
 4637 0060 4889E6   		movq	%rsp, %rsi
 4638              	.LVL426:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 4639              		.loc 8 219 6 view .LVU1233
 4640 0063 BA000000 		movl	$0, %edx
 4640      00
 4641              	.LVL427:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 4642              		.loc 8 219 6 view .LVU1234
 4643 0068 4889EF   		movq	%rbp, %rdi
 4644              	.LVL428:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 4645              		.loc 8 219 6 view .LVU1235
 4646 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 4646      00
 4647              	.LVL429:
 4648              	.LBB2052:
 4649              	.LBI2052:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4650              		.loc 10 178 7 is_stmt 1 view .LVU1236
 4651              	.LBB2053:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4652              		.loc 10 179 9 is_stmt 0 view .LVU1237
 4653 0070 48894500 		movq	%rax, 0(%rbp)
 4654              	.LVL430:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4655              		.loc 10 179 9 view .LVU1238
 4656              	.LBE2053:
 4657              	.LBE2052:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 4658              		.loc 8 220 6 view .LVU1239
 4659 0074 488B0424 		movq	(%rsp), %rax
 4660              	.LVL431:
 4661              	.LBB2054:
 4662              	.LBI2054:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4663              		.loc 10 210 7 is_stmt 1 view .LVU1240
 4664              	.LBB2055:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4665              		.loc 10 211 9 is_stmt 0 view .LVU1241
 4666 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4667              		.loc 10 211 45 view .LVU1242
 4668 007c EBB5     		jmp	.L256
 4669              	.LVL432:
 4670              	.L263:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4671              		.loc 10 211 45 view .LVU1243
 4672              	.LBE2055:
 4673              	.LBE2054:
GAS LISTING /tmp/ccZtEYtQ.s 			page 200


 4674              	.LBB2056:
 4675              	.LBB2051:
 4676              	.LBB2050:
 4677              	.LBB2048:
 4678              	.LBI2048:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 4679              		.loc 4 299 7 is_stmt 1 view .LVU1244
 4680              	.LBB2049:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4681              		.loc 4 300 9 view .LVU1245
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4682              		.loc 4 300 16 is_stmt 0 view .LVU1246
 4683 007e 410FB604 		movzbl	(%r12), %eax
 4683      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4684              		.loc 4 300 14 view .LVU1247
 4685 0083 8807     		movb	%al, (%rdi)
 4686              	.LVL433:
 4687              	.L258:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4688              		.loc 4 300 14 view .LVU1248
 4689              	.LBE2049:
 4690              	.LBE2048:
 4691              	.LBE2050:
 4692              	.LBE2051:
 4693              	.LBE2056:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 4694              		.loc 8 232 2 view .LVU1249
 4695 0085 488B0424 		movq	(%rsp), %rax
 4696              	.LVL434:
 4697              	.LBB2057:
 4698              	.LBI2057:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4699              		.loc 10 214 7 is_stmt 1 view .LVU1250
 4700              	.LBB2058:
 4701              	.LBB2059:
 4702              	.LBI2059:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 4703              		.loc 10 182 7 view .LVU1251
 4704              	.LBB2060:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4705              		.loc 10 183 9 is_stmt 0 view .LVU1252
 4706 0089 48894508 		movq	%rax, 8(%rbp)
 4707              	.LVL435:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4708              		.loc 10 183 9 view .LVU1253
 4709              	.LBE2060:
 4710              	.LBE2059:
 4711              	.LBB2061:
 4712              	.LBI2061:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4713              		.loc 10 186 7 is_stmt 1 view .LVU1254
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4714              		.loc 10 186 7 is_stmt 0 view .LVU1255
 4715              	.LBE2061:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4716              		.loc 10 217 31 view .LVU1256
GAS LISTING /tmp/ccZtEYtQ.s 			page 201


 4717 008d 48034500 		addq	0(%rbp), %rax
 4718              	.LVL436:
 4719              	.LBB2062:
 4720              	.LBI2062:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 4721              		.loc 4 299 7 is_stmt 1 view .LVU1257
 4722              	.LBB2063:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4723              		.loc 4 300 9 view .LVU1258
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4724              		.loc 4 300 14 is_stmt 0 view .LVU1259
 4725 0091 C60000   		movb	$0, (%rax)
 4726              	.LVL437:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 4727              		.loc 4 300 14 view .LVU1260
 4728              	.LBE2063:
 4729              	.LBE2062:
 4730              	.LBE2058:
 4731              	.LBE2057:
 4732              		.loc 8 233 7 view .LVU1261
 4733 0094 488B4424 		movq	8(%rsp), %rax
 4733      08
 4734 0099 64483304 		xorq	%fs:40, %rax
 4734      25280000 
 4734      00
 4735 00a2 7509     		jne	.L264
 4736 00a4 4883C410 		addq	$16, %rsp
 4737              		.cfi_remember_state
 4738              		.cfi_def_cfa_offset 32
 4739 00a8 5B       		popq	%rbx
 4740              		.cfi_def_cfa_offset 24
 4741 00a9 5D       		popq	%rbp
 4742              		.cfi_def_cfa_offset 16
 4743              	.LVL438:
 4744              		.loc 8 233 7 view .LVU1262
 4745 00aa 415C     		popq	%r12
 4746              		.cfi_def_cfa_offset 8
 4747              	.LVL439:
 4748              		.loc 8 233 7 view .LVU1263
 4749 00ac C3       		ret
 4750              	.LVL440:
 4751              	.L264:
 4752              		.cfi_restore_state
 4753              		.loc 8 233 7 view .LVU1264
 4754 00ad E8000000 		call	__stack_chk_fail@PLT
 4754      00
 4755              	.LVL441:
 4756              		.cfi_endproc
 4757              	.LFE2855:
 4759              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
 4760              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_
 4762              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P
 4763              	.LVL442:
 4764              	.LFB2588:
 4765              		.file 14 "/usr/include/c++/9.2.0/ext/string_conversions.h"
   1:/usr/include/c++/9.2.0/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 202


   3:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/string_conversions.h **** //
   5:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/string_conversions.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  11:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  16:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  20:/usr/include/c++/9.2.0/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  25:/usr/include/c++/9.2.0/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/usr/include/c++/9.2.0/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/string_conversions.h ****  */
  28:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  29:/usr/include/c++/9.2.0/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/usr/include/c++/9.2.0/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  32:/usr/include/c++/9.2.0/ext/string_conversions.h **** #pragma GCC system_header
  33:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  34:/usr/include/c++/9.2.0/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/9.2.0/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/9.2.0/ext/string_conversions.h **** #else
  37:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  38:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdlib>
  42:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cwchar>
  43:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdio>
  44:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cerrno>
  45:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  46:/usr/include/c++/9.2.0/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/ext/string_conversions.h **** {
  48:/usr/include/c++/9.2.0/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  50:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   typename... _Base>
  53:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _Ret
  54:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   _Base... __base)
  57:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
  58:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _Ret __ret;
  59:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 203


  60:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __endptr;
  61:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  62:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Save_errno {
  63:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	int _M_errno;
  66:/usr/include/c++/9.2.0/ext/string_conversions.h ****       } const __save_errno;
  67:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  68:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Range_chk {
  69:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  70:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  72:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  73:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  {
  75:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  }
  78:/usr/include/c++/9.2.0/ext/string_conversions.h ****       };
  79:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  80:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  82:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__endptr == __str)
  83:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else
  88:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	__ret = __tmp;
  89:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  90:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__idx)
  91:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  93:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return __ret;
  94:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
  95:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  96:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _String
  99:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 4766              		.loc 14 99 5 is_stmt 1 view -0
 4767              		.cfi_startproc
 4768              		.loc 14 99 5 is_stmt 0 view .LVU1266
 4769 0000 55       		pushq	%rbp
 4770              		.cfi_def_cfa_offset 16
 4771              		.cfi_offset 6, -16
 4772 0001 4889E5   		movq	%rsp, %rbp
 4773              		.cfi_def_cfa_register 6
 4774 0004 4155     		pushq	%r13
 4775 0006 4154     		pushq	%r12
 4776 0008 53       		pushq	%rbx
 4777 0009 4881ECD8 		subq	$216, %rsp
 4777      000000
 4778              		.cfi_offset 13, -24
 4779              		.cfi_offset 12, -32
 4780              		.cfi_offset 3, -40
 4781 0010 4889FB   		movq	%rdi, %rbx
GAS LISTING /tmp/ccZtEYtQ.s 			page 204


 4782 0013 4989F2   		movq	%rsi, %r10
 4783 0016 4889D6   		movq	%rdx, %rsi
 4784              	.LVL443:
 4785              		.loc 14 99 5 view .LVU1267
 4786 0019 4889CA   		movq	%rcx, %rdx
 4787              	.LVL444:
 4788              		.loc 14 99 5 view .LVU1268
 4789 001c 4C898550 		movq	%r8, -176(%rbp)
 4789      FFFFFF
 4790 0023 4C898D58 		movq	%r9, -168(%rbp)
 4790      FFFFFF
 4791 002a 84C0     		testb	%al, %al
 4792 002c 7426     		je	.L266
 4793 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 4793      FFFFFF
 4794 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 4794      FFFFFF
 4795 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 4796 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
 4797 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 4798 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 4799 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 4800 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 4801              	.L266:
 4802              		.loc 14 99 5 view .LVU1269
 4803 0054 41BD2800 		movl	$40, %r13d
 4803      0000
 4804 005a 64498B45 		movq	%fs:0(%r13), %rax
 4804      00
 4805 005f 48898528 		movq	%rax, -216(%rbp)
 4805      FFFFFF
 4806 0066 31C0     		xorl	%eax, %eax
 100:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/usr/include/c++/9.2.0/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
 103:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 4807              		.loc 14 105 58 view .LVU1270
 4808 0068 488D4617 		leaq	23(%rsi), %rax
 4809 006c 4883E0F0 		andq	$-16, %rax
 4810 0070 4829C4   		subq	%rax, %rsp
 4811 0073 4C8D6424 		leaq	15(%rsp), %r12
 4811      0F
 4812 0078 4983E4F0 		andq	$-16, %r12
 4813              	.LVL445:
 106:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 107:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 108:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 4814              		.loc 14 109 25 view .LVU1271
 4815 007c C78510FF 		movl	$32, -240(%rbp)
 4815      FFFF2000 
 4815      0000
 4816 0086 C78514FF 		movl	$48, -236(%rbp)
 4816      FFFF3000 
 4816      0000
GAS LISTING /tmp/ccZtEYtQ.s 			page 205


 4817 0090 488D4510 		leaq	16(%rbp), %rax
 4818 0094 48898518 		movq	%rax, -232(%rbp)
 4818      FFFFFF
 4819 009b 488D8530 		leaq	-208(%rbp), %rax
 4819      FFFFFF
 4820 00a2 48898520 		movq	%rax, -224(%rbp)
 4820      FFFFFF
 110:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 111:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 4821              		.loc 14 111 32 view .LVU1272
 4822 00a9 488D8D10 		leaq	-240(%rbp), %rcx
 4822      FFFFFF
 4823              	.LVL446:
 4824              		.loc 14 111 32 view .LVU1273
 4825 00b0 4C89E7   		movq	%r12, %rdi
 4826              	.LVL447:
 4827              		.loc 14 111 32 view .LVU1274
 4828 00b3 41FFD2   		call	*%r10
 4829              	.LVL448:
 4830              	.LBB2064:
 4831              	.LBI2064:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 4832              		.loc 11 138 7 is_stmt 1 view .LVU1275
 4833              	.LBB2065:
 4834              	.LBI2065:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4835              		.loc 12 80 7 view .LVU1276
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4836              		.loc 12 80 7 is_stmt 0 view .LVU1277
 4837              	.LBE2065:
 4838              	.LBE2064:
 112:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 113:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return _String(__s, __s + __len);
 4839              		.loc 14 115 33 view .LVU1278
 4840 00b6 4863D0   		movslq	%eax, %rdx
 4841              		.loc 14 115 38 view .LVU1279
 4842 00b9 4C01E2   		addq	%r12, %rdx
 4843              	.LVL449:
 4844              	.LBB2066:
 4845              	.LBI2066:
 625:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 4846              		.loc 10 625 9 is_stmt 1 view .LVU1280
 4847              	.LBB2067:
 4848              	.LBI2067:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4849              		.loc 10 190 7 view .LVU1281
 4850              	.LBB2068:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4851              		.loc 10 193 51 is_stmt 0 view .LVU1282
 4852 00bc 488D4310 		leaq	16(%rbx), %rax
 4853              	.LVL450:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4854              		.loc 10 193 51 view .LVU1283
 4855              	.LBE2068:
 4856              	.LBE2067:
GAS LISTING /tmp/ccZtEYtQ.s 			page 206


 4857              	.LBB2069:
 4858              	.LBI2069:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4859              		.loc 10 156 2 is_stmt 1 view .LVU1284
 4860              	.LBB2070:
 4861              	.LBB2071:
 4862              	.LBI2071:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4863              		.loc 11 141 7 view .LVU1285
 4864              	.LBB2072:
 4865              	.LBI2072:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4866              		.loc 12 83 7 view .LVU1286
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4867              		.loc 12 83 7 is_stmt 0 view .LVU1287
 4868              	.LBE2072:
 4869              	.LBE2071:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4870              		.loc 10 157 35 view .LVU1288
 4871 00c0 488903   		movq	%rax, (%rbx)
 4872              	.LVL451:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4873              		.loc 10 157 35 view .LVU1289
 4874              	.LBE2070:
 4875              	.LBE2069:
 4876              	.LBB2073:
 4877              	.LBI2073:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 4878              		.loc 10 263 9 is_stmt 1 view .LVU1290
 4879              	.LBB2074:
 4880              	.LBB2075:
 4881              	.LBI2075:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 4882              		.loc 10 243 9 view .LVU1291
 4883              	.LBB2076:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4884              		.loc 10 247 11 is_stmt 0 view .LVU1292
 4885 00c3 4C89E6   		movq	%r12, %rsi
 4886 00c6 4889DF   		movq	%rbx, %rdi
 4887 00c9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_ite
 4887      00
 4888              	.LVL452:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 4889              		.loc 10 247 11 view .LVU1293
 4890              	.LBE2076:
 4891              	.LBE2075:
 4892              	.LBE2074:
 4893              	.LBE2073:
 4894              	.LBE2066:
 4895              	.LBB2077:
 4896              	.LBI2077:
 4897              		.loc 11 153 7 is_stmt 1 view .LVU1294
 4898              	.LBB2078:
 4899              	.LBI2078:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4900              		.loc 12 89 7 view .LVU1295
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 207


 4901              		.loc 12 89 7 is_stmt 0 view .LVU1296
 4902              	.LBE2078:
 4903              	.LBE2077:
 116:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 4904              		.loc 14 116 5 view .LVU1297
 4905 00ce 488B8528 		movq	-216(%rbp), %rax
 4905      FFFFFF
 4906 00d5 64493345 		xorq	%fs:0(%r13), %rax
 4906      00
 4907 00da 750E     		jne	.L269
 4908 00dc 4889D8   		movq	%rbx, %rax
 4909 00df 488D65E8 		leaq	-24(%rbp), %rsp
 4910 00e3 5B       		popq	%rbx
 4911              	.LVL453:
 4912              		.loc 14 116 5 view .LVU1298
 4913 00e4 415C     		popq	%r12
 4914              	.LVL454:
 4915              		.loc 14 116 5 view .LVU1299
 4916 00e6 415D     		popq	%r13
 4917 00e8 5D       		popq	%rbp
 4918              		.cfi_remember_state
 4919              		.cfi_def_cfa 7, 8
 4920 00e9 C3       		ret
 4921              	.LVL455:
 4922              	.L269:
 4923              		.cfi_restore_state
 4924              		.loc 14 116 5 view .LVU1300
 4925 00ea E8000000 		call	__stack_chk_fail@PLT
 4925      00
 4926              	.LVL456:
 4927              		.cfi_endproc
 4928              	.LFE2588:
 4930              		.section	.rodata._ZN4vect8toStringB5cxx11Ev.str1.1,"aMS",@progbits,1
 4931              	.LC25:
 4932 0000 00       		.string	""
 4933              	.LC26:
 4934 0001 62617369 		.string	"basic_string::append"
 4934      635F7374 
 4934      72696E67 
 4934      3A3A6170 
 4934      70656E64 
 4935              	.LC27:
 4936 0016 7B00     		.string	"{"
 4937              	.LC28:
 4938 0018 256600   		.string	"%f"
 4939              	.LC29:
 4940 001b 2C2000   		.string	", "
 4941              	.LC30:
 4942 001e 7D00     		.string	"}"
 4943              		.section	.text._ZN4vect8toStringB5cxx11Ev,"axG",@progbits,_ZN4vect8toStringB5cxx11Ev,comdat
 4944              		.align 2
 4945              		.weak	_ZN4vect8toStringB5cxx11Ev
 4947              	_ZN4vect8toStringB5cxx11Ev:
 4948              	.LVL457:
 4949              	.LFB2474:
 4950              		.file 15 "Includes/findwayBases.hpp"
   1:Includes/findwayBases.hpp **** #include "math.hpp"
GAS LISTING /tmp/ccZtEYtQ.s 			page 208


   2:Includes/findwayBases.hpp **** #include <string>
   3:Includes/findwayBases.hpp **** 
   4:Includes/findwayBases.hpp **** #define COORDS_DATATYPE float
   5:Includes/findwayBases.hpp **** 
   6:Includes/findwayBases.hpp **** #define CORNER_LEFT_BOT     0
   7:Includes/findwayBases.hpp **** #define CORNER_LEFT_TOP     1
   8:Includes/findwayBases.hpp **** #define CORNER_RIGHT_TOP    2
   9:Includes/findwayBases.hpp **** #define CORNER_RIGHT_BOT    3
  10:Includes/findwayBases.hpp **** 
  11:Includes/findwayBases.hpp **** 
  12:Includes/findwayBases.hpp **** struct coords
  13:Includes/findwayBases.hpp **** {
  14:Includes/findwayBases.hpp ****     COORDS_DATATYPE     x,
  15:Includes/findwayBases.hpp ****                         y;
  16:Includes/findwayBases.hpp ****     std::string toString()
  17:Includes/findwayBases.hpp ****     {
  18:Includes/findwayBases.hpp ****         std::string str = "";
  19:Includes/findwayBases.hpp ****         str += "{";
  20:Includes/findwayBases.hpp ****         str += std::to_string(x);
  21:Includes/findwayBases.hpp ****         str += ", ";
  22:Includes/findwayBases.hpp ****         str += std::to_string(y);
  23:Includes/findwayBases.hpp ****         str += "}";
  24:Includes/findwayBases.hpp ****         return str;
  25:Includes/findwayBases.hpp ****     }
  26:Includes/findwayBases.hpp **** 
  27:Includes/findwayBases.hpp ****     bool eq(struct coords *c)
  28:Includes/findwayBases.hpp ****     {
  29:Includes/findwayBases.hpp ****         return (x == c->x && y == c->y);
  30:Includes/findwayBases.hpp ****     }
  31:Includes/findwayBases.hpp **** 
  32:Includes/findwayBases.hpp ****     bool eq(COORDS_DATATYPE _x, COORDS_DATATYPE _y)
  33:Includes/findwayBases.hpp ****     {
  34:Includes/findwayBases.hpp ****         return (x == _x && y == _y);
  35:Includes/findwayBases.hpp ****     }
  36:Includes/findwayBases.hpp **** };
  37:Includes/findwayBases.hpp **** 
  38:Includes/findwayBases.hpp **** struct graphPoint
  39:Includes/findwayBases.hpp **** {
  40:Includes/findwayBases.hpp ****     struct graphPoint **targets = NULL;
  41:Includes/findwayBases.hpp ****     size_t numOfTargets = 0;
  42:Includes/findwayBases.hpp ****     struct coords c;
  43:Includes/findwayBases.hpp ****     bool calculated = false;
  44:Includes/findwayBases.hpp ****     COORDS_DATATYPE weight = INF;
  45:Includes/findwayBases.hpp ****     size_t i = 0;
  46:Includes/findwayBases.hpp **** 
  47:Includes/findwayBases.hpp ****     std::string toString()
  48:Includes/findwayBases.hpp ****     {
  49:Includes/findwayBases.hpp ****         std::string str = "";
  50:Includes/findwayBases.hpp ****         str += "{tgts: ";
  51:Includes/findwayBases.hpp ****         str += std::to_string(numOfTargets);
  52:Includes/findwayBases.hpp ****         str += "; cal: ";
  53:Includes/findwayBases.hpp ****         str += std::to_string(calculated);
  54:Includes/findwayBases.hpp ****         str += "; weight: ";
  55:Includes/findwayBases.hpp ****         str += std::to_string(weight);
  56:Includes/findwayBases.hpp ****         str += "; i: ";
  57:Includes/findwayBases.hpp ****         str += std::to_string(i);
  58:Includes/findwayBases.hpp ****         str += "}";
GAS LISTING /tmp/ccZtEYtQ.s 			page 209


  59:Includes/findwayBases.hpp ****         return str;
  60:Includes/findwayBases.hpp ****     }
  61:Includes/findwayBases.hpp **** };
  62:Includes/findwayBases.hpp **** 
  63:Includes/findwayBases.hpp **** /*
  64:Includes/findwayBases.hpp ****  *  1-------2
  65:Includes/findwayBases.hpp ****  *  |       |
  66:Includes/findwayBases.hpp ****  *  |       |
  67:Includes/findwayBases.hpp ****  *  |       |
  68:Includes/findwayBases.hpp ****  *  0-------3
  69:Includes/findwayBases.hpp ****  */
  70:Includes/findwayBases.hpp **** 
  71:Includes/findwayBases.hpp **** struct obstacle
  72:Includes/findwayBases.hpp **** {
  73:Includes/findwayBases.hpp ****     struct coords      *c = NULL;
  74:Includes/findwayBases.hpp ****     struct graphPoint  *corners[4] = {NULL, NULL, NULL, NULL};
  75:Includes/findwayBases.hpp ****     COORDS_DATATYPE     a = 0;
  76:Includes/findwayBases.hpp **** };
  77:Includes/findwayBases.hpp **** 
  78:Includes/findwayBases.hpp **** struct baseline
  79:Includes/findwayBases.hpp **** {
  80:Includes/findwayBases.hpp ****     float               k = 0;
  81:Includes/findwayBases.hpp ****     COORDS_DATATYPE     b = 0;
  82:Includes/findwayBases.hpp **** };
  83:Includes/findwayBases.hpp **** 
  84:Includes/findwayBases.hpp **** struct vect
  85:Includes/findwayBases.hpp **** {
  86:Includes/findwayBases.hpp ****     struct coords      *c = NULL;
  87:Includes/findwayBases.hpp ****     COORDS_DATATYPE     dx = 0,
  88:Includes/findwayBases.hpp ****                         dy = 0;
  89:Includes/findwayBases.hpp **** 
  90:Includes/findwayBases.hpp ****     std::string toString()
 4951              		.loc 15 90 17 is_stmt 1 view -0
 4952              		.cfi_startproc
 4953              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 4954              		.cfi_lsda 0x1b,.LLSDA2474
 4955              		.loc 15 90 17 is_stmt 0 view .LVU1302
 4956 0000 55       		pushq	%rbp
 4957              		.cfi_def_cfa_offset 16
 4958              		.cfi_offset 6, -16
 4959 0001 53       		pushq	%rbx
 4960              		.cfi_def_cfa_offset 24
 4961              		.cfi_offset 3, -24
 4962 0002 4883EC38 		subq	$56, %rsp
 4963              		.cfi_def_cfa_offset 80
 4964 0006 4889FB   		movq	%rdi, %rbx
 4965 0009 4889F5   		movq	%rsi, %rbp
 4966              		.loc 15 90 17 view .LVU1303
 4967 000c 64488B04 		movq	%fs:40, %rax
 4967      25280000 
 4967      00
 4968 0015 48894424 		movq	%rax, 40(%rsp)
 4968      28
 4969 001a 31C0     		xorl	%eax, %eax
  91:Includes/findwayBases.hpp ****     {
  92:Includes/findwayBases.hpp ****         std::string str = "";
 4970              		.loc 15 92 9 is_stmt 1 view .LVU1304
GAS LISTING /tmp/ccZtEYtQ.s 			page 210


 4971              	.LVL458:
 4972              	.LBB2228:
 4973              	.LBI2228:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 4974              		.loc 11 138 7 view .LVU1305
 4975              	.LBB2229:
 4976              	.LBI2229:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4977              		.loc 12 80 7 view .LVU1306
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4978              		.loc 12 80 7 is_stmt 0 view .LVU1307
 4979              	.LBE2229:
 4980              	.LBE2228:
 4981              	.LBB2230:
 4982              	.LBI2230:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 4983              		.loc 10 525 7 is_stmt 1 view .LVU1308
 4984              	.LBB2231:
 4985              	.LBI2231:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4986              		.loc 10 190 7 view .LVU1309
 4987              	.LBB2232:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4988              		.loc 10 193 51 is_stmt 0 view .LVU1310
 4989 001c 488D4710 		leaq	16(%rdi), %rax
 4990              	.LVL459:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 4991              		.loc 10 193 51 view .LVU1311
 4992              	.LBE2232:
 4993              	.LBE2231:
 4994              	.LBB2233:
 4995              	.LBI2233:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 4996              		.loc 10 156 2 is_stmt 1 view .LVU1312
 4997              	.LBB2234:
 4998              	.LBB2235:
 4999              	.LBI2235:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5000              		.loc 11 141 7 view .LVU1313
 5001              	.LBB2236:
 5002              	.LBI2236:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5003              		.loc 12 83 7 view .LVU1314
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5004              		.loc 12 83 7 is_stmt 0 view .LVU1315
 5005              	.LBE2236:
 5006              	.LBE2235:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5007              		.loc 10 157 35 view .LVU1316
 5008 0020 488907   		movq	%rax, (%rdi)
 5009              	.LVL460:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5010              		.loc 10 157 35 view .LVU1317
 5011              	.LBE2234:
 5012              	.LBE2233:
 5013              	.LBB2237:
 5014              	.LBI2237:
GAS LISTING /tmp/ccZtEYtQ.s 			page 211


 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 5015              		.loc 4 329 7 is_stmt 1 view .LVU1318
 5016              	.LBE2237:
 5017              	.LBE2230:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5018              		.loc 4 335 2 view .LVU1319
 5019              	.LBB2242:
 5020              	.LBB2238:
 5021              	.LBI2238:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 5022              		.loc 10 263 9 view .LVU1320
 5023              	.LBB2239:
 5024              	.LBB2240:
 5025              	.LBI2240:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 5026              		.loc 10 243 9 view .LVU1321
 5027              	.LBB2241:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5028              		.loc 10 247 11 is_stmt 0 view .LVU1322
 5029 0023 488D1500 		leaq	.LC25(%rip), %rdx
 5029      000000
 5030 002a 4889D6   		movq	%rdx, %rsi
 5031              	.LVL461:
 5032              	.LEHB9:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5033              		.loc 10 247 11 view .LVU1323
 5034 002d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
 5034      00
 5035              	.LVL462:
 5036              	.LEHE9:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5037              		.loc 10 247 11 view .LVU1324
 5038              	.LBE2241:
 5039              	.LBE2240:
 5040              	.LBE2239:
 5041              	.LBE2238:
 5042              	.LBE2242:
 5043              	.LBB2243:
 5044              	.LBI2243:
 5045              		.loc 11 153 7 is_stmt 1 view .LVU1325
 5046              	.LBB2244:
 5047              	.LBI2244:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5048              		.loc 12 89 7 view .LVU1326
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5049              		.loc 12 89 7 is_stmt 0 view .LVU1327
 5050              	.LBE2244:
 5051              	.LBE2243:
  93:Includes/findwayBases.hpp ****         str += "{";
 5052              		.loc 15 93 9 is_stmt 1 view .LVU1328
 5053              	.LBB2245:
 5054              	.LBI2245:
 658:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 660:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 212


 663:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 664:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 665:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 667:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 670:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/usr/include/c++/9.2.0/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 673:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 677:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(0);
 680:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 681:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else
 682:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 683:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 692:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 693:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 695:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 696:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__str);
 697:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 698:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 699:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
 706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 714:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 715:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c)
 716:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 717:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c);
 718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 719:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccZtEYtQ.s 			page 213


 720:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 721:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 729:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 739:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(0);
 743:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 744:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 747:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__str.size())
 751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    size_type __capacity;
 761:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 763:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 765:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __data = _M_data();
 767:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 769:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__data)
GAS LISTING /tmp/ccZtEYtQ.s 			page 214


 777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 778:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_data(__data);
 779:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    else
 782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  assign(__str);
 786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str.clear();
 787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 788:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 789:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 790:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 794:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 795:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 799:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 800:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 802:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 806:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 807:/usr/include/c++/9.2.0/bits/basic_string.h ****      template<typename _Tp>
 808:/usr/include/c++/9.2.0/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/usr/include/c++/9.2.0/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/usr/include/c++/9.2.0/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 812:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
 815:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 816:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 819:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 820:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
 821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.
 824:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 826:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 829:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 832:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 833:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
GAS LISTING /tmp/ccZtEYtQ.s 			page 215


 834:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 837:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 840:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 841:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 842:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 845:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 848:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 849:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 850:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 853:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.
 857:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 858:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 859:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 862:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 866:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 867:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 868:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.
 875:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 876:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 877:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 884:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 885:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 886:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 889:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 216


 891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 893:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 894:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 895:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
 896:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 898:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 901:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 902:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 903:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
 904:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 906:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 910:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 911:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 912:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
 913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 919:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 920:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 921:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
 922:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 924:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 925:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 926:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
 927:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 929:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 931:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 932:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 933:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 935:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 936:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 938:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 939:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 941:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
GAS LISTING /tmp/ccZtEYtQ.s 			page 217


 948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 954:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 955:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 957:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
 966:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 967:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 968:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
 969:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 971:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 974:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 976:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
 977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
 978:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
 980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
 981:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
 982:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
 983:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 984:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 985:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 986:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 987:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 988:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 989:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 992:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 993:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 998:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 999:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
1002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccZtEYtQ.s 			page 218


1005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
1015:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1016:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1017:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1019:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1022:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1023:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
1025:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1026:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1030:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
1033:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1034:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
1035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1045:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1061:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 219


1062:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1063:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
1064:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1065:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
1067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1083:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1084:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
1085:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
1087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1092:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1093:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1094:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1095:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1100:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1104:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1105:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
1106:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1107:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
1108:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1113:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1114:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1115:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1117:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 220


1119:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1120:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1121:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() noexcept
1122:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1123:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1125:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1126:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1127:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1128:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1130:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1131:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1132:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
1133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1136:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1141:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1142:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1143:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() noexcept
1144:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1145:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1149:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
1152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1153:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1154:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
1155:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1159:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1161:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
1162:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1167:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
1170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1171:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 221


1176:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
 5055              		.loc 10 1177 7 view .LVU1329
 5056              	.LBB2246:
 5057              	.LBI2246:
1178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
1179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1180:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
1182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1185:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1186:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
1189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1190:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1194:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1198:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1199:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1202:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1203:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1209:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1214:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1215:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1220:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str)
1222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1224:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 222


1230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1232:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1237:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1238:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1243:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1244:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1249:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1250:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1251:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
1255:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1257:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1258:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
 5058              		.loc 10 1263 7 view .LVU1330
 5059              		.loc 10 1263 7 is_stmt 0 view .LVU1331
 5060              	.LBE2246:
 5061              	.LBE2245:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5062              		.loc 4 335 2 is_stmt 1 view .LVU1332
 5063              	.LBB2254:
 5064              	.LBB2253:
 5065              	.LBB2247:
 5066              	.LBB2248:
 5067              	.LBI2248:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5068              		.loc 10 320 7 view .LVU1333
 5069              	.LBB2249:
 5070              	.LBB2250:
 5071              	.LBI2250:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5072              		.loc 10 930 7 view .LVU1334
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5073              		.loc 10 930 7 is_stmt 0 view .LVU1335
 5074              	.LBE2250:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5075              		.loc 10 322 2 view .LVU1336
GAS LISTING /tmp/ccZtEYtQ.s 			page 223


 5076 0032 48B8FFFF 		movabsq	$4611686018427387903, %rax
 5076      FFFFFFFF 
 5076      FF3F
 5077 003c 48394308 		cmpq	%rax, 8(%rbx)
 5078 0040 7416     		je	.L288
 5079              	.LVL463:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5080              		.loc 10 322 2 view .LVU1337
 5081              	.LBE2249:
 5082              	.LBE2248:
1264:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
 5083              		.loc 10 1268 27 view .LVU1338
 5084 0042 BA010000 		movl	$1, %edx
 5084      00
 5085 0047 488D3500 		leaq	.LC27(%rip), %rsi
 5085      000000
 5086 004e 4889DF   		movq	%rbx, %rdi
 5087              	.LEHB10:
 5088 0051 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5088      00
 5089              	.LVL464:
 5090 0056 EB14     		jmp	.L289
 5091              	.LVL465:
 5092              	.L288:
 5093              	.LBB2252:
 5094              	.LBB2251:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5095              		.loc 10 323 24 view .LVU1339
 5096 0058 488D3D00 		leaq	.LC26(%rip), %rdi
 5096      000000
 5097 005f E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 5097      00
 5098              	.LVL466:
 5099              	.L283:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5100              		.loc 10 323 24 view .LVU1340
 5101 0064 4889C5   		movq	%rax, %rbp
 5102              	.LVL467:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5103              		.loc 10 323 24 view .LVU1341
 5104 0067 E9180100 		jmp	.L278
 5104      00
 5105              	.LVL468:
 5106              	.L289:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5107              		.loc 10 323 24 view .LVU1342
 5108              	.LBE2251:
 5109              	.LBE2252:
 5110              	.LBE2247:
 5111              	.LBE2253:
 5112              	.LBE2254:
  94:Includes/findwayBases.hpp ****         str += std::to_string(dx);
 5113              		.loc 15 94 9 is_stmt 1 view .LVU1343
GAS LISTING /tmp/ccZtEYtQ.s 			page 224


 5114              	.LBB2255:
 5115              	.LBI2255:
1269:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1270:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1271:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1279:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1280:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1283:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1289:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1290:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1302:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1306:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1308:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1309:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1312:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1318:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1319:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1322:/usr/include/c++/9.2.0/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
GAS LISTING /tmp/ccZtEYtQ.s 			page 225


1324:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
1325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1326:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1333:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1334:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1337:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1342:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1343:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1344:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1348:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1349:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
1350:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1363:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1364:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1368:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1369:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1370:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1372:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1379:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
GAS LISTING /tmp/ccZtEYtQ.s 			page 226


1381:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1387:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1388:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1389:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1402:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1403:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1408:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1418:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1419:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1421:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1424:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1425:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
1433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
GAS LISTING /tmp/ccZtEYtQ.s 			page 227


1438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1442:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1451:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1452:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1463:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1467:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1469:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1470:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1473:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1479:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1483:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1484:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1490:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1494:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
GAS LISTING /tmp/ccZtEYtQ.s 			page 228


1495:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1497:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1498:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1505:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1509:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1515:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1517:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1519:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1532:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1533:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1534:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1536:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1541:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1542:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
GAS LISTING /tmp/ccZtEYtQ.s 			page 229


1552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1555:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1556:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1559:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1560:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1575:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/c++/9.2.0/bits/basic_string.h **** 	iterator
1578:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1580:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1585:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1586:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
1600:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1603:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1604:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
GAS LISTING /tmp/ccZtEYtQ.s 			page 230


1609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1611:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1612:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1615:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/c++/9.2.0/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1618:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1620:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1623:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1625:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1626:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1638:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1639:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1661:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1662:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
GAS LISTING /tmp/ccZtEYtQ.s 			page 231


1666:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1684:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1688:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1704:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1706:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1710:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1711:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
GAS LISTING /tmp/ccZtEYtQ.s 			page 232


1723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1727:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1732:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1745:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1746:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1753:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1754:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1761:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1768:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1769:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
1775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1778:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
GAS LISTING /tmp/ccZtEYtQ.s 			page 233


1780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1789:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1790:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1791:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1805:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1806:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1807:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1809:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == npos)
1811:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__n != 0)
1813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1815:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1816:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1817:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1826:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1828:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < end());
1830:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1834:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1835:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
GAS LISTING /tmp/ccZtEYtQ.s 			page 234


1837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1844:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1845:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1847:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __last <= end());
1849:/usr/include/c++/9.2.0/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__last == end())
1851:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
1853:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1856:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1857:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
1862:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1863:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1864:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() noexcept
1865:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1866:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1869:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
1887:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1888:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1889:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 235


1894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
1902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1910:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1911:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1917:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1934:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1935:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1936:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2)
1938:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1939:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
GAS LISTING /tmp/ccZtEYtQ.s 			page 236


1951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1960:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1961:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1963:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1983:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1989:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2002:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2003:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string& __str)
2005:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2007:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 237


2008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2016:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2021:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2022:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2026:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2028:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2030:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2031:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2044:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2045:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2050:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2051:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2052:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 238


2065:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2066:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __c)
2068:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2073:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2074:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2088:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2089:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
2091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2093:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2096:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   std::__false_type());
2101:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2102:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2103:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2104:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/usr/include/c++/9.2.0/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2107:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2108:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2109:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2114:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2118:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2119:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2120:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
GAS LISTING /tmp/ccZtEYtQ.s 			page 239


2122:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2123:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2126:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2132:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2133:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2134:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2137:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2144:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2145:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2148:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2155:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2156:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2161:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2166:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2175:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
GAS LISTING /tmp/ccZtEYtQ.s 			page 240


2179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2180:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2181:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
2185:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2186:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2188:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2194:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2201:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2202:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2211:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
2219:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2223:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2224:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
2227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
2229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2232:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2233:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/ccZtEYtQ.s 			page 241


2236:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2239:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2241:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
2242:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
2243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2244:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2248:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2249:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2250:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __false_type);
2253:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2255:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
2257:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2258:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2259:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const size_type __len2);
2261:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2263:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2265:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
2266:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2267:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2279:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2280:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
2288:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2289:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
2290:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2292:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
GAS LISTING /tmp/ccZtEYtQ.s 			page 242


2293:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2294:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
2298:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2299:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2300:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2302:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2303:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2304:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2306:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2311:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2314:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2315:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2319:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
2323:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
2324:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2325:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2327:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2330:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
2331:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2334:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2345:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2346:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2347:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 243


2350:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2351:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
2359:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2360:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2361:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2365:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2367:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2372:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2373:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2377:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2380:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2382:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2383:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2392:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2393:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2395:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2398:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2399:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
GAS LISTING /tmp/ccZtEYtQ.s 			page 244


2407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2409:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2410:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2412:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2422:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2423:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2427:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2434:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2439:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2442:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2451:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2455:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2456:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2457:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2460:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
GAS LISTING /tmp/ccZtEYtQ.s 			page 245


2464:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2466:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2470:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2471:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2473:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2476:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2477:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2483:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2487:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2488:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2490:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2500:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2501:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2502:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2506:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2514:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
GAS LISTING /tmp/ccZtEYtQ.s 			page 246


2521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2522:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2523:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2524:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2535:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2536:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2537:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2540:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2550:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2551:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2554:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2557:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2558:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2570:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2571:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
GAS LISTING /tmp/ccZtEYtQ.s 			page 247


2578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2584:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2585:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2586:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2590:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2606:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2607:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2608:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2619:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2620:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2621:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2624:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2634:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccZtEYtQ.s 			page 248


2635:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2638:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2642:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2654:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2655:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2658:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2668:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2669:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2673:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2681:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2682:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2686:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2689:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccZtEYtQ.s 			page 249


2692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2703:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2704:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2717:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2718:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2724:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2725:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2735:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2736:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
GAS LISTING /tmp/ccZtEYtQ.s 			page 250


2749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2750:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2751:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2755:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2763:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2768:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2771:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2773:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2784:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2785:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2786:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2798:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2799:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2800:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2803:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccZtEYtQ.s 			page 251


2806:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2807:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2817:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2818:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
2826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2833:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
2834:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
2836:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2838:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2852:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2853:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2855:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2859:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
2861:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
GAS LISTING /tmp/ccZtEYtQ.s 			page 252


2863:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2864:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2865:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2871:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2872:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2876:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2881:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
2883:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
2885:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2886:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2887:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2895:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2896:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2904:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2914:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2915:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/ccZtEYtQ.s 			page 253


2920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2924:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2925:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2926:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
2941:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2945:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2946:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2948:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
2967:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2971:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2972:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2975:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 254


2977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
2988:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2989:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2990:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2992:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3012:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3013:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3014:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3016:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
GAS LISTING /tmp/ccZtEYtQ.s 			page 255


3034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
3039:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3040:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3041:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
3043:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3044:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3046:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3049:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3050:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3053:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3054:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3057:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3058:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3061:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3062:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3065:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3066:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
3069:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3070:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/usr/include/c++/9.2.0/bits/basic_string.h ****     };
3073:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/usr/include/c++/9.2.0/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/usr/include/c++/9.2.0/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3077:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
3078:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3081:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
3082:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
3083:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3084:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3089:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
GAS LISTING /tmp/ccZtEYtQ.s 			page 256


3091:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3095:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @doctodo
3096:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3097:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3098:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3101:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  A string looks like this:
3102:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3103:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @code
3104:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        [_Rep]
3105:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        _M_length
3106:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @endcode
3110:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3111:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  pointer to the header.
3114:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3115:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  object at the front.
3122:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3123:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string length.)
3128:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3129:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/usr/include/c++/9.2.0/bits/basic_string.h ****   */
3138:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
3141:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
3142:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3144:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
3145:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3146:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
GAS LISTING /tmp/ccZtEYtQ.s 			page 257


3148:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3155:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3158:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/usr/include/c++/9.2.0/bits/basic_string.h ****                                                             const_iterator;
3163:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3166:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
3167:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3170:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3171:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _Rep: string representation
3172:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   Invariants:
3173:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/usr/include/c++/9.2.0/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/usr/include/c++/9.2.0/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3185:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep_base
3186:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3187:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_length;
3188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3192:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3194:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Types:
3195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// (Public) Data members:
3198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
GAS LISTING /tmp/ccZtEYtQ.s 			page 258


3205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// look like this:
3206:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Solving for m:
3208:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/usr/include/c++/9.2.0/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/usr/include/c++/9.2.0/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3217:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _Rep&
3218:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/usr/include/c++/9.2.0/bits/basic_string.h ****         { 
3220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3226:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3227:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3228:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3230:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/usr/include/c++/9.2.0/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/usr/include/c++/9.2.0/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3237:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3239:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3241:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3244:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/usr/include/c++/9.2.0/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/usr/include/c++/9.2.0/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_dispose.
3250:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3252:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3254:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3255:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3256:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3257:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3260:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3261:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccZtEYtQ.s 			page 259


3262:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3267:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3270:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3271:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3278:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3279:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3280:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refdata() throw()
3281:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3283:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3284:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3286:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/usr/include/c++/9.2.0/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3289:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Create & Destroy
3291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static _Rep*
3292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3294:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3295:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3297:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/usr/include/c++/9.2.0/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   all the previous decrements.
3308:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/usr/include/c++/9.2.0/bits/basic_string.h **** 							 -1) <= 0)
3313:/usr/include/c++/9.2.0/bits/basic_string.h **** 		{
3314:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/usr/include/c++/9.2.0/bits/basic_string.h **** 		}
3317:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3318:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
GAS LISTING /tmp/ccZtEYtQ.s 			page 260


3319:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3320:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3326:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3329:/usr/include/c++/9.2.0/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_refdata();
3331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3332:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3333:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3334:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3336:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3337:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3343:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3345:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3346:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3347:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (public):
3348:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/usr/include/c++/9.2.0/bits/basic_string.h ****       // size that the allocator can hold.
3350:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3353:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3354:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (private):
3355:/usr/include/c++/9.2.0/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3357:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3358:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3361:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3365:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Rep*
3366:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3369:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/usr/include/c++/9.2.0/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3372:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3375:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
GAS LISTING /tmp/ccZtEYtQ.s 			page 261


3376:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3379:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3380:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_leak_hard();
3384:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3386:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3389:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
3390:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
3394:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3395:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3396:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3402:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3403:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3405:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3410:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3411:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3413:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3415:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3418:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3422:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3424:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3425:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3427:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3429:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3430:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3431:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccZtEYtQ.s 			page 262


3433:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3439:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3440:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3442:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3443:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3445:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3447:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3448:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
3451:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
3452:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3454:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3457:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3458:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3459:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3462:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3463:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3467:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3468:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3471:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3472:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3476:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
3477:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3486:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
3487:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3488:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3489:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
GAS LISTING /tmp/ccZtEYtQ.s 			page 263


3490:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3492:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3493:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak_hard();
3494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3495:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _Rep&
3496:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3499:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3503:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
3509:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3510:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
3512:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
3514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3515:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
3519:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
3520:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3524:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3525:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
3528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3531:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3536:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3541:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3544:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
3545:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccZtEYtQ.s 			page 264


3547:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3549:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3551:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3552:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3553:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3554:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3556:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3557:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3559:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3564:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3566:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3574:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3577:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n);
3585:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3592:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3595:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3601:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
3603:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 265


3604:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3611:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3620:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3628:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3632:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3634:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3637:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3639:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3640:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3641:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3646:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3648:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3651:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3652:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3657:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3660:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
GAS LISTING /tmp/ccZtEYtQ.s 			page 266


3661:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3662:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3664:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3666:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3674:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
3675:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3678:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3686:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3696:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
3698:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3701:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3705:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3708:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3712:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3713:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str); }
3715:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3716:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 267


3718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3720:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3721:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
3723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
3734:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3736:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3737:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3738:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3746:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3747:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// NB: DR 1204.
3751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
3752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3753:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3759:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3760:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3764:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3765:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3766:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3767:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3769:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3772:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
3773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator=(const _Tp& __svt)
GAS LISTING /tmp/ccZtEYtQ.s 			page 268


3775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3777:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
3780:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3781:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3785:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
3786:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3790:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3791:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3793:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data());
3795:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3796:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3797:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3800:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3801:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3802:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3805:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3809:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3810:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3815:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3816:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3817:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3819:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3820:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3821:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3829:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3830:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 269


3832:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3833:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3837:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3838:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3839:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3842:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3847:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3848:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3851:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3855:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3856:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3857:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3860:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3864:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3865:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3866:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
3867:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3869:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3872:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3873:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3874:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
3875:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3877:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3881:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3882:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3883:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
3884:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3886:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
GAS LISTING /tmp/ccZtEYtQ.s 			page 270


3889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3890:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3891:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3892:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
3893:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3895:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3896:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3897:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
3898:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3900:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3901:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3904:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3906:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3907:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3910:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3912:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3925:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3926:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3928:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
3937:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3938:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3939:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
3940:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3945:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccZtEYtQ.s 			page 271


3946:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3947:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
3948:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
3949:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3950:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
3951:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
3952:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
3953:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
3954:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3955:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3956:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3957:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3959:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3963:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3964:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
3970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
3977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
3983:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3984:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3985:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3987:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3988:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3990:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3992:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3994:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3999:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
4000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4002:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
GAS LISTING /tmp/ccZtEYtQ.s 			page 272


4003:/usr/include/c++/9.2.0/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4005:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear()
4006:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4008:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4009:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4013:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
4016:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4017:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
4018:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
4027:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4028:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4029:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4031:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4034:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4045:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
4047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4048:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
4050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4054:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4057:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
GAS LISTING /tmp/ccZtEYtQ.s 			page 273


4060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4067:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4068:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
4069:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
4071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4075:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4076:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4077:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4078:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  unsharing the string.
4088:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4089:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4090:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
4091:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
4093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4097:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4099:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4100:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4101:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4103:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4105:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4106:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4107:/usr/include/c++/9.2.0/bits/basic_string.h ****       front()
4108:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4109:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4111:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4113:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4114:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4116:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 274


4117:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4118:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
4119:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4122:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4123:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4124:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4125:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4127:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4128:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4129:/usr/include/c++/9.2.0/bits/basic_string.h ****       back()
4130:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4131:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4135:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4136:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
4138:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4139:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4140:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
4141:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4145:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4146:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4147:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
4148:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4149:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4153:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4154:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
4156:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4157:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4158:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4162:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4163:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
4165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4166:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
4168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4171:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4172:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
GAS LISTING /tmp/ccZtEYtQ.s 			page 275


4174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
4175:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4176:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4177:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4178:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4184:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4185:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4189:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4195:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4200:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4201:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4206:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4207:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str);
4208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4209:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4210:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4222:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4223:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 276


4231:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4232:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4234:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4239:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4240:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
4241:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4245:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4246:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4255:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4257:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4263:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4264:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4267:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4268:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4276:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4277:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4278:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4281:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4287:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
GAS LISTING /tmp/ccZtEYtQ.s 			page 277


4288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4295:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *               from.
4299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4304:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return append(__sv.data()
4309:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4312:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4313:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4314:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4318:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4319:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
4320:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->reserve(__len);
4324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4327:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4328:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4333:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4334:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4336:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccZtEYtQ.s 			page 278


4345:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4346:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
4350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4351:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4352:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4354:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4367:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4368:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4373:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4379:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4383:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4384:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4386:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
4394:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4395:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4398:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4401:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 279


4402:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
4410:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4411:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4412:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4415:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4423:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4424:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4425:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4428:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4439:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4445:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4446:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4449:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4453:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 280


4459:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4460:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4461:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4469:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4471:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4483:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4484:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4485:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
4493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4500:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4501:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
4502:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4505:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4512:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4513:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
GAS LISTING /tmp/ccZtEYtQ.s 			page 281


4516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4518:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4519:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4520:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4531:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4533:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4536:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4537:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4554:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4555:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
GAS LISTING /tmp/ccZtEYtQ.s 			page 282


4573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4577:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4578:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4580:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4594:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4595:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4596:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4601:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4602:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4603:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4617:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4619:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4623:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccZtEYtQ.s 			page 283


4630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4635:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4636:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4637:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4646:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4653:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4654:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4657:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4660:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4661:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
4667:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4670:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4671:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4675:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4680:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4682:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 284


4687:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4697:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4698:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4700:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4703:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4704:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4705:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4713:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4714:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __position)
4715:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4733:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4734:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/usr/include/c++/9.2.0/bits/basic_string.h ****  
4736:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
4741:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4742:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4743:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
GAS LISTING /tmp/ccZtEYtQ.s 			page 285


4744:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/usr/include/c++/9.2.0/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4748:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4749:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4750:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4751:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
4766:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4767:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4768:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4771:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
4781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4789:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4790:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4796:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
GAS LISTING /tmp/ccZtEYtQ.s 			page 286


4801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4813:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4814:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4815:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2);
4817:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4818:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4833:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4834:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4835:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4837:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4840:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4841:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4857:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
GAS LISTING /tmp/ccZtEYtQ.s 			page 287


4858:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4859:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4863:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4876:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4877:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4894:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4895:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4902:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4903:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
GAS LISTING /tmp/ccZtEYtQ.s 			page 288


4915:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4916:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4917:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4922:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4923:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4937:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4944:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4945:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4960:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4961:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4962:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
4965:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4971:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 289


4972:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4975:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4983:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4994:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4995:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4996:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5004:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5005:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5006:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5009:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5016:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
GAS LISTING /tmp/ccZtEYtQ.s 			page 290


5029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
5030:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5031:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
5035:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5036:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5044:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5045:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5061:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5062:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
5069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
5077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
5079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5082:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5083:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/ccZtEYtQ.s 			page 291


5086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5089:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5090:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5091:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
5092:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5094:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5098:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
5099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5100:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5103:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5104:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
5106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5107:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5108:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      size_type __n2);
5110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5111:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5114:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5115:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5118:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/usr/include/c++/9.2.0/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5121:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5122:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5125:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5126:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/usr/include/c++/9.2.0/bits/basic_string.h **** 				    __end, __a); }
5130:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5131:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5132:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5135:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5136:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5137:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
5142:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 292


5143:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5145:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5146:/usr/include/c++/9.2.0/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      input_iterator_tag);
5148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _FwdIterator>
5152:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5153:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5156:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5157:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5159:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
5160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5161:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5162:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5173:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5174:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5176:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
5182:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5183:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
5184:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s)
5185:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5187:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
5188:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
5193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5194:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5195:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5197:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5198:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5199:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
GAS LISTING /tmp/ccZtEYtQ.s 			page 293


5200:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5201:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5206:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5207:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5210:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5217:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
5218:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
5219:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
5221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data();
5222:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5223:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
5224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5228:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
5229:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
5231:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5232:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5239:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5243:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5244:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5245:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5248:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5254:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
GAS LISTING /tmp/ccZtEYtQ.s 			page 294


5257:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5258:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5259:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5263:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5264:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5273:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5274:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5279:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5280:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5281:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5290:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5291:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5293:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5300:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5308:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5309:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5310:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5311:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
GAS LISTING /tmp/ccZtEYtQ.s 			page 295


5314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5320:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5321:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5325:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5326:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5332:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5336:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5337:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5338:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5341:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5347:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5351:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5352:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5368:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5369:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 296


5371:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5378:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5386:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5387:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5388:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5398:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5399:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5400:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5404:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5415:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5416:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5417:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5420:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
GAS LISTING /tmp/ccZtEYtQ.s 			page 297


5428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5430:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5431:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5437:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5438:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5439:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5450:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5451:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5454:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5462:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5470:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5471:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5472:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5482:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5483:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5484:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
GAS LISTING /tmp/ccZtEYtQ.s 			page 298


5485:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5500:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5501:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5504:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5514:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5515:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5522:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5534:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5535:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5538:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
GAS LISTING /tmp/ccZtEYtQ.s 			page 299


5542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5546:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5547:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5551:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5554:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5556:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5557:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5566:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5567:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5571:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5583:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5584:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5587:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5597:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5598:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
GAS LISTING /tmp/ccZtEYtQ.s 			page 300


5599:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5604:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5615:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5616:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5621:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5627:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5632:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5635:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5636:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5637:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5638:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5647:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5648:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5649:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5653:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
GAS LISTING /tmp/ccZtEYtQ.s 			page 301


5656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5664:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5665:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5666:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5678:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5679:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5680:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5686:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5687:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5697:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5698:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5701:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5709:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5710:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
GAS LISTING /tmp/ccZtEYtQ.s 			page 302


5713:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5714:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5717:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5718:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5719:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
5724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
5732:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
5734:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5736:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5750:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5751:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
5759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
5761:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5762:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5763:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5769:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
GAS LISTING /tmp/ccZtEYtQ.s 			page 303


5770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
5781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
5783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5785:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
5791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5793:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5802:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                 against.
5808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5812:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5818:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5822:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
GAS LISTING /tmp/ccZtEYtQ.s 			page 304


5827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
5839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5843:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5844:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5846:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
5865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5869:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5870:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5873:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
GAS LISTING /tmp/ccZtEYtQ.s 			page 305


5884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
5886:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5887:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5888:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5890:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5910:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5911:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5912:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5914:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5915:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
5937:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5938:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5939:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
GAS LISTING /tmp/ccZtEYtQ.s 			page 306


5941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5944:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5947:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5948:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5951:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5952:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5955:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5956:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5959:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5960:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5963:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5964:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
5967:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5968:/usr/include/c++/9.2.0/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5970:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    void* exc);
5972:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend const char*
5973:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5975:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5977:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/usr/include/c++/9.2.0/bits/basic_string.h **** # endif
5979:/usr/include/c++/9.2.0/bits/basic_string.h ****   };
5980:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5982:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5992:/usr/include/c++/9.2.0/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
GAS LISTING /tmp/ccZtEYtQ.s 			page 307


5998:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6000:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6010:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6011:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator+
6012:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6013:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6018:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6023:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6025:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6026:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6027:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6028:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6029:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6034:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6039:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6040:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6045:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6049:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6050:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
GAS LISTING /tmp/ccZtEYtQ.s 			page 308


6055:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6060:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6062:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6063:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6065:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6066:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6071:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6075:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/usr/include/c++/9.2.0/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6080:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6081:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6082:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6089:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6095:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6100:/usr/include/c++/9.2.0/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/usr/include/c++/9.2.0/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/usr/include/c++/9.2.0/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/usr/include/c++/9.2.0/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6107:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 309


6112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6113:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6119:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6125:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __rhs)
6129:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6131:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6132:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator ==
6133:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6141:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6146:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT>
6147:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline
6148:/usr/include/c++/9.2.0/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/usr/include/c++/9.2.0/bits/basic_string.h **** 						    __lhs.size())); }
6154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6155:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6156:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6159:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6161:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6163:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6167:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6168:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 310


6169:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6170:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6173:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6175:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6176:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6178:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6179:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator !=
6180:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6181:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6186:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6188:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6193:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6194:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6197:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6198:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6199:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6201:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6205:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6206:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6208:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6211:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6213:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6217:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <
6218:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6219:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6224:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
GAS LISTING /tmp/ccZtEYtQ.s 			page 311


6226:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6231:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6232:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6234:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6237:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6239:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6243:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6244:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6247:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6249:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6251:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6255:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >
6256:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6257:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6262:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6264:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6267:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6269:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6270:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6272:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6275:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6277:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6281:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6282:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string follows string.
GAS LISTING /tmp/ccZtEYtQ.s 			page 312


6283:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6287:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6293:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <=
6294:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6295:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6300:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6302:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6307:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6308:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6310:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6312:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6313:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6315:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6319:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6320:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6322:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6323:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6324:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6325:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6327:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6331:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >=
6332:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6333:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6338:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
GAS LISTING /tmp/ccZtEYtQ.s 			page 313


6340:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6345:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6346:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6348:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6351:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6353:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6357:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6358:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6361:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6363:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6365:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6369:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6370:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6374:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6376:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline void
6378:/usr/include/c++/9.2.0/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6381:/usr/include/c++/9.2.0/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6383:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6384:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6385:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6390:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6396:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
GAS LISTING /tmp/ccZtEYtQ.s 			page 314


6397:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6401:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6402:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6403:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6405:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6406:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6411:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  writing a C string.
6413:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6414:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6423:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6424:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6425:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6426:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6431:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6434:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6436:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6437:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6438:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6442:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6443:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6448:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6453:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
GAS LISTING /tmp/ccZtEYtQ.s 			page 315


6454:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6460:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6468:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6476:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6477:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6478:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    char __delim);
6480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6481:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6483:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    wchar_t __delim);
6486:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  
6487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6488:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/usr/include/c++/9.2.0/bits/basic_string.h **** } // namespace
6490:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6491:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6493:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6495:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/usr/include/c++/9.2.0/bits/basic_string.h **** {
6497:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6500:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int
6503:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6506:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6507:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long
6508:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 316


6511:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6512:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6513:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6517:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6518:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6522:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6523:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6526:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6527:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6529:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6532:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6533:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6536:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6537:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6541:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6544:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6545:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(int __val)
6547:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
6549:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6550:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6551:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned __val)
6552:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6553:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%u", __val); }
6555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6556:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6557:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long __val)
6558:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
6559:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%ld", __val); }
6560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6561:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long __val)
6563:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6564:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lu", __val); }
6566:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6567:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
GAS LISTING /tmp/ccZtEYtQ.s 			page 317


6568:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long long __val)
6569:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6570:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(long long),
6571:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lld", __val); }
6572:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6573:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6574:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long long __val)
6575:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6576:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long long),
6577:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%llu", __val); }
6578:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6579:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(float __val)
 5116              		.loc 10 6580 3 view .LVU1344
 5117              	.LBB2256:
6581:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
 5118              		.loc 10 6582 5 view .LVU1345
6583:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6584:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
 5119              		.loc 10 6584 5 view .LVU1346
6585:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 5120              		.loc 10 6585 20 is_stmt 0 view .LVU1347
 5121 006c 4889E7   		movq	%rsp, %rdi
 5122 006f 660FEFC0 		pxor	%xmm0, %xmm0
 5123 0073 F30F5A45 		cvtss2sd	8(%rbp), %xmm0
 5123      08
 5124 0078 488D0D00 		leaq	.LC28(%rip), %rcx
 5124      000000
 5125 007f BA3A0000 		movl	$58, %edx
 5125      00
 5126 0084 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 5126      000000
 5127 008b B8010000 		movl	$1, %eax
 5127      00
 5128 0090 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 5128      00
 5129              	.LVL469:
 5130              	.LEHE10:
 5131              		.loc 10 6585 20 view .LVU1348
 5132              	.LBE2256:
 5133              	.LBE2255:
 5134              	.LBB2257:
 5135              	.LBI2257:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 5136              		.loc 10 1168 7 is_stmt 1 view .LVU1349
 5137              	.LBB2258:
 5138              	.LBI2258:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5139              		.loc 10 1221 7 view .LVU1350
 5140              	.LBB2259:
 5141              	.LBB2260:
 5142              	.LBI2260:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5143              		.loc 10 930 7 view .LVU1351
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5144              		.loc 10 930 7 is_stmt 0 view .LVU1352
GAS LISTING /tmp/ccZtEYtQ.s 			page 318


 5145              	.LBE2260:
 5146              	.LBB2261:
 5147              	.LBI2261:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5148              		.loc 10 186 7 is_stmt 1 view .LVU1353
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5149              		.loc 10 186 7 is_stmt 0 view .LVU1354
 5150              	.LBE2261:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5151              		.loc 10 1222 55 view .LVU1355
 5152 0095 488B5424 		movq	8(%rsp), %rdx
 5152      08
 5153 009a 488B3424 		movq	(%rsp), %rsi
 5154 009e 4889DF   		movq	%rbx, %rdi
 5155              	.LEHB11:
 5156 00a1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5156      00
 5157              	.LVL470:
 5158              	.LEHE11:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5159              		.loc 10 1222 55 view .LVU1356
 5160              	.LBE2259:
 5161              	.LBE2258:
 5162              	.LBE2257:
 5163              	.LBB2262:
 5164              	.LBI2262:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5165              		.loc 10 657 7 is_stmt 1 view .LVU1357
 5166              	.LBB2263:
 5167              	.LBI2263:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5168              		.loc 10 229 7 view .LVU1358
 5169              	.LBB2264:
 5170              	.LBB2265:
 5171              	.LBI2265:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5172              		.loc 10 221 7 view .LVU1359
 5173              	.LBB2266:
 5174              	.LBI2266:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5175              		.loc 10 186 7 view .LVU1360
 5176              	.LBB2267:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5177              		.loc 10 187 28 is_stmt 0 view .LVU1361
 5178 00a6 488B3C24 		movq	(%rsp), %rdi
 5179              	.LVL471:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5180              		.loc 10 187 28 view .LVU1362
 5181              	.LBE2267:
 5182              	.LBE2266:
 5183              	.LBB2268:
 5184              	.LBI2268:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5185              		.loc 10 200 7 is_stmt 1 view .LVU1363
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5186              		.loc 10 200 7 is_stmt 0 view .LVU1364
 5187              	.LBE2268:
GAS LISTING /tmp/ccZtEYtQ.s 			page 319


 5188              	.LBE2265:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5189              		.loc 10 231 2 view .LVU1365
 5190 00aa 488D4424 		leaq	16(%rsp), %rax
 5190      10
 5191 00af 4839C7   		cmpq	%rax, %rdi
 5192 00b2 7405     		je	.L272
 5193              	.LVL472:
 5194              	.LBB2269:
 5195              	.LBI2269:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5196              		.loc 10 236 7 is_stmt 1 view .LVU1366
 5197              	.LBB2270:
 5198              	.LBB2271:
 5199              	.LBI2271:
 5200              		.loc 13 469 7 view .LVU1367
 5201              	.LBB2272:
 5202              	.LBI2272:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5203              		.loc 12 119 7 view .LVU1368
 5204              	.LBB2273:
 5205              		.loc 12 128 19 is_stmt 0 view .LVU1369
 5206 00b4 E8000000 		call	_ZdlPv@PLT
 5206      00
 5207              	.LVL473:
 5208              	.L272:
 5209              		.loc 12 128 19 view .LVU1370
 5210              	.LBE2273:
 5211              	.LBE2272:
 5212              	.LBE2271:
 5213              	.LBE2270:
 5214              	.LBE2269:
 5215              	.LBE2264:
 5216              	.LBE2263:
 5217              	.LBB2274:
 5218              	.LBI2274:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5219              		.loc 10 150 14 is_stmt 1 view .LVU1371
 5220              	.LBB2275:
 5221              	.LBI2275:
 5222              		.loc 11 153 7 view .LVU1372
 5223              	.LBB2276:
 5224              	.LBI2276:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5225              		.loc 12 89 7 view .LVU1373
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5226              		.loc 12 89 7 is_stmt 0 view .LVU1374
 5227              	.LBE2276:
 5228              	.LBE2275:
 5229              	.LBE2274:
 5230              	.LBE2262:
  95:Includes/findwayBases.hpp ****         str += ", ";
 5231              		.loc 15 95 9 is_stmt 1 view .LVU1375
 5232              	.LBB2277:
 5233              	.LBI2277:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 5234              		.loc 10 1177 7 view .LVU1376
GAS LISTING /tmp/ccZtEYtQ.s 			page 320


 5235              	.LBB2278:
 5236              	.LBI2278:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5237              		.loc 10 1263 7 view .LVU1377
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5238              		.loc 10 1263 7 is_stmt 0 view .LVU1378
 5239              	.LBE2278:
 5240              	.LBE2277:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5241              		.loc 4 335 2 is_stmt 1 view .LVU1379
 5242              	.LBB2286:
 5243              	.LBB2285:
 5244              	.LBB2279:
 5245              	.LBB2280:
 5246              	.LBI2280:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5247              		.loc 10 320 7 view .LVU1380
 5248              	.LBB2281:
 5249              	.LBB2282:
 5250              	.LBI2282:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5251              		.loc 10 930 7 view .LVU1381
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5252              		.loc 10 930 7 is_stmt 0 view .LVU1382
 5253              	.LBE2282:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5254              		.loc 10 322 2 view .LVU1383
 5255 00b9 48B8FFFF 		movabsq	$4611686018427387903, %rax
 5255      FFFFFFFF 
 5255      FF3F
 5256 00c3 482B4308 		subq	8(%rbx), %rax
 5257 00c7 4883F801 		cmpq	$1, %rax
 5258 00cb 7616     		jbe	.L290
 5259              	.LVL474:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5260              		.loc 10 322 2 view .LVU1384
 5261              	.LBE2281:
 5262              	.LBE2280:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5263              		.loc 10 1268 27 view .LVU1385
 5264 00cd BA020000 		movl	$2, %edx
 5264      00
 5265 00d2 488D3500 		leaq	.LC29(%rip), %rsi
 5265      000000
 5266 00d9 4889DF   		movq	%rbx, %rdi
 5267              	.LEHB12:
 5268 00dc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5268      00
 5269              	.LVL475:
 5270 00e1 EB0C     		jmp	.L291
 5271              	.LVL476:
 5272              	.L290:
 5273              	.LBB2284:
 5274              	.LBB2283:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5275              		.loc 10 323 24 view .LVU1386
 5276 00e3 488D3D00 		leaq	.LC26(%rip), %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 321


 5276      000000
 5277 00ea E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 5277      00
 5278              	.LVL477:
 5279              	.L291:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5280              		.loc 10 323 24 view .LVU1387
 5281              	.LBE2283:
 5282              	.LBE2284:
 5283              	.LBE2279:
 5284              	.LBE2285:
 5285              	.LBE2286:
  96:Includes/findwayBases.hpp ****         str += std::to_string(dy);
 5286              		.loc 15 96 9 is_stmt 1 view .LVU1388
 5287              	.LBB2287:
 5288              	.LBI2287:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 5289              		.loc 10 6580 3 view .LVU1389
 5290              	.LBB2288:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 5291              		.loc 10 6582 5 view .LVU1390
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 5292              		.loc 10 6584 5 view .LVU1391
 5293              		.loc 10 6585 20 is_stmt 0 view .LVU1392
 5294 00ef 4889E7   		movq	%rsp, %rdi
 5295 00f2 660FEFC0 		pxor	%xmm0, %xmm0
 5296 00f6 F30F5A45 		cvtss2sd	12(%rbp), %xmm0
 5296      0C
 5297 00fb 488D0D00 		leaq	.LC28(%rip), %rcx
 5297      000000
 5298 0102 BA3A0000 		movl	$58, %edx
 5298      00
 5299 0107 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 5299      000000
 5300 010e B8010000 		movl	$1, %eax
 5300      00
 5301 0113 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 5301      00
 5302              	.LVL478:
 5303              	.LEHE12:
 5304              		.loc 10 6585 20 view .LVU1393
 5305              	.LBE2288:
 5306              	.LBE2287:
 5307              	.LBB2289:
 5308              	.LBI2289:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 5309              		.loc 10 1168 7 is_stmt 1 view .LVU1394
 5310              	.LBB2290:
 5311              	.LBI2290:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5312              		.loc 10 1221 7 view .LVU1395
 5313              	.LBB2291:
 5314              	.LBB2292:
 5315              	.LBI2292:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5316              		.loc 10 930 7 view .LVU1396
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
GAS LISTING /tmp/ccZtEYtQ.s 			page 322


 5317              		.loc 10 930 7 is_stmt 0 view .LVU1397
 5318              	.LBE2292:
 5319              	.LBB2293:
 5320              	.LBI2293:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5321              		.loc 10 186 7 is_stmt 1 view .LVU1398
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5322              		.loc 10 186 7 is_stmt 0 view .LVU1399
 5323              	.LBE2293:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5324              		.loc 10 1222 55 view .LVU1400
 5325 0118 488B5424 		movq	8(%rsp), %rdx
 5325      08
 5326 011d 488B3424 		movq	(%rsp), %rsi
 5327 0121 4889DF   		movq	%rbx, %rdi
 5328              	.LEHB13:
 5329 0124 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5329      00
 5330              	.LVL479:
 5331              	.LEHE13:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5332              		.loc 10 1222 55 view .LVU1401
 5333              	.LBE2291:
 5334              	.LBE2290:
 5335              	.LBE2289:
 5336              	.LBB2294:
 5337              	.LBI2294:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5338              		.loc 10 657 7 is_stmt 1 view .LVU1402
 5339              	.LBB2295:
 5340              	.LBI2295:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5341              		.loc 10 229 7 view .LVU1403
 5342              	.LBB2296:
 5343              	.LBB2297:
 5344              	.LBI2297:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5345              		.loc 10 221 7 view .LVU1404
 5346              	.LBB2298:
 5347              	.LBI2298:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5348              		.loc 10 186 7 view .LVU1405
 5349              	.LBB2299:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5350              		.loc 10 187 28 is_stmt 0 view .LVU1406
 5351 0129 488B3C24 		movq	(%rsp), %rdi
 5352              	.LVL480:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5353              		.loc 10 187 28 view .LVU1407
 5354              	.LBE2299:
 5355              	.LBE2298:
 5356              	.LBB2300:
 5357              	.LBI2300:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5358              		.loc 10 200 7 is_stmt 1 view .LVU1408
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5359              		.loc 10 200 7 is_stmt 0 view .LVU1409
GAS LISTING /tmp/ccZtEYtQ.s 			page 323


 5360              	.LBE2300:
 5361              	.LBE2297:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5362              		.loc 10 231 2 view .LVU1410
 5363 012d 488D4424 		leaq	16(%rsp), %rax
 5363      10
 5364 0132 4839C7   		cmpq	%rax, %rdi
 5365 0135 7405     		je	.L274
 5366              	.LVL481:
 5367              	.LBB2301:
 5368              	.LBI2301:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5369              		.loc 10 236 7 is_stmt 1 view .LVU1411
 5370              	.LBB2302:
 5371              	.LBB2303:
 5372              	.LBI2303:
 5373              		.loc 13 469 7 view .LVU1412
 5374              	.LBB2304:
 5375              	.LBI2304:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5376              		.loc 12 119 7 view .LVU1413
 5377              	.LBB2305:
 5378              		.loc 12 128 19 is_stmt 0 view .LVU1414
 5379 0137 E8000000 		call	_ZdlPv@PLT
 5379      00
 5380              	.LVL482:
 5381              	.L274:
 5382              		.loc 12 128 19 view .LVU1415
 5383              	.LBE2305:
 5384              	.LBE2304:
 5385              	.LBE2303:
 5386              	.LBE2302:
 5387              	.LBE2301:
 5388              	.LBE2296:
 5389              	.LBE2295:
 5390              	.LBB2306:
 5391              	.LBI2306:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5392              		.loc 10 150 14 is_stmt 1 view .LVU1416
 5393              	.LBB2307:
 5394              	.LBI2307:
 5395              		.loc 11 153 7 view .LVU1417
 5396              	.LBB2308:
 5397              	.LBI2308:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5398              		.loc 12 89 7 view .LVU1418
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5399              		.loc 12 89 7 is_stmt 0 view .LVU1419
 5400              	.LBE2308:
 5401              	.LBE2307:
 5402              	.LBE2306:
 5403              	.LBE2294:
  97:Includes/findwayBases.hpp ****         str += "}";
 5404              		.loc 15 97 9 is_stmt 1 view .LVU1420
 5405              	.LBB2309:
 5406              	.LBI2309:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 324


 5407              		.loc 10 1177 7 view .LVU1421
 5408              	.LBB2310:
 5409              	.LBI2310:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5410              		.loc 10 1263 7 view .LVU1422
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5411              		.loc 10 1263 7 is_stmt 0 view .LVU1423
 5412              	.LBE2310:
 5413              	.LBE2309:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5414              		.loc 4 335 2 is_stmt 1 view .LVU1424
 5415              	.LBB2318:
 5416              	.LBB2317:
 5417              	.LBB2311:
 5418              	.LBB2312:
 5419              	.LBI2312:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5420              		.loc 10 320 7 view .LVU1425
 5421              	.LBB2313:
 5422              	.LBB2314:
 5423              	.LBI2314:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5424              		.loc 10 930 7 view .LVU1426
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5425              		.loc 10 930 7 is_stmt 0 view .LVU1427
 5426              	.LBE2314:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5427              		.loc 10 322 2 view .LVU1428
 5428 013c 48B8FFFF 		movabsq	$4611686018427387903, %rax
 5428      FFFFFFFF 
 5428      FF3F
 5429 0146 48394308 		cmpq	%rax, 8(%rbx)
 5430 014a 7416     		je	.L292
 5431              	.LVL483:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5432              		.loc 10 322 2 view .LVU1429
 5433              	.LBE2313:
 5434              	.LBE2312:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5435              		.loc 10 1268 27 view .LVU1430
 5436 014c BA010000 		movl	$1, %edx
 5436      00
 5437 0151 488D3500 		leaq	.LC30(%rip), %rsi
 5437      000000
 5438 0158 4889DF   		movq	%rbx, %rdi
 5439              	.LEHB14:
 5440 015b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5440      00
 5441              	.LVL484:
 5442 0160 EB53     		jmp	.L293
 5443              	.LVL485:
 5444              	.L292:
 5445              	.LBB2316:
 5446              	.LBB2315:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5447              		.loc 10 323 24 view .LVU1431
 5448 0162 488D3D00 		leaq	.LC26(%rip), %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 325


 5448      000000
 5449 0169 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 5449      00
 5450              	.LVL486:
 5451              	.LEHE14:
 5452              	.L284:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5453              		.loc 10 323 24 view .LVU1432
 5454 016e 4889C5   		movq	%rax, %rbp
 5455              	.LVL487:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5456              		.loc 10 323 24 view .LVU1433
 5457              	.LBE2315:
 5458              	.LBE2316:
 5459              	.LBE2311:
 5460              	.LBE2317:
 5461              	.LBE2318:
 5462              	.LBB2319:
 5463              	.LBI2319:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5464              		.loc 10 657 7 is_stmt 1 view .LVU1434
 5465              	.LBB2320:
 5466              	.LBI2320:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5467              		.loc 10 229 7 view .LVU1435
 5468              	.LBB2321:
 5469              	.LBB2322:
 5470              	.LBI2322:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5471              		.loc 10 221 7 view .LVU1436
 5472              	.LBB2323:
 5473              	.LBI2323:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5474              		.loc 10 186 7 view .LVU1437
 5475              	.LBB2324:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5476              		.loc 10 187 28 is_stmt 0 view .LVU1438
 5477 0171 488B3C24 		movq	(%rsp), %rdi
 5478              	.LVL488:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5479              		.loc 10 187 28 view .LVU1439
 5480              	.LBE2324:
 5481              	.LBE2323:
 5482              	.LBB2325:
 5483              	.LBI2325:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5484              		.loc 10 200 7 is_stmt 1 view .LVU1440
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5485              		.loc 10 200 7 is_stmt 0 view .LVU1441
 5486              	.LBE2325:
 5487              	.LBE2322:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5488              		.loc 10 231 2 view .LVU1442
 5489 0175 488D4424 		leaq	16(%rsp), %rax
 5489      10
 5490 017a 4839C7   		cmpq	%rax, %rdi
 5491 017d 7405     		je	.L278
GAS LISTING /tmp/ccZtEYtQ.s 			page 326


 5492              	.LVL489:
 5493              	.LBB2326:
 5494              	.LBI2326:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5495              		.loc 10 236 7 is_stmt 1 view .LVU1443
 5496              	.LBB2327:
 5497              	.LBB2328:
 5498              	.LBI2328:
 5499              		.loc 13 469 7 view .LVU1444
 5500              	.LBB2329:
 5501              	.LBI2329:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5502              		.loc 12 119 7 view .LVU1445
 5503              	.LBB2330:
 5504              		.loc 12 128 19 is_stmt 0 view .LVU1446
 5505 017f E8000000 		call	_ZdlPv@PLT
 5505      00
 5506              	.LVL490:
 5507              		.loc 12 128 19 view .LVU1447
 5508              	.LBE2330:
 5509              	.LBE2329:
 5510              	.LBE2328:
 5511              	.LBE2327:
 5512              	.LBE2326:
 5513              	.LBE2321:
 5514              	.LBE2320:
 5515              	.LBB2331:
 5516              	.LBI2331:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5517              		.loc 10 150 14 is_stmt 1 view .LVU1448
 5518              	.LBB2332:
 5519              	.LBI2332:
 5520              		.loc 11 153 7 view .LVU1449
 5521              	.LBB2333:
 5522              	.LBI2333:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5523              		.loc 12 89 7 view .LVU1450
 5524              	.L278:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5525              		.loc 12 89 7 is_stmt 0 view .LVU1451
 5526              	.LBE2333:
 5527              	.LBE2332:
 5528              	.LBE2331:
 5529              	.LBE2319:
 5530              	.LBB2334:
 5531              	.LBI2334:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5532              		.loc 10 657 7 is_stmt 1 view .LVU1452
 5533              	.LBB2335:
 5534              	.LBI2335:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5535              		.loc 10 229 7 view .LVU1453
 5536              	.LBB2336:
 5537              	.LBB2337:
 5538              	.LBI2337:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5539              		.loc 10 221 7 view .LVU1454
GAS LISTING /tmp/ccZtEYtQ.s 			page 327


 5540              	.LBB2338:
 5541              	.LBI2338:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5542              		.loc 10 186 7 view .LVU1455
 5543              	.LBB2339:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5544              		.loc 10 187 28 is_stmt 0 view .LVU1456
 5545 0184 488B3B   		movq	(%rbx), %rdi
 5546              	.LVL491:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5547              		.loc 10 187 28 view .LVU1457
 5548              	.LBE2339:
 5549              	.LBE2338:
 5550              	.LBB2340:
 5551              	.LBI2340:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5552              		.loc 10 200 7 is_stmt 1 view .LVU1458
 5553              	.LBB2341:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5554              		.loc 10 203 57 is_stmt 0 view .LVU1459
 5555 0187 4883C310 		addq	$16, %rbx
 5556              	.LVL492:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5557              		.loc 10 203 57 view .LVU1460
 5558              	.LBE2341:
 5559              	.LBE2340:
 5560              	.LBE2337:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5561              		.loc 10 231 2 view .LVU1461
 5562 018b 4839DF   		cmpq	%rbx, %rdi
 5563 018e 7405     		je	.L281
 5564              	.LVL493:
 5565              	.LBB2342:
 5566              	.LBI2342:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5567              		.loc 10 236 7 is_stmt 1 view .LVU1462
 5568              	.LBB2343:
 5569              	.LBB2344:
 5570              	.LBI2344:
 5571              		.loc 13 469 7 view .LVU1463
 5572              	.LBB2345:
 5573              	.LBI2345:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5574              		.loc 12 119 7 view .LVU1464
 5575              	.LBB2346:
 5576              		.loc 12 128 19 is_stmt 0 view .LVU1465
 5577 0190 E8000000 		call	_ZdlPv@PLT
 5577      00
 5578              	.LVL494:
 5579              	.L281:
 5580              		.loc 12 128 19 view .LVU1466
 5581              	.LBE2346:
 5582              	.LBE2345:
 5583              	.LBE2344:
 5584              	.LBE2343:
 5585              	.LBE2342:
 5586              	.LBE2336:
GAS LISTING /tmp/ccZtEYtQ.s 			page 328


 5587              	.LBE2335:
 5588              	.LBB2347:
 5589              	.LBI2347:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5590              		.loc 10 150 14 is_stmt 1 view .LVU1467
 5591              	.LBB2348:
 5592              	.LBI2348:
 5593              		.loc 11 153 7 view .LVU1468
 5594              	.LBB2349:
 5595              	.LBI2349:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5596              		.loc 12 89 7 view .LVU1469
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5597              		.loc 12 89 7 is_stmt 0 view .LVU1470
 5598 0195 4889EF   		movq	%rbp, %rdi
 5599              	.LEHB15:
 5600 0198 E8000000 		call	_Unwind_Resume@PLT
 5600      00
 5601              	.LVL495:
 5602              	.LEHE15:
 5603              	.L285:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5604              		.loc 12 89 7 view .LVU1471
 5605 019d 4889C5   		movq	%rax, %rbp
 5606              	.LVL496:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5607              		.loc 12 89 7 view .LVU1472
 5608              	.LBE2349:
 5609              	.LBE2348:
 5610              	.LBE2347:
 5611              	.LBE2334:
 5612              	.LBB2350:
 5613              	.LBI2350:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5614              		.loc 10 657 7 is_stmt 1 view .LVU1473
 5615              	.LBB2351:
 5616              	.LBI2351:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5617              		.loc 10 229 7 view .LVU1474
 5618              	.LBB2352:
 5619              	.LBB2353:
 5620              	.LBI2353:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5621              		.loc 10 221 7 view .LVU1475
 5622              	.LBB2354:
 5623              	.LBI2354:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5624              		.loc 10 186 7 view .LVU1476
 5625              	.LBB2355:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5626              		.loc 10 187 28 is_stmt 0 view .LVU1477
 5627 01a0 488B3C24 		movq	(%rsp), %rdi
 5628              	.LVL497:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5629              		.loc 10 187 28 view .LVU1478
 5630              	.LBE2355:
 5631              	.LBE2354:
GAS LISTING /tmp/ccZtEYtQ.s 			page 329


 5632              	.LBB2356:
 5633              	.LBI2356:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5634              		.loc 10 200 7 is_stmt 1 view .LVU1479
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5635              		.loc 10 200 7 is_stmt 0 view .LVU1480
 5636              	.LBE2356:
 5637              	.LBE2353:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5638              		.loc 10 231 2 view .LVU1481
 5639 01a4 488D4424 		leaq	16(%rsp), %rax
 5639      10
 5640 01a9 4839C7   		cmpq	%rax, %rdi
 5641 01ac 74D6     		je	.L278
 5642              	.LVL498:
 5643              	.LBB2357:
 5644              	.LBI2357:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5645              		.loc 10 236 7 is_stmt 1 view .LVU1482
 5646              	.LBB2358:
 5647              	.LBB2359:
 5648              	.LBI2359:
 5649              		.loc 13 469 7 view .LVU1483
 5650              	.LBB2360:
 5651              	.LBI2360:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5652              		.loc 12 119 7 view .LVU1484
 5653              	.LBB2361:
 5654              		.loc 12 128 19 is_stmt 0 view .LVU1485
 5655 01ae E8000000 		call	_ZdlPv@PLT
 5655      00
 5656              	.LVL499:
 5657              		.loc 12 128 19 view .LVU1486
 5658              	.LBE2361:
 5659              	.LBE2360:
 5660              	.LBE2359:
 5661              	.LBE2358:
 5662              	.LBE2357:
 5663              	.LBE2352:
 5664              	.LBE2351:
 5665              	.LBB2365:
 5666              	.LBI2365:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5667              		.loc 10 150 14 is_stmt 1 view .LVU1487
 5668              	.LBB2366:
 5669              	.LBI2366:
 5670              		.loc 11 153 7 view .LVU1488
 5671              	.LBB2367:
 5672              	.LBI2367:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5673              		.loc 12 89 7 view .LVU1489
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5674              		.loc 12 89 7 is_stmt 0 view .LVU1490
 5675              	.LBE2367:
 5676              	.LBE2366:
 5677              	.LBE2365:
 5678              	.LBB2368:
GAS LISTING /tmp/ccZtEYtQ.s 			page 330


 5679              	.LBB2364:
 5680              	.LBB2363:
 5681              	.LBB2362:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5682              		.loc 10 237 79 view .LVU1491
 5683 01b3 EBCF     		jmp	.L278
 5684              	.LVL500:
 5685              	.L293:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5686              		.loc 10 237 79 view .LVU1492
 5687              	.LBE2362:
 5688              	.LBE2363:
 5689              	.LBE2364:
 5690              	.LBE2368:
 5691              	.LBE2350:
  98:Includes/findwayBases.hpp ****         return str;
  99:Includes/findwayBases.hpp ****     }
 5692              		.loc 15 99 5 view .LVU1493
 5693 01b5 488B4424 		movq	40(%rsp), %rax
 5693      28
 5694 01ba 64483304 		xorq	%fs:40, %rax
 5694      25280000 
 5694      00
 5695 01c3 750A     		jne	.L294
 5696 01c5 4889D8   		movq	%rbx, %rax
 5697 01c8 4883C438 		addq	$56, %rsp
 5698              		.cfi_remember_state
 5699              		.cfi_def_cfa_offset 24
 5700 01cc 5B       		popq	%rbx
 5701              		.cfi_def_cfa_offset 16
 5702              	.LVL501:
 5703              		.loc 15 99 5 view .LVU1494
 5704 01cd 5D       		popq	%rbp
 5705              		.cfi_def_cfa_offset 8
 5706              	.LVL502:
 5707              		.loc 15 99 5 view .LVU1495
 5708 01ce C3       		ret
 5709              	.LVL503:
 5710              	.L294:
 5711              		.cfi_restore_state
 5712              		.loc 15 99 5 view .LVU1496
 5713 01cf E8000000 		call	__stack_chk_fail@PLT
 5713      00
 5714              	.LVL504:
 5715              		.cfi_endproc
 5716              	.LFE2474:
 5717              		.section	.gcc_except_table
 5718              	.LLSDA2474:
 5719 0034 FF       		.byte	0xff
 5720 0035 FF       		.byte	0xff
 5721 0036 01       		.byte	0x1
 5722 0037 23       		.uleb128 .LLSDACSE2474-.LLSDACSB2474
 5723              	.LLSDACSB2474:
 5724 0038 2D       		.uleb128 .LEHB9-.LFB2474
 5725 0039 05       		.uleb128 .LEHE9-.LEHB9
 5726 003a 00       		.uleb128 0
 5727 003b 00       		.uleb128 0
GAS LISTING /tmp/ccZtEYtQ.s 			page 331


 5728 003c 51       		.uleb128 .LEHB10-.LFB2474
 5729 003d 44       		.uleb128 .LEHE10-.LEHB10
 5730 003e 64       		.uleb128 .L283-.LFB2474
 5731 003f 00       		.uleb128 0
 5732 0040 A101     		.uleb128 .LEHB11-.LFB2474
 5733 0042 05       		.uleb128 .LEHE11-.LEHB11
 5734 0043 EE02     		.uleb128 .L284-.LFB2474
 5735 0045 00       		.uleb128 0
 5736 0046 DC01     		.uleb128 .LEHB12-.LFB2474
 5737 0048 3C       		.uleb128 .LEHE12-.LEHB12
 5738 0049 64       		.uleb128 .L283-.LFB2474
 5739 004a 00       		.uleb128 0
 5740 004b A402     		.uleb128 .LEHB13-.LFB2474
 5741 004d 05       		.uleb128 .LEHE13-.LEHB13
 5742 004e 9D03     		.uleb128 .L285-.LFB2474
 5743 0050 00       		.uleb128 0
 5744 0051 DB02     		.uleb128 .LEHB14-.LFB2474
 5745 0053 13       		.uleb128 .LEHE14-.LEHB14
 5746 0054 64       		.uleb128 .L283-.LFB2474
 5747 0055 00       		.uleb128 0
 5748 0056 9803     		.uleb128 .LEHB15-.LFB2474
 5749 0058 05       		.uleb128 .LEHE15-.LEHB15
 5750 0059 00       		.uleb128 0
 5751 005a 00       		.uleb128 0
 5752              	.LLSDACSE2474:
 5753              		.section	.text._ZN4vect8toStringB5cxx11Ev,"axG",@progbits,_ZN4vect8toStringB5cxx11Ev,comdat
 5755              		.section	.text._ZN6coords8toStringB5cxx11Ev,"axG",@progbits,_ZN6coords8toStringB5cxx11Ev,comdat
 5756              		.align 2
 5757              		.weak	_ZN6coords8toStringB5cxx11Ev
 5759              	_ZN6coords8toStringB5cxx11Ev:
 5760              	.LVL505:
 5761              	.LFB2470:
  16:Includes/findwayBases.hpp ****     {
 5762              		.loc 15 16 17 is_stmt 1 view -0
 5763              		.cfi_startproc
 5764              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 5765              		.cfi_lsda 0x1b,.LLSDA2470
  16:Includes/findwayBases.hpp ****     {
 5766              		.loc 15 16 17 is_stmt 0 view .LVU1498
 5767 0000 55       		pushq	%rbp
 5768              		.cfi_def_cfa_offset 16
 5769              		.cfi_offset 6, -16
 5770 0001 53       		pushq	%rbx
 5771              		.cfi_def_cfa_offset 24
 5772              		.cfi_offset 3, -24
 5773 0002 4883EC38 		subq	$56, %rsp
 5774              		.cfi_def_cfa_offset 80
 5775 0006 4889FB   		movq	%rdi, %rbx
 5776 0009 4889F5   		movq	%rsi, %rbp
  16:Includes/findwayBases.hpp ****     {
 5777              		.loc 15 16 17 view .LVU1499
 5778 000c 64488B04 		movq	%fs:40, %rax
 5778      25280000 
 5778      00
 5779 0015 48894424 		movq	%rax, 40(%rsp)
 5779      28
 5780 001a 31C0     		xorl	%eax, %eax
GAS LISTING /tmp/ccZtEYtQ.s 			page 332


  18:Includes/findwayBases.hpp ****         str += "{";
 5781              		.loc 15 18 9 is_stmt 1 view .LVU1500
 5782              	.LVL506:
 5783              	.LBB2518:
 5784              	.LBI2518:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 5785              		.loc 11 138 7 view .LVU1501
 5786              	.LBB2519:
 5787              	.LBI2519:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5788              		.loc 12 80 7 view .LVU1502
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5789              		.loc 12 80 7 is_stmt 0 view .LVU1503
 5790              	.LBE2519:
 5791              	.LBE2518:
 5792              	.LBB2520:
 5793              	.LBI2520:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5794              		.loc 10 525 7 is_stmt 1 view .LVU1504
 5795              	.LBB2521:
 5796              	.LBI2521:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5797              		.loc 10 190 7 view .LVU1505
 5798              	.LBB2522:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5799              		.loc 10 193 51 is_stmt 0 view .LVU1506
 5800 001c 488D4710 		leaq	16(%rdi), %rax
 5801              	.LVL507:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 5802              		.loc 10 193 51 view .LVU1507
 5803              	.LBE2522:
 5804              	.LBE2521:
 5805              	.LBB2523:
 5806              	.LBI2523:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5807              		.loc 10 156 2 is_stmt 1 view .LVU1508
 5808              	.LBB2524:
 5809              	.LBB2525:
 5810              	.LBI2525:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5811              		.loc 11 141 7 view .LVU1509
 5812              	.LBB2526:
 5813              	.LBI2526:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5814              		.loc 12 83 7 view .LVU1510
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5815              		.loc 12 83 7 is_stmt 0 view .LVU1511
 5816              	.LBE2526:
 5817              	.LBE2525:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5818              		.loc 10 157 35 view .LVU1512
 5819 0020 488907   		movq	%rax, (%rdi)
 5820              	.LVL508:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5821              		.loc 10 157 35 view .LVU1513
 5822              	.LBE2524:
 5823              	.LBE2523:
GAS LISTING /tmp/ccZtEYtQ.s 			page 333


 5824              	.LBB2527:
 5825              	.LBI2527:
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 5826              		.loc 4 329 7 is_stmt 1 view .LVU1514
 5827              	.LBE2527:
 5828              	.LBE2520:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5829              		.loc 4 335 2 view .LVU1515
 5830              	.LBB2532:
 5831              	.LBB2528:
 5832              	.LBI2528:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 5833              		.loc 10 263 9 view .LVU1516
 5834              	.LBB2529:
 5835              	.LBB2530:
 5836              	.LBI2530:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 5837              		.loc 10 243 9 view .LVU1517
 5838              	.LBB2531:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5839              		.loc 10 247 11 is_stmt 0 view .LVU1518
 5840 0023 488D1500 		leaq	.LC25(%rip), %rdx
 5840      000000
 5841 002a 4889D6   		movq	%rdx, %rsi
 5842              	.LVL509:
 5843              	.LEHB16:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5844              		.loc 10 247 11 view .LVU1519
 5845 002d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
 5845      00
 5846              	.LVL510:
 5847              	.LEHE16:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 5848              		.loc 10 247 11 view .LVU1520
 5849              	.LBE2531:
 5850              	.LBE2530:
 5851              	.LBE2529:
 5852              	.LBE2528:
 5853              	.LBE2532:
 5854              	.LBB2533:
 5855              	.LBI2533:
 5856              		.loc 11 153 7 is_stmt 1 view .LVU1521
 5857              	.LBB2534:
 5858              	.LBI2534:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5859              		.loc 12 89 7 view .LVU1522
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5860              		.loc 12 89 7 is_stmt 0 view .LVU1523
 5861              	.LBE2534:
 5862              	.LBE2533:
  19:Includes/findwayBases.hpp ****         str += std::to_string(x);
 5863              		.loc 15 19 9 is_stmt 1 view .LVU1524
 5864              	.LBB2535:
 5865              	.LBI2535:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 5866              		.loc 10 1177 7 view .LVU1525
 5867              	.LBB2536:
GAS LISTING /tmp/ccZtEYtQ.s 			page 334


 5868              	.LBI2536:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5869              		.loc 10 1263 7 view .LVU1526
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5870              		.loc 10 1263 7 is_stmt 0 view .LVU1527
 5871              	.LBE2536:
 5872              	.LBE2535:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5873              		.loc 4 335 2 is_stmt 1 view .LVU1528
 5874              	.LBB2544:
 5875              	.LBB2543:
 5876              	.LBB2537:
 5877              	.LBB2538:
 5878              	.LBI2538:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5879              		.loc 10 320 7 view .LVU1529
 5880              	.LBB2539:
 5881              	.LBB2540:
 5882              	.LBI2540:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5883              		.loc 10 930 7 view .LVU1530
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5884              		.loc 10 930 7 is_stmt 0 view .LVU1531
 5885              	.LBE2540:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5886              		.loc 10 322 2 view .LVU1532
 5887 0032 48B8FFFF 		movabsq	$4611686018427387903, %rax
 5887      FFFFFFFF 
 5887      FF3F
 5888 003c 48394308 		cmpq	%rax, 8(%rbx)
 5889 0040 7416     		je	.L313
 5890              	.LVL511:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5891              		.loc 10 322 2 view .LVU1533
 5892              	.LBE2539:
 5893              	.LBE2538:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5894              		.loc 10 1268 27 view .LVU1534
 5895 0042 BA010000 		movl	$1, %edx
 5895      00
 5896 0047 488D3500 		leaq	.LC27(%rip), %rsi
 5896      000000
 5897 004e 4889DF   		movq	%rbx, %rdi
 5898              	.LEHB17:
 5899 0051 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5899      00
 5900              	.LVL512:
 5901 0056 EB14     		jmp	.L314
 5902              	.LVL513:
 5903              	.L313:
 5904              	.LBB2542:
 5905              	.LBB2541:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5906              		.loc 10 323 24 view .LVU1535
 5907 0058 488D3D00 		leaq	.LC26(%rip), %rdi
 5907      000000
 5908 005f E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 335


 5908      00
 5909              	.LVL514:
 5910              	.L308:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5911              		.loc 10 323 24 view .LVU1536
 5912 0064 4889C5   		movq	%rax, %rbp
 5913              	.LVL515:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5914              		.loc 10 323 24 view .LVU1537
 5915 0067 E9180100 		jmp	.L303
 5915      00
 5916              	.LVL516:
 5917              	.L314:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 5918              		.loc 10 323 24 view .LVU1538
 5919              	.LBE2541:
 5920              	.LBE2542:
 5921              	.LBE2537:
 5922              	.LBE2543:
 5923              	.LBE2544:
  20:Includes/findwayBases.hpp ****         str += ", ";
 5924              		.loc 15 20 9 is_stmt 1 view .LVU1539
 5925              	.LBB2545:
 5926              	.LBI2545:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 5927              		.loc 10 6580 3 view .LVU1540
 5928              	.LBB2546:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 5929              		.loc 10 6582 5 view .LVU1541
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 5930              		.loc 10 6584 5 view .LVU1542
 5931              		.loc 10 6585 20 is_stmt 0 view .LVU1543
 5932 006c 4889E7   		movq	%rsp, %rdi
 5933 006f 660FEFC0 		pxor	%xmm0, %xmm0
 5934 0073 F30F5A45 		cvtss2sd	0(%rbp), %xmm0
 5934      00
 5935 0078 488D0D00 		leaq	.LC28(%rip), %rcx
 5935      000000
 5936 007f BA3A0000 		movl	$58, %edx
 5936      00
 5937 0084 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 5937      000000
 5938 008b B8010000 		movl	$1, %eax
 5938      00
 5939 0090 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 5939      00
 5940              	.LVL517:
 5941              	.LEHE17:
 5942              		.loc 10 6585 20 view .LVU1544
 5943              	.LBE2546:
 5944              	.LBE2545:
 5945              	.LBB2547:
 5946              	.LBI2547:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 5947              		.loc 10 1168 7 is_stmt 1 view .LVU1545
 5948              	.LBB2548:
 5949              	.LBI2548:
GAS LISTING /tmp/ccZtEYtQ.s 			page 336


1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5950              		.loc 10 1221 7 view .LVU1546
 5951              	.LBB2549:
 5952              	.LBB2550:
 5953              	.LBI2550:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5954              		.loc 10 930 7 view .LVU1547
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 5955              		.loc 10 930 7 is_stmt 0 view .LVU1548
 5956              	.LBE2550:
 5957              	.LBB2551:
 5958              	.LBI2551:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5959              		.loc 10 186 7 is_stmt 1 view .LVU1549
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5960              		.loc 10 186 7 is_stmt 0 view .LVU1550
 5961              	.LBE2551:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5962              		.loc 10 1222 55 view .LVU1551
 5963 0095 488B5424 		movq	8(%rsp), %rdx
 5963      08
 5964 009a 488B3424 		movq	(%rsp), %rsi
 5965 009e 4889DF   		movq	%rbx, %rdi
 5966              	.LEHB18:
 5967 00a1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 5967      00
 5968              	.LVL518:
 5969              	.LEHE18:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5970              		.loc 10 1222 55 view .LVU1552
 5971              	.LBE2549:
 5972              	.LBE2548:
 5973              	.LBE2547:
 5974              	.LBB2552:
 5975              	.LBI2552:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5976              		.loc 10 657 7 is_stmt 1 view .LVU1553
 5977              	.LBB2553:
 5978              	.LBI2553:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5979              		.loc 10 229 7 view .LVU1554
 5980              	.LBB2554:
 5981              	.LBB2555:
 5982              	.LBI2555:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5983              		.loc 10 221 7 view .LVU1555
 5984              	.LBB2556:
 5985              	.LBI2556:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5986              		.loc 10 186 7 view .LVU1556
 5987              	.LBB2557:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5988              		.loc 10 187 28 is_stmt 0 view .LVU1557
 5989 00a6 488B3C24 		movq	(%rsp), %rdi
 5990              	.LVL519:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5991              		.loc 10 187 28 view .LVU1558
GAS LISTING /tmp/ccZtEYtQ.s 			page 337


 5992              	.LBE2557:
 5993              	.LBE2556:
 5994              	.LBB2558:
 5995              	.LBI2558:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5996              		.loc 10 200 7 is_stmt 1 view .LVU1559
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5997              		.loc 10 200 7 is_stmt 0 view .LVU1560
 5998              	.LBE2558:
 5999              	.LBE2555:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6000              		.loc 10 231 2 view .LVU1561
 6001 00aa 488D4424 		leaq	16(%rsp), %rax
 6001      10
 6002 00af 4839C7   		cmpq	%rax, %rdi
 6003 00b2 7405     		je	.L297
 6004              	.LVL520:
 6005              	.LBB2559:
 6006              	.LBI2559:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6007              		.loc 10 236 7 is_stmt 1 view .LVU1562
 6008              	.LBB2560:
 6009              	.LBB2561:
 6010              	.LBI2561:
 6011              		.loc 13 469 7 view .LVU1563
 6012              	.LBB2562:
 6013              	.LBI2562:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6014              		.loc 12 119 7 view .LVU1564
 6015              	.LBB2563:
 6016              		.loc 12 128 19 is_stmt 0 view .LVU1565
 6017 00b4 E8000000 		call	_ZdlPv@PLT
 6017      00
 6018              	.LVL521:
 6019              	.L297:
 6020              		.loc 12 128 19 view .LVU1566
 6021              	.LBE2563:
 6022              	.LBE2562:
 6023              	.LBE2561:
 6024              	.LBE2560:
 6025              	.LBE2559:
 6026              	.LBE2554:
 6027              	.LBE2553:
 6028              	.LBB2564:
 6029              	.LBI2564:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6030              		.loc 10 150 14 is_stmt 1 view .LVU1567
 6031              	.LBB2565:
 6032              	.LBI2565:
 6033              		.loc 11 153 7 view .LVU1568
 6034              	.LBB2566:
 6035              	.LBI2566:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6036              		.loc 12 89 7 view .LVU1569
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6037              		.loc 12 89 7 is_stmt 0 view .LVU1570
 6038              	.LBE2566:
GAS LISTING /tmp/ccZtEYtQ.s 			page 338


 6039              	.LBE2565:
 6040              	.LBE2564:
 6041              	.LBE2552:
  21:Includes/findwayBases.hpp ****         str += std::to_string(y);
 6042              		.loc 15 21 9 is_stmt 1 view .LVU1571
 6043              	.LBB2567:
 6044              	.LBI2567:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 6045              		.loc 10 1177 7 view .LVU1572
 6046              	.LBB2568:
 6047              	.LBI2568:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6048              		.loc 10 1263 7 view .LVU1573
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6049              		.loc 10 1263 7 is_stmt 0 view .LVU1574
 6050              	.LBE2568:
 6051              	.LBE2567:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6052              		.loc 4 335 2 is_stmt 1 view .LVU1575
 6053              	.LBB2576:
 6054              	.LBB2575:
 6055              	.LBB2569:
 6056              	.LBB2570:
 6057              	.LBI2570:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6058              		.loc 10 320 7 view .LVU1576
 6059              	.LBB2571:
 6060              	.LBB2572:
 6061              	.LBI2572:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6062              		.loc 10 930 7 view .LVU1577
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6063              		.loc 10 930 7 is_stmt 0 view .LVU1578
 6064              	.LBE2572:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 6065              		.loc 10 322 2 view .LVU1579
 6066 00b9 48B8FFFF 		movabsq	$4611686018427387903, %rax
 6066      FFFFFFFF 
 6066      FF3F
 6067 00c3 482B4308 		subq	8(%rbx), %rax
 6068 00c7 4883F801 		cmpq	$1, %rax
 6069 00cb 7616     		jbe	.L315
 6070              	.LVL522:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 6071              		.loc 10 322 2 view .LVU1580
 6072              	.LBE2571:
 6073              	.LBE2570:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6074              		.loc 10 1268 27 view .LVU1581
 6075 00cd BA020000 		movl	$2, %edx
 6075      00
 6076 00d2 488D3500 		leaq	.LC29(%rip), %rsi
 6076      000000
 6077 00d9 4889DF   		movq	%rbx, %rdi
 6078              	.LEHB19:
 6079 00dc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 6079      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 339


 6080              	.LVL523:
 6081 00e1 EB0C     		jmp	.L316
 6082              	.LVL524:
 6083              	.L315:
 6084              	.LBB2574:
 6085              	.LBB2573:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6086              		.loc 10 323 24 view .LVU1582
 6087 00e3 488D3D00 		leaq	.LC26(%rip), %rdi
 6087      000000
 6088 00ea E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 6088      00
 6089              	.LVL525:
 6090              	.L316:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6091              		.loc 10 323 24 view .LVU1583
 6092              	.LBE2573:
 6093              	.LBE2574:
 6094              	.LBE2569:
 6095              	.LBE2575:
 6096              	.LBE2576:
  22:Includes/findwayBases.hpp ****         str += "}";
 6097              		.loc 15 22 9 is_stmt 1 view .LVU1584
 6098              	.LBB2577:
 6099              	.LBI2577:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 6100              		.loc 10 6580 3 view .LVU1585
 6101              	.LBB2578:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 6102              		.loc 10 6582 5 view .LVU1586
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 6103              		.loc 10 6584 5 view .LVU1587
 6104              		.loc 10 6585 20 is_stmt 0 view .LVU1588
 6105 00ef 4889E7   		movq	%rsp, %rdi
 6106 00f2 660FEFC0 		pxor	%xmm0, %xmm0
 6107 00f6 F30F5A45 		cvtss2sd	4(%rbp), %xmm0
 6107      04
 6108 00fb 488D0D00 		leaq	.LC28(%rip), %rcx
 6108      000000
 6109 0102 BA3A0000 		movl	$58, %edx
 6109      00
 6110 0107 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 6110      000000
 6111 010e B8010000 		movl	$1, %eax
 6111      00
 6112 0113 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 6112      00
 6113              	.LVL526:
 6114              	.LEHE19:
 6115              		.loc 10 6585 20 view .LVU1589
 6116              	.LBE2578:
 6117              	.LBE2577:
 6118              	.LBB2579:
 6119              	.LBI2579:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 6120              		.loc 10 1168 7 is_stmt 1 view .LVU1590
 6121              	.LBB2580:
GAS LISTING /tmp/ccZtEYtQ.s 			page 340


 6122              	.LBI2580:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 6123              		.loc 10 1221 7 view .LVU1591
 6124              	.LBB2581:
 6125              	.LBB2582:
 6126              	.LBI2582:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6127              		.loc 10 930 7 view .LVU1592
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6128              		.loc 10 930 7 is_stmt 0 view .LVU1593
 6129              	.LBE2582:
 6130              	.LBB2583:
 6131              	.LBI2583:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6132              		.loc 10 186 7 is_stmt 1 view .LVU1594
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6133              		.loc 10 186 7 is_stmt 0 view .LVU1595
 6134              	.LBE2583:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6135              		.loc 10 1222 55 view .LVU1596
 6136 0118 488B5424 		movq	8(%rsp), %rdx
 6136      08
 6137 011d 488B3424 		movq	(%rsp), %rsi
 6138 0121 4889DF   		movq	%rbx, %rdi
 6139              	.LEHB20:
 6140 0124 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 6140      00
 6141              	.LVL527:
 6142              	.LEHE20:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6143              		.loc 10 1222 55 view .LVU1597
 6144              	.LBE2581:
 6145              	.LBE2580:
 6146              	.LBE2579:
 6147              	.LBB2584:
 6148              	.LBI2584:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6149              		.loc 10 657 7 is_stmt 1 view .LVU1598
 6150              	.LBB2585:
 6151              	.LBI2585:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6152              		.loc 10 229 7 view .LVU1599
 6153              	.LBB2586:
 6154              	.LBB2587:
 6155              	.LBI2587:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6156              		.loc 10 221 7 view .LVU1600
 6157              	.LBB2588:
 6158              	.LBI2588:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6159              		.loc 10 186 7 view .LVU1601
 6160              	.LBB2589:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6161              		.loc 10 187 28 is_stmt 0 view .LVU1602
 6162 0129 488B3C24 		movq	(%rsp), %rdi
 6163              	.LVL528:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 341


 6164              		.loc 10 187 28 view .LVU1603
 6165              	.LBE2589:
 6166              	.LBE2588:
 6167              	.LBB2590:
 6168              	.LBI2590:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6169              		.loc 10 200 7 is_stmt 1 view .LVU1604
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6170              		.loc 10 200 7 is_stmt 0 view .LVU1605
 6171              	.LBE2590:
 6172              	.LBE2587:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6173              		.loc 10 231 2 view .LVU1606
 6174 012d 488D4424 		leaq	16(%rsp), %rax
 6174      10
 6175 0132 4839C7   		cmpq	%rax, %rdi
 6176 0135 7405     		je	.L299
 6177              	.LVL529:
 6178              	.LBB2591:
 6179              	.LBI2591:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6180              		.loc 10 236 7 is_stmt 1 view .LVU1607
 6181              	.LBB2592:
 6182              	.LBB2593:
 6183              	.LBI2593:
 6184              		.loc 13 469 7 view .LVU1608
 6185              	.LBB2594:
 6186              	.LBI2594:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6187              		.loc 12 119 7 view .LVU1609
 6188              	.LBB2595:
 6189              		.loc 12 128 19 is_stmt 0 view .LVU1610
 6190 0137 E8000000 		call	_ZdlPv@PLT
 6190      00
 6191              	.LVL530:
 6192              	.L299:
 6193              		.loc 12 128 19 view .LVU1611
 6194              	.LBE2595:
 6195              	.LBE2594:
 6196              	.LBE2593:
 6197              	.LBE2592:
 6198              	.LBE2591:
 6199              	.LBE2586:
 6200              	.LBE2585:
 6201              	.LBB2596:
 6202              	.LBI2596:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6203              		.loc 10 150 14 is_stmt 1 view .LVU1612
 6204              	.LBB2597:
 6205              	.LBI2597:
 6206              		.loc 11 153 7 view .LVU1613
 6207              	.LBB2598:
 6208              	.LBI2598:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6209              		.loc 12 89 7 view .LVU1614
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6210              		.loc 12 89 7 is_stmt 0 view .LVU1615
GAS LISTING /tmp/ccZtEYtQ.s 			page 342


 6211              	.LBE2598:
 6212              	.LBE2597:
 6213              	.LBE2596:
 6214              	.LBE2584:
  23:Includes/findwayBases.hpp ****         return str;
 6215              		.loc 15 23 9 is_stmt 1 view .LVU1616
 6216              	.LBB2599:
 6217              	.LBI2599:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 6218              		.loc 10 1177 7 view .LVU1617
 6219              	.LBB2600:
 6220              	.LBI2600:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6221              		.loc 10 1263 7 view .LVU1618
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6222              		.loc 10 1263 7 is_stmt 0 view .LVU1619
 6223              	.LBE2600:
 6224              	.LBE2599:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6225              		.loc 4 335 2 is_stmt 1 view .LVU1620
 6226              	.LBB2608:
 6227              	.LBB2607:
 6228              	.LBB2601:
 6229              	.LBB2602:
 6230              	.LBI2602:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6231              		.loc 10 320 7 view .LVU1621
 6232              	.LBB2603:
 6233              	.LBB2604:
 6234              	.LBI2604:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6235              		.loc 10 930 7 view .LVU1622
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6236              		.loc 10 930 7 is_stmt 0 view .LVU1623
 6237              	.LBE2604:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 6238              		.loc 10 322 2 view .LVU1624
 6239 013c 48B8FFFF 		movabsq	$4611686018427387903, %rax
 6239      FFFFFFFF 
 6239      FF3F
 6240 0146 48394308 		cmpq	%rax, 8(%rbx)
 6241 014a 7416     		je	.L317
 6242              	.LVL531:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 6243              		.loc 10 322 2 view .LVU1625
 6244              	.LBE2603:
 6245              	.LBE2602:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6246              		.loc 10 1268 27 view .LVU1626
 6247 014c BA010000 		movl	$1, %edx
 6247      00
 6248 0151 488D3500 		leaq	.LC30(%rip), %rsi
 6248      000000
 6249 0158 4889DF   		movq	%rbx, %rdi
 6250              	.LEHB21:
 6251 015b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 6251      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 343


 6252              	.LVL532:
 6253 0160 EB53     		jmp	.L318
 6254              	.LVL533:
 6255              	.L317:
 6256              	.LBB2606:
 6257              	.LBB2605:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6258              		.loc 10 323 24 view .LVU1627
 6259 0162 488D3D00 		leaq	.LC26(%rip), %rdi
 6259      000000
 6260 0169 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 6260      00
 6261              	.LVL534:
 6262              	.LEHE21:
 6263              	.L309:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6264              		.loc 10 323 24 view .LVU1628
 6265 016e 4889C5   		movq	%rax, %rbp
 6266              	.LVL535:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 6267              		.loc 10 323 24 view .LVU1629
 6268              	.LBE2605:
 6269              	.LBE2606:
 6270              	.LBE2601:
 6271              	.LBE2607:
 6272              	.LBE2608:
 6273              	.LBB2609:
 6274              	.LBI2609:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6275              		.loc 10 657 7 is_stmt 1 view .LVU1630
 6276              	.LBB2610:
 6277              	.LBI2610:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6278              		.loc 10 229 7 view .LVU1631
 6279              	.LBB2611:
 6280              	.LBB2612:
 6281              	.LBI2612:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6282              		.loc 10 221 7 view .LVU1632
 6283              	.LBB2613:
 6284              	.LBI2613:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6285              		.loc 10 186 7 view .LVU1633
 6286              	.LBB2614:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6287              		.loc 10 187 28 is_stmt 0 view .LVU1634
 6288 0171 488B3C24 		movq	(%rsp), %rdi
 6289              	.LVL536:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6290              		.loc 10 187 28 view .LVU1635
 6291              	.LBE2614:
 6292              	.LBE2613:
 6293              	.LBB2615:
 6294              	.LBI2615:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6295              		.loc 10 200 7 is_stmt 1 view .LVU1636
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccZtEYtQ.s 			page 344


 6296              		.loc 10 200 7 is_stmt 0 view .LVU1637
 6297              	.LBE2615:
 6298              	.LBE2612:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6299              		.loc 10 231 2 view .LVU1638
 6300 0175 488D4424 		leaq	16(%rsp), %rax
 6300      10
 6301 017a 4839C7   		cmpq	%rax, %rdi
 6302 017d 7405     		je	.L303
 6303              	.LVL537:
 6304              	.LBB2616:
 6305              	.LBI2616:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6306              		.loc 10 236 7 is_stmt 1 view .LVU1639
 6307              	.LBB2617:
 6308              	.LBB2618:
 6309              	.LBI2618:
 6310              		.loc 13 469 7 view .LVU1640
 6311              	.LBB2619:
 6312              	.LBI2619:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6313              		.loc 12 119 7 view .LVU1641
 6314              	.LBB2620:
 6315              		.loc 12 128 19 is_stmt 0 view .LVU1642
 6316 017f E8000000 		call	_ZdlPv@PLT
 6316      00
 6317              	.LVL538:
 6318              		.loc 12 128 19 view .LVU1643
 6319              	.LBE2620:
 6320              	.LBE2619:
 6321              	.LBE2618:
 6322              	.LBE2617:
 6323              	.LBE2616:
 6324              	.LBE2611:
 6325              	.LBE2610:
 6326              	.LBB2621:
 6327              	.LBI2621:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6328              		.loc 10 150 14 is_stmt 1 view .LVU1644
 6329              	.LBB2622:
 6330              	.LBI2622:
 6331              		.loc 11 153 7 view .LVU1645
 6332              	.LBB2623:
 6333              	.LBI2623:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6334              		.loc 12 89 7 view .LVU1646
 6335              	.L303:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6336              		.loc 12 89 7 is_stmt 0 view .LVU1647
 6337              	.LBE2623:
 6338              	.LBE2622:
 6339              	.LBE2621:
 6340              	.LBE2609:
 6341              	.LBB2624:
 6342              	.LBI2624:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6343              		.loc 10 657 7 is_stmt 1 view .LVU1648
GAS LISTING /tmp/ccZtEYtQ.s 			page 345


 6344              	.LBB2625:
 6345              	.LBI2625:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6346              		.loc 10 229 7 view .LVU1649
 6347              	.LBB2626:
 6348              	.LBB2627:
 6349              	.LBI2627:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6350              		.loc 10 221 7 view .LVU1650
 6351              	.LBB2628:
 6352              	.LBI2628:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6353              		.loc 10 186 7 view .LVU1651
 6354              	.LBB2629:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6355              		.loc 10 187 28 is_stmt 0 view .LVU1652
 6356 0184 488B3B   		movq	(%rbx), %rdi
 6357              	.LVL539:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6358              		.loc 10 187 28 view .LVU1653
 6359              	.LBE2629:
 6360              	.LBE2628:
 6361              	.LBB2630:
 6362              	.LBI2630:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6363              		.loc 10 200 7 is_stmt 1 view .LVU1654
 6364              	.LBB2631:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 6365              		.loc 10 203 57 is_stmt 0 view .LVU1655
 6366 0187 4883C310 		addq	$16, %rbx
 6367              	.LVL540:
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 6368              		.loc 10 203 57 view .LVU1656
 6369              	.LBE2631:
 6370              	.LBE2630:
 6371              	.LBE2627:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6372              		.loc 10 231 2 view .LVU1657
 6373 018b 4839DF   		cmpq	%rbx, %rdi
 6374 018e 7405     		je	.L306
 6375              	.LVL541:
 6376              	.LBB2632:
 6377              	.LBI2632:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6378              		.loc 10 236 7 is_stmt 1 view .LVU1658
 6379              	.LBB2633:
 6380              	.LBB2634:
 6381              	.LBI2634:
 6382              		.loc 13 469 7 view .LVU1659
 6383              	.LBB2635:
 6384              	.LBI2635:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6385              		.loc 12 119 7 view .LVU1660
 6386              	.LBB2636:
 6387              		.loc 12 128 19 is_stmt 0 view .LVU1661
 6388 0190 E8000000 		call	_ZdlPv@PLT
 6388      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 346


 6389              	.LVL542:
 6390              	.L306:
 6391              		.loc 12 128 19 view .LVU1662
 6392              	.LBE2636:
 6393              	.LBE2635:
 6394              	.LBE2634:
 6395              	.LBE2633:
 6396              	.LBE2632:
 6397              	.LBE2626:
 6398              	.LBE2625:
 6399              	.LBB2637:
 6400              	.LBI2637:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6401              		.loc 10 150 14 is_stmt 1 view .LVU1663
 6402              	.LBB2638:
 6403              	.LBI2638:
 6404              		.loc 11 153 7 view .LVU1664
 6405              	.LBB2639:
 6406              	.LBI2639:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6407              		.loc 12 89 7 view .LVU1665
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6408              		.loc 12 89 7 is_stmt 0 view .LVU1666
 6409 0195 4889EF   		movq	%rbp, %rdi
 6410              	.LEHB22:
 6411 0198 E8000000 		call	_Unwind_Resume@PLT
 6411      00
 6412              	.LVL543:
 6413              	.LEHE22:
 6414              	.L310:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6415              		.loc 12 89 7 view .LVU1667
 6416 019d 4889C5   		movq	%rax, %rbp
 6417              	.LVL544:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6418              		.loc 12 89 7 view .LVU1668
 6419              	.LBE2639:
 6420              	.LBE2638:
 6421              	.LBE2637:
 6422              	.LBE2624:
 6423              	.LBB2640:
 6424              	.LBI2640:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 6425              		.loc 10 657 7 is_stmt 1 view .LVU1669
 6426              	.LBB2641:
 6427              	.LBI2641:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6428              		.loc 10 229 7 view .LVU1670
 6429              	.LBB2642:
 6430              	.LBB2643:
 6431              	.LBI2643:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6432              		.loc 10 221 7 view .LVU1671
 6433              	.LBB2644:
 6434              	.LBI2644:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6435              		.loc 10 186 7 view .LVU1672
GAS LISTING /tmp/ccZtEYtQ.s 			page 347


 6436              	.LBB2645:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6437              		.loc 10 187 28 is_stmt 0 view .LVU1673
 6438 01a0 488B3C24 		movq	(%rsp), %rdi
 6439              	.LVL545:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6440              		.loc 10 187 28 view .LVU1674
 6441              	.LBE2645:
 6442              	.LBE2644:
 6443              	.LBB2646:
 6444              	.LBI2646:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6445              		.loc 10 200 7 is_stmt 1 view .LVU1675
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6446              		.loc 10 200 7 is_stmt 0 view .LVU1676
 6447              	.LBE2646:
 6448              	.LBE2643:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6449              		.loc 10 231 2 view .LVU1677
 6450 01a4 488D4424 		leaq	16(%rsp), %rax
 6450      10
 6451 01a9 4839C7   		cmpq	%rax, %rdi
 6452 01ac 74D6     		je	.L303
 6453              	.LVL546:
 6454              	.LBB2647:
 6455              	.LBI2647:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6456              		.loc 10 236 7 is_stmt 1 view .LVU1678
 6457              	.LBB2648:
 6458              	.LBB2649:
 6459              	.LBI2649:
 6460              		.loc 13 469 7 view .LVU1679
 6461              	.LBB2650:
 6462              	.LBI2650:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 6463              		.loc 12 119 7 view .LVU1680
 6464              	.LBB2651:
 6465              		.loc 12 128 19 is_stmt 0 view .LVU1681
 6466 01ae E8000000 		call	_ZdlPv@PLT
 6466      00
 6467              	.LVL547:
 6468              		.loc 12 128 19 view .LVU1682
 6469              	.LBE2651:
 6470              	.LBE2650:
 6471              	.LBE2649:
 6472              	.LBE2648:
 6473              	.LBE2647:
 6474              	.LBE2642:
 6475              	.LBE2641:
 6476              	.LBB2655:
 6477              	.LBI2655:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 6478              		.loc 10 150 14 is_stmt 1 view .LVU1683
 6479              	.LBB2656:
 6480              	.LBI2656:
 6481              		.loc 11 153 7 view .LVU1684
 6482              	.LBB2657:
GAS LISTING /tmp/ccZtEYtQ.s 			page 348


 6483              	.LBI2657:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6484              		.loc 12 89 7 view .LVU1685
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 6485              		.loc 12 89 7 is_stmt 0 view .LVU1686
 6486              	.LBE2657:
 6487              	.LBE2656:
 6488              	.LBE2655:
 6489              	.LBB2658:
 6490              	.LBB2654:
 6491              	.LBB2653:
 6492              	.LBB2652:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6493              		.loc 10 237 79 view .LVU1687
 6494 01b3 EBCF     		jmp	.L303
 6495              	.LVL548:
 6496              	.L318:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 6497              		.loc 10 237 79 view .LVU1688
 6498              	.LBE2652:
 6499              	.LBE2653:
 6500              	.LBE2654:
 6501              	.LBE2658:
 6502              	.LBE2640:
  25:Includes/findwayBases.hpp **** 
 6503              		.loc 15 25 5 view .LVU1689
 6504 01b5 488B4424 		movq	40(%rsp), %rax
 6504      28
 6505 01ba 64483304 		xorq	%fs:40, %rax
 6505      25280000 
 6505      00
 6506 01c3 750A     		jne	.L319
 6507 01c5 4889D8   		movq	%rbx, %rax
 6508 01c8 4883C438 		addq	$56, %rsp
 6509              		.cfi_remember_state
 6510              		.cfi_def_cfa_offset 24
 6511 01cc 5B       		popq	%rbx
 6512              		.cfi_def_cfa_offset 16
 6513              	.LVL549:
  25:Includes/findwayBases.hpp **** 
 6514              		.loc 15 25 5 view .LVU1690
 6515 01cd 5D       		popq	%rbp
 6516              		.cfi_def_cfa_offset 8
 6517              	.LVL550:
  25:Includes/findwayBases.hpp **** 
 6518              		.loc 15 25 5 view .LVU1691
 6519 01ce C3       		ret
 6520              	.LVL551:
 6521              	.L319:
 6522              		.cfi_restore_state
  25:Includes/findwayBases.hpp **** 
 6523              		.loc 15 25 5 view .LVU1692
 6524 01cf E8000000 		call	__stack_chk_fail@PLT
 6524      00
 6525              	.LVL552:
 6526              		.cfi_endproc
 6527              	.LFE2470:
GAS LISTING /tmp/ccZtEYtQ.s 			page 349


 6528              		.section	.gcc_except_table
 6529              	.LLSDA2470:
 6530 005b FF       		.byte	0xff
 6531 005c FF       		.byte	0xff
 6532 005d 01       		.byte	0x1
 6533 005e 23       		.uleb128 .LLSDACSE2470-.LLSDACSB2470
 6534              	.LLSDACSB2470:
 6535 005f 2D       		.uleb128 .LEHB16-.LFB2470
 6536 0060 05       		.uleb128 .LEHE16-.LEHB16
 6537 0061 00       		.uleb128 0
 6538 0062 00       		.uleb128 0
 6539 0063 51       		.uleb128 .LEHB17-.LFB2470
 6540 0064 44       		.uleb128 .LEHE17-.LEHB17
 6541 0065 64       		.uleb128 .L308-.LFB2470
 6542 0066 00       		.uleb128 0
 6543 0067 A101     		.uleb128 .LEHB18-.LFB2470
 6544 0069 05       		.uleb128 .LEHE18-.LEHB18
 6545 006a EE02     		.uleb128 .L309-.LFB2470
 6546 006c 00       		.uleb128 0
 6547 006d DC01     		.uleb128 .LEHB19-.LFB2470
 6548 006f 3C       		.uleb128 .LEHE19-.LEHB19
 6549 0070 64       		.uleb128 .L308-.LFB2470
 6550 0071 00       		.uleb128 0
 6551 0072 A402     		.uleb128 .LEHB20-.LFB2470
 6552 0074 05       		.uleb128 .LEHE20-.LEHB20
 6553 0075 9D03     		.uleb128 .L310-.LFB2470
 6554 0077 00       		.uleb128 0
 6555 0078 DB02     		.uleb128 .LEHB21-.LFB2470
 6556 007a 13       		.uleb128 .LEHE21-.LEHB21
 6557 007b 64       		.uleb128 .L308-.LFB2470
 6558 007c 00       		.uleb128 0
 6559 007d 9803     		.uleb128 .LEHB22-.LFB2470
 6560 007f 05       		.uleb128 .LEHE22-.LEHB22
 6561 0080 00       		.uleb128 0
 6562 0081 00       		.uleb128 0
 6563              	.LLSDACSE2470:
 6564              		.section	.text._ZN6coords8toStringB5cxx11Ev,"axG",@progbits,_ZN6coords8toStringB5cxx11Ev,comdat
 6566              		.section	.rodata.str1.1
 6567              	.LC39:
 6568 0040 73746172 		.string	"start: "
 6568      743A2000 
 6569              	.LC40:
 6570 0048 09656E64 		.string	"\tend: "
 6570      3A2000
 6571              	.LC41:
 6572 004f 3A00     		.string	":"
 6573              	.LC42:
 6574 0051 2000     		.string	" "
 6575              	.LC43:
 6576 0053 676C7574 		.string	"glut init\n"
 6576      20696E69 
 6576      740A00
 6577              	.LC44:
 6578 005e 64697370 		.string	"dispmode\n"
 6578      6D6F6465 
 6578      0A00
 6579              	.LC45:
GAS LISTING /tmp/ccZtEYtQ.s 			page 350


 6580 0068 666C6F61 		.string	"floating"
 6580      74696E67 
 6580      00
 6581              	.LC46:
 6582 0071 72657368 		.string	"reshape\n"
 6582      6170650A 
 6582      00
 6583              	.LC47:
 6584 007a 64697370 		.string	"dispfunc\n"
 6584      66756E63 
 6584      0A00
 6585              	.LC48:
 6586 0084 6B657966 		.string	"keyfunc\n"
 6586      756E630A 
 6586      00
 6587              	.LC49:
 6588 008d 74696D65 		.string	"timer\n"
 6588      720A00
 6589              	.LC50:
 6590 0094 6D61696E 		.string	"mainloop\n"
 6590      6C6F6F70 
 6590      0A00
 6591              		.text
 6592              		.globl	main
 6594              	main:
 6595              	.LVL553:
 6596              	.LFB2511:
 719:Src/main.cpp  **** 	numOfObstacles = 30;
 6597              		.loc 1 719 1 is_stmt 1 view -0
 6598              		.cfi_startproc
 6599              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 6600              		.cfi_lsda 0x1b,.LLSDA2511
 719:Src/main.cpp  **** 	numOfObstacles = 30;
 6601              		.loc 1 719 1 is_stmt 0 view .LVU1694
 6602 110a 4154     		pushq	%r12
 6603              		.cfi_def_cfa_offset 16
 6604              		.cfi_offset 12, -16
 6605 110c 55       		pushq	%rbp
 6606              		.cfi_def_cfa_offset 24
 6607              		.cfi_offset 6, -24
 6608 110d 53       		pushq	%rbx
 6609              		.cfi_def_cfa_offset 32
 6610              		.cfi_offset 3, -32
 6611 110e 4881ECF0 		subq	$240, %rsp
 6611      000000
 6612              		.cfi_def_cfa_offset 272
 6613 1115 897C240C 		movl	%edi, 12(%rsp)
 6614 1119 4889F5   		movq	%rsi, %rbp
 719:Src/main.cpp  **** 	numOfObstacles = 30;
 6615              		.loc 1 719 1 view .LVU1695
 6616 111c 64488B04 		movq	%fs:40, %rax
 6616      25280000 
 6616      00
 6617 1125 48898424 		movq	%rax, 232(%rsp)
 6617      E8000000 
 6618 112d 31C0     		xorl	%eax, %eax
 720:Src/main.cpp  **** 	size_t iter = 0;
GAS LISTING /tmp/ccZtEYtQ.s 			page 351


 6619              		.loc 1 720 2 is_stmt 1 view .LVU1696
 720:Src/main.cpp  **** 	size_t iter = 0;
 6620              		.loc 1 720 17 is_stmt 0 view .LVU1697
 6621 112f 48C70500 		movq	$30, numOfObstacles(%rip)
 6621      0000001E 
 6621      000000
 721:Src/main.cpp  **** 	obstacles = (struct obstacle*)malloc(sizeof(struct obstacle) * numOfObstacles);
 6622              		.loc 1 721 2 is_stmt 1 view .LVU1698
 6623              	.LVL554:
 722:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 6624              		.loc 1 722 2 view .LVU1699
 722:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 6625              		.loc 1 722 38 is_stmt 0 view .LVU1700
 6626 113a BFA00500 		movl	$1440, %edi
 6626      00
 6627              	.LVL555:
 722:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 6628              		.loc 1 722 38 view .LVU1701
 6629 113f E8000000 		call	malloc@PLT
 6629      00
 6630              	.LVL556:
 722:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(100, 100, 200);
 6631              		.loc 1 722 12 view .LVU1702
 6632 1144 48890500 		movq	%rax, obstacles(%rip)
 6632      000000
 723:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 6633              		.loc 1 723 2 is_stmt 1 view .LVU1703
 723:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 6634              		.loc 1 723 50 is_stmt 0 view .LVU1704
 6635 114b 488D9C24 		leaq	176(%rsp), %rbx
 6635      B0000000 
 6636 1153 F30F1015 		movss	.LC31(%rip), %xmm2
 6636      00000000 
 6637 115b F30F100D 		movss	.LC32(%rip), %xmm1
 6637      00000000 
 6638 1163 0F28C1   		movaps	%xmm1, %xmm0
 6639 1166 4889DF   		movq	%rbx, %rdi
 6640              	.LEHB23:
 6641 1169 E8000000 		call	_Z14createObstaclefff@PLT
 6641      00
 6642              	.LVL557:
 723:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 6643              		.loc 1 723 20 view .LVU1705
 6644 116e 488B0500 		movq	obstacles(%rip), %rax
 6644      000000
 6645              	.LVL558:
 723:Src/main.cpp  **** 	obstacles[iter++] = createObstacle(110, 350, 200);
 6646              		.loc 1 723 20 view .LVU1706
 6647 1175 660F6F9C 		movdqa	176(%rsp), %xmm3
 6647      24B00000 
 6647      00
 6648 117e 0F1118   		movups	%xmm3, (%rax)
 6649 1181 660F6FA4 		movdqa	192(%rsp), %xmm4
 6649      24C00000 
 6649      00
 6650 118a 0F116010 		movups	%xmm4, 16(%rax)
 6651 118e 488B9424 		movq	208(%rsp), %rdx
GAS LISTING /tmp/ccZtEYtQ.s 			page 352


 6651      D0000000 
 6652 1196 48895020 		movq	%rdx, 32(%rax)
 6653 119a 8B9424D8 		movl	216(%rsp), %edx
 6653      000000
 6654 11a1 895028   		movl	%edx, 40(%rax)
 724:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 6655              		.loc 1 724 2 is_stmt 1 view .LVU1707
 724:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 6656              		.loc 1 724 50 is_stmt 0 view .LVU1708
 6657 11a4 F30F1015 		movss	.LC31(%rip), %xmm2
 6657      00000000 
 6658 11ac F30F100D 		movss	.LC33(%rip), %xmm1
 6658      00000000 
 6659 11b4 F30F1005 		movss	.LC34(%rip), %xmm0
 6659      00000000 
 6660 11bc 4889DF   		movq	%rbx, %rdi
 6661 11bf E8000000 		call	_Z14createObstaclefff@PLT
 6661      00
 6662              	.LVL559:
 724:Src/main.cpp  **** 	// obstacles[iter++] = createObstacle(280, 580, 20);
 6663              		.loc 1 724 20 view .LVU1709
 6664 11c4 488B0500 		movq	obstacles(%rip), %rax
 6664      000000
 6665 11cb 660F6FAC 		movdqa	176(%rsp), %xmm5
 6665      24B00000 
 6665      00
 6666 11d4 0F116830 		movups	%xmm5, 48(%rax)
 6667 11d8 660F6FB4 		movdqa	192(%rsp), %xmm6
 6667      24C00000 
 6667      00
 6668 11e1 0F117040 		movups	%xmm6, 64(%rax)
 6669 11e5 488B9424 		movq	208(%rsp), %rdx
 6669      D0000000 
 6670 11ed 48895050 		movq	%rdx, 80(%rax)
 6671 11f1 8B9424D8 		movl	216(%rsp), %edx
 6671      000000
 6672 11f8 895058   		movl	%edx, 88(%rax)
 729:Src/main.cpp  **** 
 6673              		.loc 1 729 2 is_stmt 1 view .LVU1710
 729:Src/main.cpp  **** 
 6674              		.loc 1 729 17 is_stmt 0 view .LVU1711
 6675 11fb 48C70500 		movq	$2, numOfObstacles(%rip)
 6675      00000002 
 6675      000000
 731:Src/main.cpp  **** 
 6676              		.loc 1 731 2 is_stmt 1 view .LVU1712
 731:Src/main.cpp  **** 
 6677              		.loc 1 731 12 is_stmt 0 view .LVU1713
 6678 1206 48C70500 		movq	$10, graphSize(%rip)
 6678      0000000A 
 6678      000000
 733:Src/main.cpp  **** 
 6679              		.loc 1 733 2 is_stmt 1 view .LVU1714
 733:Src/main.cpp  **** 
 6680              		.loc 1 733 51 is_stmt 0 view .LVU1715
 6681 1211 BF280000 		movl	$40, %edi
 6681      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 353


 6682 1216 E8000000 		call	malloc@PLT
 6682      00
 6683              	.LVL560:
 6684 121b 4889C3   		movq	%rax, %rbx
 6685              	.LVL561:
 735:Src/main.cpp  **** 	c.x = 350;
 6686              		.loc 1 735 2 is_stmt 1 view .LVU1716
 736:Src/main.cpp  **** 	c.y = 10;
 6687              		.loc 1 736 2 view .LVU1717
 737:Src/main.cpp  **** 	p->c = c;
 6688              		.loc 1 737 2 view .LVU1718
 738:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 6689              		.loc 1 738 2 view .LVU1719
 738:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 6690              		.loc 1 738 7 is_stmt 0 view .LVU1720
 6691 121e 48B80000 		movabsq	$4692750812855599104, %rax
 6691      AF430000 
 6691      2041
 6692              	.LVL562:
 738:Src/main.cpp  **** 	struct graphPoint *p2 = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 6693              		.loc 1 738 7 view .LVU1721
 6694 1228 48894310 		movq	%rax, 16(%rbx)
 739:Src/main.cpp  **** 
 6695              		.loc 1 739 2 is_stmt 1 view .LVU1722
 739:Src/main.cpp  **** 
 6696              		.loc 1 739 52 is_stmt 0 view .LVU1723
 6697 122c BF280000 		movl	$40, %edi
 6697      00
 6698 1231 E8000000 		call	malloc@PLT
 6698      00
 6699              	.LVL563:
 6700 1236 4989C4   		movq	%rax, %r12
 6701              	.LVL564:
 741:Src/main.cpp  **** 	c2.x = 120;
 6702              		.loc 1 741 2 is_stmt 1 view .LVU1724
 742:Src/main.cpp  **** 	c2.y = 770;
 6703              		.loc 1 742 2 view .LVU1725
 743:Src/main.cpp  **** 	p2->c = c2;
 6704              		.loc 1 743 2 view .LVU1726
 744:Src/main.cpp  **** 
 6705              		.loc 1 744 2 view .LVU1727
 744:Src/main.cpp  **** 
 6706              		.loc 1 744 8 is_stmt 0 view .LVU1728
 6707 1239 48B80000 		movabsq	$4918071531699961856, %rax
 6707      F0420080 
 6707      4044
 6708              	.LVL565:
 744:Src/main.cpp  **** 
 6709              		.loc 1 744 8 view .LVU1729
 6710 1243 49894424 		movq	%rax, 16(%r12)
 6710      10
 746:Src/main.cpp  **** 	target = numOfObstacles * 4;
 6711              		.loc 1 746 2 is_stmt 1 view .LVU1730
 746:Src/main.cpp  **** 	target = numOfObstacles * 4;
 6712              		.loc 1 746 37 is_stmt 0 view .LVU1731
 6713 1248 BF500000 		movl	$80, %edi
 6713      00
GAS LISTING /tmp/ccZtEYtQ.s 			page 354


 6714 124d E8000000 		call	malloc@PLT
 6714      00
 6715              	.LVL566:
 746:Src/main.cpp  **** 	target = numOfObstacles * 4;
 6716              		.loc 1 746 8 view .LVU1732
 6717 1252 48890500 		movq	%rax, graph(%rip)
 6717      000000
 747:Src/main.cpp  **** 	home = target + 1;
 6718              		.loc 1 747 2 is_stmt 1 view .LVU1733
 747:Src/main.cpp  **** 	home = target + 1;
 6719              		.loc 1 747 9 is_stmt 0 view .LVU1734
 6720 1259 48C70500 		movq	$8, target(%rip)
 6720      00000008 
 6720      000000
 748:Src/main.cpp  **** 	p2->i = home;
 6721              		.loc 1 748 2 is_stmt 1 view .LVU1735
 748:Src/main.cpp  **** 	p2->i = home;
 6722              		.loc 1 748 7 is_stmt 0 view .LVU1736
 6723 1264 48C70500 		movq	$9, home(%rip)
 6723      00000009 
 6723      000000
 749:Src/main.cpp  **** 	p->i = target;
 6724              		.loc 1 749 2 is_stmt 1 view .LVU1737
 749:Src/main.cpp  **** 	p->i = target;
 6725              		.loc 1 749 8 is_stmt 0 view .LVU1738
 6726 126f 49C74424 		movq	$9, 32(%r12)
 6726      20090000 
 6726      00
 750:Src/main.cpp  **** 	graph[target] = p;
 6727              		.loc 1 750 2 is_stmt 1 view .LVU1739
 750:Src/main.cpp  **** 	graph[target] = p;
 6728              		.loc 1 750 7 is_stmt 0 view .LVU1740
 6729 1278 48C74320 		movq	$8, 32(%rbx)
 6729      08000000 
 751:Src/main.cpp  **** 	graph[home] = p2;
 6730              		.loc 1 751 2 is_stmt 1 view .LVU1741
 751:Src/main.cpp  **** 	graph[home] = p2;
 6731              		.loc 1 751 16 is_stmt 0 view .LVU1742
 6732 1280 48895840 		movq	%rbx, 64(%rax)
 752:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 6733              		.loc 1 752 2 is_stmt 1 view .LVU1743
 752:Src/main.cpp  **** 	for(size_t i = 0; i < numOfObstacles * 4; i++)
 6734              		.loc 1 752 14 is_stmt 0 view .LVU1744
 6735 1284 4C896048 		movq	%r12, 72(%rax)
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6736              		.loc 1 753 2 is_stmt 1 view .LVU1745
 6737              	.LVL567:
 6738              	.LBB2659:
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6739              		.loc 1 753 13 is_stmt 0 view .LVU1746
 6740 1288 B8000000 		movl	$0, %eax
 6740      00
 6741              	.LVL568:
 6742              	.L322:
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6743              		.loc 1 753 22 is_stmt 1 discriminator 3 view .LVU1747
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
GAS LISTING /tmp/ccZtEYtQ.s 			page 355


 6744              		.loc 1 753 39 is_stmt 0 discriminator 3 view .LVU1748
 6745 128d 488B3500 		movq	numOfObstacles(%rip), %rsi
 6745      000000
 6746 1294 488D14B5 		leaq	0(,%rsi,4), %rdx
 6746      00000000 
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6747              		.loc 1 753 22 discriminator 3 view .LVU1749
 6748 129c 4839C2   		cmpq	%rax, %rdx
 6749 129f 7632     		jbe	.L343
 754:Src/main.cpp  **** 
 6750              		.loc 1 754 3 is_stmt 1 discriminator 2 view .LVU1750
 754:Src/main.cpp  **** 
 6751              		.loc 1 754 26 is_stmt 0 discriminator 2 view .LVU1751
 6752 12a1 4889C2   		movq	%rax, %rdx
 6753 12a4 48C1EA02 		shrq	$2, %rdx
 754:Src/main.cpp  **** 
 6754              		.loc 1 754 29 discriminator 2 view .LVU1752
 6755 12a8 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 6756 12ac 48C1E204 		salq	$4, %rdx
 6757 12b0 48031500 		addq	obstacles(%rip), %rdx
 6757      000000
 754:Src/main.cpp  **** 
 6758              		.loc 1 754 41 discriminator 2 view .LVU1753
 6759 12b7 4889C1   		movq	%rax, %rcx
 6760 12ba 83E103   		andl	$3, %ecx
 754:Src/main.cpp  **** 
 6761              		.loc 1 754 44 discriminator 2 view .LVU1754
 6762 12bd 488B4CCA 		movq	8(%rdx,%rcx,8), %rcx
 6762      08
 754:Src/main.cpp  **** 
 6763              		.loc 1 754 12 discriminator 2 view .LVU1755
 6764 12c2 488B1500 		movq	graph(%rip), %rdx
 6764      000000
 6765 12c9 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6766              		.loc 1 753 2 is_stmt 1 discriminator 2 view .LVU1756
 6767 12cd 4883C001 		addq	$1, %rax
 6768              	.LVL569:
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6769              		.loc 1 753 2 is_stmt 0 discriminator 2 view .LVU1757
 6770 12d1 EBBA     		jmp	.L322
 6771              	.L343:
 753:Src/main.cpp  **** 		graph[i] = obstacles[i / 4].corners[i % 4];
 6772              		.loc 1 753 2 discriminator 2 view .LVU1758
 6773              	.LBE2659:
 6774              	.LBB2660:
 756:Src/main.cpp  **** 	{
 6775              		.loc 1 756 13 view .LVU1759
 6776 12d3 B8000000 		movl	$0, %eax
 6776      00
 6777              	.LVL570:
 6778              	.L321:
 756:Src/main.cpp  **** 	{
 6779              		.loc 1 756 22 is_stmt 1 discriminator 3 view .LVU1760
 6780 12d8 488B3D00 		movq	graphSize(%rip), %rdi
 6780      000000
 6781 12df 4839C7   		cmpq	%rax, %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 356


 6782 12e2 7630     		jbe	.L323
 758:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 6783              		.loc 1 758 3 discriminator 2 view .LVU1761
 758:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 6784              		.loc 1 758 10 is_stmt 0 discriminator 2 view .LVU1762
 6785 12e4 488B1500 		movq	graph(%rip), %rdx
 6785      000000
 6786 12eb 488D14C2 		leaq	(%rdx,%rax,8), %rdx
 6787 12ef 488B0A   		movq	(%rdx), %rcx
 758:Src/main.cpp  **** 		graph[i]->weight = (1.0 / 0.0);
 6788              		.loc 1 758 15 discriminator 2 view .LVU1763
 6789 12f2 48894120 		movq	%rax, 32(%rcx)
 759:Src/main.cpp  **** 	}
 6790              		.loc 1 759 3 is_stmt 1 discriminator 2 view .LVU1764
 759:Src/main.cpp  **** 	}
 6791              		.loc 1 759 10 is_stmt 0 discriminator 2 view .LVU1765
 6792 12f6 488B12   		movq	(%rdx), %rdx
 759:Src/main.cpp  **** 	}
 6793              		.loc 1 759 20 discriminator 2 view .LVU1766
 6794 12f9 F30F1005 		movss	.LC16(%rip), %xmm0
 6794      00000000 
 6795 1301 F30F5E05 		divss	.LC8(%rip), %xmm0
 6795      00000000 
 6796 1309 F30F1142 		movss	%xmm0, 28(%rdx)
 6796      1C
 756:Src/main.cpp  **** 	{
 6797              		.loc 1 756 2 is_stmt 1 discriminator 2 view .LVU1767
 6798 130e 4883C001 		addq	$1, %rax
 6799              	.LVL571:
 756:Src/main.cpp  **** 	{
 6800              		.loc 1 756 2 is_stmt 0 discriminator 2 view .LVU1768
 6801 1312 EBC4     		jmp	.L321
 6802              	.L323:
 756:Src/main.cpp  **** 	{
 6803              		.loc 1 756 2 discriminator 2 view .LVU1769
 6804              	.LBE2660:
 761:Src/main.cpp  **** 
 6805              		.loc 1 761 2 is_stmt 1 view .LVU1770
 761:Src/main.cpp  **** 
 6806              		.loc 1 761 14 is_stmt 0 view .LVU1771
 6807 1314 488B1500 		movq	target(%rip), %rdx
 6807      000000
 6808 131b 488B0500 		movq	graph(%rip), %rax
 6808      000000
 6809              	.LVL572:
 761:Src/main.cpp  **** 
 6810              		.loc 1 761 14 view .LVU1772
 6811 1322 488B04D0 		movq	(%rax,%rdx,8), %rax
 761:Src/main.cpp  **** 
 6812              		.loc 1 761 24 view .LVU1773
 6813 1326 C7401C00 		movl	$0x00000000, 28(%rax)
 6813      000000
 763:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 6814              		.loc 1 763 2 is_stmt 1 view .LVU1774
 763:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 6815              		.loc 1 763 24 is_stmt 0 view .LVU1775
 6816 132d 48C1E703 		salq	$3, %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 357


 6817 1331 E8000000 		call	malloc@PLT
 6817      00
 6818              	.LVL573:
 763:Src/main.cpp  **** 	for(size_t i = 0; i < graphSize; i++)
 6819              		.loc 1 763 7 view .LVU1776
 6820 1336 48890500 		movq	%rax, ways(%rip)
 6820      000000
 764:Src/main.cpp  **** 		ways[i] = target;
 6821              		.loc 1 764 2 is_stmt 1 view .LVU1777
 6822              	.LVL574:
 6823              	.LBB2661:
 764:Src/main.cpp  **** 		ways[i] = target;
 6824              		.loc 1 764 13 is_stmt 0 view .LVU1778
 6825 133d B8000000 		movl	$0, %eax
 6825      00
 6826              	.LVL575:
 6827              	.L325:
 764:Src/main.cpp  **** 		ways[i] = target;
 6828              		.loc 1 764 22 is_stmt 1 discriminator 3 view .LVU1779
 6829 1342 48390500 		cmpq	%rax, graphSize(%rip)
 6829      000000
 6830 1349 7618     		jbe	.L324
 765:Src/main.cpp  **** 
 6831              		.loc 1 765 3 discriminator 2 view .LVU1780
 765:Src/main.cpp  **** 
 6832              		.loc 1 765 11 is_stmt 0 discriminator 2 view .LVU1781
 6833 134b 488B0D00 		movq	target(%rip), %rcx
 6833      000000
 6834 1352 488B1500 		movq	ways(%rip), %rdx
 6834      000000
 6835 1359 48890CC2 		movq	%rcx, (%rdx,%rax,8)
 764:Src/main.cpp  **** 		ways[i] = target;
 6836              		.loc 1 764 2 is_stmt 1 discriminator 2 view .LVU1782
 6837 135d 4883C001 		addq	$1, %rax
 6838              	.LVL576:
 764:Src/main.cpp  **** 		ways[i] = target;
 6839              		.loc 1 764 2 is_stmt 0 discriminator 2 view .LVU1783
 6840 1361 EBDF     		jmp	.L325
 6841              	.L324:
 764:Src/main.cpp  **** 		ways[i] = target;
 6842              		.loc 1 764 2 discriminator 2 view .LVU1784
 6843              	.LBE2661:
 767:Src/main.cpp  **** 	startway.y 	= 0;
 6844              		.loc 1 767 2 is_stmt 1 view .LVU1785
 767:Src/main.cpp  **** 	startway.y 	= 0;
 6845              		.loc 1 767 14 is_stmt 0 view .LVU1786
 6846 1363 C7050000 		movl	$0x00000000, startway(%rip)
 6846      00000000 
 6846      0000
 768:Src/main.cpp  **** 	endway.x	= 150;
 6847              		.loc 1 768 2 is_stmt 1 view .LVU1787
 768:Src/main.cpp  **** 	endway.x	= 150;
 6848              		.loc 1 768 14 is_stmt 0 view .LVU1788
 6849 136d C7050000 		movl	$0x00000000, 4+startway(%rip)
 6849      00000000 
 6849      0000
 769:Src/main.cpp  **** 	endway.y	= 150;
GAS LISTING /tmp/ccZtEYtQ.s 			page 358


 6850              		.loc 1 769 2 is_stmt 1 view .LVU1789
 769:Src/main.cpp  **** 	endway.y	= 150;
 6851              		.loc 1 769 11 is_stmt 0 view .LVU1790
 6852 1377 F30F1005 		movss	.LC38(%rip), %xmm0
 6852      00000000 
 6853 137f F30F1105 		movss	%xmm0, endway(%rip)
 6853      00000000 
 770:Src/main.cpp  **** 
 6854              		.loc 1 770 2 is_stmt 1 view .LVU1791
 770:Src/main.cpp  **** 
 6855              		.loc 1 770 11 is_stmt 0 view .LVU1792
 6856 1387 F30F1105 		movss	%xmm0, 4+endway(%rip)
 6856      00000000 
 773:Src/main.cpp  **** 	c3.x = 200;
 6857              		.loc 1 773 2 is_stmt 1 view .LVU1793
 774:Src/main.cpp  **** 	c3.y = 0;
 6858              		.loc 1 774 2 view .LVU1794
 775:Src/main.cpp  **** 
 6859              		.loc 1 775 2 view .LVU1795
 780:Src/main.cpp  **** 	
 6860              		.loc 1 780 2 view .LVU1796
 780:Src/main.cpp  **** 	
 6861              		.loc 1 780 11 is_stmt 0 view .LVU1797
 6862 138f 4889DF   		movq	%rbx, %rdi
 6863 1392 E8000000 		call	_Z9initGraphP10graphPoint
 6863      00
 6864              	.LVL577:
 784:Src/main.cpp  **** 	startp = *graph[7];
 6865              		.loc 1 784 2 is_stmt 1 view .LVU1798
 6866              	.LBB2662:
 6867              	.LBI2662:
  38:Includes/findwayBases.hpp **** {
 6868              		.loc 15 38 8 view .LVU1799
 6869              	.LBB2663:
 6870 1397 48C74424 		movq	$0, 48(%rsp)
 6870      30000000 
 6870      00
 6871 13a0 48C74424 		movq	$0, 56(%rsp)
 6871      38000000 
 6871      00
 6872 13a9 C6442448 		movb	$0, 72(%rsp)
 6872      00
 6873 13ae F30F1005 		movss	.LC16(%rip), %xmm0
 6873      00000000 
 6874 13b6 F30F5E05 		divss	.LC8(%rip), %xmm0
 6874      00000000 
 6875 13be F30F1144 		movss	%xmm0, 76(%rsp)
 6875      244C
 6876 13c4 48C74424 		movq	$0, 80(%rsp)
 6876      50000000 
 6876      00
 6877              	.LVL578:
  38:Includes/findwayBases.hpp **** {
 6878              		.loc 15 38 8 is_stmt 0 view .LVU1800
 6879              	.LBE2663:
 6880              	.LBE2662:
 6881              	.LBB2664:
GAS LISTING /tmp/ccZtEYtQ.s 			page 359


 6882              	.LBI2664:
  38:Includes/findwayBases.hpp **** {
 6883              		.loc 15 38 8 is_stmt 1 view .LVU1801
 6884              	.LBB2665:
 6885 13cd 48C74424 		movq	$0, 96(%rsp)
 6885      60000000 
 6885      00
 6886 13d6 48C74424 		movq	$0, 104(%rsp)
 6886      68000000 
 6886      00
 6887 13df C6442478 		movb	$0, 120(%rsp)
 6887      00
 6888 13e4 F30F1144 		movss	%xmm0, 124(%rsp)
 6888      247C
 6889 13ea 48C78424 		movq	$0, 128(%rsp)
 6889      80000000 
 6889      00000000 
 6890              	.LVL579:
  38:Includes/findwayBases.hpp **** {
 6891              		.loc 15 38 8 is_stmt 0 view .LVU1802
 6892              	.LBE2665:
 6893              	.LBE2664:
 785:Src/main.cpp  **** 	endp = *graph[1];
 6894              		.loc 1 785 2 is_stmt 1 view .LVU1803
 785:Src/main.cpp  **** 	endp = *graph[1];
 6895              		.loc 1 785 19 is_stmt 0 view .LVU1804
 6896 13f6 488B1500 		movq	graph(%rip), %rdx
 6896      000000
 785:Src/main.cpp  **** 	endp = *graph[1];
 6897              		.loc 1 785 9 view .LVU1805
 6898 13fd 488B4238 		movq	56(%rdx), %rax
 6899 1401 F30F6F38 		movdqu	(%rax), %xmm7
 6900 1405 0F297C24 		movaps	%xmm7, 48(%rsp)
 6900      30
 6901 140a F30F6F48 		movdqu	16(%rax), %xmm1
 6901      10
 6902 140f 0F294C24 		movaps	%xmm1, 64(%rsp)
 6902      40
 6903 1414 488B4020 		movq	32(%rax), %rax
 6904 1418 48894424 		movq	%rax, 80(%rsp)
 6904      50
 786:Src/main.cpp  **** 
 6905              		.loc 1 786 2 is_stmt 1 view .LVU1806
 786:Src/main.cpp  **** 
 6906              		.loc 1 786 7 is_stmt 0 view .LVU1807
 6907 141d 488B4208 		movq	8(%rdx), %rax
 6908 1421 F30F6F10 		movdqu	(%rax), %xmm2
 6909 1425 0F295424 		movaps	%xmm2, 96(%rsp)
 6909      60
 6910 142a F30F6F58 		movdqu	16(%rax), %xmm3
 6910      10
 6911 142f 0F295C24 		movaps	%xmm3, 112(%rsp)
 6911      70
 6912 1434 488B4020 		movq	32(%rax), %rax
 6913 1438 48898424 		movq	%rax, 128(%rsp)
 6913      80000000 
 801:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
GAS LISTING /tmp/ccZtEYtQ.s 			page 360


 6914              		.loc 1 801 2 is_stmt 1 view .LVU1808
 801:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 6915              		.loc 1 801 47 is_stmt 0 view .LVU1809
 6916 1440 488D7424 		leaq	112(%rsp), %rsi
 6916      70
 6917 1445 488D5C24 		leaq	64(%rsp), %rbx
 6917      40
 6918              	.LVL580:
 801:Src/main.cpp  **** 	// endp.c = v.getLastCoords();
 6919              		.loc 1 801 47 view .LVU1810
 6920 144a 4889DF   		movq	%rbx, %rdi
 6921 144d E8000000 		call	_Z10createVectPK6coordsS1_
 6921      00
 6922              	.LVL581:
 6923 1452 48894424 		movq	%rax, 32(%rsp)
 6923      20
 6924 1457 660FD644 		movq	%xmm0, 40(%rsp)
 6924      2428
 804:Src/main.cpp  **** 	int shit = 1;
 6925              		.loc 1 804 2 is_stmt 1 view .LVU1811
 6926              	.LVL582:
 6927              	.LBB2666:
 6928              	.LBI2666:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6929              		.loc 3 565 5 view .LVU1812
 565:/usr/include/c++/9.2.0/ostream ****     {
 6930              		.loc 3 565 5 is_stmt 0 view .LVU1813
 6931              	.LBE2666:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6932              		.loc 4 335 2 is_stmt 1 view .LVU1814
 6933              	.LBB2668:
 6934              	.LBB2667:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6935              		.loc 3 570 18 is_stmt 0 view .LVU1815
 6936 145d BA070000 		movl	$7, %edx
 6936      00
 6937 1462 488D3500 		leaq	.LC39(%rip), %rsi
 6937      000000
 6938 1469 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6938      000000
 6939 1470 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6939      00
 6940              	.LVL583:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6941              		.loc 3 570 18 view .LVU1816
 6942              	.LBE2667:
 6943              	.LBE2668:
 804:Src/main.cpp  **** 	int shit = 1;
 6944              		.loc 1 804 40 view .LVU1817
 6945 1475 488DBC24 		leaq	144(%rsp), %rdi
 6945      90000000 
 6946 147d 4889DE   		movq	%rbx, %rsi
 6947 1480 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 6947      00
 6948              	.LVL584:
 6949              	.LEHE23:
 6950              	.LBB2669:
GAS LISTING /tmp/ccZtEYtQ.s 			page 361


 6951              	.LBI2669:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 6952              		.loc 10 6416 5 is_stmt 1 view .LVU1818
 6953              	.LBB2670:
 6954              	.LBB2671:
 6955              	.LBI2671:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6956              		.loc 10 930 7 view .LVU1819
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 6957              		.loc 10 930 7 is_stmt 0 view .LVU1820
 6958              	.LBE2671:
 6959              	.LBB2672:
 6960              	.LBI2672:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 6961              		.loc 10 2312 7 is_stmt 1 view .LVU1821
 6962              	.LBB2673:
 6963              	.LBI2673:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6964              		.loc 10 186 7 view .LVU1822
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6965              		.loc 10 186 7 is_stmt 0 view .LVU1823
 6966              	.LBE2673:
 6967              	.LBE2672:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6968              		.loc 10 6421 30 view .LVU1824
 6969 1485 488B9424 		movq	152(%rsp), %rdx
 6969      98000000 
 6970 148d 488BB424 		movq	144(%rsp), %rsi
 6970      90000000 
 6971 1495 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 6971      000000
 6972              	.LEHB24:
 6973 149c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6973      00
 6974              	.LVL585:
 6975 14a1 4889C3   		movq	%rax, %rbx
 6976              	.LVL586:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 6977              		.loc 10 6421 30 view .LVU1825
 6978              	.LBE2670:
 6979              	.LBE2669:
 6980              	.LBB2674:
 6981              	.LBI2674:
 565:/usr/include/c++/9.2.0/ostream ****     {
 6982              		.loc 3 565 5 is_stmt 1 view .LVU1826
 565:/usr/include/c++/9.2.0/ostream ****     {
 6983              		.loc 3 565 5 is_stmt 0 view .LVU1827
 6984              	.LBE2674:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 6985              		.loc 4 335 2 is_stmt 1 view .LVU1828
 6986              	.LBB2676:
 6987              	.LBB2675:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6988              		.loc 3 570 18 is_stmt 0 view .LVU1829
 6989 14a4 BA060000 		movl	$6, %edx
 6989      00
 6990 14a9 488D3500 		leaq	.LC40(%rip), %rsi
GAS LISTING /tmp/ccZtEYtQ.s 			page 362


 6990      000000
 6991 14b0 4889C7   		movq	%rax, %rdi
 6992 14b3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 6992      00
 6993              	.LVL587:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 6994              		.loc 3 570 18 view .LVU1830
 6995              	.LBE2675:
 6996              	.LBE2676:
 804:Src/main.cpp  **** 	int shit = 1;
 6997              		.loc 1 804 74 view .LVU1831
 6998 14b8 488DBC24 		leaq	176(%rsp), %rdi
 6998      B0000000 
 6999 14c0 488D7424 		leaq	112(%rsp), %rsi
 6999      70
 7000 14c5 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 7000      00
 7001              	.LVL588:
 7002              	.LEHE24:
 7003              	.LBB2677:
 7004              	.LBI2677:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 7005              		.loc 10 6416 5 is_stmt 1 view .LVU1832
 7006              	.LBB2678:
 7007              	.LBB2679:
 7008              	.LBI2679:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7009              		.loc 10 930 7 view .LVU1833
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7010              		.loc 10 930 7 is_stmt 0 view .LVU1834
 7011              	.LBE2679:
 7012              	.LBB2680:
 7013              	.LBI2680:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 7014              		.loc 10 2312 7 is_stmt 1 view .LVU1835
 7015              	.LBB2681:
 7016              	.LBI2681:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7017              		.loc 10 186 7 view .LVU1836
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7018              		.loc 10 186 7 is_stmt 0 view .LVU1837
 7019              	.LBE2681:
 7020              	.LBE2680:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7021              		.loc 10 6421 30 view .LVU1838
 7022 14ca 488B9424 		movq	184(%rsp), %rdx
 7022      B8000000 
 7023 14d2 488BB424 		movq	176(%rsp), %rsi
 7023      B0000000 
 7024 14da 4889DF   		movq	%rbx, %rdi
 7025              	.LEHB25:
 7026 14dd E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7026      00
 7027              	.LVL589:
 7028 14e2 4889C7   		movq	%rax, %rdi
 7029              	.LVL590:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
GAS LISTING /tmp/ccZtEYtQ.s 			page 363


 7030              		.loc 10 6421 30 view .LVU1839
 7031              	.LBE2678:
 7032              	.LBE2677:
 7033              	.LBB2682:
 7034              	.LBI2682:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7035              		.loc 3 108 7 is_stmt 1 view .LVU1840
 7036              	.LBB2683:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7037              		.loc 3 113 13 is_stmt 0 view .LVU1841
 7038 14e5 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7038      00
 7039              	.LVL591:
 7040              	.LEHE25:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7041              		.loc 3 113 13 view .LVU1842
 7042              	.LBE2683:
 7043              	.LBE2682:
 7044              	.LBB2684:
 7045              	.LBI2684:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7046              		.loc 10 657 7 is_stmt 1 view .LVU1843
 7047              	.LBB2685:
 7048              	.LBI2685:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7049              		.loc 10 229 7 view .LVU1844
 7050              	.LBB2686:
 7051              	.LBB2687:
 7052              	.LBI2687:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7053              		.loc 10 221 7 view .LVU1845
 7054              	.LBB2688:
 7055              	.LBI2688:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7056              		.loc 10 186 7 view .LVU1846
 7057              	.LBB2689:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7058              		.loc 10 187 28 is_stmt 0 view .LVU1847
 7059 14ea 488BBC24 		movq	176(%rsp), %rdi
 7059      B0000000 
 7060              	.LVL592:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7061              		.loc 10 187 28 view .LVU1848
 7062              	.LBE2689:
 7063              	.LBE2688:
 7064              	.LBB2690:
 7065              	.LBI2690:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7066              		.loc 10 200 7 is_stmt 1 view .LVU1849
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7067              		.loc 10 200 7 is_stmt 0 view .LVU1850
 7068              	.LBE2690:
 7069              	.LBE2687:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7070              		.loc 10 231 2 view .LVU1851
 7071 14f2 488D8424 		leaq	192(%rsp), %rax
 7071      C0000000 
GAS LISTING /tmp/ccZtEYtQ.s 			page 364


 7072 14fa 4839C7   		cmpq	%rax, %rdi
 7073 14fd 7405     		je	.L326
 7074              	.LVL593:
 7075              	.LBB2691:
 7076              	.LBI2691:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7077              		.loc 10 236 7 is_stmt 1 view .LVU1852
 7078              	.LBB2692:
 7079              	.LBB2693:
 7080              	.LBI2693:
 7081              		.loc 13 469 7 view .LVU1853
 7082              	.LBB2694:
 7083              	.LBI2694:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7084              		.loc 12 119 7 view .LVU1854
 7085              	.LBB2695:
 7086              		.loc 12 128 19 is_stmt 0 view .LVU1855
 7087 14ff E8000000 		call	_ZdlPv@PLT
 7087      00
 7088              	.LVL594:
 7089              	.L326:
 7090              		.loc 12 128 19 view .LVU1856
 7091              	.LBE2695:
 7092              	.LBE2694:
 7093              	.LBE2693:
 7094              	.LBE2692:
 7095              	.LBE2691:
 7096              	.LBE2686:
 7097              	.LBE2685:
 7098              	.LBB2696:
 7099              	.LBI2696:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7100              		.loc 10 150 14 is_stmt 1 view .LVU1857
 7101              	.LBB2697:
 7102              	.LBI2697:
 7103              		.loc 11 153 7 view .LVU1858
 7104              	.LBB2698:
 7105              	.LBI2698:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7106              		.loc 12 89 7 view .LVU1859
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7107              		.loc 12 89 7 is_stmt 0 view .LVU1860
 7108              	.LBE2698:
 7109              	.LBE2697:
 7110              	.LBE2696:
 7111              	.LBE2684:
 7112              	.LBB2699:
 7113              	.LBI2699:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7114              		.loc 10 657 7 is_stmt 1 view .LVU1861
 7115              	.LBB2700:
 7116              	.LBI2700:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7117              		.loc 10 229 7 view .LVU1862
 7118              	.LBB2701:
 7119              	.LBB2702:
 7120              	.LBI2702:
GAS LISTING /tmp/ccZtEYtQ.s 			page 365


 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7121              		.loc 10 221 7 view .LVU1863
 7122              	.LBB2703:
 7123              	.LBI2703:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7124              		.loc 10 186 7 view .LVU1864
 7125              	.LBB2704:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7126              		.loc 10 187 28 is_stmt 0 view .LVU1865
 7127 1504 488BBC24 		movq	144(%rsp), %rdi
 7127      90000000 
 7128              	.LVL595:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7129              		.loc 10 187 28 view .LVU1866
 7130              	.LBE2704:
 7131              	.LBE2703:
 7132              	.LBB2705:
 7133              	.LBI2705:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7134              		.loc 10 200 7 is_stmt 1 view .LVU1867
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7135              		.loc 10 200 7 is_stmt 0 view .LVU1868
 7136              	.LBE2705:
 7137              	.LBE2702:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7138              		.loc 10 231 2 view .LVU1869
 7139 150c 488D8424 		leaq	160(%rsp), %rax
 7139      A0000000 
 7140 1514 4839C7   		cmpq	%rax, %rdi
 7141 1517 7405     		je	.L327
 7142              	.LVL596:
 7143              	.LBB2706:
 7144              	.LBI2706:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7145              		.loc 10 236 7 is_stmt 1 view .LVU1870
 7146              	.LBB2707:
 7147              	.LBB2708:
 7148              	.LBI2708:
 7149              		.loc 13 469 7 view .LVU1871
 7150              	.LBB2709:
 7151              	.LBI2709:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7152              		.loc 12 119 7 view .LVU1872
 7153              	.LBB2710:
 7154              		.loc 12 128 19 is_stmt 0 view .LVU1873
 7155 1519 E8000000 		call	_ZdlPv@PLT
 7155      00
 7156              	.LVL597:
 7157              	.L327:
 7158              		.loc 12 128 19 view .LVU1874
 7159              	.LBE2710:
 7160              	.LBE2709:
 7161              	.LBE2708:
 7162              	.LBE2707:
 7163              	.LBE2706:
 7164              	.LBE2701:
 7165              	.LBE2700:
GAS LISTING /tmp/ccZtEYtQ.s 			page 366


 7166              	.LBB2711:
 7167              	.LBI2711:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7168              		.loc 10 150 14 is_stmt 1 view .LVU1875
 7169              	.LBB2712:
 7170              	.LBI2712:
 7171              		.loc 11 153 7 view .LVU1876
 7172              	.LBB2713:
 7173              	.LBI2713:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7174              		.loc 12 89 7 view .LVU1877
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7175              		.loc 12 89 7 is_stmt 0 view .LVU1878
 7176              	.LBE2713:
 7177              	.LBE2712:
 7178              	.LBE2711:
 7179              	.LBE2699:
 805:Src/main.cpp  **** 	
 7180              		.loc 1 805 2 is_stmt 1 view .LVU1879
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7181              		.loc 1 809 2 view .LVU1880
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7182              		.loc 1 809 20 is_stmt 0 view .LVU1881
 7183 151e 488DBC24 		leaq	144(%rsp), %rdi
 7183      90000000 
 7184 1526 488D7424 		leaq	32(%rsp), %rsi
 7184      20
 7185              	.LEHB26:
 7186 152b E8000000 		call	_ZN4vect8toStringB5cxx11Ev
 7186      00
 7187              	.LVL598:
 7188              	.LEHE26:
 7189              	.LBB2714:
 7190              	.LBI2714:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 7191              		.loc 10 6416 5 is_stmt 1 view .LVU1882
 7192              	.LBB2715:
 7193              	.LBB2716:
 7194              	.LBI2716:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7195              		.loc 10 930 7 view .LVU1883
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7196              		.loc 10 930 7 is_stmt 0 view .LVU1884
 7197              	.LBE2716:
 7198              	.LBB2717:
 7199              	.LBI2717:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 7200              		.loc 10 2312 7 is_stmt 1 view .LVU1885
 7201              	.LBB2718:
 7202              	.LBI2718:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7203              		.loc 10 186 7 view .LVU1886
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7204              		.loc 10 186 7 is_stmt 0 view .LVU1887
 7205              	.LBE2718:
 7206              	.LBE2717:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
GAS LISTING /tmp/ccZtEYtQ.s 			page 367


 7207              		.loc 10 6421 30 view .LVU1888
 7208 1530 488B9424 		movq	152(%rsp), %rdx
 7208      98000000 
 7209 1538 488BB424 		movq	144(%rsp), %rsi
 7209      90000000 
 7210 1540 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7210      000000
 7211              	.LEHB27:
 7212 1547 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7212      00
 7213              	.LVL599:
 7214 154c 4889C7   		movq	%rax, %rdi
 7215              	.LVL600:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7216              		.loc 10 6421 30 view .LVU1889
 7217              	.LBE2715:
 7218              	.LBE2714:
 7219              	.LBB2719:
 7220              	.LBI2719:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7221              		.loc 3 108 7 is_stmt 1 view .LVU1890
 7222              	.LBB2720:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7223              		.loc 3 113 13 is_stmt 0 view .LVU1891
 7224 154f E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7224      00
 7225              	.LVL601:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7226              		.loc 3 113 13 view .LVU1892
 7227 1554 4889C3   		movq	%rax, %rbx
 7228              	.LVL602:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7229              		.loc 3 113 13 view .LVU1893
 7230              	.LBE2720:
 7231              	.LBE2719:
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7232              		.loc 1 809 47 view .LVU1894
 7233 1557 488DBC24 		leaq	176(%rsp), %rdi
 7233      B0000000 
 7234 155f 488B7424 		movq	32(%rsp), %rsi
 7234      20
 7235 1564 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 7235      00
 7236              	.LVL603:
 7237              	.LEHE27:
 7238              	.LBB2721:
 7239              	.LBI2721:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 7240              		.loc 10 6416 5 is_stmt 1 view .LVU1895
 7241              	.LBB2722:
 7242              	.LBB2723:
 7243              	.LBI2723:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7244              		.loc 10 930 7 view .LVU1896
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7245              		.loc 10 930 7 is_stmt 0 view .LVU1897
 7246              	.LBE2723:
GAS LISTING /tmp/ccZtEYtQ.s 			page 368


 7247              	.LBB2724:
 7248              	.LBI2724:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 7249              		.loc 10 2312 7 is_stmt 1 view .LVU1898
 7250              	.LBB2725:
 7251              	.LBI2725:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7252              		.loc 10 186 7 view .LVU1899
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7253              		.loc 10 186 7 is_stmt 0 view .LVU1900
 7254              	.LBE2725:
 7255              	.LBE2724:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7256              		.loc 10 6421 30 view .LVU1901
 7257 1569 488B9424 		movq	184(%rsp), %rdx
 7257      B8000000 
 7258 1571 488BB424 		movq	176(%rsp), %rsi
 7258      B0000000 
 7259 1579 4889DF   		movq	%rbx, %rdi
 7260              	.LEHB28:
 7261 157c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7261      00
 7262              	.LVL604:
 7263 1581 4889C7   		movq	%rax, %rdi
 7264              	.LVL605:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7265              		.loc 10 6421 30 view .LVU1902
 7266              	.LBE2722:
 7267              	.LBE2721:
 7268              	.LBB2726:
 7269              	.LBI2726:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7270              		.loc 3 108 7 is_stmt 1 view .LVU1903
 7271              	.LBB2727:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7272              		.loc 3 113 13 is_stmt 0 view .LVU1904
 7273 1584 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7273      00
 7274              	.LVL606:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7275              		.loc 3 113 13 view .LVU1905
 7276 1589 4889C3   		movq	%rax, %rbx
 7277              	.LVL607:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7278              		.loc 3 113 13 view .LVU1906
 7279              	.LBE2727:
 7280              	.LBE2726:
 7281              	.LBB2728:
 7282              	.LBI2728:
 565:/usr/include/c++/9.2.0/ostream ****     {
 7283              		.loc 3 565 5 is_stmt 1 view .LVU1907
 565:/usr/include/c++/9.2.0/ostream ****     {
 7284              		.loc 3 565 5 is_stmt 0 view .LVU1908
 7285              	.LBE2728:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 7286              		.loc 4 335 2 is_stmt 1 view .LVU1909
 7287              	.LBB2730:
GAS LISTING /tmp/ccZtEYtQ.s 			page 369


 7288              	.LBB2729:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7289              		.loc 3 570 18 is_stmt 0 view .LVU1910
 7290 158c BA010000 		movl	$1, %edx
 7290      00
 7291 1591 488D3500 		leaq	.LC27(%rip), %rsi
 7291      000000
 7292 1598 4889C7   		movq	%rax, %rdi
 7293 159b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7293      00
 7294              	.LVL608:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7295              		.loc 3 570 18 view .LVU1911
 7296              	.LBE2729:
 7297              	.LBE2730:
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7298              		.loc 1 809 78 view .LVU1912
 7299 15a0 488B4424 		movq	32(%rsp), %rax
 7299      20
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7300              		.loc 1 809 81 view .LVU1913
 7301 15a5 F30F1000 		movss	(%rax), %xmm0
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7302              		.loc 1 809 82 view .LVU1914
 7303 15a9 F30F5844 		addss	40(%rsp), %xmm0
 7303      2428
 7304              	.LVL609:
 7305              	.LBB2731:
 7306              	.LBI2731:
 224:/usr/include/c++/9.2.0/ostream ****       {
 7307              		.loc 3 224 7 is_stmt 1 view .LVU1915
 7308              	.LBB2732:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7309              		.loc 3 228 43 is_stmt 0 view .LVU1916
 7310 15af F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 7311              	.LVL610:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7312              		.loc 3 228 43 view .LVU1917
 7313 15b3 4889DF   		movq	%rbx, %rdi
 7314 15b6 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 7314      00
 7315              	.LVL611:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7316              		.loc 3 228 43 view .LVU1918
 7317 15bb 4889C3   		movq	%rax, %rbx
 7318              	.LVL612:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7319              		.loc 3 228 43 view .LVU1919
 7320              	.LBE2732:
 7321              	.LBE2731:
 7322              	.LBB2733:
 7323              	.LBI2733:
 565:/usr/include/c++/9.2.0/ostream ****     {
 7324              		.loc 3 565 5 is_stmt 1 view .LVU1920
 565:/usr/include/c++/9.2.0/ostream ****     {
 7325              		.loc 3 565 5 is_stmt 0 view .LVU1921
 7326              	.LBE2733:
GAS LISTING /tmp/ccZtEYtQ.s 			page 370


 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 7327              		.loc 4 335 2 is_stmt 1 view .LVU1922
 7328              	.LBB2735:
 7329              	.LBB2734:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7330              		.loc 3 570 18 is_stmt 0 view .LVU1923
 7331 15be BA010000 		movl	$1, %edx
 7331      00
 7332 15c3 488D3500 		leaq	.LC41(%rip), %rsi
 7332      000000
 7333 15ca 4889C7   		movq	%rax, %rdi
 7334 15cd E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7334      00
 7335              	.LVL613:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7336              		.loc 3 570 18 view .LVU1924
 7337              	.LBE2734:
 7338              	.LBE2735:
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7339              		.loc 1 809 104 view .LVU1925
 7340 15d2 488B4424 		movq	32(%rsp), %rax
 7340      20
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7341              		.loc 1 809 107 view .LVU1926
 7342 15d7 F30F1040 		movss	4(%rax), %xmm0
 7342      04
 809:Src/main.cpp  **** 	cout << getIntersection(&obstacles[shit], &v).toString() << endl;
 7343              		.loc 1 809 108 view .LVU1927
 7344 15dc F30F5844 		addss	44(%rsp), %xmm0
 7344      242C
 7345              	.LVL614:
 7346              	.LBB2736:
 7347              	.LBI2736:
 224:/usr/include/c++/9.2.0/ostream ****       {
 7348              		.loc 3 224 7 is_stmt 1 view .LVU1928
 7349              	.LBB2737:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7350              		.loc 3 228 43 is_stmt 0 view .LVU1929
 7351 15e2 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 7352              	.LVL615:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7353              		.loc 3 228 43 view .LVU1930
 7354 15e6 4889DF   		movq	%rbx, %rdi
 7355 15e9 E8000000 		call	_ZNSo9_M_insertIdEERSoT_@PLT
 7355      00
 7356              	.LVL616:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7357              		.loc 3 228 43 view .LVU1931
 7358 15ee 4889C3   		movq	%rax, %rbx
 7359              	.LVL617:
 228:/usr/include/c++/9.2.0/ostream ****       }
 7360              		.loc 3 228 43 view .LVU1932
 7361              	.LBE2737:
 7362              	.LBE2736:
 7363              	.LBB2738:
 7364              	.LBI2738:
 565:/usr/include/c++/9.2.0/ostream ****     {
GAS LISTING /tmp/ccZtEYtQ.s 			page 371


 7365              		.loc 3 565 5 is_stmt 1 view .LVU1933
 565:/usr/include/c++/9.2.0/ostream ****     {
 7366              		.loc 3 565 5 is_stmt 0 view .LVU1934
 7367              	.LBE2738:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 7368              		.loc 4 335 2 is_stmt 1 view .LVU1935
 7369              	.LBB2740:
 7370              	.LBB2739:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7371              		.loc 3 570 18 is_stmt 0 view .LVU1936
 7372 15f1 BA010000 		movl	$1, %edx
 7372      00
 7373 15f6 488D3500 		leaq	.LC30(%rip), %rsi
 7373      000000
 7374 15fd 4889C7   		movq	%rax, %rdi
 7375 1600 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7375      00
 7376              	.LVL618:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7377              		.loc 3 570 18 view .LVU1937
 7378              	.LBE2739:
 7379              	.LBE2740:
 7380              	.LBB2741:
 7381              	.LBI2741:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7382              		.loc 3 108 7 is_stmt 1 view .LVU1938
 7383              	.LBB2742:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7384              		.loc 3 113 13 is_stmt 0 view .LVU1939
 7385 1605 4889DF   		movq	%rbx, %rdi
 7386 1608 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7386      00
 7387              	.LVL619:
 7388              	.LEHE28:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7389              		.loc 3 113 13 view .LVU1940
 7390              	.LBE2742:
 7391              	.LBE2741:
 7392              	.LBB2743:
 7393              	.LBI2743:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7394              		.loc 10 657 7 is_stmt 1 view .LVU1941
 7395              	.LBB2744:
 7396              	.LBI2744:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7397              		.loc 10 229 7 view .LVU1942
 7398              	.LBB2745:
 7399              	.LBB2746:
 7400              	.LBI2746:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7401              		.loc 10 221 7 view .LVU1943
 7402              	.LBB2747:
 7403              	.LBI2747:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7404              		.loc 10 186 7 view .LVU1944
 7405              	.LBB2748:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 372


 7406              		.loc 10 187 28 is_stmt 0 view .LVU1945
 7407 160d 488BBC24 		movq	176(%rsp), %rdi
 7407      B0000000 
 7408              	.LVL620:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7409              		.loc 10 187 28 view .LVU1946
 7410              	.LBE2748:
 7411              	.LBE2747:
 7412              	.LBB2749:
 7413              	.LBI2749:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7414              		.loc 10 200 7 is_stmt 1 view .LVU1947
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7415              		.loc 10 200 7 is_stmt 0 view .LVU1948
 7416              	.LBE2749:
 7417              	.LBE2746:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7418              		.loc 10 231 2 view .LVU1949
 7419 1615 488D8424 		leaq	192(%rsp), %rax
 7419      C0000000 
 7420 161d 4839C7   		cmpq	%rax, %rdi
 7421 1620 7405     		je	.L328
 7422              	.LVL621:
 7423              	.LBB2750:
 7424              	.LBI2750:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7425              		.loc 10 236 7 is_stmt 1 view .LVU1950
 7426              	.LBB2751:
 7427              	.LBB2752:
 7428              	.LBI2752:
 7429              		.loc 13 469 7 view .LVU1951
 7430              	.LBB2753:
 7431              	.LBI2753:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7432              		.loc 12 119 7 view .LVU1952
 7433              	.LBB2754:
 7434              		.loc 12 128 19 is_stmt 0 view .LVU1953
 7435 1622 E8000000 		call	_ZdlPv@PLT
 7435      00
 7436              	.LVL622:
 7437              	.L328:
 7438              		.loc 12 128 19 view .LVU1954
 7439              	.LBE2754:
 7440              	.LBE2753:
 7441              	.LBE2752:
 7442              	.LBE2751:
 7443              	.LBE2750:
 7444              	.LBE2745:
 7445              	.LBE2744:
 7446              	.LBB2755:
 7447              	.LBI2755:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7448              		.loc 10 150 14 is_stmt 1 view .LVU1955
 7449              	.LBB2756:
 7450              	.LBI2756:
 7451              		.loc 11 153 7 view .LVU1956
 7452              	.LBB2757:
GAS LISTING /tmp/ccZtEYtQ.s 			page 373


 7453              	.LBI2757:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7454              		.loc 12 89 7 view .LVU1957
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7455              		.loc 12 89 7 is_stmt 0 view .LVU1958
 7456              	.LBE2757:
 7457              	.LBE2756:
 7458              	.LBE2755:
 7459              	.LBE2743:
 7460              	.LBB2758:
 7461              	.LBI2758:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7462              		.loc 10 657 7 is_stmt 1 view .LVU1959
 7463              	.LBB2759:
 7464              	.LBI2759:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7465              		.loc 10 229 7 view .LVU1960
 7466              	.LBB2760:
 7467              	.LBB2761:
 7468              	.LBI2761:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7469              		.loc 10 221 7 view .LVU1961
 7470              	.LBB2762:
 7471              	.LBI2762:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7472              		.loc 10 186 7 view .LVU1962
 7473              	.LBB2763:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7474              		.loc 10 187 28 is_stmt 0 view .LVU1963
 7475 1627 488BBC24 		movq	144(%rsp), %rdi
 7475      90000000 
 7476              	.LVL623:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7477              		.loc 10 187 28 view .LVU1964
 7478              	.LBE2763:
 7479              	.LBE2762:
 7480              	.LBB2764:
 7481              	.LBI2764:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7482              		.loc 10 200 7 is_stmt 1 view .LVU1965
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7483              		.loc 10 200 7 is_stmt 0 view .LVU1966
 7484              	.LBE2764:
 7485              	.LBE2761:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7486              		.loc 10 231 2 view .LVU1967
 7487 162f 488D8424 		leaq	160(%rsp), %rax
 7487      A0000000 
 7488 1637 4839C7   		cmpq	%rax, %rdi
 7489 163a 7405     		je	.L329
 7490              	.LVL624:
 7491              	.LBB2765:
 7492              	.LBI2765:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7493              		.loc 10 236 7 is_stmt 1 view .LVU1968
 7494              	.LBB2766:
 7495              	.LBB2767:
GAS LISTING /tmp/ccZtEYtQ.s 			page 374


 7496              	.LBI2767:
 7497              		.loc 13 469 7 view .LVU1969
 7498              	.LBB2768:
 7499              	.LBI2768:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7500              		.loc 12 119 7 view .LVU1970
 7501              	.LBB2769:
 7502              		.loc 12 128 19 is_stmt 0 view .LVU1971
 7503 163c E8000000 		call	_ZdlPv@PLT
 7503      00
 7504              	.LVL625:
 7505              	.L329:
 7506              		.loc 12 128 19 view .LVU1972
 7507              	.LBE2769:
 7508              	.LBE2768:
 7509              	.LBE2767:
 7510              	.LBE2766:
 7511              	.LBE2765:
 7512              	.LBE2760:
 7513              	.LBE2759:
 7514              	.LBB2770:
 7515              	.LBI2770:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7516              		.loc 10 150 14 is_stmt 1 view .LVU1973
 7517              	.LBB2771:
 7518              	.LBI2771:
 7519              		.loc 11 153 7 view .LVU1974
 7520              	.LBB2772:
 7521              	.LBI2772:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7522              		.loc 12 89 7 view .LVU1975
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7523              		.loc 12 89 7 is_stmt 0 view .LVU1976
 7524              	.LBE2772:
 7525              	.LBE2771:
 7526              	.LBE2770:
 7527              	.LBE2758:
 810:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 7528              		.loc 1 810 2 is_stmt 1 view .LVU1977
 810:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 7529              		.loc 1 810 26 is_stmt 0 view .LVU1978
 7530 1641 488B0500 		movq	obstacles(%rip), %rax
 7530      000000
 7531 1648 488D7830 		leaq	48(%rax), %rdi
 810:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 7532              		.loc 1 810 46 view .LVU1979
 7533 164c 488D7424 		leaq	32(%rsp), %rsi
 7533      20
 7534              	.LEHB29:
 7535 1651 E8000000 		call	_Z15getIntersectionPK8obstaclePK4vect@PLT
 7535      00
 7536              	.LVL626:
 7537 1656 660FD644 		movq	%xmm0, 24(%rsp)
 7537      2418
 810:Src/main.cpp  **** 	cout << hasIntersections(&v) << endl;
 7538              		.loc 1 810 56 view .LVU1980
 7539 165c 488DBC24 		leaq	176(%rsp), %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 375


 7539      B0000000 
 7540 1664 488D7424 		leaq	24(%rsp), %rsi
 7540      18
 7541 1669 E8000000 		call	_ZN6coords8toStringB5cxx11Ev
 7541      00
 7542              	.LVL627:
 7543              	.LEHE29:
 7544              	.LBB2773:
 7545              	.LBI2773:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 7546              		.loc 10 6416 5 is_stmt 1 view .LVU1981
 7547              	.LBB2774:
 7548              	.LBB2775:
 7549              	.LBI2775:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7550              		.loc 10 930 7 view .LVU1982
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 7551              		.loc 10 930 7 is_stmt 0 view .LVU1983
 7552              	.LBE2775:
 7553              	.LBB2776:
 7554              	.LBI2776:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 7555              		.loc 10 2312 7 is_stmt 1 view .LVU1984
 7556              	.LBB2777:
 7557              	.LBI2777:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7558              		.loc 10 186 7 view .LVU1985
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7559              		.loc 10 186 7 is_stmt 0 view .LVU1986
 7560              	.LBE2777:
 7561              	.LBE2776:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7562              		.loc 10 6421 30 view .LVU1987
 7563 166e 488B9424 		movq	184(%rsp), %rdx
 7563      B8000000 
 7564 1676 488BB424 		movq	176(%rsp), %rsi
 7564      B0000000 
 7565 167e 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7565      000000
 7566              	.LEHB30:
 7567 1685 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7567      00
 7568              	.LVL628:
 7569 168a 4889C7   		movq	%rax, %rdi
 7570              	.LVL629:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 7571              		.loc 10 6421 30 view .LVU1988
 7572              	.LBE2774:
 7573              	.LBE2773:
 7574              	.LBB2778:
 7575              	.LBI2778:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7576              		.loc 3 108 7 is_stmt 1 view .LVU1989
 7577              	.LBB2779:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7578              		.loc 3 113 13 is_stmt 0 view .LVU1990
 7579 168d E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 376


 7579      00
 7580              	.LVL630:
 7581              	.LEHE30:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7582              		.loc 3 113 13 view .LVU1991
 7583              	.LBE2779:
 7584              	.LBE2778:
 7585              	.LBB2780:
 7586              	.LBI2780:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7587              		.loc 10 657 7 is_stmt 1 view .LVU1992
 7588              	.LBB2781:
 7589              	.LBI2781:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7590              		.loc 10 229 7 view .LVU1993
 7591              	.LBB2782:
 7592              	.LBB2783:
 7593              	.LBI2783:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7594              		.loc 10 221 7 view .LVU1994
 7595              	.LBB2784:
 7596              	.LBI2784:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7597              		.loc 10 186 7 view .LVU1995
 7598              	.LBB2785:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7599              		.loc 10 187 28 is_stmt 0 view .LVU1996
 7600 1692 488BBC24 		movq	176(%rsp), %rdi
 7600      B0000000 
 7601              	.LVL631:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7602              		.loc 10 187 28 view .LVU1997
 7603              	.LBE2785:
 7604              	.LBE2784:
 7605              	.LBB2786:
 7606              	.LBI2786:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7607              		.loc 10 200 7 is_stmt 1 view .LVU1998
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7608              		.loc 10 200 7 is_stmt 0 view .LVU1999
 7609              	.LBE2786:
 7610              	.LBE2783:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7611              		.loc 10 231 2 view .LVU2000
 7612 169a 488D8424 		leaq	192(%rsp), %rax
 7612      C0000000 
 7613 16a2 4839C7   		cmpq	%rax, %rdi
 7614 16a5 7405     		je	.L330
 7615              	.LVL632:
 7616              	.LBB2787:
 7617              	.LBI2787:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7618              		.loc 10 236 7 is_stmt 1 view .LVU2001
 7619              	.LBB2788:
 7620              	.LBB2789:
 7621              	.LBI2789:
 7622              		.loc 13 469 7 view .LVU2002
GAS LISTING /tmp/ccZtEYtQ.s 			page 377


 7623              	.LBB2790:
 7624              	.LBI2790:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7625              		.loc 12 119 7 view .LVU2003
 7626              	.LBB2791:
 7627              		.loc 12 128 19 is_stmt 0 view .LVU2004
 7628 16a7 E8000000 		call	_ZdlPv@PLT
 7628      00
 7629              	.LVL633:
 7630              	.L330:
 7631              		.loc 12 128 19 view .LVU2005
 7632              	.LBE2791:
 7633              	.LBE2790:
 7634              	.LBE2789:
 7635              	.LBE2788:
 7636              	.LBE2787:
 7637              	.LBE2782:
 7638              	.LBE2781:
 7639              	.LBB2792:
 7640              	.LBI2792:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7641              		.loc 10 150 14 is_stmt 1 view .LVU2006
 7642              	.LBB2793:
 7643              	.LBI2793:
 7644              		.loc 11 153 7 view .LVU2007
 7645              	.LBB2794:
 7646              	.LBI2794:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7647              		.loc 12 89 7 view .LVU2008
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 7648              		.loc 12 89 7 is_stmt 0 view .LVU2009
 7649              	.LBE2794:
 7650              	.LBE2793:
 7651              	.LBE2792:
 7652              	.LBE2780:
 811:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 7653              		.loc 1 811 2 is_stmt 1 view .LVU2010
 811:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 7654              		.loc 1 811 26 is_stmt 0 view .LVU2011
 7655 16ac 488D5C24 		leaq	32(%rsp), %rbx
 7655      20
 7656 16b1 4889DF   		movq	%rbx, %rdi
 7657              	.LEHB31:
 7658 16b4 E8000000 		call	_Z16hasIntersectionsPK4vect
 7658      00
 7659              	.LVL634:
 811:Src/main.cpp  **** 	cout << hasIntersection(&obstacles[shit], &v) << endl;
 7660              		.loc 1 811 29 view .LVU2012
 7661 16b9 0FB6F0   		movzbl	%al, %esi
 7662              	.LVL635:
 7663              	.LBB2795:
 7664              	.LBI2795:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 7665              		.loc 3 174 7 is_stmt 1 view .LVU2013
 7666              	.LBB2796:
 175:/usr/include/c++/9.2.0/ostream **** 
 7667              		.loc 3 175 29 is_stmt 0 view .LVU2014
GAS LISTING /tmp/ccZtEYtQ.s 			page 378


 7668 16bc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7668      000000
 7669 16c3 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 7669      00
 7670              	.LVL636:
 175:/usr/include/c++/9.2.0/ostream **** 
 7671              		.loc 3 175 29 view .LVU2015
 7672 16c8 4889C7   		movq	%rax, %rdi
 7673              	.LVL637:
 175:/usr/include/c++/9.2.0/ostream **** 
 7674              		.loc 3 175 29 view .LVU2016
 7675              	.LBE2796:
 7676              	.LBE2795:
 7677              	.LBB2797:
 7678              	.LBI2797:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7679              		.loc 3 108 7 is_stmt 1 view .LVU2017
 7680              	.LBB2798:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7681              		.loc 3 113 13 is_stmt 0 view .LVU2018
 7682 16cb E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7682      00
 7683              	.LVL638:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7684              		.loc 3 113 13 view .LVU2019
 7685              	.LBE2798:
 7686              	.LBE2797:
 812:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 7687              		.loc 1 812 2 is_stmt 1 view .LVU2020
 812:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 7688              		.loc 1 812 26 is_stmt 0 view .LVU2021
 7689 16d0 488B0500 		movq	obstacles(%rip), %rax
 7689      000000
 7690 16d7 488D7830 		leaq	48(%rax), %rdi
 812:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 7691              		.loc 1 812 25 view .LVU2022
 7692 16db 4889DE   		movq	%rbx, %rsi
 7693 16de E8000000 		call	_Z15hasIntersectionPK8obstaclePK4vect@PLT
 7693      00
 7694              	.LVL639:
 812:Src/main.cpp  **** 	cout << hasIntersections(&v) << " " << isDotInside(v.c) << " " << isDotInside(&endp.c) << endl;
 7695              		.loc 1 812 46 view .LVU2023
 7696 16e3 0FB6F0   		movzbl	%al, %esi
 7697              	.LVL640:
 7698              	.LBB2799:
 7699              	.LBI2799:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 7700              		.loc 3 174 7 is_stmt 1 view .LVU2024
 7701              	.LBB2800:
 175:/usr/include/c++/9.2.0/ostream **** 
 7702              		.loc 3 175 29 is_stmt 0 view .LVU2025
 7703 16e6 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7703      000000
 7704 16ed E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 7704      00
 7705              	.LVL641:
 175:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 379


 7706              		.loc 3 175 29 view .LVU2026
 7707 16f2 4889C7   		movq	%rax, %rdi
 7708              	.LVL642:
 175:/usr/include/c++/9.2.0/ostream **** 
 7709              		.loc 3 175 29 view .LVU2027
 7710              	.LBE2800:
 7711              	.LBE2799:
 7712              	.LBB2801:
 7713              	.LBI2801:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7714              		.loc 3 108 7 is_stmt 1 view .LVU2028
 7715              	.LBB2802:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7716              		.loc 3 113 13 is_stmt 0 view .LVU2029
 7717 16f5 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 7717      00
 7718              	.LVL643:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7719              		.loc 3 113 13 view .LVU2030
 7720              	.LBE2802:
 7721              	.LBE2801:
 813:Src/main.cpp  **** 
 7722              		.loc 1 813 2 is_stmt 1 view .LVU2031
 813:Src/main.cpp  **** 
 7723              		.loc 1 813 26 is_stmt 0 view .LVU2032
 7724 16fa 4889DF   		movq	%rbx, %rdi
 7725 16fd E8000000 		call	_Z16hasIntersectionsPK4vect
 7725      00
 7726              	.LVL644:
 813:Src/main.cpp  **** 
 7727              		.loc 1 813 29 view .LVU2033
 7728 1702 0FB6F0   		movzbl	%al, %esi
 7729              	.LVL645:
 7730              	.LBB2803:
 7731              	.LBI2803:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 7732              		.loc 3 174 7 is_stmt 1 view .LVU2034
 7733              	.LBB2804:
 175:/usr/include/c++/9.2.0/ostream **** 
 7734              		.loc 3 175 29 is_stmt 0 view .LVU2035
 7735 1705 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7735      000000
 7736 170c E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 7736      00
 7737              	.LVL646:
 175:/usr/include/c++/9.2.0/ostream **** 
 7738              		.loc 3 175 29 view .LVU2036
 7739 1711 4889C3   		movq	%rax, %rbx
 7740              	.LVL647:
 175:/usr/include/c++/9.2.0/ostream **** 
 7741              		.loc 3 175 29 view .LVU2037
 7742              	.LBE2804:
 7743              	.LBE2803:
 7744              	.LBB2805:
 7745              	.LBI2805:
 565:/usr/include/c++/9.2.0/ostream ****     {
 7746              		.loc 3 565 5 is_stmt 1 view .LVU2038
GAS LISTING /tmp/ccZtEYtQ.s 			page 380


 565:/usr/include/c++/9.2.0/ostream ****     {
 7747              		.loc 3 565 5 is_stmt 0 view .LVU2039
 7748              	.LBE2805:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 7749              		.loc 4 335 2 is_stmt 1 view .LVU2040
 7750              	.LBB2807:
 7751              	.LBB2806:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7752              		.loc 3 570 18 is_stmt 0 view .LVU2041
 7753 1714 BA010000 		movl	$1, %edx
 7753      00
 7754 1719 488D3500 		leaq	.LC42(%rip), %rsi
 7754      000000
 7755 1720 4889C7   		movq	%rax, %rdi
 7756 1723 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7756      00
 7757              	.LVL648:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7758              		.loc 3 570 18 view .LVU2042
 7759              	.LBE2806:
 7760              	.LBE2807:
 813:Src/main.cpp  **** 
 7761              		.loc 1 813 52 view .LVU2043
 7762 1728 488B7C24 		movq	32(%rsp), %rdi
 7762      20
 7763 172d E8000000 		call	_Z11isDotInsidePK6coords
 7763      00
 7764              	.LVL649:
 813:Src/main.cpp  **** 
 7765              		.loc 1 813 56 view .LVU2044
 7766 1732 0FB6F0   		movzbl	%al, %esi
 7767              	.LVL650:
 7768              	.LBB2808:
 7769              	.LBI2808:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 7770              		.loc 3 174 7 is_stmt 1 view .LVU2045
 7771              	.LBB2809:
 175:/usr/include/c++/9.2.0/ostream **** 
 7772              		.loc 3 175 29 is_stmt 0 view .LVU2046
 7773 1735 4889DF   		movq	%rbx, %rdi
 7774 1738 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 7774      00
 7775              	.LVL651:
 175:/usr/include/c++/9.2.0/ostream **** 
 7776              		.loc 3 175 29 view .LVU2047
 7777 173d 4889C3   		movq	%rax, %rbx
 7778              	.LVL652:
 175:/usr/include/c++/9.2.0/ostream **** 
 7779              		.loc 3 175 29 view .LVU2048
 7780              	.LBE2809:
 7781              	.LBE2808:
 7782              	.LBB2810:
 7783              	.LBI2810:
 565:/usr/include/c++/9.2.0/ostream ****     {
 7784              		.loc 3 565 5 is_stmt 1 view .LVU2049
 565:/usr/include/c++/9.2.0/ostream ****     {
 7785              		.loc 3 565 5 is_stmt 0 view .LVU2050
GAS LISTING /tmp/ccZtEYtQ.s 			page 381


 7786              	.LBE2810:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 7787              		.loc 4 335 2 is_stmt 1 view .LVU2051
 7788              	.LBB2812:
 7789              	.LBB2811:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7790              		.loc 3 570 18 is_stmt 0 view .LVU2052
 7791 1740 BA010000 		movl	$1, %edx
 7791      00
 7792 1745 488D3500 		leaq	.LC42(%rip), %rsi
 7792      000000
 7793 174c 4889C7   		movq	%rax, %rdi
 7794 174f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 7794      00
 7795              	.LVL653:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 7796              		.loc 3 570 18 view .LVU2053
 7797              	.LBE2811:
 7798              	.LBE2812:
 813:Src/main.cpp  **** 
 7799              		.loc 1 813 79 view .LVU2054
 7800 1754 488D7C24 		leaq	112(%rsp), %rdi
 7800      70
 7801 1759 E8000000 		call	_Z11isDotInsidePK6coords
 7801      00
 7802              	.LVL654:
 813:Src/main.cpp  **** 
 7803              		.loc 1 813 87 view .LVU2055
 7804 175e 0FB6F0   		movzbl	%al, %esi
 7805              	.LVL655:
 7806              	.LBB2813:
 7807              	.LBI2813:
 174:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 7808              		.loc 3 174 7 is_stmt 1 view .LVU2056
 7809              	.LBB2814:
 175:/usr/include/c++/9.2.0/ostream **** 
 7810              		.loc 3 175 29 is_stmt 0 view .LVU2057
 7811 1761 4889DF   		movq	%rbx, %rdi
 7812 1764 E8000000 		call	_ZNSo9_M_insertIbEERSoT_@PLT
 7812      00
 7813              	.LVL656:
 175:/usr/include/c++/9.2.0/ostream **** 
 7814              		.loc 3 175 29 view .LVU2058
 7815 1769 4889C7   		movq	%rax, %rdi
 7816              	.LVL657:
 175:/usr/include/c++/9.2.0/ostream **** 
 7817              		.loc 3 175 29 view .LVU2059
 7818              	.LBE2814:
 7819              	.LBE2813:
 7820              	.LBB2815:
 7821              	.LBI2815:
 108:/usr/include/c++/9.2.0/ostream ****       {
 7822              		.loc 3 108 7 is_stmt 1 view .LVU2060
 7823              	.LBB2816:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7824              		.loc 3 113 13 is_stmt 0 view .LVU2061
 7825 176c E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 382


 7825      00
 7826              	.LVL658:
 113:/usr/include/c++/9.2.0/ostream ****       }
 7827              		.loc 3 113 13 view .LVU2062
 7828              	.LBE2816:
 7829              	.LBE2815:
 821:Src/main.cpp  **** 		exit(0);
 7830              		.loc 1 821 2 is_stmt 1 view .LVU2063
 7831 1771 837C240C 		cmpl	$1, 12(%rsp)
 7831      01
 7832 1776 0F840F01 		je	.L351
 7832      0000
 832:Src/main.cpp  **** 	glutInit(&argc, argv);
 7833              		.loc 1 832 3 view .LVU2064
 832:Src/main.cpp  **** 	glutInit(&argc, argv);
 7834              		.loc 1 832 11 is_stmt 0 view .LVU2065
 7835 177c 488D3500 		leaq	.LC43(%rip), %rsi
 7835      000000
 7836 1783 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7836      000000
 7837 178a E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7837      00
 7838              	.LVL659:
 833:Src/main.cpp  **** 	cout << "dispmode\n";
 7839              		.loc 1 833 2 is_stmt 1 view .LVU2066
 833:Src/main.cpp  **** 	cout << "dispmode\n";
 7840              		.loc 1 833 10 is_stmt 0 view .LVU2067
 7841 178f 488D7C24 		leaq	12(%rsp), %rdi
 7841      0C
 7842 1794 4889EE   		movq	%rbp, %rsi
 7843 1797 E8000000 		call	glutInit@PLT
 7843      00
 7844              	.LVL660:
 834:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 7845              		.loc 1 834 2 is_stmt 1 view .LVU2068
 834:Src/main.cpp  **** 	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
 7846              		.loc 1 834 10 is_stmt 0 view .LVU2069
 7847 179c 488D3500 		leaq	.LC44(%rip), %rsi
 7847      000000
 7848 17a3 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7848      000000
 7849 17aa E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7849      00
 7850              	.LVL661:
 835:Src/main.cpp  **** 	glutCreateWindow("floating");
 7851              		.loc 1 835 2 is_stmt 1 view .LVU2070
 835:Src/main.cpp  **** 	glutCreateWindow("floating");
 7852              		.loc 1 835 21 is_stmt 0 view .LVU2071
 7853 17af BF020000 		movl	$2, %edi
 7853      00
 7854 17b4 E8000000 		call	glutInitDisplayMode@PLT
 7854      00
 7855              	.LVL662:
 836:Src/main.cpp  **** 	cout << "reshape\n";
 7856              		.loc 1 836 2 is_stmt 1 view .LVU2072
 836:Src/main.cpp  **** 	cout << "reshape\n";
 7857              		.loc 1 836 18 is_stmt 0 view .LVU2073
GAS LISTING /tmp/ccZtEYtQ.s 			page 383


 7858 17b9 488D3D00 		leaq	.LC45(%rip), %rdi
 7858      000000
 7859 17c0 E8000000 		call	glutCreateWindow@PLT
 7859      00
 7860              	.LVL663:
 837:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 7861              		.loc 1 837 2 is_stmt 1 view .LVU2074
 837:Src/main.cpp  **** 	glutReshapeFunc(reshape);
 7862              		.loc 1 837 10 is_stmt 0 view .LVU2075
 7863 17c5 488D3500 		leaq	.LC46(%rip), %rsi
 7863      000000
 7864 17cc 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7864      000000
 7865 17d3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7865      00
 7866              	.LVL664:
 838:Src/main.cpp  **** 	cout << "dispfunc\n";
 7867              		.loc 1 838 2 is_stmt 1 view .LVU2076
 838:Src/main.cpp  **** 	cout << "dispfunc\n";
 7868              		.loc 1 838 17 is_stmt 0 view .LVU2077
 7869 17d8 488D3D00 		leaq	_Z7reshapeii(%rip), %rdi
 7869      000000
 7870 17df E8000000 		call	glutReshapeFunc@PLT
 7870      00
 7871              	.LVL665:
 839:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 7872              		.loc 1 839 2 is_stmt 1 view .LVU2078
 839:Src/main.cpp  **** 	glutDisplayFunc(renderScene);
 7873              		.loc 1 839 10 is_stmt 0 view .LVU2079
 7874 17e4 488D3500 		leaq	.LC47(%rip), %rsi
 7874      000000
 7875 17eb 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7875      000000
 7876 17f2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7876      00
 7877              	.LVL666:
 840:Src/main.cpp  ****     cout << "keyfunc\n";
 7878              		.loc 1 840 2 is_stmt 1 view .LVU2080
 840:Src/main.cpp  ****     cout << "keyfunc\n";
 7879              		.loc 1 840 17 is_stmt 0 view .LVU2081
 7880 17f7 488D3D00 		leaq	_Z11renderScenev(%rip), %rdi
 7880      000000
 7881 17fe E8000000 		call	glutDisplayFunc@PLT
 7881      00
 7882              	.LVL667:
 841:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 7883              		.loc 1 841 5 is_stmt 1 view .LVU2082
 841:Src/main.cpp  ****     glutKeyboardFunc(handleKeypress);
 7884              		.loc 1 841 13 is_stmt 0 view .LVU2083
 7885 1803 488D3500 		leaq	.LC48(%rip), %rsi
 7885      000000
 7886 180a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7886      000000
 7887 1811 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7887      00
 7888              	.LVL668:
 842:Src/main.cpp  **** 	cout << "timer\n";
GAS LISTING /tmp/ccZtEYtQ.s 			page 384


 7889              		.loc 1 842 5 is_stmt 1 view .LVU2084
 842:Src/main.cpp  **** 	cout << "timer\n";
 7890              		.loc 1 842 21 is_stmt 0 view .LVU2085
 7891 1816 488D3D00 		leaq	_Z14handleKeypresshii(%rip), %rdi
 7891      000000
 7892 181d E8000000 		call	glutKeyboardFunc@PLT
 7892      00
 7893              	.LVL669:
 843:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 7894              		.loc 1 843 2 is_stmt 1 view .LVU2086
 843:Src/main.cpp  **** 	glutTimerFunc(GL_TIMER_DELAY, timf, 0);
 7895              		.loc 1 843 10 is_stmt 0 view .LVU2087
 7896 1822 488D3500 		leaq	.LC49(%rip), %rsi
 7896      000000
 7897 1829 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7897      000000
 7898 1830 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7898      00
 7899              	.LVL670:
 844:Src/main.cpp  **** 	cout << "mainloop\n";
 7900              		.loc 1 844 2 is_stmt 1 view .LVU2088
 844:Src/main.cpp  **** 	cout << "mainloop\n";
 7901              		.loc 1 844 15 is_stmt 0 view .LVU2089
 7902 1835 BA000000 		movl	$0, %edx
 7902      00
 7903 183a 488D3500 		leaq	_Z4timfi(%rip), %rsi
 7903      000000
 7904 1841 BF900100 		movl	$400, %edi
 7904      00
 7905 1846 E8000000 		call	glutTimerFunc@PLT
 7905      00
 7906              	.LVL671:
 845:Src/main.cpp  **** 	glutMainLoop();
 7907              		.loc 1 845 2 is_stmt 1 view .LVU2090
 845:Src/main.cpp  **** 	glutMainLoop();
 7908              		.loc 1 845 10 is_stmt 0 view .LVU2091
 7909 184b 488D3500 		leaq	.LC50(%rip), %rsi
 7909      000000
 7910 1852 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 7910      000000
 7911 1859 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 7911      00
 7912              	.LVL672:
 846:Src/main.cpp  **** 
 7913              		.loc 1 846 2 is_stmt 1 view .LVU2092
 846:Src/main.cpp  **** 
 7914              		.loc 1 846 14 is_stmt 0 view .LVU2093
 7915 185e E8000000 		call	glutMainLoop@PLT
 7915      00
 7916              	.LVL673:
 849:Src/main.cpp  **** }
 7917              		.loc 1 849 2 is_stmt 1 view .LVU2094
 7918              		.loc 1 850 1 is_stmt 0 view .LVU2095
 7919 1863 488B8424 		movq	232(%rsp), %rax
 7919      E8000000 
 7920 186b 64483304 		xorq	%fs:40, %rax
 7920      25280000 
GAS LISTING /tmp/ccZtEYtQ.s 			page 385


 7920      00
 7921 1874 0F85C800 		jne	.L352
 7921      0000
 7922 187a B8000000 		movl	$0, %eax
 7922      00
 7923 187f 4881C4F0 		addq	$240, %rsp
 7923      000000
 7924              		.cfi_remember_state
 7925              		.cfi_def_cfa_offset 32
 7926 1886 5B       		popq	%rbx
 7927              		.cfi_def_cfa_offset 24
 7928 1887 5D       		popq	%rbp
 7929              		.cfi_def_cfa_offset 16
 7930              	.LVL674:
 7931              		.loc 1 850 1 view .LVU2096
 7932 1888 415C     		popq	%r12
 7933              		.cfi_def_cfa_offset 8
 7934              	.LVL675:
 7935              		.loc 1 850 1 view .LVU2097
 7936 188a C3       		ret
 7937              	.LVL676:
 7938              	.L351:
 7939              		.cfi_restore_state
 822:Src/main.cpp  **** 	// initGraph(p);
 7940              		.loc 1 822 3 is_stmt 1 view .LVU2098
 822:Src/main.cpp  **** 	// initGraph(p);
 7941              		.loc 1 822 7 is_stmt 0 view .LVU2099
 7942 188b BF000000 		movl	$0, %edi
 7942      00
 7943 1890 E8000000 		call	exit@PLT
 7943      00
 7944              	.LVL677:
 7945              	.L345:
 822:Src/main.cpp  **** 	// initGraph(p);
 7946              		.loc 1 822 7 view .LVU2100
 7947 1895 4889C3   		movq	%rax, %rbx
 7948              	.LVL678:
 7949              	.LBB2817:
 7950              	.LBI2817:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 7951              		.loc 10 657 7 is_stmt 1 view .LVU2101
 7952              	.LBB2818:
 7953              	.LBI2818:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7954              		.loc 10 229 7 view .LVU2102
 7955              	.LBB2819:
 7956              	.LBB2820:
 7957              	.LBI2820:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7958              		.loc 10 221 7 view .LVU2103
 7959              	.LBB2821:
 7960              	.LBI2821:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7961              		.loc 10 186 7 view .LVU2104
 7962              	.LBB2822:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7963              		.loc 10 187 28 is_stmt 0 view .LVU2105
GAS LISTING /tmp/ccZtEYtQ.s 			page 386


 7964 1898 488BBC24 		movq	176(%rsp), %rdi
 7964      B0000000 
 7965              	.LVL679:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 7966              		.loc 10 187 28 view .LVU2106
 7967              	.LBE2822:
 7968              	.LBE2821:
 7969              	.LBB2823:
 7970              	.LBI2823:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7971              		.loc 10 200 7 is_stmt 1 view .LVU2107
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 7972              		.loc 10 200 7 is_stmt 0 view .LVU2108
 7973              	.LBE2823:
 7974              	.LBE2820:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7975              		.loc 10 231 2 view .LVU2109
 7976 18a0 488D8424 		leaq	192(%rsp), %rax
 7976      C0000000 
 7977 18a8 4839C7   		cmpq	%rax, %rdi
 7978 18ab 7405     		je	.L334
 7979              	.LVL680:
 7980              	.LBB2824:
 7981              	.LBI2824:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7982              		.loc 10 236 7 is_stmt 1 view .LVU2110
 7983              	.LBB2825:
 7984              	.LBB2826:
 7985              	.LBI2826:
 7986              		.loc 13 469 7 view .LVU2111
 7987              	.LBB2827:
 7988              	.LBI2827:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 7989              		.loc 12 119 7 view .LVU2112
 7990              	.LBB2828:
 7991              		.loc 12 128 19 is_stmt 0 view .LVU2113
 7992 18ad E8000000 		call	_ZdlPv@PLT
 7992      00
 7993              	.LVL681:
 7994              		.loc 12 128 19 view .LVU2114
 7995              	.LBE2828:
 7996              	.LBE2827:
 7997              	.LBE2826:
 7998              	.LBE2825:
 7999              	.LBE2824:
 8000              	.LBE2819:
 8001              	.LBE2818:
 8002              	.LBB2829:
 8003              	.LBI2829:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8004              		.loc 10 150 14 is_stmt 1 view .LVU2115
 8005              	.LBB2830:
 8006              	.LBI2830:
 8007              		.loc 11 153 7 view .LVU2116
 8008              	.LBB2831:
 8009              	.LBI2831:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 387


 8010              		.loc 12 89 7 view .LVU2117
 8011              	.L334:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8012              		.loc 12 89 7 is_stmt 0 view .LVU2118
 8013              	.LBE2831:
 8014              	.LBE2830:
 8015              	.LBE2829:
 8016              	.LBE2817:
 8017              	.LBB2832:
 8018              	.LBI2832:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8019              		.loc 10 657 7 is_stmt 1 discriminator 7 view .LVU2119
 8020              	.LBB2833:
 8021              	.LBI2833:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8022              		.loc 10 229 7 discriminator 7 view .LVU2120
 8023              	.LBB2834:
 8024              	.LBB2835:
 8025              	.LBI2835:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8026              		.loc 10 221 7 discriminator 7 view .LVU2121
 8027              	.LBB2836:
 8028              	.LBI2836:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8029              		.loc 10 186 7 discriminator 7 view .LVU2122
 8030              	.LBB2837:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8031              		.loc 10 187 28 is_stmt 0 discriminator 7 view .LVU2123
 8032 18b2 488BBC24 		movq	144(%rsp), %rdi
 8032      90000000 
 8033              	.LVL682:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8034              		.loc 10 187 28 discriminator 7 view .LVU2124
 8035              	.LBE2837:
 8036              	.LBE2836:
 8037              	.LBB2838:
 8038              	.LBI2838:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8039              		.loc 10 200 7 is_stmt 1 discriminator 7 view .LVU2125
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8040              		.loc 10 200 7 is_stmt 0 discriminator 7 view .LVU2126
 8041              	.LBE2838:
 8042              	.LBE2835:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8043              		.loc 10 231 2 discriminator 7 view .LVU2127
 8044 18ba 488D8424 		leaq	160(%rsp), %rax
 8044      A0000000 
 8045 18c2 4839C7   		cmpq	%rax, %rdi
 8046 18c5 7405     		je	.L335
 8047              	.LVL683:
 8048              	.LBB2839:
 8049              	.LBI2839:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8050              		.loc 10 236 7 is_stmt 1 view .LVU2128
 8051              	.LBB2840:
 8052              	.LBB2841:
 8053              	.LBI2841:
GAS LISTING /tmp/ccZtEYtQ.s 			page 388


 8054              		.loc 13 469 7 view .LVU2129
 8055              	.LBB2842:
 8056              	.LBI2842:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8057              		.loc 12 119 7 view .LVU2130
 8058              	.LBB2843:
 8059              		.loc 12 128 19 is_stmt 0 view .LVU2131
 8060 18c7 E8000000 		call	_ZdlPv@PLT
 8060      00
 8061              	.LVL684:
 8062              	.L335:
 8063              		.loc 12 128 19 view .LVU2132
 8064              	.LBE2843:
 8065              	.LBE2842:
 8066              	.LBE2841:
 8067              	.LBE2840:
 8068              	.LBE2839:
 8069              	.LBE2834:
 8070              	.LBE2833:
 8071              	.LBB2844:
 8072              	.LBI2844:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8073              		.loc 10 150 14 is_stmt 1 view .LVU2133
 8074              	.LBB2845:
 8075              	.LBI2845:
 8076              		.loc 11 153 7 view .LVU2134
 8077              	.LBB2846:
 8078              	.LBI2846:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8079              		.loc 12 89 7 view .LVU2135
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8080              		.loc 12 89 7 is_stmt 0 view .LVU2136
 8081 18cc 4889DF   		movq	%rbx, %rdi
 8082 18cf E8000000 		call	_Unwind_Resume@PLT
 8082      00
 8083              	.LVL685:
 8084              	.L344:
 8085 18d4 4889C3   		movq	%rax, %rbx
 8086 18d7 EBD9     		jmp	.L334
 8087              	.LVL686:
 8088              	.L347:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8089              		.loc 12 89 7 view .LVU2137
 8090 18d9 4889C3   		movq	%rax, %rbx
 8091              	.LVL687:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8092              		.loc 12 89 7 view .LVU2138
 8093              	.LBE2846:
 8094              	.LBE2845:
 8095              	.LBE2844:
 8096              	.LBE2832:
 8097              	.LBB2847:
 8098              	.LBI2847:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8099              		.loc 10 657 7 is_stmt 1 view .LVU2139
 8100              	.LBB2848:
 8101              	.LBI2848:
GAS LISTING /tmp/ccZtEYtQ.s 			page 389


 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8102              		.loc 10 229 7 view .LVU2140
 8103              	.LBB2849:
 8104              	.LBB2850:
 8105              	.LBI2850:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8106              		.loc 10 221 7 view .LVU2141
 8107              	.LBB2851:
 8108              	.LBI2851:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8109              		.loc 10 186 7 view .LVU2142
 8110              	.LBB2852:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8111              		.loc 10 187 28 is_stmt 0 view .LVU2143
 8112 18dc 488BBC24 		movq	176(%rsp), %rdi
 8112      B0000000 
 8113              	.LVL688:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8114              		.loc 10 187 28 view .LVU2144
 8115              	.LBE2852:
 8116              	.LBE2851:
 8117              	.LBB2853:
 8118              	.LBI2853:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8119              		.loc 10 200 7 is_stmt 1 view .LVU2145
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8120              		.loc 10 200 7 is_stmt 0 view .LVU2146
 8121              	.LBE2853:
 8122              	.LBE2850:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8123              		.loc 10 231 2 view .LVU2147
 8124 18e4 488D8424 		leaq	192(%rsp), %rax
 8124      C0000000 
 8125 18ec 4839C7   		cmpq	%rax, %rdi
 8126 18ef 7405     		je	.L338
 8127              	.LVL689:
 8128              	.LBB2854:
 8129              	.LBI2854:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8130              		.loc 10 236 7 is_stmt 1 view .LVU2148
 8131              	.LBB2855:
 8132              	.LBB2856:
 8133              	.LBI2856:
 8134              		.loc 13 469 7 view .LVU2149
 8135              	.LBB2857:
 8136              	.LBI2857:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8137              		.loc 12 119 7 view .LVU2150
 8138              	.LBB2858:
 8139              		.loc 12 128 19 is_stmt 0 view .LVU2151
 8140 18f1 E8000000 		call	_ZdlPv@PLT
 8140      00
 8141              	.LVL690:
 8142              		.loc 12 128 19 view .LVU2152
 8143              	.LBE2858:
 8144              	.LBE2857:
 8145              	.LBE2856:
GAS LISTING /tmp/ccZtEYtQ.s 			page 390


 8146              	.LBE2855:
 8147              	.LBE2854:
 8148              	.LBE2849:
 8149              	.LBE2848:
 8150              	.LBB2859:
 8151              	.LBI2859:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8152              		.loc 10 150 14 is_stmt 1 view .LVU2153
 8153              	.LBB2860:
 8154              	.LBI2860:
 8155              		.loc 11 153 7 view .LVU2154
 8156              	.LBB2861:
 8157              	.LBI2861:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8158              		.loc 12 89 7 view .LVU2155
 8159              	.L338:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8160              		.loc 12 89 7 is_stmt 0 view .LVU2156
 8161              	.LBE2861:
 8162              	.LBE2860:
 8163              	.LBE2859:
 8164              	.LBE2847:
 8165              	.LBB2862:
 8166              	.LBI2862:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8167              		.loc 10 657 7 is_stmt 1 discriminator 6 view .LVU2157
 8168              	.LBB2863:
 8169              	.LBI2863:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8170              		.loc 10 229 7 discriminator 6 view .LVU2158
 8171              	.LBB2864:
 8172              	.LBB2865:
 8173              	.LBI2865:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8174              		.loc 10 221 7 discriminator 6 view .LVU2159
 8175              	.LBB2866:
 8176              	.LBI2866:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8177              		.loc 10 186 7 discriminator 6 view .LVU2160
 8178              	.LBB2867:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8179              		.loc 10 187 28 is_stmt 0 discriminator 6 view .LVU2161
 8180 18f6 488BBC24 		movq	144(%rsp), %rdi
 8180      90000000 
 8181              	.LVL691:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8182              		.loc 10 187 28 discriminator 6 view .LVU2162
 8183              	.LBE2867:
 8184              	.LBE2866:
 8185              	.LBB2868:
 8186              	.LBI2868:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8187              		.loc 10 200 7 is_stmt 1 discriminator 6 view .LVU2163
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8188              		.loc 10 200 7 is_stmt 0 discriminator 6 view .LVU2164
 8189              	.LBE2868:
 8190              	.LBE2865:
GAS LISTING /tmp/ccZtEYtQ.s 			page 391


 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8191              		.loc 10 231 2 discriminator 6 view .LVU2165
 8192 18fe 488D8424 		leaq	160(%rsp), %rax
 8192      A0000000 
 8193 1906 4839C7   		cmpq	%rax, %rdi
 8194 1909 7405     		je	.L339
 8195              	.LVL692:
 8196              	.LBB2869:
 8197              	.LBI2869:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8198              		.loc 10 236 7 is_stmt 1 view .LVU2166
 8199              	.LBB2870:
 8200              	.LBB2871:
 8201              	.LBI2871:
 8202              		.loc 13 469 7 view .LVU2167
 8203              	.LBB2872:
 8204              	.LBI2872:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8205              		.loc 12 119 7 view .LVU2168
 8206              	.LBB2873:
 8207              		.loc 12 128 19 is_stmt 0 view .LVU2169
 8208 190b E8000000 		call	_ZdlPv@PLT
 8208      00
 8209              	.LVL693:
 8210              	.L339:
 8211              		.loc 12 128 19 view .LVU2170
 8212              	.LBE2873:
 8213              	.LBE2872:
 8214              	.LBE2871:
 8215              	.LBE2870:
 8216              	.LBE2869:
 8217              	.LBE2864:
 8218              	.LBE2863:
 8219              	.LBB2874:
 8220              	.LBI2874:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8221              		.loc 10 150 14 is_stmt 1 view .LVU2171
 8222              	.LBB2875:
 8223              	.LBI2875:
 8224              		.loc 11 153 7 view .LVU2172
 8225              	.LBB2876:
 8226              	.LBI2876:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8227              		.loc 12 89 7 view .LVU2173
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8228              		.loc 12 89 7 is_stmt 0 view .LVU2174
 8229 1910 4889DF   		movq	%rbx, %rdi
 8230 1913 E8000000 		call	_Unwind_Resume@PLT
 8230      00
 8231              	.LVL694:
 8232              	.L346:
 8233 1918 4889C3   		movq	%rax, %rbx
 8234 191b EBD9     		jmp	.L338
 8235              	.L348:
 8236 191d 4889C3   		movq	%rax, %rbx
 8237              	.LVL695:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 392


 8238              		.loc 12 89 7 view .LVU2175
 8239              	.LBE2876:
 8240              	.LBE2875:
 8241              	.LBE2874:
 8242              	.LBE2862:
 8243              	.LBB2877:
 8244              	.LBI2877:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8245              		.loc 10 657 7 is_stmt 1 view .LVU2176
 8246              	.LBB2878:
 8247              	.LBI2878:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8248              		.loc 10 229 7 view .LVU2177
 8249              	.LBB2879:
 8250              	.LBB2880:
 8251              	.LBI2880:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8252              		.loc 10 221 7 view .LVU2178
 8253              	.LBB2881:
 8254              	.LBI2881:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8255              		.loc 10 186 7 view .LVU2179
 8256              	.LBB2882:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8257              		.loc 10 187 28 is_stmt 0 view .LVU2180
 8258 1920 488BBC24 		movq	176(%rsp), %rdi
 8258      B0000000 
 8259              	.LVL696:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8260              		.loc 10 187 28 view .LVU2181
 8261              	.LBE2882:
 8262              	.LBE2881:
 8263              	.LBB2883:
 8264              	.LBI2883:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8265              		.loc 10 200 7 is_stmt 1 view .LVU2182
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8266              		.loc 10 200 7 is_stmt 0 view .LVU2183
 8267              	.LBE2883:
 8268              	.LBE2880:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8269              		.loc 10 231 2 view .LVU2184
 8270 1928 488D8424 		leaq	192(%rsp), %rax
 8270      C0000000 
 8271 1930 4839C7   		cmpq	%rax, %rdi
 8272 1933 7405     		je	.L341
 8273              	.LVL697:
 8274              	.LBB2884:
 8275              	.LBI2884:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8276              		.loc 10 236 7 is_stmt 1 view .LVU2185
 8277              	.LBB2885:
 8278              	.LBB2886:
 8279              	.LBI2886:
 8280              		.loc 13 469 7 view .LVU2186
 8281              	.LBB2887:
 8282              	.LBI2887:
GAS LISTING /tmp/ccZtEYtQ.s 			page 393


 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8283              		.loc 12 119 7 view .LVU2187
 8284              	.LBB2888:
 8285              		.loc 12 128 19 is_stmt 0 view .LVU2188
 8286 1935 E8000000 		call	_ZdlPv@PLT
 8286      00
 8287              	.LVL698:
 8288              	.L341:
 8289              		.loc 12 128 19 view .LVU2189
 8290              	.LBE2888:
 8291              	.LBE2887:
 8292              	.LBE2886:
 8293              	.LBE2885:
 8294              	.LBE2884:
 8295              	.LBE2879:
 8296              	.LBE2878:
 8297              	.LBB2889:
 8298              	.LBI2889:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8299              		.loc 10 150 14 is_stmt 1 view .LVU2190
 8300              	.LBB2890:
 8301              	.LBI2890:
 8302              		.loc 11 153 7 view .LVU2191
 8303              	.LBB2891:
 8304              	.LBI2891:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8305              		.loc 12 89 7 view .LVU2192
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8306              		.loc 12 89 7 is_stmt 0 view .LVU2193
 8307 193a 4889DF   		movq	%rbx, %rdi
 8308 193d E8000000 		call	_Unwind_Resume@PLT
 8308      00
 8309              	.LVL699:
 8310              	.LEHE31:
 8311              	.L352:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8312              		.loc 12 89 7 view .LVU2194
 8313              	.LBE2891:
 8314              	.LBE2890:
 8315              	.LBE2889:
 8316              	.LBE2877:
 8317              		.loc 1 850 1 view .LVU2195
 8318 1942 E8000000 		call	__stack_chk_fail@PLT
 8318      00
 8319              	.LVL700:
 8320              		.cfi_endproc
 8321              	.LFE2511:
 8322              		.section	.gcc_except_table
 8323              	.LLSDA2511:
 8324 0082 FF       		.byte	0xff
 8325 0083 FF       		.byte	0xff
 8326 0084 01       		.byte	0x1
 8327 0085 34       		.uleb128 .LLSDACSE2511-.LLSDACSB2511
 8328              	.LLSDACSB2511:
 8329 0086 5F       		.uleb128 .LEHB23-.LFB2511
 8330 0087 9C06     		.uleb128 .LEHE23-.LEHB23
 8331 0089 00       		.uleb128 0
GAS LISTING /tmp/ccZtEYtQ.s 			page 394


 8332 008a 00       		.uleb128 0
 8333 008b 9207     		.uleb128 .LEHB24-.LFB2511
 8334 008d 2E       		.uleb128 .LEHE24-.LEHB24
 8335 008e CA0F     		.uleb128 .L344-.LFB2511
 8336 0090 00       		.uleb128 0
 8337 0091 D307     		.uleb128 .LEHB25-.LFB2511
 8338 0093 0D       		.uleb128 .LEHE25-.LEHB25
 8339 0094 8B0F     		.uleb128 .L345-.LFB2511
 8340 0096 00       		.uleb128 0
 8341 0097 A108     		.uleb128 .LEHB26-.LFB2511
 8342 0099 05       		.uleb128 .LEHE26-.LEHB26
 8343 009a 00       		.uleb128 0
 8344 009b 00       		.uleb128 0
 8345 009c BD08     		.uleb128 .LEHB27-.LFB2511
 8346 009e 22       		.uleb128 .LEHE27-.LEHB27
 8347 009f 8E10     		.uleb128 .L346-.LFB2511
 8348 00a1 00       		.uleb128 0
 8349 00a2 F208     		.uleb128 .LEHB28-.LFB2511
 8350 00a4 9101     		.uleb128 .LEHE28-.LEHB28
 8351 00a6 CF0F     		.uleb128 .L347-.LFB2511
 8352 00a8 00       		.uleb128 0
 8353 00a9 C70A     		.uleb128 .LEHB29-.LFB2511
 8354 00ab 1D       		.uleb128 .LEHE29-.LEHB29
 8355 00ac 00       		.uleb128 0
 8356 00ad 00       		.uleb128 0
 8357 00ae FB0A     		.uleb128 .LEHB30-.LFB2511
 8358 00b0 0D       		.uleb128 .LEHE30-.LEHB30
 8359 00b1 9310     		.uleb128 .L348-.LFB2511
 8360 00b3 00       		.uleb128 0
 8361 00b4 AA0B     		.uleb128 .LEHB31-.LFB2511
 8362 00b6 8E05     		.uleb128 .LEHE31-.LEHB31
 8363 00b8 00       		.uleb128 0
 8364 00b9 00       		.uleb128 0
 8365              	.LLSDACSE2511:
 8366              		.text
 8368              		.section	.text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20f
 8369              		.align 2
 8370              		.weak	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_it
 8372              	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_
 8373              	.LVL701:
 8374              	.LFB2859:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 8375              		.loc 8 206 7 is_stmt 1 view -0
 8376              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 8377              		.loc 8 206 7 is_stmt 0 view .LVU2197
 8378 0000 4154     		pushq	%r12
 8379              		.cfi_def_cfa_offset 16
 8380              		.cfi_offset 12, -16
 8381 0002 55       		pushq	%rbp
 8382              		.cfi_def_cfa_offset 24
 8383              		.cfi_offset 6, -24
 8384 0003 53       		pushq	%rbx
 8385              		.cfi_def_cfa_offset 32
 8386              		.cfi_offset 3, -32
 8387 0004 4883EC10 		subq	$16, %rsp
 8388              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccZtEYtQ.s 			page 395


 8389 0008 4889FD   		movq	%rdi, %rbp
 8390 000b 4989F4   		movq	%rsi, %r12
 8391 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 8392              		.loc 8 206 7 view .LVU2198
 8393 0011 64488B04 		movq	%fs:40, %rax
 8393      25280000 
 8393      00
 8394 001a 48894424 		movq	%rax, 8(%rsp)
 8394      08
 8395 001f 31C0     		xorl	%eax, %eax
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 8396              		.loc 8 211 42 view .LVU2199
 8397 0021 4885F6   		testq	%rsi, %rsi
 8398 0024 742D     		je	.L360
 8399              	.L354:
 8400              	.LVL702:
 8401              	.LBB2892:
 8402              	.LBI2892:
 8403              		.loc 9 138 5 is_stmt 1 view .LVU2200
 8404              	.LBB2893:
 8405              	.LBI2893:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 8406              		.loc 9 98 5 view .LVU2201
 8407              	.LBB2894:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 8408              		.loc 9 104 21 is_stmt 0 view .LVU2202
 8409 0026 4C29E3   		subq	%r12, %rbx
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 8410              		.loc 9 104 23 view .LVU2203
 8411 0029 48C1FB02 		sarq	$2, %rbx
 8412              	.LVL703:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 8413              		.loc 9 104 23 view .LVU2204
 8414              	.LBE2894:
 8415              	.LBE2893:
 8416              	.LBE2892:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 8417              		.loc 8 215 12 view .LVU2205
 8418 002d 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 8419              		.loc 8 217 2 view .LVU2206
 8420 0031 4883FB03 		cmpq	$3, %rbx
 8421 0035 772D     		ja	.L361
 8422              	.LVL704:
 8423              	.L355:
 8424              	.LBB2895:
 8425              	.LBI2895:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8426              		.loc 10 186 7 is_stmt 1 view .LVU2207
 8427              	.LBB2896:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8428              		.loc 10 187 28 is_stmt 0 view .LVU2208
 8429 0037 488B7D00 		movq	0(%rbp), %rdi
 8430              	.LVL705:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8431              		.loc 10 187 28 view .LVU2209
GAS LISTING /tmp/ccZtEYtQ.s 			page 396


 8432              	.LBE2896:
 8433              	.LBE2895:
 8434              	.LBB2897:
 8435              	.LBI2897:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 8436              		.loc 10 392 7 is_stmt 1 view .LVU2210
 8437              	.LBB2898:
 8438              	.LBI2898:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8439              		.loc 10 346 7 view .LVU2211
 8440              	.LBB2899:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 8441              		.loc 10 348 2 is_stmt 0 view .LVU2212
 8442 003b 4883FB01 		cmpq	$1, %rbx
 8443 003f 7441     		je	.L362
 8444              	.LVL706:
 8445              	.LBB2900:
 8446              	.LBI2900:
 470:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 8447              		.loc 4 470 7 is_stmt 1 view .LVU2213
 8448              	.LBB2901:
 472:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 8449              		.loc 4 472 2 view .LVU2214
 8450 0041 4885DB   		testq	%rbx, %rbx
 8451 0044 7442     		je	.L357
 8452              		.loc 4 474 2 view .LVU2215
 8453              		.loc 4 474 16 is_stmt 0 view .LVU2216
 8454 0046 4889DA   		movq	%rbx, %rdx
 8455 0049 4C89E6   		movq	%r12, %rsi
 8456 004c E8000000 		call	wmemcpy@PLT
 8456      00
 8457              	.LVL707:
 8458              		.loc 4 474 32 view .LVU2217
 8459 0051 EB35     		jmp	.L357
 8460              	.LVL708:
 8461              	.L360:
 8462              		.loc 4 474 32 view .LVU2218
 8463              	.LBE2901:
 8464              	.LBE2900:
 8465              	.LBE2899:
 8466              	.LBE2898:
 8467              	.LBE2897:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 8468              		.loc 8 211 42 discriminator 1 view .LVU2219
 8469 0053 4839D6   		cmpq	%rdx, %rsi
 8470 0056 74CE     		je	.L354
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 8471              		.loc 8 212 28 view .LVU2220
 8472 0058 488D3D00 		leaq	.LC20(%rip), %rdi
 8472      000000
 8473              	.LVL709:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 8474              		.loc 8 212 28 view .LVU2221
 8475 005f E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 8475      00
 8476              	.LVL710:
 8477              	.L361:
GAS LISTING /tmp/ccZtEYtQ.s 			page 397


 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 8478              		.loc 8 219 6 view .LVU2222
 8479 0064 4889E6   		movq	%rsp, %rsi
 8480              	.LVL711:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 8481              		.loc 8 219 6 view .LVU2223
 8482 0067 BA000000 		movl	$0, %edx
 8482      00
 8483              	.LVL712:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 8484              		.loc 8 219 6 view .LVU2224
 8485 006c 4889EF   		movq	%rbp, %rdi
 8486              	.LVL713:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 8487              		.loc 8 219 6 view .LVU2225
 8488 006f E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm@PLT
 8488      00
 8489              	.LVL714:
 8490              	.LBB2906:
 8491              	.LBI2906:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 8492              		.loc 10 178 7 is_stmt 1 view .LVU2226
 8493              	.LBB2907:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8494              		.loc 10 179 9 is_stmt 0 view .LVU2227
 8495 0074 48894500 		movq	%rax, 0(%rbp)
 8496              	.LVL715:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8497              		.loc 10 179 9 view .LVU2228
 8498              	.LBE2907:
 8499              	.LBE2906:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 8500              		.loc 8 220 6 view .LVU2229
 8501 0078 488B0424 		movq	(%rsp), %rax
 8502              	.LVL716:
 8503              	.LBB2908:
 8504              	.LBI2908:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 8505              		.loc 10 210 7 is_stmt 1 view .LVU2230
 8506              	.LBB2909:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8507              		.loc 10 211 9 is_stmt 0 view .LVU2231
 8508 007c 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8509              		.loc 10 211 45 view .LVU2232
 8510 0080 EBB5     		jmp	.L355
 8511              	.LVL717:
 8512              	.L362:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8513              		.loc 10 211 45 view .LVU2233
 8514              	.LBE2909:
 8515              	.LBE2908:
 8516              	.LBB2910:
 8517              	.LBB2905:
 8518              	.LBB2904:
 8519              	.LBB2902:
 8520              	.LBI2902:
GAS LISTING /tmp/ccZtEYtQ.s 			page 398


 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 8521              		.loc 4 412 7 is_stmt 1 view .LVU2234
 8522              	.LBB2903:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8523              		.loc 4 413 9 view .LVU2235
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8524              		.loc 4 413 16 is_stmt 0 view .LVU2236
 8525 0082 418B0424 		movl	(%r12), %eax
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8526              		.loc 4 413 14 view .LVU2237
 8527 0086 8907     		movl	%eax, (%rdi)
 8528              	.LVL718:
 8529              	.L357:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8530              		.loc 4 413 14 view .LVU2238
 8531              	.LBE2903:
 8532              	.LBE2902:
 8533              	.LBE2904:
 8534              	.LBE2905:
 8535              	.LBE2910:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 8536              		.loc 8 232 2 view .LVU2239
 8537 0088 488B0424 		movq	(%rsp), %rax
 8538              	.LVL719:
 8539              	.LBB2911:
 8540              	.LBI2911:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8541              		.loc 10 214 7 is_stmt 1 view .LVU2240
 8542              	.LBB2912:
 8543              	.LBB2913:
 8544              	.LBI2913:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 8545              		.loc 10 182 7 view .LVU2241
 8546              	.LBB2914:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8547              		.loc 10 183 9 is_stmt 0 view .LVU2242
 8548 008c 48894508 		movq	%rax, 8(%rbp)
 8549              	.LVL720:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8550              		.loc 10 183 9 view .LVU2243
 8551              	.LBE2914:
 8552              	.LBE2913:
 8553              	.LBB2915:
 8554              	.LBI2915:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8555              		.loc 10 186 7 is_stmt 1 view .LVU2244
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8556              		.loc 10 186 7 is_stmt 0 view .LVU2245
 8557              	.LBE2915:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 8558              		.loc 10 217 31 view .LVU2246
 8559 0090 48C1E002 		salq	$2, %rax
 8560              	.LVL721:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 8561              		.loc 10 217 31 view .LVU2247
 8562 0094 48034500 		addq	0(%rbp), %rax
 8563              	.LVL722:
GAS LISTING /tmp/ccZtEYtQ.s 			page 399


 8564              	.LBB2916:
 8565              	.LBI2916:
 412:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 8566              		.loc 4 412 7 is_stmt 1 view .LVU2248
 8567              	.LBB2917:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8568              		.loc 4 413 9 view .LVU2249
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8569              		.loc 4 413 14 is_stmt 0 view .LVU2250
 8570 0098 C7000000 		movl	$0, (%rax)
 8570      0000
 8571              	.LVL723:
 413:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 8572              		.loc 4 413 14 view .LVU2251
 8573              	.LBE2917:
 8574              	.LBE2916:
 8575              	.LBE2912:
 8576              	.LBE2911:
 8577              		.loc 8 233 7 view .LVU2252
 8578 009e 488B4424 		movq	8(%rsp), %rax
 8578      08
 8579 00a3 64483304 		xorq	%fs:40, %rax
 8579      25280000 
 8579      00
 8580 00ac 7509     		jne	.L363
 8581 00ae 4883C410 		addq	$16, %rsp
 8582              		.cfi_remember_state
 8583              		.cfi_def_cfa_offset 32
 8584 00b2 5B       		popq	%rbx
 8585              		.cfi_def_cfa_offset 24
 8586 00b3 5D       		popq	%rbp
 8587              		.cfi_def_cfa_offset 16
 8588              	.LVL724:
 8589              		.loc 8 233 7 view .LVU2253
 8590 00b4 415C     		popq	%r12
 8591              		.cfi_def_cfa_offset 8
 8592              	.LVL725:
 8593              		.loc 8 233 7 view .LVU2254
 8594 00b6 C3       		ret
 8595              	.LVL726:
 8596              	.L363:
 8597              		.cfi_restore_state
 8598              		.loc 8 233 7 view .LVU2255
 8599 00b7 E8000000 		call	__stack_chk_fail@PLT
 8599      00
 8600              	.LVL727:
 8601              		.cfi_endproc
 8602              	.LFE2859:
 8604              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEE
 8605              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_
 8607              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P
 8608              	.LVL728:
 8609              	.LFB2671:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 8610              		.loc 14 99 5 is_stmt 1 view -0
 8611              		.cfi_startproc
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
GAS LISTING /tmp/ccZtEYtQ.s 			page 400


 8612              		.loc 14 99 5 is_stmt 0 view .LVU2257
 8613 0000 55       		pushq	%rbp
 8614              		.cfi_def_cfa_offset 16
 8615              		.cfi_offset 6, -16
 8616 0001 4889E5   		movq	%rsp, %rbp
 8617              		.cfi_def_cfa_register 6
 8618 0004 4155     		pushq	%r13
 8619 0006 4154     		pushq	%r12
 8620 0008 53       		pushq	%rbx
 8621 0009 4881ECD8 		subq	$216, %rsp
 8621      000000
 8622              		.cfi_offset 13, -24
 8623              		.cfi_offset 12, -32
 8624              		.cfi_offset 3, -40
 8625 0010 4889FB   		movq	%rdi, %rbx
 8626 0013 4989F2   		movq	%rsi, %r10
 8627 0016 4889D6   		movq	%rdx, %rsi
 8628              	.LVL729:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 8629              		.loc 14 99 5 view .LVU2258
 8630 0019 4889CA   		movq	%rcx, %rdx
 8631              	.LVL730:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 8632              		.loc 14 99 5 view .LVU2259
 8633 001c 4C898550 		movq	%r8, -176(%rbp)
 8633      FFFFFF
 8634 0023 4C898D58 		movq	%r9, -168(%rbp)
 8634      FFFFFF
 8635 002a 84C0     		testb	%al, %al
 8636 002c 7426     		je	.L365
 8637 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 8637      FFFFFF
 8638 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 8638      FFFFFF
 8639 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 8640 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
 8641 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 8642 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 8643 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 8644 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 8645              	.L365:
  99:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 8646              		.loc 14 99 5 view .LVU2260
 8647 0054 41BD2800 		movl	$40, %r13d
 8647      0000
 8648 005a 64498B45 		movq	%fs:0(%r13), %rax
 8648      00
 8649 005f 48898528 		movq	%rax, -216(%rbp)
 8649      FFFFFF
 8650 0066 31C0     		xorl	%eax, %eax
 105:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 8651              		.loc 14 105 58 view .LVU2261
 8652 0068 488D04B5 		leaq	23(,%rsi,4), %rax
 8652      17000000 
 8653 0070 4883E0F0 		andq	$-16, %rax
 8654 0074 4829C4   		subq	%rax, %rsp
 8655 0077 4C8D6424 		leaq	15(%rsp), %r12
GAS LISTING /tmp/ccZtEYtQ.s 			page 401


 8655      0F
 8656 007c 4983E4F0 		andq	$-16, %r12
 8657              	.LVL731:
 109:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 8658              		.loc 14 109 25 view .LVU2262
 8659 0080 C78510FF 		movl	$32, -240(%rbp)
 8659      FFFF2000 
 8659      0000
 8660 008a C78514FF 		movl	$48, -236(%rbp)
 8660      FFFF3000 
 8660      0000
 8661 0094 488D4510 		leaq	16(%rbp), %rax
 8662 0098 48898518 		movq	%rax, -232(%rbp)
 8662      FFFFFF
 8663 009f 488D8530 		leaq	-208(%rbp), %rax
 8663      FFFFFF
 8664 00a6 48898520 		movq	%rax, -224(%rbp)
 8664      FFFFFF
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 8665              		.loc 14 111 32 view .LVU2263
 8666 00ad 488D8D10 		leaq	-240(%rbp), %rcx
 8666      FFFFFF
 8667              	.LVL732:
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 8668              		.loc 14 111 32 view .LVU2264
 8669 00b4 4C89E7   		movq	%r12, %rdi
 8670              	.LVL733:
 111:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 8671              		.loc 14 111 32 view .LVU2265
 8672 00b7 41FFD2   		call	*%r10
 8673              	.LVL734:
 8674              	.LBB2918:
 8675              	.LBI2918:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 8676              		.loc 11 138 7 is_stmt 1 view .LVU2266
 8677              	.LBB2919:
 8678              	.LBI2919:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8679              		.loc 12 80 7 view .LVU2267
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8680              		.loc 12 80 7 is_stmt 0 view .LVU2268
 8681              	.LBE2919:
 8682              	.LBE2918:
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 8683              		.loc 14 115 33 view .LVU2269
 8684 00ba 4898     		cltq
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 8685              		.loc 14 115 38 view .LVU2270
 8686 00bc 498D1484 		leaq	(%r12,%rax,4), %rdx
 8687              	.LVL735:
 8688              	.LBB2920:
 8689              	.LBI2920:
 625:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 8690              		.loc 10 625 9 is_stmt 1 view .LVU2271
 8691              	.LBB2921:
 8692              	.LBI2921:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccZtEYtQ.s 			page 402


 8693              		.loc 10 190 7 view .LVU2272
 8694              	.LBB2922:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 8695              		.loc 10 193 51 is_stmt 0 view .LVU2273
 8696 00c0 488D4310 		leaq	16(%rbx), %rax
 8697              	.LVL736:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 8698              		.loc 10 193 51 view .LVU2274
 8699              	.LBE2922:
 8700              	.LBE2921:
 8701              	.LBB2923:
 8702              	.LBI2923:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 8703              		.loc 10 156 2 is_stmt 1 view .LVU2275
 8704              	.LBB2924:
 8705              	.LBB2925:
 8706              	.LBI2925:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8707              		.loc 11 141 7 view .LVU2276
 8708              	.LBB2926:
 8709              	.LBI2926:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8710              		.loc 12 83 7 view .LVU2277
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8711              		.loc 12 83 7 is_stmt 0 view .LVU2278
 8712              	.LBE2926:
 8713              	.LBE2925:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8714              		.loc 10 157 35 view .LVU2279
 8715 00c4 488903   		movq	%rax, (%rbx)
 8716              	.LVL737:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8717              		.loc 10 157 35 view .LVU2280
 8718              	.LBE2924:
 8719              	.LBE2923:
 8720              	.LBB2927:
 8721              	.LBI2927:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 8722              		.loc 10 263 9 is_stmt 1 view .LVU2281
 8723              	.LBB2928:
 8724              	.LBB2929:
 8725              	.LBI2929:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 8726              		.loc 10 243 9 view .LVU2282
 8727              	.LBB2930:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 8728              		.loc 10 247 11 is_stmt 0 view .LVU2283
 8729 00c7 4C89E6   		movq	%r12, %rsi
 8730 00ca 4889DF   		movq	%rbx, %rdi
 8731 00cd E8000000 		call	_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_ite
 8731      00
 8732              	.LVL738:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 8733              		.loc 10 247 11 view .LVU2284
 8734              	.LBE2930:
 8735              	.LBE2929:
 8736              	.LBE2928:
GAS LISTING /tmp/ccZtEYtQ.s 			page 403


 8737              	.LBE2927:
 8738              	.LBE2920:
 8739              	.LBB2931:
 8740              	.LBI2931:
 8741              		.loc 11 153 7 is_stmt 1 view .LVU2285
 8742              	.LBB2932:
 8743              	.LBI2932:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8744              		.loc 12 89 7 view .LVU2286
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8745              		.loc 12 89 7 is_stmt 0 view .LVU2287
 8746              	.LBE2932:
 8747              	.LBE2931:
 8748              		.loc 14 116 5 view .LVU2288
 8749 00d2 488B8528 		movq	-216(%rbp), %rax
 8749      FFFFFF
 8750 00d9 64493345 		xorq	%fs:0(%r13), %rax
 8750      00
 8751 00de 750E     		jne	.L368
 8752 00e0 4889D8   		movq	%rbx, %rax
 8753 00e3 488D65E8 		leaq	-24(%rbp), %rsp
 8754 00e7 5B       		popq	%rbx
 8755              	.LVL739:
 8756              		.loc 14 116 5 view .LVU2289
 8757 00e8 415C     		popq	%r12
 8758              	.LVL740:
 8759              		.loc 14 116 5 view .LVU2290
 8760 00ea 415D     		popq	%r13
 8761 00ec 5D       		popq	%rbp
 8762              		.cfi_remember_state
 8763              		.cfi_def_cfa 7, 8
 8764 00ed C3       		ret
 8765              	.LVL741:
 8766              	.L368:
 8767              		.cfi_restore_state
 8768              		.loc 14 116 5 view .LVU2291
 8769 00ee E8000000 		call	__stack_chk_fail@PLT
 8769      00
 8770              	.LVL742:
 8771              		.cfi_endproc
 8772              	.LFE2671:
 8774              		.section	.rodata.str4.4
 8775              		.align 4
 8776              	.LC51:
 8777 0020 2500     		.string	"%"
 8778 0022 00       		.string	""
 8779 0023 00       		.string	""
 8780 0024 6600     		.string	"f"
 8781 0026 00       		.string	""
 8782 0027 00       		.string	""
 8783 0028 00       		.string	""
 8784 0029 00       		.string	""
 8785 002a 00       		.string	""
 8786 002b 00       		.string	""
 8787              		.text
 8788              		.globl	_Z10drawWeightP10graphPointS0_
 8790              	_Z10drawWeightP10graphPointS0_:
GAS LISTING /tmp/ccZtEYtQ.s 			page 404


 8791              	.LVL743:
 8792              	.LFB2502:
 552:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 8793              		.loc 1 552 1 is_stmt 1 view -0
 8794              		.cfi_startproc
 8795              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 8796              		.cfi_lsda 0x1b,.LLSDA2502
 552:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 8797              		.loc 1 552 1 is_stmt 0 view .LVU2293
 8798 1947 55       		pushq	%rbp
 8799              		.cfi_def_cfa_offset 16
 8800              		.cfi_offset 6, -16
 8801 1948 53       		pushq	%rbx
 8802              		.cfi_def_cfa_offset 24
 8803              		.cfi_offset 3, -24
 8804 1949 4883EC48 		subq	$72, %rsp
 8805              		.cfi_def_cfa_offset 96
 8806 194d 4889FB   		movq	%rdi, %rbx
 8807 1950 4889F5   		movq	%rsi, %rbp
 552:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 8808              		.loc 1 552 1 view .LVU2294
 8809 1953 64488B04 		movq	%fs:40, %rax
 8809      25280000 
 8809      00
 8810 195c 48894424 		movq	%rax, 56(%rsp)
 8810      38
 8811 1961 31C0     		xorl	%eax, %eax
 553:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 8812              		.loc 1 553 2 is_stmt 1 view .LVU2295
 8813              	.LEHB32:
 553:Src/main.cpp  **** 					x = end->c.x - start->c.x,
 8814              		.loc 1 553 33 is_stmt 0 view .LVU2296
 8815 1963 E8000000 		call	_Z11getWayPriceP10graphPointS0_@PLT
 8815      00
 8816              	.LVL744:
 554:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 8817              		.loc 1 554 17 view .LVU2297
 8818 1968 F30F104D 		movss	16(%rbp), %xmm1
 8818      10
 554:Src/main.cpp  **** 					y = end->c.y - start->c.y;
 8819              		.loc 1 554 6 view .LVU2298
 8820 196d F30F5C4B 		subss	16(%rbx), %xmm1
 8820      10
 8821 1972 F30F114C 		movss	%xmm1, 8(%rsp)
 8821      2408
 8822              	.LVL745:
 555:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 8823              		.loc 1 555 17 view .LVU2299
 8824 1978 F30F104D 		movss	20(%rbp), %xmm1
 8824      14
 8825              	.LVL746:
 555:Src/main.cpp  **** 	drawText(to_wstring(w), 12, x, y);
 8826              		.loc 1 555 6 view .LVU2300
 8827 197d 0F28D1   		movaps	%xmm1, %xmm2
 8828 1980 F30F5C53 		subss	20(%rbx), %xmm2
 8828      14
 8829 1985 F30F1154 		movss	%xmm2, 12(%rsp)
GAS LISTING /tmp/ccZtEYtQ.s 			page 405


 8829      240C
 8830              	.LVL747:
 556:Src/main.cpp  **** }
 8831              		.loc 1 556 2 is_stmt 1 view .LVU2301
 8832              	.LBB2933:
 8833              	.LBI2933:
6586:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6587:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6588:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6589:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(double __val)
6590:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6591:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6592:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<double>::__max_exponent10 + 20;
6593:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6594:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
6595:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6596:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6597:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6598:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long double __val)
6599:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6600:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
6601:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<long double>::__max_exponent10 + 20;
6602:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
6603:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%Lf", __val);
6604:/usr/include/c++/9.2.0/bits/basic_string.h ****   }
6605:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDIO
6606:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6607:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(_GLIBCXX_USE_WCHAR_T) && _GLIBCXX_USE_C99_WCHAR
6608:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int 
6609:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const wstring& __str, size_t* __idx = 0, int __base = 10)
6610:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::wcstol, "stoi", __str.c_str(),
6611:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6613:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long 
6614:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const wstring& __str, size_t* __idx = 0, int __base = 10)
6615:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(),
6616:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6617:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6618:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6619:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const wstring& __str, size_t* __idx = 0, int __base = 10)
6620:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(),
6621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6623:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6624:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const wstring& __str, size_t* __idx = 0, int __base = 10)
6625:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(),
6626:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6627:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6628:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6629:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const wstring& __str, size_t* __idx = 0, int __base = 10)
6630:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(),
6631:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6632:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6633:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: wcstof vs wcstod.
6634:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6635:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const wstring& __str, size_t* __idx = 0)
6636:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 406


6637:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6638:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6639:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const wstring& __str, size_t* __idx = 0)
6640:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
6641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6642:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6643:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const wstring& __str, size_t* __idx = 0)
6644:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
6645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6646:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _GLIBCXX_HAVE_BROKEN_VSWPRINTF
6647:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6648:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6649:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(int __val)
6650:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(int),
6651:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%d", __val); }
6652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6653:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6654:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned __val)
6655:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6656:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned),
6657:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%u", __val); }
6658:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6659:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6660:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(long __val)
6661:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, 4 * sizeof(long),
6662:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%ld", __val); }
6663:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6664:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6665:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned long __val)
6666:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6667:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long),
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%lu", __val); }
6669:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6670:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6671:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(long long __val)
6672:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6673:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(long long),
6674:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%lld", __val); }
6675:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6676:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6677:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(unsigned long long __val)
6678:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
6679:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long long),
6680:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%llu", __val); }
6681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6682:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline wstring
6683:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_wstring(float __val)
 8834              		.loc 10 6683 3 view .LVU2302
 8835              	.LBB2934:
6684:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6685:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n =
 8836              		.loc 10 6685 5 view .LVU2303
6686:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6687:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf, __n,
 8837              		.loc 10 6687 5 view .LVU2304
6688:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%f", __val);
 8838              		.loc 10 6688 22 is_stmt 0 view .LVU2305
GAS LISTING /tmp/ccZtEYtQ.s 			page 407


 8839 198b 488D5C24 		leaq	16(%rsp), %rbx
 8839      10
 8840              	.LVL748:
 8841              		.loc 10 6688 22 view .LVU2306
 8842 1990 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 8843              	.LVL749:
 8844              		.loc 10 6688 22 view .LVU2307
 8845 1994 488D0D00 		leaq	.LC51(%rip), %rcx
 8845      000000
 8846 199b BA3A0000 		movl	$58, %edx
 8846      00
 8847 19a0 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 8847      000000
 8848 19a7 4889DF   		movq	%rbx, %rdi
 8849 19aa B8010000 		movl	$1, %eax
 8849      00
 8850 19af E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 8850      00
 8851              	.LVL750:
 8852              	.LEHE32:
 8853              		.loc 10 6688 22 view .LVU2308
 8854              	.LBE2934:
 8855              	.LBE2933:
 556:Src/main.cpp  **** }
 8856              		.loc 1 556 10 view .LVU2309
 8857 19b4 F30F2C4C 		cvttss2sil	12(%rsp), %ecx
 8857      240C
 8858 19ba F30F2C54 		cvttss2sil	8(%rsp), %edx
 8858      2408
 8859 19c0 BE0C0000 		movl	$12, %esi
 8859      00
 8860 19c5 4889DF   		movq	%rbx, %rdi
 8861              	.LEHB33:
 8862 19c8 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 8862      00
 8863              	.LVL751:
 8864              	.LEHE33:
 8865              	.LBB2935:
 8866              	.LBI2935:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8867              		.loc 10 657 7 is_stmt 1 view .LVU2310
 8868              	.LBB2936:
 8869              	.LBI2936:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8870              		.loc 10 229 7 view .LVU2311
 8871              	.LBB2937:
 8872              	.LBB2938:
 8873              	.LBI2938:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8874              		.loc 10 221 7 view .LVU2312
 8875              	.LBB2939:
 8876              	.LBI2939:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8877              		.loc 10 186 7 view .LVU2313
 8878              	.LBB2940:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8879              		.loc 10 187 28 is_stmt 0 view .LVU2314
GAS LISTING /tmp/ccZtEYtQ.s 			page 408


 8880 19cd 488B7C24 		movq	16(%rsp), %rdi
 8880      10
 8881              	.LVL752:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8882              		.loc 10 187 28 view .LVU2315
 8883              	.LBE2940:
 8884              	.LBE2939:
 8885              	.LBB2941:
 8886              	.LBI2941:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8887              		.loc 10 200 7 is_stmt 1 view .LVU2316
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8888              		.loc 10 200 7 is_stmt 0 view .LVU2317
 8889              	.LBE2941:
 8890              	.LBE2938:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8891              		.loc 10 231 2 view .LVU2318
 8892 19d2 488D4424 		leaq	32(%rsp), %rax
 8892      20
 8893 19d7 4839C7   		cmpq	%rax, %rdi
 8894 19da 7405     		je	.L369
 8895              	.LVL753:
 8896              	.LBB2942:
 8897              	.LBI2942:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8898              		.loc 10 236 7 is_stmt 1 view .LVU2319
 8899              	.LBB2943:
 8900              	.LBB2944:
 8901              	.LBI2944:
 8902              		.loc 13 469 7 view .LVU2320
 8903              	.LBB2945:
 8904              	.LBI2945:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8905              		.loc 12 119 7 view .LVU2321
 8906              	.LBB2946:
 8907              		.loc 12 128 19 is_stmt 0 view .LVU2322
 8908 19dc E8000000 		call	_ZdlPv@PLT
 8908      00
 8909              	.LVL754:
 8910              		.loc 12 128 19 view .LVU2323
 8911              	.LBE2946:
 8912              	.LBE2945:
 8913              	.LBE2944:
 8914              	.LBE2943:
 8915              	.LBE2942:
 8916              	.LBE2937:
 8917              	.LBE2936:
 8918              	.LBB2947:
 8919              	.LBI2947:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8920              		.loc 10 150 14 is_stmt 1 view .LVU2324
 8921              	.LBB2948:
 8922              	.LBI2948:
 8923              		.loc 11 153 7 view .LVU2325
 8924              	.LBB2949:
 8925              	.LBI2949:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 409


 8926              		.loc 12 89 7 view .LVU2326
 8927              	.L369:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 8928              		.loc 12 89 7 is_stmt 0 view .LVU2327
 8929              	.LBE2949:
 8930              	.LBE2948:
 8931              	.LBE2947:
 8932              	.LBE2935:
 557:Src/main.cpp  **** 
 8933              		.loc 1 557 1 view .LVU2328
 8934 19e1 488B4424 		movq	56(%rsp), %rax
 8934      38
 8935 19e6 64483304 		xorq	%fs:40, %rax
 8935      25280000 
 8935      00
 8936 19ef 7526     		jne	.L376
 8937 19f1 4883C448 		addq	$72, %rsp
 8938              		.cfi_remember_state
 8939              		.cfi_def_cfa_offset 24
 8940 19f5 5B       		popq	%rbx
 8941              		.cfi_def_cfa_offset 16
 8942 19f6 5D       		popq	%rbp
 8943              		.cfi_def_cfa_offset 8
 8944              	.LVL755:
 557:Src/main.cpp  **** 
 8945              		.loc 1 557 1 view .LVU2329
 8946 19f7 C3       		ret
 8947              	.LVL756:
 8948              	.L374:
 8949              		.cfi_restore_state
 557:Src/main.cpp  **** 
 8950              		.loc 1 557 1 view .LVU2330
 8951 19f8 4889C3   		movq	%rax, %rbx
 8952              	.LVL757:
 8953              	.LBB2950:
 8954              	.LBI2950:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 8955              		.loc 10 657 7 is_stmt 1 view .LVU2331
 8956              	.LBB2951:
 8957              	.LBI2951:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8958              		.loc 10 229 7 view .LVU2332
 8959              	.LBB2952:
 8960              	.LBB2953:
 8961              	.LBI2953:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8962              		.loc 10 221 7 view .LVU2333
 8963              	.LBB2954:
 8964              	.LBI2954:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8965              		.loc 10 186 7 view .LVU2334
 8966              	.LBB2955:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8967              		.loc 10 187 28 is_stmt 0 view .LVU2335
 8968 19fb 488B7C24 		movq	16(%rsp), %rdi
 8968      10
 8969              	.LVL758:
GAS LISTING /tmp/ccZtEYtQ.s 			page 410


 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 8970              		.loc 10 187 28 view .LVU2336
 8971              	.LBE2955:
 8972              	.LBE2954:
 8973              	.LBB2956:
 8974              	.LBI2956:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8975              		.loc 10 200 7 is_stmt 1 view .LVU2337
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 8976              		.loc 10 200 7 is_stmt 0 view .LVU2338
 8977              	.LBE2956:
 8978              	.LBE2953:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8979              		.loc 10 231 2 view .LVU2339
 8980 1a00 488D4424 		leaq	32(%rsp), %rax
 8980      20
 8981 1a05 4839C7   		cmpq	%rax, %rdi
 8982 1a08 7405     		je	.L372
 8983              	.LVL759:
 8984              	.LBB2957:
 8985              	.LBI2957:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8986              		.loc 10 236 7 is_stmt 1 view .LVU2340
 8987              	.LBB2958:
 8988              	.LBB2959:
 8989              	.LBI2959:
 8990              		.loc 13 469 7 view .LVU2341
 8991              	.LBB2960:
 8992              	.LBI2960:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 8993              		.loc 12 119 7 view .LVU2342
 8994              	.LBB2961:
 8995              		.loc 12 128 19 is_stmt 0 view .LVU2343
 8996 1a0a E8000000 		call	_ZdlPv@PLT
 8996      00
 8997              	.LVL760:
 8998              	.L372:
 8999              		.loc 12 128 19 view .LVU2344
 9000              	.LBE2961:
 9001              	.LBE2960:
 9002              	.LBE2959:
 9003              	.LBE2958:
 9004              	.LBE2957:
 9005              	.LBE2952:
 9006              	.LBE2951:
 9007              	.LBB2962:
 9008              	.LBI2962:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9009              		.loc 10 150 14 is_stmt 1 view .LVU2345
 9010              	.LBB2963:
 9011              	.LBI2963:
 9012              		.loc 11 153 7 view .LVU2346
 9013              	.LBB2964:
 9014              	.LBI2964:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9015              		.loc 12 89 7 view .LVU2347
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccZtEYtQ.s 			page 411


 9016              		.loc 12 89 7 is_stmt 0 view .LVU2348
 9017 1a0f 4889DF   		movq	%rbx, %rdi
 9018              	.LEHB34:
 9019 1a12 E8000000 		call	_Unwind_Resume@PLT
 9019      00
 9020              	.LVL761:
 9021              	.LEHE34:
 9022              	.L376:
 9023              	.LBE2964:
 9024              	.LBE2963:
 9025              	.LBE2962:
 9026              	.LBE2950:
 557:Src/main.cpp  **** 
 9027              		.loc 1 557 1 view .LVU2349
 9028 1a17 E8000000 		call	__stack_chk_fail@PLT
 9028      00
 9029              	.LVL762:
 9030              		.cfi_endproc
 9031              	.LFE2502:
 9032              		.section	.gcc_except_table
 9033              	.LLSDA2502:
 9034 00ba FF       		.byte	0xff
 9035 00bb FF       		.byte	0xff
 9036 00bc 01       		.byte	0x1
 9037 00bd 0F       		.uleb128 .LLSDACSE2502-.LLSDACSB2502
 9038              	.LLSDACSB2502:
 9039 00be 1C       		.uleb128 .LEHB32-.LFB2502
 9040 00bf 51       		.uleb128 .LEHE32-.LEHB32
 9041 00c0 00       		.uleb128 0
 9042 00c1 00       		.uleb128 0
 9043 00c2 8101     		.uleb128 .LEHB33-.LFB2502
 9044 00c4 05       		.uleb128 .LEHE33-.LEHB33
 9045 00c5 B101     		.uleb128 .L374-.LFB2502
 9046 00c7 00       		.uleb128 0
 9047 00c8 CB01     		.uleb128 .LEHB34-.LFB2502
 9048 00ca 05       		.uleb128 .LEHE34-.LEHB34
 9049 00cb 00       		.uleb128 0
 9050 00cc 00       		.uleb128 0
 9051              	.LLSDACSE2502:
 9052              		.text
 9054              		.globl	_Z10drawWeightP6coordsS0_
 9056              	_Z10drawWeightP6coordsS0_:
 9057              	.LVL763:
 9058              	.LFB2503:
 561:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 9059              		.loc 1 561 1 is_stmt 1 view -0
 9060              		.cfi_startproc
 9061              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9062              		.cfi_lsda 0x1b,.LLSDA2503
 561:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 9063              		.loc 1 561 1 is_stmt 0 view .LVU2351
 9064 1a1c 55       		pushq	%rbp
 9065              		.cfi_def_cfa_offset 16
 9066              		.cfi_offset 6, -16
 9067 1a1d 53       		pushq	%rbx
 9068              		.cfi_def_cfa_offset 24
 9069              		.cfi_offset 3, -24
GAS LISTING /tmp/ccZtEYtQ.s 			page 412


 9070 1a1e 4883EC48 		subq	$72, %rsp
 9071              		.cfi_def_cfa_offset 96
 9072 1a22 4889FD   		movq	%rdi, %rbp
 9073 1a25 4889F3   		movq	%rsi, %rbx
 561:Src/main.cpp  **** 	glSetColor(0xFFFFFF);
 9074              		.loc 1 561 1 view .LVU2352
 9075 1a28 64488B04 		movq	%fs:40, %rax
 9075      25280000 
 9075      00
 9076 1a31 48894424 		movq	%rax, 56(%rsp)
 9076      38
 9077 1a36 31C0     		xorl	%eax, %eax
 562:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 9078              		.loc 1 562 2 is_stmt 1 view .LVU2353
 562:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 9079              		.loc 1 562 12 is_stmt 0 view .LVU2354
 9080 1a38 BFFFFFFF 		movl	$16777215, %edi
 9080      00
 9081              	.LVL764:
 9082              	.LEHB35:
 562:Src/main.cpp  **** 	COORDS_DATATYPE w = getWayPrice(start, end),
 9083              		.loc 1 562 12 view .LVU2355
 9084 1a3d E8000000 		call	_Z10glSetColorj@PLT
 9084      00
 9085              	.LVL765:
 563:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 9086              		.loc 1 563 2 is_stmt 1 view .LVU2356
 563:Src/main.cpp  **** 					x = (end->x + start->x) / 2,
 9087              		.loc 1 563 33 is_stmt 0 view .LVU2357
 9088 1a42 4889DE   		movq	%rbx, %rsi
 9089 1a45 4889EF   		movq	%rbp, %rdi
 9090 1a48 E8000000 		call	_Z11getWayPriceP6coordsS0_@PLT
 9090      00
 9091              	.LVL766:
 564:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 9092              		.loc 1 564 27 view .LVU2358
 9093 1a4d F30F104D 		movss	0(%rbp), %xmm1
 9093      00
 564:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 9094              		.loc 1 564 18 view .LVU2359
 9095 1a52 F30F580B 		addss	(%rbx), %xmm1
 564:Src/main.cpp  **** 					y = (end->y + start->y) / 2;
 9096              		.loc 1 564 6 view .LVU2360
 9097 1a56 F30F1015 		movss	.LC52(%rip), %xmm2
 9097      00000000 
 9098 1a5e F30F59CA 		mulss	%xmm2, %xmm1
 9099 1a62 F30F114C 		movss	%xmm1, 8(%rsp)
 9099      2408
 9100              	.LVL767:
 565:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 9101              		.loc 1 565 27 view .LVU2361
 9102 1a68 F30F104D 		movss	4(%rbp), %xmm1
 9102      04
 9103              	.LVL768:
 565:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 9104              		.loc 1 565 18 view .LVU2362
 9105 1a6d F30F584B 		addss	4(%rbx), %xmm1
GAS LISTING /tmp/ccZtEYtQ.s 			page 413


 9105      04
 565:Src/main.cpp  **** 	drawText(to_wstring(w), 10, x, y);
 9106              		.loc 1 565 6 view .LVU2363
 9107 1a72 0F28D9   		movaps	%xmm1, %xmm3
 9108 1a75 F30F59DA 		mulss	%xmm2, %xmm3
 9109 1a79 F30F115C 		movss	%xmm3, 12(%rsp)
 9109      240C
 9110              	.LVL769:
 566:Src/main.cpp  **** }
 9111              		.loc 1 566 2 is_stmt 1 view .LVU2364
 9112              	.LBB2965:
 9113              	.LBI2965:
6683:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 9114              		.loc 10 6683 3 view .LVU2365
 9115              	.LBB2966:
6685:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 9116              		.loc 10 6685 5 view .LVU2366
6687:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    L"%f", __val);
 9117              		.loc 10 6687 5 view .LVU2367
 9118              		.loc 10 6688 22 is_stmt 0 view .LVU2368
 9119 1a7f 488D5C24 		leaq	16(%rsp), %rbx
 9119      10
 9120              	.LVL770:
 9121              		.loc 10 6688 22 view .LVU2369
 9122 1a84 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 9123              	.LVL771:
 9124              		.loc 10 6688 22 view .LVU2370
 9125 1a88 488D0D00 		leaq	.LC51(%rip), %rcx
 9125      000000
 9126 1a8f BA3A0000 		movl	$58, %edx
 9126      00
 9127 1a94 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 9127      000000
 9128 1a9b 4889DF   		movq	%rbx, %rdi
 9129 1a9e B8010000 		movl	$1, %eax
 9129      00
 9130 1aa3 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 9130      00
 9131              	.LVL772:
 9132              	.LEHE35:
 9133              		.loc 10 6688 22 view .LVU2371
 9134              	.LBE2966:
 9135              	.LBE2965:
 566:Src/main.cpp  **** }
 9136              		.loc 1 566 10 view .LVU2372
 9137 1aa8 F30F2C4C 		cvttss2sil	12(%rsp), %ecx
 9137      240C
 9138 1aae F30F2C54 		cvttss2sil	8(%rsp), %edx
 9138      2408
 9139 1ab4 BE0A0000 		movl	$10, %esi
 9139      00
 9140 1ab9 4889DF   		movq	%rbx, %rdi
 9141              	.LEHB36:
 9142 1abc E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 9142      00
 9143              	.LVL773:
 9144              	.LEHE36:
GAS LISTING /tmp/ccZtEYtQ.s 			page 414


 9145              	.LBB2967:
 9146              	.LBI2967:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 9147              		.loc 10 657 7 is_stmt 1 view .LVU2373
 9148              	.LBB2968:
 9149              	.LBI2968:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9150              		.loc 10 229 7 view .LVU2374
 9151              	.LBB2969:
 9152              	.LBB2970:
 9153              	.LBI2970:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9154              		.loc 10 221 7 view .LVU2375
 9155              	.LBB2971:
 9156              	.LBI2971:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9157              		.loc 10 186 7 view .LVU2376
 9158              	.LBB2972:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9159              		.loc 10 187 28 is_stmt 0 view .LVU2377
 9160 1ac1 488B7C24 		movq	16(%rsp), %rdi
 9160      10
 9161              	.LVL774:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9162              		.loc 10 187 28 view .LVU2378
 9163              	.LBE2972:
 9164              	.LBE2971:
 9165              	.LBB2973:
 9166              	.LBI2973:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9167              		.loc 10 200 7 is_stmt 1 view .LVU2379
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9168              		.loc 10 200 7 is_stmt 0 view .LVU2380
 9169              	.LBE2973:
 9170              	.LBE2970:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9171              		.loc 10 231 2 view .LVU2381
 9172 1ac6 488D4424 		leaq	32(%rsp), %rax
 9172      20
 9173 1acb 4839C7   		cmpq	%rax, %rdi
 9174 1ace 7405     		je	.L377
 9175              	.LVL775:
 9176              	.LBB2974:
 9177              	.LBI2974:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9178              		.loc 10 236 7 is_stmt 1 view .LVU2382
 9179              	.LBB2975:
 9180              	.LBB2976:
 9181              	.LBI2976:
 9182              		.loc 13 469 7 view .LVU2383
 9183              	.LBB2977:
 9184              	.LBI2977:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 9185              		.loc 12 119 7 view .LVU2384
 9186              	.LBB2978:
 9187              		.loc 12 128 19 is_stmt 0 view .LVU2385
 9188 1ad0 E8000000 		call	_ZdlPv@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 415


 9188      00
 9189              	.LVL776:
 9190              		.loc 12 128 19 view .LVU2386
 9191              	.LBE2978:
 9192              	.LBE2977:
 9193              	.LBE2976:
 9194              	.LBE2975:
 9195              	.LBE2974:
 9196              	.LBE2969:
 9197              	.LBE2968:
 9198              	.LBB2979:
 9199              	.LBI2979:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9200              		.loc 10 150 14 is_stmt 1 view .LVU2387
 9201              	.LBB2980:
 9202              	.LBI2980:
 9203              		.loc 11 153 7 view .LVU2388
 9204              	.LBB2981:
 9205              	.LBI2981:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9206              		.loc 12 89 7 view .LVU2389
 9207              	.L377:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9208              		.loc 12 89 7 is_stmt 0 view .LVU2390
 9209              	.LBE2981:
 9210              	.LBE2980:
 9211              	.LBE2979:
 9212              	.LBE2967:
 567:Src/main.cpp  **** 
 9213              		.loc 1 567 1 view .LVU2391
 9214 1ad5 488B4424 		movq	56(%rsp), %rax
 9214      38
 9215 1ada 64483304 		xorq	%fs:40, %rax
 9215      25280000 
 9215      00
 9216 1ae3 7526     		jne	.L384
 9217 1ae5 4883C448 		addq	$72, %rsp
 9218              		.cfi_remember_state
 9219              		.cfi_def_cfa_offset 24
 9220 1ae9 5B       		popq	%rbx
 9221              		.cfi_def_cfa_offset 16
 9222 1aea 5D       		popq	%rbp
 9223              		.cfi_def_cfa_offset 8
 9224              	.LVL777:
 567:Src/main.cpp  **** 
 9225              		.loc 1 567 1 view .LVU2392
 9226 1aeb C3       		ret
 9227              	.LVL778:
 9228              	.L382:
 9229              		.cfi_restore_state
 567:Src/main.cpp  **** 
 9230              		.loc 1 567 1 view .LVU2393
 9231 1aec 4889C3   		movq	%rax, %rbx
 9232              	.LVL779:
 9233              	.LBB2982:
 9234              	.LBI2982:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
GAS LISTING /tmp/ccZtEYtQ.s 			page 416


 9235              		.loc 10 657 7 is_stmt 1 view .LVU2394
 9236              	.LBB2983:
 9237              	.LBI2983:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9238              		.loc 10 229 7 view .LVU2395
 9239              	.LBB2984:
 9240              	.LBB2985:
 9241              	.LBI2985:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9242              		.loc 10 221 7 view .LVU2396
 9243              	.LBB2986:
 9244              	.LBI2986:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9245              		.loc 10 186 7 view .LVU2397
 9246              	.LBB2987:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9247              		.loc 10 187 28 is_stmt 0 view .LVU2398
 9248 1aef 488B7C24 		movq	16(%rsp), %rdi
 9248      10
 9249              	.LVL780:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9250              		.loc 10 187 28 view .LVU2399
 9251              	.LBE2987:
 9252              	.LBE2986:
 9253              	.LBB2988:
 9254              	.LBI2988:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9255              		.loc 10 200 7 is_stmt 1 view .LVU2400
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9256              		.loc 10 200 7 is_stmt 0 view .LVU2401
 9257              	.LBE2988:
 9258              	.LBE2985:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9259              		.loc 10 231 2 view .LVU2402
 9260 1af4 488D4424 		leaq	32(%rsp), %rax
 9260      20
 9261 1af9 4839C7   		cmpq	%rax, %rdi
 9262 1afc 7405     		je	.L380
 9263              	.LVL781:
 9264              	.LBB2989:
 9265              	.LBI2989:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9266              		.loc 10 236 7 is_stmt 1 view .LVU2403
 9267              	.LBB2990:
 9268              	.LBB2991:
 9269              	.LBI2991:
 9270              		.loc 13 469 7 view .LVU2404
 9271              	.LBB2992:
 9272              	.LBI2992:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 9273              		.loc 12 119 7 view .LVU2405
 9274              	.LBB2993:
 9275              		.loc 12 128 19 is_stmt 0 view .LVU2406
 9276 1afe E8000000 		call	_ZdlPv@PLT
 9276      00
 9277              	.LVL782:
 9278              	.L380:
GAS LISTING /tmp/ccZtEYtQ.s 			page 417


 9279              		.loc 12 128 19 view .LVU2407
 9280              	.LBE2993:
 9281              	.LBE2992:
 9282              	.LBE2991:
 9283              	.LBE2990:
 9284              	.LBE2989:
 9285              	.LBE2984:
 9286              	.LBE2983:
 9287              	.LBB2994:
 9288              	.LBI2994:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9289              		.loc 10 150 14 is_stmt 1 view .LVU2408
 9290              	.LBB2995:
 9291              	.LBI2995:
 9292              		.loc 11 153 7 view .LVU2409
 9293              	.LBB2996:
 9294              	.LBI2996:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9295              		.loc 12 89 7 view .LVU2410
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9296              		.loc 12 89 7 is_stmt 0 view .LVU2411
 9297 1b03 4889DF   		movq	%rbx, %rdi
 9298              	.LEHB37:
 9299 1b06 E8000000 		call	_Unwind_Resume@PLT
 9299      00
 9300              	.LVL783:
 9301              	.LEHE37:
 9302              	.L384:
 9303              	.LBE2996:
 9304              	.LBE2995:
 9305              	.LBE2994:
 9306              	.LBE2982:
 567:Src/main.cpp  **** 
 9307              		.loc 1 567 1 view .LVU2412
 9308 1b0b E8000000 		call	__stack_chk_fail@PLT
 9308      00
 9309              	.LVL784:
 9310              		.cfi_endproc
 9311              	.LFE2503:
 9312              		.section	.gcc_except_table
 9313              	.LLSDA2503:
 9314 00cd FF       		.byte	0xff
 9315 00ce FF       		.byte	0xff
 9316 00cf 01       		.byte	0x1
 9317 00d0 0F       		.uleb128 .LLSDACSE2503-.LLSDACSB2503
 9318              	.LLSDACSB2503:
 9319 00d1 21       		.uleb128 .LEHB35-.LFB2503
 9320 00d2 6B       		.uleb128 .LEHE35-.LEHB35
 9321 00d3 00       		.uleb128 0
 9322 00d4 00       		.uleb128 0
 9323 00d5 A001     		.uleb128 .LEHB36-.LFB2503
 9324 00d7 05       		.uleb128 .LEHE36-.LEHB36
 9325 00d8 D001     		.uleb128 .L382-.LFB2503
 9326 00da 00       		.uleb128 0
 9327 00db EA01     		.uleb128 .LEHB37-.LFB2503
 9328 00dd 05       		.uleb128 .LEHE37-.LEHB37
 9329 00de 00       		.uleb128 0
GAS LISTING /tmp/ccZtEYtQ.s 			page 418


 9330 00df 00       		.uleb128 0
 9331              	.LLSDACSE2503:
 9332              		.text
 9334              		.section	.rodata.str4.4
 9335              		.align 4
 9336              	.LC53:
 9337 002c 2500     		.string	"%"
 9338 002e 00       		.string	""
 9339 002f 00       		.string	""
 9340 0030 6C00     		.string	"l"
 9341 0032 00       		.string	""
 9342 0033 00       		.string	""
 9343 0034 7500     		.string	"u"
 9344 0036 00       		.string	""
 9345 0037 00       		.string	""
 9346 0038 00       		.string	""
 9347 0039 00       		.string	""
 9348 003a 00       		.string	""
 9349 003b 00       		.string	""
 9350              		.text
 9351              		.globl	_Z11renderScenev
 9353              	_Z11renderScenev:
 9354              	.LFB2507:
 627:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 9355              		.loc 1 627 1 is_stmt 1 view -0
 9356              		.cfi_startproc
 9357              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 9358              		.cfi_lsda 0x1b,.LLSDA2507
 9359 1b10 55       		pushq	%rbp
 9360              		.cfi_def_cfa_offset 16
 9361              		.cfi_offset 6, -16
 9362 1b11 53       		pushq	%rbx
 9363              		.cfi_def_cfa_offset 24
 9364              		.cfi_offset 3, -24
 9365 1b12 4883EC48 		subq	$72, %rsp
 9366              		.cfi_def_cfa_offset 96
 627:Src/main.cpp  **** 	glClear(GL_COLOR_BUFFER_BIT);
 9367              		.loc 1 627 1 is_stmt 0 view .LVU2414
 9368 1b16 64488B04 		movq	%fs:40, %rax
 9368      25280000 
 9368      00
 9369 1b1f 48894424 		movq	%rax, 56(%rsp)
 9369      38
 9370 1b24 31C0     		xorl	%eax, %eax
 628:Src/main.cpp  **** 
 9371              		.loc 1 628 2 is_stmt 1 view .LVU2415
 628:Src/main.cpp  **** 
 9372              		.loc 1 628 9 is_stmt 0 view .LVU2416
 9373 1b26 BF004000 		movl	$16384, %edi
 9373      00
 9374              	.LEHB38:
 9375 1b2b E8000000 		call	glClear@PLT
 9375      00
 9376              	.LVL785:
 630:Src/main.cpp  **** 		{
 9377              		.loc 1 630 3 is_stmt 1 view .LVU2417
 9378              	.LBB2997:
GAS LISTING /tmp/ccZtEYtQ.s 			page 419


 630:Src/main.cpp  **** 		{
 9379              		.loc 1 630 14 is_stmt 0 view .LVU2418
 9380 1b30 BD000000 		movl	$0, %ebp
 9380      00
 9381 1b35 EB18     		jmp	.L388
 9382              	.LVL786:
 9383              	.L397:
 9384              	.LBB2998:
 9385              	.LBI2998:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 9386              		.loc 10 657 7 is_stmt 1 view .LVU2419
 9387              	.LBB2999:
 9388              	.LBI2999:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9389              		.loc 10 229 7 view .LVU2420
 9390              	.LBB3000:
 9391              	.LBB3001:
 9392              	.LBI3001:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9393              		.loc 10 221 7 view .LVU2421
 9394              	.LBB3002:
 9395              	.LBI3002:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9396              		.loc 10 186 7 view .LVU2422
 9397              	.LBB3003:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9398              		.loc 10 187 28 is_stmt 0 view .LVU2423
 9399 1b37 488B7C24 		movq	16(%rsp), %rdi
 9399      10
 9400              	.LVL787:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9401              		.loc 10 187 28 view .LVU2424
 9402              	.LBE3003:
 9403              	.LBE3002:
 9404              	.LBB3004:
 9405              	.LBI3004:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9406              		.loc 10 200 7 is_stmt 1 view .LVU2425
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9407              		.loc 10 200 7 is_stmt 0 view .LVU2426
 9408              	.LBE3004:
 9409              	.LBE3001:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9410              		.loc 10 231 2 view .LVU2427
 9411 1b3c 488D4424 		leaq	32(%rsp), %rax
 9411      20
 9412 1b41 4839C7   		cmpq	%rax, %rdi
 9413 1b44 7405     		je	.L387
 9414              	.LVL788:
 9415              	.LBB3005:
 9416              	.LBI3005:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9417              		.loc 10 236 7 is_stmt 1 view .LVU2428
 9418              	.LBB3006:
 9419              	.LBB3007:
 9420              	.LBI3007:
 9421              		.loc 13 469 7 view .LVU2429
GAS LISTING /tmp/ccZtEYtQ.s 			page 420


 9422              	.LBB3008:
 9423              	.LBI3008:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 9424              		.loc 12 119 7 view .LVU2430
 9425              	.LBB3009:
 9426              		.loc 12 128 19 is_stmt 0 view .LVU2431
 9427 1b46 E8000000 		call	_ZdlPv@PLT
 9427      00
 9428              	.LVL789:
 9429              	.L387:
 9430              		.loc 12 128 19 view .LVU2432
 9431              	.LBE3009:
 9432              	.LBE3008:
 9433              	.LBE3007:
 9434              	.LBE3006:
 9435              	.LBE3005:
 9436              	.LBE3000:
 9437              	.LBE2999:
 9438              	.LBB3010:
 9439              	.LBI3010:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9440              		.loc 10 150 14 is_stmt 1 view .LVU2433
 9441              	.LBB3011:
 9442              	.LBI3011:
 9443              		.loc 11 153 7 view .LVU2434
 9444              	.LBB3012:
 9445              	.LBI3012:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9446              		.loc 12 89 7 view .LVU2435
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9447              		.loc 12 89 7 is_stmt 0 view .LVU2436
 9448              	.LBE3012:
 9449              	.LBE3011:
 9450              	.LBE3010:
 9451              	.LBE2998:
 630:Src/main.cpp  **** 		{
 9452              		.loc 1 630 3 is_stmt 1 view .LVU2437
 9453 1b4b 4883C501 		addq	$1, %rbp
 9454              	.LVL790:
 9455              	.L388:
 630:Src/main.cpp  **** 		{
 9456              		.loc 1 630 23 discriminator 2 view .LVU2438
 9457 1b4f 48392D00 		cmpq	%rbp, numOfObstacles(%rip)
 9457      000000
 9458 1b56 0F869700 		jbe	.L393
 9458      0000
 632:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 9459              		.loc 1 632 4 view .LVU2439
 632:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 9460              		.loc 1 632 29 is_stmt 0 view .LVU2440
 9461 1b5c 488D5C6D 		leaq	0(%rbp,%rbp,2), %rbx
 9461      00
 9462 1b61 48C1E304 		salq	$4, %rbx
 632:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 9463              		.loc 1 632 17 view .LVU2441
 9464 1b65 4889DF   		movq	%rbx, %rdi
 9465 1b68 48033D00 		addq	obstacles(%rip), %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 421


 9465      000000
 632:Src/main.cpp  **** 			glSetColor(DATA_COLOR);
 9466              		.loc 1 632 16 view .LVU2442
 9467 1b6f E8000000 		call	_Z12drawObstaclePK8obstacle
 9467      00
 9468              	.LVL791:
 633:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 9469              		.loc 1 633 4 is_stmt 1 view .LVU2443
 633:Src/main.cpp  **** 			drawText(to_wstring(i), 12, obstacles[i].c->x + obstacles[i].a / 2, obstacles[i].c->y + obstacle
 9470              		.loc 1 633 14 is_stmt 0 view .LVU2444
 9471 1b74 BFFFFFFF 		movl	$16777215, %edi
 9471      00
 9472 1b79 E8000000 		call	_Z10glSetColorj@PLT
 9472      00
 9473              	.LVL792:
 634:Src/main.cpp  **** 		}
 9474              		.loc 1 634 4 is_stmt 1 view .LVU2445
 634:Src/main.cpp  **** 		}
 9475              		.loc 1 634 83 is_stmt 0 view .LVU2446
 9476 1b7e 48031D00 		addq	obstacles(%rip), %rbx
 9476      000000
 634:Src/main.cpp  **** 		}
 9477              		.loc 1 634 85 view .LVU2447
 9478 1b85 488B03   		movq	(%rbx), %rax
 634:Src/main.cpp  **** 		}
 9479              		.loc 1 634 107 view .LVU2448
 9480 1b88 F30F1005 		movss	.LC52(%rip), %xmm0
 9480      00000000 
 9481 1b90 F30F5943 		mulss	40(%rbx), %xmm0
 9481      28
 634:Src/main.cpp  **** 		}
 9482              		.loc 1 634 90 view .LVU2449
 9483 1b95 0F28C8   		movaps	%xmm0, %xmm1
 9484 1b98 F30F5848 		addss	4(%rax), %xmm1
 9484      04
 9485 1b9d F30F114C 		movss	%xmm1, 8(%rsp)
 9485      2408
 634:Src/main.cpp  **** 		}
 9486              		.loc 1 634 50 view .LVU2450
 9487 1ba3 F30F5800 		addss	(%rax), %xmm0
 9488 1ba7 F30F1144 		movss	%xmm0, 12(%rsp)
 9488      240C
 9489              	.LVL793:
 9490              	.LBB3013:
 9491              	.LBI3013:
6665:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<wstring>(&std::vswprintf,
 9492              		.loc 10 6665 3 is_stmt 1 view .LVU2451
 9493              	.LBB3014:
6666:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    4 * sizeof(unsigned long),
 9494              		.loc 10 6666 5 view .LVU2452
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9495              		.loc 10 6668 23 is_stmt 0 view .LVU2453
 9496 1bad 488D5C24 		leaq	16(%rsp), %rbx
 9496      10
 9497 1bb2 4989E8   		movq	%rbp, %r8
 9498 1bb5 488D0D00 		leaq	.LC53(%rip), %rcx
 9498      000000
GAS LISTING /tmp/ccZtEYtQ.s 			page 422


 9499 1bbc BA200000 		movl	$32, %edx
 9499      00
 9500 1bc1 488B3500 		movq	vswprintf@GOTPCREL(%rip), %rsi
 9500      000000
 9501 1bc8 4889DF   		movq	%rbx, %rdi
 9502 1bcb B8000000 		movl	$0, %eax
 9502      00
 9503 1bd0 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_m
 9503      00
 9504              	.LVL794:
 9505              	.LEHE38:
6668:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9506              		.loc 10 6668 23 view .LVU2454
 9507              	.LBE3014:
 9508              	.LBE3013:
 634:Src/main.cpp  **** 		}
 9509              		.loc 1 634 12 view .LVU2455
 9510 1bd5 F30F2C4C 		cvttss2sil	8(%rsp), %ecx
 9510      2408
 9511 1bdb F30F2C54 		cvttss2sil	12(%rsp), %edx
 9511      240C
 9512 1be1 BE0C0000 		movl	$12, %esi
 9512      00
 9513 1be6 4889DF   		movq	%rbx, %rdi
 9514              	.LEHB39:
 9515 1be9 E8000000 		call	_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii@PLT
 9515      00
 9516              	.LVL795:
 9517              	.LEHE39:
 9518 1bee E944FFFF 		jmp	.L397
 9518      FF
 9519              	.L393:
 9520              	.LBE2997:
 9521              	.LBB3030:
 636:Src/main.cpp  **** 		{
 9522              		.loc 1 636 14 view .LVU2456
 9523 1bf3 BB000000 		movl	$0, %ebx
 9523      00
 9524              	.L386:
 9525              	.LVL796:
 636:Src/main.cpp  **** 		{
 9526              		.loc 1 636 23 is_stmt 1 discriminator 3 view .LVU2457
 9527 1bf8 48391D00 		cmpq	%rbx, graphSize(%rip)
 9527      000000
 9528 1bff 7623     		jbe	.L389
 638:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 9529              		.loc 1 638 4 discriminator 2 view .LVU2458
 638:Src/main.cpp  **** 			// cout << "edge from:{" << graph[i]->c->x << ":" << graph[i]->c->y << "} to {" << endl;
 9530              		.loc 1 638 15 is_stmt 0 discriminator 2 view .LVU2459
 9531 1c01 F30F1005 		movss	.LC16(%rip), %xmm0
 9531      00000000 
 9532              	.LEHB40:
 9533 1c09 E8000000 		call	glLineWidth@PLT
 9533      00
 9534              	.LVL797:
 640:Src/main.cpp  **** 		}
 9535              		.loc 1 640 4 is_stmt 1 discriminator 2 view .LVU2460
GAS LISTING /tmp/ccZtEYtQ.s 			page 423


 640:Src/main.cpp  **** 		}
 9536              		.loc 1 640 13 is_stmt 0 discriminator 2 view .LVU2461
 9537 1c0e 488B0500 		movq	graph(%rip), %rax
 9537      000000
 9538 1c15 488B3CD8 		movq	(%rax,%rbx,8), %rdi
 9539 1c19 E8000000 		call	_Z9drawEdgesP10graphPoint
 9539      00
 9540              	.LVL798:
 636:Src/main.cpp  **** 		{
 9541              		.loc 1 636 3 is_stmt 1 discriminator 2 view .LVU2462
 9542 1c1e 4883C301 		addq	$1, %rbx
 9543              	.LVL799:
 636:Src/main.cpp  **** 		{
 9544              		.loc 1 636 3 is_stmt 0 discriminator 2 view .LVU2463
 9545 1c22 EBD4     		jmp	.L386
 9546              	.L389:
 636:Src/main.cpp  **** 		{
 9547              		.loc 1 636 3 discriminator 2 view .LVU2464
 9548              	.LBE3030:
 652:Src/main.cpp  **** 		glSetColor(0x00FF99);
 9549              		.loc 1 652 3 is_stmt 1 view .LVU2465
 652:Src/main.cpp  **** 		glSetColor(0x00FF99);
 9550              		.loc 1 652 14 is_stmt 0 view .LVU2466
 9551 1c24 F30F1005 		movss	.LC54(%rip), %xmm0
 9551      00000000 
 9552 1c2c E8000000 		call	glLineWidth@PLT
 9552      00
 9553              	.LVL800:
 653:Src/main.cpp  **** 		// drawWay(home, target);
 9554              		.loc 1 653 3 is_stmt 1 view .LVU2467
 653:Src/main.cpp  **** 		// drawWay(home, target);
 9555              		.loc 1 653 13 is_stmt 0 view .LVU2468
 9556 1c31 BF99FF00 		movl	$65433, %edi
 9556      00
 9557 1c36 E8000000 		call	_Z10glSetColorj@PLT
 9557      00
 9558              	.LVL801:
 667:Src/main.cpp  **** }
 9559              		.loc 1 667 5 is_stmt 1 view .LVU2469
 667:Src/main.cpp  **** }
 9560              		.loc 1 667 20 is_stmt 0 view .LVU2470
 9561 1c3b E8000000 		call	glutSwapBuffers@PLT
 9561      00
 9562              	.LVL802:
 668:Src/main.cpp  **** 
 9563              		.loc 1 668 1 view .LVU2471
 9564 1c40 488B4424 		movq	56(%rsp), %rax
 9564      38
 9565 1c45 64483304 		xorq	%fs:40, %rax
 9565      25280000 
 9565      00
 9566 1c4e 7526     		jne	.L398
 9567 1c50 4883C448 		addq	$72, %rsp
 9568              		.cfi_remember_state
 9569              		.cfi_def_cfa_offset 24
 9570 1c54 5B       		popq	%rbx
 9571              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccZtEYtQ.s 			page 424


 9572              	.LVL803:
 668:Src/main.cpp  **** 
 9573              		.loc 1 668 1 view .LVU2472
 9574 1c55 5D       		popq	%rbp
 9575              		.cfi_def_cfa_offset 8
 9576              	.LVL804:
 668:Src/main.cpp  **** 
 9577              		.loc 1 668 1 view .LVU2473
 9578 1c56 C3       		ret
 9579              	.LVL805:
 9580              	.L394:
 9581              		.cfi_restore_state
 668:Src/main.cpp  **** 
 9582              		.loc 1 668 1 view .LVU2474
 9583 1c57 4889C3   		movq	%rax, %rbx
 9584              	.LVL806:
 9585              	.LBB3031:
 9586              	.LBB3015:
 9587              	.LBI3015:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 9588              		.loc 10 657 7 is_stmt 1 view .LVU2475
 9589              	.LBB3016:
 9590              	.LBI3016:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9591              		.loc 10 229 7 view .LVU2476
 9592              	.LBB3017:
 9593              	.LBB3018:
 9594              	.LBI3018:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9595              		.loc 10 221 7 view .LVU2477
 9596              	.LBB3019:
 9597              	.LBI3019:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9598              		.loc 10 186 7 view .LVU2478
 9599              	.LBB3020:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9600              		.loc 10 187 28 is_stmt 0 view .LVU2479
 9601 1c5a 488B7C24 		movq	16(%rsp), %rdi
 9601      10
 9602              	.LVL807:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 9603              		.loc 10 187 28 view .LVU2480
 9604              	.LBE3020:
 9605              	.LBE3019:
 9606              	.LBB3021:
 9607              	.LBI3021:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9608              		.loc 10 200 7 is_stmt 1 view .LVU2481
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9609              		.loc 10 200 7 is_stmt 0 view .LVU2482
 9610              	.LBE3021:
 9611              	.LBE3018:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9612              		.loc 10 231 2 view .LVU2483
 9613 1c5f 488D4424 		leaq	32(%rsp), %rax
 9613      20
 9614 1c64 4839C7   		cmpq	%rax, %rdi
GAS LISTING /tmp/ccZtEYtQ.s 			page 425


 9615 1c67 7405     		je	.L391
 9616              	.LVL808:
 9617              	.LBB3022:
 9618              	.LBI3022:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9619              		.loc 10 236 7 is_stmt 1 view .LVU2484
 9620              	.LBB3023:
 9621              	.LBB3024:
 9622              	.LBI3024:
 9623              		.loc 13 469 7 view .LVU2485
 9624              	.LBB3025:
 9625              	.LBI3025:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 9626              		.loc 12 119 7 view .LVU2486
 9627              	.LBB3026:
 9628              		.loc 12 128 19 is_stmt 0 view .LVU2487
 9629 1c69 E8000000 		call	_ZdlPv@PLT
 9629      00
 9630              	.LVL809:
 9631              	.L391:
 9632              		.loc 12 128 19 view .LVU2488
 9633              	.LBE3026:
 9634              	.LBE3025:
 9635              	.LBE3024:
 9636              	.LBE3023:
 9637              	.LBE3022:
 9638              	.LBE3017:
 9639              	.LBE3016:
 9640              	.LBB3027:
 9641              	.LBI3027:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 9642              		.loc 10 150 14 is_stmt 1 view .LVU2489
 9643              	.LBB3028:
 9644              	.LBI3028:
 9645              		.loc 11 153 7 view .LVU2490
 9646              	.LBB3029:
 9647              	.LBI3029:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9648              		.loc 12 89 7 view .LVU2491
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9649              		.loc 12 89 7 is_stmt 0 view .LVU2492
 9650 1c6e 4889DF   		movq	%rbx, %rdi
 9651 1c71 E8000000 		call	_Unwind_Resume@PLT
 9651      00
 9652              	.LVL810:
 9653              	.LEHE40:
 9654              	.L398:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 9655              		.loc 12 89 7 view .LVU2493
 9656              	.LBE3029:
 9657              	.LBE3028:
 9658              	.LBE3027:
 9659              	.LBE3015:
 9660              	.LBE3031:
 668:Src/main.cpp  **** 
 9661              		.loc 1 668 1 view .LVU2494
 9662 1c76 E8000000 		call	__stack_chk_fail@PLT
GAS LISTING /tmp/ccZtEYtQ.s 			page 426


 9662      00
 9663              	.LVL811:
 9664              		.cfi_endproc
 9665              	.LFE2507:
 9666              		.section	.gcc_except_table
 9667              	.LLSDA2507:
 9668 00e0 FF       		.byte	0xff
 9669 00e1 FF       		.byte	0xff
 9670 00e2 01       		.byte	0x1
 9671 00e3 10       		.uleb128 .LLSDACSE2507-.LLSDACSB2507
 9672              	.LLSDACSB2507:
 9673 00e4 1B       		.uleb128 .LEHB38-.LFB2507
 9674 00e5 AA01     		.uleb128 .LEHE38-.LEHB38
 9675 00e7 00       		.uleb128 0
 9676 00e8 00       		.uleb128 0
 9677 00e9 D901     		.uleb128 .LEHB39-.LFB2507
 9678 00eb 05       		.uleb128 .LEHE39-.LEHB39
 9679 00ec C702     		.uleb128 .L394-.LFB2507
 9680 00ee 00       		.uleb128 0
 9681 00ef F901     		.uleb128 .LEHB40-.LFB2507
 9682 00f1 6D       		.uleb128 .LEHE40-.LEHB40
 9683 00f2 00       		.uleb128 0
 9684 00f3 00       		.uleb128 0
 9685              	.LLSDACSE2507:
 9686              		.text
 9689              	_GLOBAL__sub_I_watchRadius:
 9690              	.LFB2888:
 9691              		.loc 1 850 1 is_stmt 1 view -0
 9692              		.cfi_startproc
 9693 1c7b 4883EC08 		subq	$8, %rsp
 9694              		.cfi_def_cfa_offset 16
 9695              		.loc 1 850 1 is_stmt 0 view .LVU2496
 9696 1c7f BEFFFF00 		movl	$65535, %esi
 9696      00
 9697 1c84 BF010000 		movl	$1, %edi
 9697      00
 9698 1c89 E80FE4FF 		call	_Z41__static_initialization_and_destruction_0ii
 9698      FF
 9699              	.LVL812:
 9700 1c8e 4883C408 		addq	$8, %rsp
 9701              		.cfi_def_cfa_offset 8
 9702 1c92 C3       		ret
 9703              		.cfi_endproc
 9704              	.LFE2888:
 9706              		.section	.init_array,"aw"
 9707              		.align 8
 9708 0000 00000000 		.quad	_GLOBAL__sub_I_watchRadius
 9708      00000000 
 9709              		.globl	home
 9710              		.data
 9711              		.align 8
 9714              	home:
 9715 0000 01000000 		.quad	1
 9715      00000000 
 9716              		.globl	target
 9717              		.align 8
 9720              	target:
GAS LISTING /tmp/ccZtEYtQ.s 			page 427


 9721 0008 01000000 		.quad	1
 9721      00000000 
 9722              		.globl	ways
 9723              		.bss
 9724              		.align 8
 9727              	ways:
 9728 0000 00000000 		.zero	8
 9728      00000000 
 9729              		.globl	graph
 9730              		.align 8
 9733              	graph:
 9734 0008 00000000 		.zero	8
 9734      00000000 
 9735              		.globl	endway
 9736              		.align 8
 9739              	endway:
 9740 0010 00000000 		.zero	8
 9740      00000000 
 9741              		.globl	startway
 9742              		.align 8
 9745              	startway:
 9746 0018 00000000 		.zero	8
 9746      00000000 
 9747              		.globl	obstacles
 9748              		.align 8
 9751              	obstacles:
 9752 0020 00000000 		.zero	8
 9752      00000000 
 9753              		.globl	calculatedPoints
 9754              		.align 8
 9757              	calculatedPoints:
 9758 0028 00000000 		.zero	8
 9758      00000000 
 9759              		.globl	graphSize
 9760              		.align 8
 9763              	graphSize:
 9764 0030 00000000 		.zero	8
 9764      00000000 
 9765              		.globl	numOfObstacles
 9766              		.align 8
 9769              	numOfObstacles:
 9770 0038 00000000 		.zero	8
 9770      00000000 
 9771              		.globl	terminated
 9774              	terminated:
 9775 0040 00       		.zero	1
 9776              		.globl	watchRadius
 9777              		.data
 9778              		.align 8
 9781              	watchRadius:
 9782 0010 D0070000 		.quad	2000
 9782      00000000 
 9783              		.local	_ZStL8__ioinit
 9784              		.comm	_ZStL8__ioinit,1,1
 9785              		.section	.rodata.cst8,"aM",@progbits,8
 9786              		.align 8
 9787              	.LC3:
GAS LISTING /tmp/ccZtEYtQ.s 			page 428


 9788 0000 00000000 		.long	0
 9789 0004 00806640 		.long	1080459264
 9790              		.align 8
 9791              	.LC4:
 9792 0008 6E861BF0 		.long	4028335726
 9793 000c F9210940 		.long	1074340345
 9794              		.align 8
 9795              	.LC5:
 9796 0010 00000000 		.long	0
 9797 0014 0088D340 		.long	1087604736
 9798              		.section	.rodata.cst16,"aM",@progbits,16
 9799              		.align 16
 9800              	.LC6:
 9801 0000 FFFFFF7F 		.long	2147483647
 9802 0004 00000000 		.long	0
 9803 0008 00000000 		.long	0
 9804 000c 00000000 		.long	0
 9805              		.section	.rodata.cst4,"aM",@progbits,4
 9806              		.align 4
 9807              	.LC7:
 9808 0000 00003443 		.long	1127481344
 9809              		.align 4
 9810              	.LC8:
 9811 0004 00000000 		.long	0
 9812              		.section	.rodata.cst16
 9813              		.align 16
 9814              	.LC9:
 9815 0010 00000080 		.long	2147483648
 9816 0014 00000000 		.long	0
 9817 0018 00000000 		.long	0
 9818 001c 00000000 		.long	0
 9819              		.section	.rodata.cst4
 9820              		.align 4
 9821              	.LC10:
 9822 0008 0000B4C2 		.long	3266576384
 9823              		.align 4
 9824              	.LC11:
 9825 000c 0000B442 		.long	1119092736
 9826              		.align 4
 9827              	.LC12:
 9828 0010 00008C43 		.long	1133248512
 9829              		.align 4
 9830              	.LC13:
 9831 0014 0000E143 		.long	1138819072
 9832              		.section	.rodata.cst8
 9833              		.align 8
 9834              	.LC15:
 9835 0018 9A999999 		.long	2576980378
 9836 001c 9999D93F 		.long	1071225241
 9837              		.section	.rodata.cst4
 9838              		.align 4
 9839              	.LC16:
 9840 0018 0000803F 		.long	1065353216
 9841              		.align 4
 9842              	.LC17:
 9843 001c 000080BF 		.long	3212836864
 9844              		.align 4
GAS LISTING /tmp/ccZtEYtQ.s 			page 429


 9845              	.LC31:
 9846 0020 00004843 		.long	1128792064
 9847              		.align 4
 9848              	.LC32:
 9849 0024 0000C842 		.long	1120403456
 9850              		.align 4
 9851              	.LC33:
 9852 0028 0000AF43 		.long	1135542272
 9853              		.align 4
 9854              	.LC34:
 9855 002c 0000DC42 		.long	1121714176
 9856              		.align 4
 9857              	.LC38:
 9858 0030 00001643 		.long	1125515264
 9859              		.align 4
 9860              	.LC52:
 9861 0034 0000003F 		.long	1056964608
 9862              		.align 4
 9863              	.LC54:
 9864 0038 0000A040 		.long	1084227584
 9865              		.text
 9866              	.Letext0:
 9867              		.file 16 "/usr/include/c++/9.2.0/cwchar"
 9868              		.file 17 "/usr/include/c++/9.2.0/new"
 9869              		.file 18 "/usr/include/c++/9.2.0/bits/exception_ptr.h"
 9870              		.file 19 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/c++config.h"
 9871              		.file 20 "/usr/include/c++/9.2.0/type_traits"
 9872              		.file 21 "/usr/include/c++/9.2.0/bits/stl_pair.h"
 9873              		.file 22 "/usr/include/c++/9.2.0/bits/cpp_type_traits.h"
 9874              		.file 23 "/usr/include/c++/9.2.0/bits/stl_iterator_base_types.h"
 9875              		.file 24 "/usr/include/c++/9.2.0/debug/debug.h"
 9876              		.file 25 "/usr/include/c++/9.2.0/cstdint"
 9877              		.file 26 "/usr/include/c++/9.2.0/clocale"
 9878              		.file 27 "/usr/include/c++/9.2.0/cstdlib"
 9879              		.file 28 "/usr/include/c++/9.2.0/cstdio"
 9880              		.file 29 "/usr/include/c++/9.2.0/initializer_list"
 9881              		.file 30 "/usr/include/c++/9.2.0/bits/stringfwd.h"
 9882              		.file 31 "/usr/include/c++/9.2.0/system_error"
 9883              		.file 32 "/usr/include/c++/9.2.0/bits/ios_base.h"
 9884              		.file 33 "/usr/include/c++/9.2.0/cwctype"
 9885              		.file 34 "/usr/include/c++/9.2.0/bits/ostream.tcc"
 9886              		.file 35 "/usr/include/c++/9.2.0/iosfwd"
 9887              		.file 36 "/usr/include/c++/9.2.0/cmath"
 9888              		.file 37 "/usr/include/c++/9.2.0/bits/ptr_traits.h"
 9889              		.file 38 "/usr/include/c++/9.2.0/bits/move.h"
 9890              		.file 39 "/usr/include/c++/9.2.0/bits/functexcept.h"
 9891              		.file 40 "/usr/include/c++/9.2.0/bits/ostream_insert.h"
 9892              		.file 41 "/usr/include/c++/9.2.0/bits/predefined_ops.h"
 9893              		.file 42 "/usr/include/c++/9.2.0/ext/numeric_traits.h"
 9894              		.file 43 "/usr/include/c++/9.2.0/ext/alloc_traits.h"
 9895              		.file 44 "/usr/include/c++/9.2.0/bits/stl_iterator.h"
 9896              		.file 45 "/usr/include/c++/9.2.0/ext/type_traits.h"
 9897              		.file 46 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/stddef.h"
 9898              		.file 47 "<built-in>"
 9899              		.file 48 "/usr/include/bits/types/wint_t.h"
 9900              		.file 49 "/usr/include/bits/types/__mbstate_t.h"
 9901              		.file 50 "/usr/include/bits/types/mbstate_t.h"
GAS LISTING /tmp/ccZtEYtQ.s 			page 430


 9902              		.file 51 "/usr/include/bits/types/__FILE.h"
 9903              		.file 52 "/usr/include/bits/types/struct_FILE.h"
 9904              		.file 53 "/usr/include/bits/types/FILE.h"
 9905              		.file 54 "/usr/include/wchar.h"
 9906              		.file 55 "/usr/include/bits/types/struct_tm.h"
 9907              		.file 56 "/usr/include/bits/types.h"
 9908              		.file 57 "/usr/include/bits/stdint-intn.h"
 9909              		.file 58 "/usr/include/bits/stdint-uintn.h"
 9910              		.file 59 "/usr/include/stdint.h"
 9911              		.file 60 "/usr/include/locale.h"
 9912              		.file 61 "/usr/include/time.h"
 9913              		.file 62 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 9914              		.file 63 "/usr/include/stdlib.h"
 9915              		.file 64 "/usr/include/bits/stdlib-float.h"
 9916              		.file 65 "/usr/include/bits/stdlib-bsearch.h"
 9917              		.file 66 "/usr/include/bits/types/__fpos_t.h"
 9918              		.file 67 "/usr/include/stdio.h"
 9919              		.file 68 "/usr/include/bits/sys_errlist.h"
 9920              		.file 69 "/usr/include/bits/stdio.h"
 9921              		.file 70 "/usr/include/errno.h"
 9922              		.file 71 "/usr/include/bits/wctype-wchar.h"
 9923              		.file 72 "/usr/include/wctype.h"
 9924              		.file 73 "/usr/include/c++/9.2.0/stdlib.h"
 9925              		.file 74 "/usr/include/unistd.h"
 9926              		.file 75 "/usr/include/bits/getopt_core.h"
 9927              		.file 76 "/usr/include/signal.h"
 9928              		.file 77 "/usr/include/GL/glew.h"
 9929              		.file 78 "/usr/include/GL/freeglut_std.h"
 9930              		.file 79 "/usr/include/FTGL/ftgl.h"
 9931              		.file 80 "/usr/include/math.h"
 9932              		.file 81 "/usr/include/c++/9.2.0/math.h"
 9933              		.file 82 "/usr/include/bits/mathcalls.h"
 9934              		.file 83 "/usr/include/GL/glu.h"
 9935              		.file 84 "Includes/routines.hpp"
 131357              		.align 8
 131360              	DW.ref.__gxx_personality_v0:
 131361 0000 00000000 		.quad	__gxx_personality_v0
 131361      00000000 
 131362              		.hidden	__dso_handle
 131363              		.ident	"GCC: (GNU) 9.2.0"
 131364              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccZtEYtQ.s 			page 431


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccZtEYtQ.s:6      .text:0000000000000000 _Z7reshapeii
     /tmp/ccZtEYtQ.s:80     .text:000000000000005f _Z4timfi
     /tmp/ccZtEYtQ.s:9774   .bss:0000000000000040 terminated
     /tmp/ccZtEYtQ.s:124    .text:000000000000009d _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000041 _ZStL8__ioinit
     /tmp/ccZtEYtQ.s:169    .text:00000000000000da _Z14handleKeypresshii
     /tmp/ccZtEYtQ.s:376    .text:000000000000018f _Z17getMinDatasetSizev
     /tmp/ccZtEYtQ.s:9769   .bss:0000000000000038 numOfObstacles
     /tmp/ccZtEYtQ.s:415    .text:00000000000001b0 _Z10createVectPK6coordsf
     /tmp/ccZtEYtQ.s:572    .text:00000000000002cf _Z10createVectPK6coordsS1_
     /tmp/ccZtEYtQ.s:642    .text:0000000000000327 _Z10createVectPK8obstaclehf
     /tmp/ccZtEYtQ.s:704    .text:000000000000036e _Z10getDataSetPK6coords
     /tmp/ccZtEYtQ.s:9751   .bss:0000000000000020 obstacles
     /tmp/ccZtEYtQ.s:997    .text:000000000000052f _Z16getPointsDataSetPK6coords
     /tmp/ccZtEYtQ.s:9763   .bss:0000000000000030 graphSize
     /tmp/ccZtEYtQ.s:9733   .bss:0000000000000008 graph
     /tmp/ccZtEYtQ.s:1256   .text:0000000000000691 _Z10getDataSetPK8obstacleh
     /tmp/ccZtEYtQ.s:1318   .text:00000000000006cf _Z16hasIntersectionsPK5arrayPK4vect
     /tmp/ccZtEYtQ.s:1387   .text:000000000000070c _Z16hasIntersectionsPK4vect
     /tmp/ccZtEYtQ.s:1453   .text:0000000000000750 _Z11isDotInsidePK6coords
     /tmp/ccZtEYtQ.s:1537   .text:000000000000080d _Z15getIntersectionPK5arrayPK4vect
     /tmp/ccZtEYtQ.s:1646   .text:0000000000000875 _Z14getIntersectedPK5arrayPK4vect
     /tmp/ccZtEYtQ.s:1794   .text:0000000000000951 _Z9initPointP10graphPoint
     /tmp/ccZtEYtQ.s:9757   .bss:0000000000000028 calculatedPoints
     /tmp/ccZtEYtQ.s:1990   .text:0000000000000a89 _Z9initPointP10graphPointPK6coords
     /tmp/ccZtEYtQ.s:2017   .text:0000000000000a97 _Z14initObstCornerPK8obstacleh
     /tmp/ccZtEYtQ.s:2256   .text:0000000000000b77 _Z8initObstPK8obstacle
     /tmp/ccZtEYtQ.s:2310   .text:0000000000000ba1 _Z9initGraphP10graphPoint
     /tmp/ccZtEYtQ.s:2413   .text:0000000000000c28 _Z16getCoordsOfPointP10graphPoint
     /tmp/ccZtEYtQ.s:2428   .text:0000000000000c2e _Z21hasUncalculatedPointsPK10graphPoint
     /tmp/ccZtEYtQ.s:2478   .text:0000000000000c58 _Z12getMinTargetPK10graphPoint
     /tmp/ccZtEYtQ.s:2542   .text:0000000000000ca1 _Z12calculateWaym
     /tmp/ccZtEYtQ.s:9727   .bss:0000000000000000 ways
     /tmp/ccZtEYtQ.s:2682   .text:0000000000000d81 _Z8drawLineP6coordsS0_
     /tmp/ccZtEYtQ.s:2707   .text:0000000000000da1 _Z8drawLineP10graphPointS0_
     /tmp/ccZtEYtQ.s:2734   .text:0000000000000db7 _Z9drawEdgesP10graphPoint
     /tmp/ccZtEYtQ.s:2814   .text:0000000000000e05 _Z7drawWaymm
     /tmp/ccZtEYtQ.s:2880   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
     /tmp/ccZtEYtQ.s:3114   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPKwEEvT_S8_St20forward_iterator_tag
     /tmp/ccZtEYtQ.s:3386   .text:0000000000000e4d _Z12drawObstaclePK8obstacle
     /tmp/ccZtEYtQ.s:131360  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccZtEYtQ.s:4532   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
     /tmp/ccZtEYtQ.s:4762   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/ccZtEYtQ.s:4947   .text._ZN4vect8toStringB5cxx11Ev:0000000000000000 _ZN4vect8toStringB5cxx11Ev
     /tmp/ccZtEYtQ.s:5759   .text._ZN6coords8toStringB5cxx11Ev:0000000000000000 _ZN6coords8toStringB5cxx11Ev
     /tmp/ccZtEYtQ.s:6594   .text:000000000000110a main
     /tmp/ccZtEYtQ.s:9720   .data:0000000000000008 target
     /tmp/ccZtEYtQ.s:9714   .data:0000000000000000 home
     /tmp/ccZtEYtQ.s:9745   .bss:0000000000000018 startway
     /tmp/ccZtEYtQ.s:9739   .bss:0000000000000010 endway
     /tmp/ccZtEYtQ.s:9353   .text:0000000000001b10 _Z11renderScenev
     /tmp/ccZtEYtQ.s:8372   .text._ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE12_M_constructIPwEEvT_S7_St20forward_iterator_tag
     /tmp/ccZtEYtQ.s:8607   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEwEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/ccZtEYtQ.s:8790   .text:0000000000001947 _Z10drawWeightP10graphPointS0_
     /tmp/ccZtEYtQ.s:9056   .text:0000000000001a1c _Z10drawWeightP6coordsS0_
GAS LISTING /tmp/ccZtEYtQ.s 			page 432


     /tmp/ccZtEYtQ.s:9689   .text:0000000000001c7b _GLOBAL__sub_I_watchRadius
     /tmp/ccZtEYtQ.s:9781   .data:0000000000000010 watchRadius
     /tmp/ccZtEYtQ.s:162    .rodata.str1.1:0000000000000000 .LC1
     /tmp/ccZtEYtQ.s:164    .rodata.str1.1:0000000000000009 .LC2
     /tmp/ccZtEYtQ.s:9787   .rodata.cst8:0000000000000000 .LC3
     /tmp/ccZtEYtQ.s:9791   .rodata.cst8:0000000000000008 .LC4
     /tmp/ccZtEYtQ.s:9795   .rodata.cst8:0000000000000010 .LC5
     /tmp/ccZtEYtQ.s:9800   .rodata.cst16:0000000000000000 .LC6
     /tmp/ccZtEYtQ.s:9807   .rodata.cst4:0000000000000000 .LC7
     /tmp/ccZtEYtQ.s:9814   .rodata.cst16:0000000000000010 .LC9
     /tmp/ccZtEYtQ.s:9821   .rodata.cst4:0000000000000008 .LC10
     /tmp/ccZtEYtQ.s:9824   .rodata.cst4:000000000000000c .LC11
     /tmp/ccZtEYtQ.s:9827   .rodata.cst4:0000000000000010 .LC12
     /tmp/ccZtEYtQ.s:9830   .rodata.cst4:0000000000000014 .LC13
     /tmp/ccZtEYtQ.s:699    .rodata.str1.1:000000000000000e .LC14
     /tmp/ccZtEYtQ.s:9834   .rodata.cst8:0000000000000018 .LC15
     /tmp/ccZtEYtQ.s:9839   .rodata.cst4:0000000000000018 .LC16
     /tmp/ccZtEYtQ.s:9810   .rodata.cst4:0000000000000004 .LC8
     /tmp/ccZtEYtQ.s:9842   .rodata.cst4:000000000000001c .LC17
     /tmp/ccZtEYtQ.s:2010   .rodata.str1.1:0000000000000021 .LC18
     /tmp/ccZtEYtQ.s:2012   .rodata.str1.1:0000000000000032 .LC19
     /tmp/ccZtEYtQ.s:3348   .rodata.str4.4:0000000000000000 .LC21
     /tmp/ccZtEYtQ.s:3357   .rodata.str4.4:0000000000000008 .LC22
     /tmp/ccZtEYtQ.s:3366   .rodata.str4.4:0000000000000010 .LC23
     /tmp/ccZtEYtQ.s:3375   .rodata.str4.4:0000000000000018 .LC24
     /tmp/ccZtEYtQ.s:9845   .rodata.cst4:0000000000000020 .LC31
     /tmp/ccZtEYtQ.s:9848   .rodata.cst4:0000000000000024 .LC32
     /tmp/ccZtEYtQ.s:9851   .rodata.cst4:0000000000000028 .LC33
     /tmp/ccZtEYtQ.s:9854   .rodata.cst4:000000000000002c .LC34
     /tmp/ccZtEYtQ.s:9857   .rodata.cst4:0000000000000030 .LC38
     /tmp/ccZtEYtQ.s:6567   .rodata.str1.1:0000000000000040 .LC39
     /tmp/ccZtEYtQ.s:6569   .rodata.str1.1:0000000000000048 .LC40
     /tmp/ccZtEYtQ.s:4935   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000016 .LC27
     /tmp/ccZtEYtQ.s:6571   .rodata.str1.1:000000000000004f .LC41
     /tmp/ccZtEYtQ.s:4941   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:000000000000001e .LC30
     /tmp/ccZtEYtQ.s:6573   .rodata.str1.1:0000000000000051 .LC42
     /tmp/ccZtEYtQ.s:6575   .rodata.str1.1:0000000000000053 .LC43
     /tmp/ccZtEYtQ.s:6577   .rodata.str1.1:000000000000005e .LC44
     /tmp/ccZtEYtQ.s:6579   .rodata.str1.1:0000000000000068 .LC45
     /tmp/ccZtEYtQ.s:6581   .rodata.str1.1:0000000000000071 .LC46
     /tmp/ccZtEYtQ.s:6583   .rodata.str1.1:000000000000007a .LC47
     /tmp/ccZtEYtQ.s:6585   .rodata.str1.1:0000000000000084 .LC48
     /tmp/ccZtEYtQ.s:6587   .rodata.str1.1:000000000000008d .LC49
     /tmp/ccZtEYtQ.s:6589   .rodata.str1.1:0000000000000094 .LC50
     /tmp/ccZtEYtQ.s:8776   .rodata.str4.4:0000000000000020 .LC51
     /tmp/ccZtEYtQ.s:9860   .rodata.cst4:0000000000000034 .LC52
     /tmp/ccZtEYtQ.s:9336   .rodata.str4.4:000000000000002c .LC53
     /tmp/ccZtEYtQ.s:9863   .rodata.cst4:0000000000000038 .LC54
     /tmp/ccZtEYtQ.s:2874   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.8:0000000000000000 .LC20
     /tmp/ccZtEYtQ.s:4931   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000000 .LC25
     /tmp/ccZtEYtQ.s:4933   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000001 .LC26
     /tmp/ccZtEYtQ.s:4937   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:0000000000000018 .LC28
     /tmp/ccZtEYtQ.s:4939   .rodata._ZN4vect8toStringB5cxx11Ev.str1.1:000000000000001b .LC29

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
glViewport
GAS LISTING /tmp/ccZtEYtQ.s 			page 433


glMatrixMode
glLoadIdentity
gluOrtho2D
glutPostRedisplay
glutTimerFunc
exit
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
_ZSt4cout
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSolsEi
_ZNSo3putEc
_ZNSo5flushEv
_ZSt16__throw_bad_castv
_ZNKSt5ctypeIcE13_M_widen_initEv
malloc
tan
_Z17getCoordsOfCornerPK8obstacleh
free
_Z8getPointPK8obstacleh
_Z15hasIntersectionPK8obstaclePK4vect
_Z15getIntersectionPK8obstaclePK4vect
_Z6getLenPK6coordsS1_
__stack_chk_fail
_Z9addTargetP10graphPointS0_
_ZNSo9_M_insertIPKvEERSoT_
_Z11getWayPriceP10graphPointS0_
_Z8drawLineffff
_Z10glSetColorj
memcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
wmemcpy
_ZNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEE9_M_createERmm
_Z8drawQuadfff
wcslen
_Z8drawTextNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEiii
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
_ZSt20__throw_length_errorPKc
vsnprintf
_Z14createObstaclefff
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
_ZNSo9_M_insertIdEERSoT_
_ZNSo9_M_insertIbEERSoT_
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
glutInit
glutInitDisplayMode
glutCreateWindow
glutReshapeFunc
glutDisplayFunc
glutKeyboardFunc
glutMainLoop
GAS LISTING /tmp/ccZtEYtQ.s 			page 434


vswprintf
_Z11getWayPriceP6coordsS0_
glClear
glLineWidth
glutSwapBuffers
