GAS LISTING /tmp/ccEa7iXV.s 			page 1


   1              		.file	"findwayBases.cpp"
   2              		.text
   3              	.Ltext0:
   5              	_Z41__static_initialization_and_destruction_0ii:
   6              	.LVL0:
   7              	.LFB2085:
   8              		.file 1 "Src/findwayBases.cpp"
   1:Src/findwayBases.cpp **** #include <iostream>
   2:Src/findwayBases.cpp **** #include "findwayBases.hpp"
   3:Src/findwayBases.cpp **** 
   4:Src/findwayBases.cpp **** bool            hasIntersection( const struct baseline *b1,  const struct baseline *b2)
   5:Src/findwayBases.cpp **** {
   6:Src/findwayBases.cpp ****     return b1->k != b2->k;
   7:Src/findwayBases.cpp **** }
   8:Src/findwayBases.cpp **** 
   9:Src/findwayBases.cpp **** struct coords   getIntersection(const struct baseline *b1, const struct baseline *b2)
  10:Src/findwayBases.cpp **** {
  11:Src/findwayBases.cpp ****     struct coords ret;
  12:Src/findwayBases.cpp ****     if(b1->k == b2->k)
  13:Src/findwayBases.cpp ****         ret = {0, 0};
  14:Src/findwayBases.cpp ****     else 
  15:Src/findwayBases.cpp ****     {
  16:Src/findwayBases.cpp ****         if(abs(b1->k) != INF && abs(b2->k) != INF)
  17:Src/findwayBases.cpp ****         {
  18:Src/findwayBases.cpp ****             ret.x = (b2->b - b1->b) / (b1->k - b2->k);
  19:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
  20:Src/findwayBases.cpp ****         }
  21:Src/findwayBases.cpp ****         else if(abs(b1->k) == INF)
  22:Src/findwayBases.cpp ****         {
  23:Src/findwayBases.cpp ****             ret.x = b1->b;
  24:Src/findwayBases.cpp ****             ret.y = b2->k * ret.x + b2->b;
  25:Src/findwayBases.cpp ****         }
  26:Src/findwayBases.cpp ****         else
  27:Src/findwayBases.cpp ****         {
  28:Src/findwayBases.cpp ****             ret.x = b2->b;
  29:Src/findwayBases.cpp ****             ret.y = b1->k * ret.x + b1->b;
  30:Src/findwayBases.cpp ****         }
  31:Src/findwayBases.cpp ****     }
  32:Src/findwayBases.cpp **** 
  33:Src/findwayBases.cpp ****     return ret;
  34:Src/findwayBases.cpp **** }
  35:Src/findwayBases.cpp **** 
  36:Src/findwayBases.cpp **** bool isCoDirectional(const struct vect *v, const struct coords *c)
  37:Src/findwayBases.cpp **** {
  38:Src/findwayBases.cpp ****     return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
  39:Src/findwayBases.cpp **** }
  40:Src/findwayBases.cpp **** 
  41:Src/findwayBases.cpp **** 
  42:Src/findwayBases.cpp **** //will return NULL if there is no intersections
  43:Src/findwayBases.cpp **** struct coords   getIntersection(const struct obstacle *obst, const struct vect *v)
  44:Src/findwayBases.cpp **** {
  45:Src/findwayBases.cpp ****     struct coords inter1, inter2, tgt;
  46:Src/findwayBases.cpp ****     tgt = {(v->dx + v->c->x), (v->dy + v->c->y)};
  47:Src/findwayBases.cpp ****     struct baseline b1,
  48:Src/findwayBases.cpp ****                     b2;
  49:Src/findwayBases.cpp ****     COORDS_DATATYPE l1 = 0, l2 = 0, lv = 0;
  50:Src/findwayBases.cpp **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 2


  51:Src/findwayBases.cpp ****     lv = getLen(v);
  52:Src/findwayBases.cpp **** 
  53:Src/findwayBases.cpp ****     b1 = vectToBaseline(v);
  54:Src/findwayBases.cpp **** 
  55:Src/findwayBases.cpp ****     b2.k = INF;
  56:Src/findwayBases.cpp ****     b2.b = obst->c->x;
  57:Src/findwayBases.cpp **** 
  58:Src/findwayBases.cpp ****     inter1 = getIntersection(&b1, &b2);
  59:Src/findwayBases.cpp ****     if(isDotInside(&inter1, obst))
  60:Src/findwayBases.cpp ****     {
  61:Src/findwayBases.cpp ****         l1 = getLen(v->c, &inter1);
  62:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter1) && l1 <= lv))
  63:Src/findwayBases.cpp ****         {
  64:Src/findwayBases.cpp ****             l1 = 0;
  65:Src/findwayBases.cpp ****             inter1 = {0, 0};
  66:Src/findwayBases.cpp ****         }
  67:Src/findwayBases.cpp ****     }
  68:Src/findwayBases.cpp ****     else
  69:Src/findwayBases.cpp ****     {
  70:Src/findwayBases.cpp ****         l1 = 0;
  71:Src/findwayBases.cpp ****         inter1 = {0, 0};
  72:Src/findwayBases.cpp ****     }
  73:Src/findwayBases.cpp **** 
  74:Src/findwayBases.cpp ****     b2.b += obst->a;
  75:Src/findwayBases.cpp **** 
  76:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
  77:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
  78:Src/findwayBases.cpp ****     {
  79:Src/findwayBases.cpp ****         l2 = getLen(v->c, &inter2);
  80:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
  81:Src/findwayBases.cpp ****         {
  82:Src/findwayBases.cpp ****             inter2 = {0, 0};
  83:Src/findwayBases.cpp ****             l2 = 0;
  84:Src/findwayBases.cpp ****         }
  85:Src/findwayBases.cpp ****         else if(inter1.eq(0, 0) || l2 < l1)
  86:Src/findwayBases.cpp ****         {
  87:Src/findwayBases.cpp ****             inter1 = inter2;
  88:Src/findwayBases.cpp ****             l1 = l2;
  89:Src/findwayBases.cpp ****             l2 = 0;
  90:Src/findwayBases.cpp ****             inter2 = {0, 0};
  91:Src/findwayBases.cpp ****         }
  92:Src/findwayBases.cpp ****         else
  93:Src/findwayBases.cpp ****         {
  94:Src/findwayBases.cpp ****             l2 = 0;
  95:Src/findwayBases.cpp ****             inter2 = {0, 0};
  96:Src/findwayBases.cpp ****         }
  97:Src/findwayBases.cpp ****     }
  98:Src/findwayBases.cpp ****     else
  99:Src/findwayBases.cpp ****     {
 100:Src/findwayBases.cpp ****         l2 = 0;
 101:Src/findwayBases.cpp ****         inter2 = {0, 0};
 102:Src/findwayBases.cpp ****     }
 103:Src/findwayBases.cpp **** 
 104:Src/findwayBases.cpp ****     // if(!inter2.eq(0, 0))
 105:Src/findwayBases.cpp ****     // {
 106:Src/findwayBases.cpp ****     //     if(!inter1.eq(0, 0))
 107:Src/findwayBases.cpp ****     //     {
GAS LISTING /tmp/ccEa7iXV.s 			page 3


 108:Src/findwayBases.cpp ****     //         if(l1 <= lv)
 109:Src/findwayBases.cpp ****     //         {
 110:Src/findwayBases.cpp ****     //             if(l2 <= lv)
 111:Src/findwayBases.cpp ****     //             {
 112:Src/findwayBases.cpp ****     //                 if(l2 < l1)
 113:Src/findwayBases.cpp ****     //                 {
 114:Src/findwayBases.cpp ****     //                     inter1 = inter2;
 115:Src/findwayBases.cpp ****     //                     l1 = l2;
 116:Src/findwayBases.cpp **** 
 117:Src/findwayBases.cpp ****     //                     l2 = 0;
 118:Src/findwayBases.cpp ****     //                     inter2 = {0, 0};
 119:Src/findwayBases.cpp ****     //                 }
 120:Src/findwayBases.cpp ****     //             }
 121:Src/findwayBases.cpp ****     //             else 
 122:Src/findwayBases.cpp ****     //             {
 123:Src/findwayBases.cpp ****     //                 l2 = 0;
 124:Src/findwayBases.cpp ****     //                 inter2 = {0, 0};
 125:Src/findwayBases.cpp ****     //             }
 126:Src/findwayBases.cpp ****     //         }
 127:Src/findwayBases.cpp ****     //         else
 128:Src/findwayBases.cpp ****     //         {
 129:Src/findwayBases.cpp ****     //             if(l2 <= lv)
 130:Src/findwayBases.cpp ****     //             {
 131:Src/findwayBases.cpp ****     //                 inter1 = inter2;
 132:Src/findwayBases.cpp ****     //                 l1 = l2;
 133:Src/findwayBases.cpp **** 
 134:Src/findwayBases.cpp ****     //                 l2 = 0;
 135:Src/findwayBases.cpp ****     //                 inter2 = {0, 0};
 136:Src/findwayBases.cpp ****     //             }
 137:Src/findwayBases.cpp ****     //             else
 138:Src/findwayBases.cpp ****     //             {
 139:Src/findwayBases.cpp ****     //                 l1 = 0;
 140:Src/findwayBases.cpp ****     //                 inter1 = {0, 0};
 141:Src/findwayBases.cpp **** 
 142:Src/findwayBases.cpp ****     //                 l2 = 0;
 143:Src/findwayBases.cpp ****     //                 inter2 = {0, 0};
 144:Src/findwayBases.cpp ****     //             }
 145:Src/findwayBases.cpp ****                 
 146:Src/findwayBases.cpp ****     //         }
 147:Src/findwayBases.cpp ****     //     }
 148:Src/findwayBases.cpp ****     //     else
 149:Src/findwayBases.cpp ****     //     {
 150:Src/findwayBases.cpp ****     //         if(l2 <= lv)
 151:Src/findwayBases.cpp ****     //         {
 152:Src/findwayBases.cpp ****     //             inter1 = inter2;
 153:Src/findwayBases.cpp ****     //             l1 = l2;
 154:Src/findwayBases.cpp **** 
 155:Src/findwayBases.cpp ****     //             l2 = 0;
 156:Src/findwayBases.cpp ****     //             inter2 = {0, 0};
 157:Src/findwayBases.cpp ****     //         }
 158:Src/findwayBases.cpp ****     //         else
 159:Src/findwayBases.cpp ****     //         {
 160:Src/findwayBases.cpp ****     //             inter1 = {0, 0};
 161:Src/findwayBases.cpp ****     //             l1 = 0;
 162:Src/findwayBases.cpp **** 
 163:Src/findwayBases.cpp ****     //             l2 = 0;
 164:Src/findwayBases.cpp ****     //             inter2 = {0, 0};
GAS LISTING /tmp/ccEa7iXV.s 			page 4


 165:Src/findwayBases.cpp ****     //         }
 166:Src/findwayBases.cpp ****     //     }   
 167:Src/findwayBases.cpp ****     // }
 168:Src/findwayBases.cpp ****     // else if(!inter1.eq(0, 0))
 169:Src/findwayBases.cpp ****     // {
 170:Src/findwayBases.cpp ****     //     if(l1 > lv)
 171:Src/findwayBases.cpp ****     //     {
 172:Src/findwayBases.cpp ****     //         inter1 = {0, 0};
 173:Src/findwayBases.cpp ****     //         l1 = 0;
 174:Src/findwayBases.cpp ****     //     }
 175:Src/findwayBases.cpp ****     //     l2 = 0;
 176:Src/findwayBases.cpp ****     //     inter2 = {0, 0};
 177:Src/findwayBases.cpp ****     // }
 178:Src/findwayBases.cpp ****     // else 
 179:Src/findwayBases.cpp ****     // {
 180:Src/findwayBases.cpp ****     //     l1 = 0;
 181:Src/findwayBases.cpp ****     //     inter1 = {0, 0};
 182:Src/findwayBases.cpp **** 
 183:Src/findwayBases.cpp ****     //     l2 = 0;
 184:Src/findwayBases.cpp ****     //     inter2 = {0, 0};
 185:Src/findwayBases.cpp ****     // }
 186:Src/findwayBases.cpp **** 
 187:Src/findwayBases.cpp ****     b2.k = 0;
 188:Src/findwayBases.cpp ****     b2.b = obst->c->y;
 189:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 190:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 191:Src/findwayBases.cpp ****     {
 192:Src/findwayBases.cpp ****         l2 = getLen(v->c, &inter2);
 193:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 194:Src/findwayBases.cpp ****         {
 195:Src/findwayBases.cpp ****             inter2 = {0, 0};
 196:Src/findwayBases.cpp ****             l2 = 0;
 197:Src/findwayBases.cpp ****         }
 198:Src/findwayBases.cpp ****         else if(inter1.eq(0, 0) || l2 < l1)
 199:Src/findwayBases.cpp ****         {
 200:Src/findwayBases.cpp ****             inter1 = inter2;
 201:Src/findwayBases.cpp ****             l1 = l2;
 202:Src/findwayBases.cpp ****             l2 = 0;
 203:Src/findwayBases.cpp ****             inter2 = {0, 0};
 204:Src/findwayBases.cpp ****         }
 205:Src/findwayBases.cpp ****         else
 206:Src/findwayBases.cpp ****         {
 207:Src/findwayBases.cpp ****             l2 = 0;
 208:Src/findwayBases.cpp ****             inter2 = {0, 0};
 209:Src/findwayBases.cpp ****         }
 210:Src/findwayBases.cpp ****     }
 211:Src/findwayBases.cpp ****     else
 212:Src/findwayBases.cpp ****     {
 213:Src/findwayBases.cpp ****         l2 = 0;
 214:Src/findwayBases.cpp ****         inter2 = {0, 0};
 215:Src/findwayBases.cpp ****     }
 216:Src/findwayBases.cpp **** 
 217:Src/findwayBases.cpp ****     
 218:Src/findwayBases.cpp ****     b2.b += obst->a;
 219:Src/findwayBases.cpp **** 
 220:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 221:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
GAS LISTING /tmp/ccEa7iXV.s 			page 5


 222:Src/findwayBases.cpp ****     {
 223:Src/findwayBases.cpp ****         l2 = getLen(v->c, &inter2);
 224:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 225:Src/findwayBases.cpp ****         {
 226:Src/findwayBases.cpp ****             inter2 = {0, 0};
 227:Src/findwayBases.cpp ****             l2 = 0;
 228:Src/findwayBases.cpp ****         }
 229:Src/findwayBases.cpp ****         else if(inter1.eq(0, 0) || l2 < l1)
 230:Src/findwayBases.cpp ****         {
 231:Src/findwayBases.cpp ****             inter1 = inter2;
 232:Src/findwayBases.cpp ****             l1 = l2;
 233:Src/findwayBases.cpp ****             l2 = 0;
 234:Src/findwayBases.cpp ****             inter2 = {0, 0};
 235:Src/findwayBases.cpp ****         }
 236:Src/findwayBases.cpp ****         else
 237:Src/findwayBases.cpp ****         {
 238:Src/findwayBases.cpp ****             l2 = 0;
 239:Src/findwayBases.cpp ****             inter2 = {0, 0};
 240:Src/findwayBases.cpp ****         }
 241:Src/findwayBases.cpp ****     }
 242:Src/findwayBases.cpp ****     else
 243:Src/findwayBases.cpp ****     {
 244:Src/findwayBases.cpp ****         l2 = 0;
 245:Src/findwayBases.cpp ****         inter2 = {0, 0};
 246:Src/findwayBases.cpp ****     }
 247:Src/findwayBases.cpp **** 
 248:Src/findwayBases.cpp ****     return inter1;
 249:Src/findwayBases.cpp ****     
 250:Src/findwayBases.cpp ****     // struct coords   c,
 251:Src/findwayBases.cpp ****     //                 c2,
 252:Src/findwayBases.cpp ****     //                 c3;
 253:Src/findwayBases.cpp **** 
 254:Src/findwayBases.cpp ****     // struct baseline b,
 255:Src/findwayBases.cpp ****     //                 b2;
 256:Src/findwayBases.cpp **** 
 257:Src/findwayBases.cpp ****     // COORDS_DATATYPE l1,
 258:Src/findwayBases.cpp ****     //                 l2,
 259:Src/findwayBases.cpp ****     //                 l3;
 260:Src/findwayBases.cpp ****     // c3 = {(v->dx + v->c->x), (v->dy + v->c->y)};
 261:Src/findwayBases.cpp ****     // l3 = getLen(v->c, &c3);
 262:Src/findwayBases.cpp **** 
 263:Src/findwayBases.cpp ****     // b.k = INF;
 264:Src/findwayBases.cpp ****     // b.b = obst->c->x;
 265:Src/findwayBases.cpp ****     // b2 = vectToBaseline(v);
 266:Src/findwayBases.cpp ****     // c = getIntersection(&b, &b2);
 267:Src/findwayBases.cpp **** 
 268:Src/findwayBases.cpp ****     // b.k = INF;
 269:Src/findwayBases.cpp ****     // b.b = obst->c->x + obst->a;
 270:Src/findwayBases.cpp ****     // c2 = getIntersection(&b, &b2);
 271:Src/findwayBases.cpp ****     // l1 = getLen(v->c, &c);
 272:Src/findwayBases.cpp ****     // if(!isDotInside(&c, obst) && isDotInside(&c2, obst))
 273:Src/findwayBases.cpp ****     // {
 274:Src/findwayBases.cpp ****     //     c = c2;
 275:Src/findwayBases.cpp ****     // }
 276:Src/findwayBases.cpp ****     // else if(isDotInside(&c, obst) && isDotInside(&c2, obst))
 277:Src/findwayBases.cpp ****     // {
 278:Src/findwayBases.cpp ****     //     l2 = getLen(v->c, &c2);
GAS LISTING /tmp/ccEa7iXV.s 			page 6


 279:Src/findwayBases.cpp ****     //     if(l1 < l2 && l1 <= l3)
 280:Src/findwayBases.cpp ****     //         c = c2;
 281:Src/findwayBases.cpp ****     // }
 282:Src/findwayBases.cpp **** 
 283:Src/findwayBases.cpp ****     // b.k = 0;
 284:Src/findwayBases.cpp ****     // b.b = obst->c->y;
 285:Src/findwayBases.cpp ****     // c2 = getIntersection(&b, &b2);
 286:Src/findwayBases.cpp ****     // if(isDotInside(&c2, obst))
 287:Src/findwayBases.cpp ****     // {
 288:Src/findwayBases.cpp ****     //     l2 = getLen(v->c, &c2);
 289:Src/findwayBases.cpp ****     //     if(l1 < l2 && l1 <= l3)
 290:Src/findwayBases.cpp ****     //         c = c2;
 291:Src/findwayBases.cpp ****     // }
 292:Src/findwayBases.cpp **** 
 293:Src/findwayBases.cpp **** 
 294:Src/findwayBases.cpp ****     // b.k = 0;
 295:Src/findwayBases.cpp ****     // b.b = obst->c->y + obst->a;
 296:Src/findwayBases.cpp ****     // c2 = getIntersection(&b, &b2);
 297:Src/findwayBases.cpp ****     // if(isDotInside(&c2, obst))
 298:Src/findwayBases.cpp ****     // {
 299:Src/findwayBases.cpp ****     //     l2 = getLen(v->c, &c2);
 300:Src/findwayBases.cpp ****     //     if(l2 < l1 && l2 <= l3)
 301:Src/findwayBases.cpp ****     //         c = c2;
 302:Src/findwayBases.cpp ****     // }
 303:Src/findwayBases.cpp **** 
 304:Src/findwayBases.cpp ****     // if(isDotInside(&c, obst))
 305:Src/findwayBases.cpp ****     // {
 306:Src/findwayBases.cpp ****     //     if(isDotInside(&c2, obst))
 307:Src/findwayBases.cpp ****     //     {
 308:Src/findwayBases.cpp ****     //         l1 = getLen(v->c, &c);
 309:Src/findwayBases.cpp ****     //         l2 = getLen(v->c, &c2);
 310:Src/findwayBases.cpp ****     //         if(l1 < l2 && l1 <= l3)
 311:Src/findwayBases.cpp ****     //             return c;
 312:Src/findwayBases.cpp ****     //         else if(l2 <= l3)
 313:Src/findwayBases.cpp ****     //             return c2;
 314:Src/findwayBases.cpp ****     //         else
 315:Src/findwayBases.cpp ****     //             return {0, 0};
 316:Src/findwayBases.cpp ****     //     }
 317:Src/findwayBases.cpp ****     //     else
 318:Src/findwayBases.cpp ****     //         return c;
 319:Src/findwayBases.cpp ****     // }
 320:Src/findwayBases.cpp ****     // else if(isDotInside(&c2, obst) &&  getLen(v->c, &c2) <= l3)
 321:Src/findwayBases.cpp ****     //     return c2;
 322:Src/findwayBases.cpp ****     // else
 323:Src/findwayBases.cpp ****     //     return {0, 0};
 324:Src/findwayBases.cpp **** }
 325:Src/findwayBases.cpp **** 
 326:Src/findwayBases.cpp **** 
 327:Src/findwayBases.cpp **** 
 328:Src/findwayBases.cpp **** 
 329:Src/findwayBases.cpp **** bool            isDotInside(const struct coords *dot, const struct obstacle *obstacle)
 330:Src/findwayBases.cpp **** {
 331:Src/findwayBases.cpp ****     return      (dot->x >= obstacle->c->x)
 332:Src/findwayBases.cpp ****             &&  (dot->x <= obstacle->c->x + obstacle->a)
 333:Src/findwayBases.cpp ****             &&  (dot->y >= obstacle->c->y)
 334:Src/findwayBases.cpp ****             &&  (dot->y <= obstacle->c->y + obstacle->a);
 335:Src/findwayBases.cpp **** }
GAS LISTING /tmp/ccEa7iXV.s 			page 7


 336:Src/findwayBases.cpp **** 
 337:Src/findwayBases.cpp **** struct baseline vectToBaseline(const struct vect *v)
 338:Src/findwayBases.cpp **** {
 339:Src/findwayBases.cpp ****     struct baseline ret;
 340:Src/findwayBases.cpp **** 
 341:Src/findwayBases.cpp ****     ret.k = ((float)v->dy / (float)v->dx);
 342:Src/findwayBases.cpp **** 
 343:Src/findwayBases.cpp ****     if(v->dx != 0)
 344:Src/findwayBases.cpp ****         ret.b = v->c->y - v->c->x * ret.k;
 345:Src/findwayBases.cpp ****     else
 346:Src/findwayBases.cpp ****         ret.b = v->c->x;
 347:Src/findwayBases.cpp **** 
 348:Src/findwayBases.cpp ****     return ret;
 349:Src/findwayBases.cpp **** }
 350:Src/findwayBases.cpp **** 
 351:Src/findwayBases.cpp **** COORDS_DATATYPE getLen(const struct coords *c1, const struct coords *c2)
 352:Src/findwayBases.cpp **** {
 353:Src/findwayBases.cpp ****     COORDS_DATATYPE lx = c1->x - c2->x,
 354:Src/findwayBases.cpp ****                     ly = c1->y - c2->y,
 355:Src/findwayBases.cpp ****                     l  = sqrt(sqr(lx) + sqr(ly));
 356:Src/findwayBases.cpp **** 
 357:Src/findwayBases.cpp ****     return l;
 358:Src/findwayBases.cpp **** }
 359:Src/findwayBases.cpp **** 
 360:Src/findwayBases.cpp **** COORDS_DATATYPE getLen(const struct vect *v)
 361:Src/findwayBases.cpp **** {
 362:Src/findwayBases.cpp ****     COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 363:Src/findwayBases.cpp ****     return l;
 364:Src/findwayBases.cpp **** }
 365:Src/findwayBases.cpp **** 
 366:Src/findwayBases.cpp **** struct coords   createCoords(const COORDS_DATATYPE x, const COORDS_DATATYPE y)
 367:Src/findwayBases.cpp **** {
 368:Src/findwayBases.cpp ****     struct coords ret;
 369:Src/findwayBases.cpp ****     ret.x = x;
 370:Src/findwayBases.cpp ****     ret.y = y;
 371:Src/findwayBases.cpp ****     return ret;
 372:Src/findwayBases.cpp **** }
 373:Src/findwayBases.cpp **** 
 374:Src/findwayBases.cpp **** struct obstacle createObstacle(const COORDS_DATATYPE x, const COORDS_DATATYPE y, const COORDS_DATAT
 375:Src/findwayBases.cpp **** {
 376:Src/findwayBases.cpp ****     struct obstacle ret;
 377:Src/findwayBases.cpp ****     ret.c = (struct coords*)malloc(sizeof(struct coords));
 378:Src/findwayBases.cpp ****     ret.c->x = x;
 379:Src/findwayBases.cpp ****     ret.c->y = y;
 380:Src/findwayBases.cpp ****     ret.a    = a;
 381:Src/findwayBases.cpp ****     for(uint8_t i = 0; i < 4; i++)
 382:Src/findwayBases.cpp ****     {
 383:Src/findwayBases.cpp ****         ret.corners[i] = (struct graphPoint*)malloc(sizeof(struct graphPoint));
 384:Src/findwayBases.cpp ****         ret.corners[i]->c = *getCoordsOfCorner(&ret, i);
 385:Src/findwayBases.cpp ****     }
 386:Src/findwayBases.cpp **** 
 387:Src/findwayBases.cpp ****     return ret;
 388:Src/findwayBases.cpp **** }
 389:Src/findwayBases.cpp **** 
 390:Src/findwayBases.cpp **** 
 391:Src/findwayBases.cpp **** #define CONST 0.4
 392:Src/findwayBases.cpp **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 8


 393:Src/findwayBases.cpp **** struct coords*  getCoordsOfCorner(const struct obstacle *obst, const uint8_t corner)
 394:Src/findwayBases.cpp **** {
 395:Src/findwayBases.cpp ****     struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 396:Src/findwayBases.cpp ****     switch (corner) {
 397:Src/findwayBases.cpp ****         case CORNER_LEFT_BOT:
 398:Src/findwayBases.cpp ****         {
 399:Src/findwayBases.cpp ****             ret->x = obst->c->x - CONST;
 400:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 401:Src/findwayBases.cpp ****             break;
 402:Src/findwayBases.cpp ****         }
 403:Src/findwayBases.cpp ****         case CORNER_LEFT_TOP:
 404:Src/findwayBases.cpp ****         {
 405:Src/findwayBases.cpp ****             ret->x = obst->c->x - CONST;
 406:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 407:Src/findwayBases.cpp ****             break;
 408:Src/findwayBases.cpp ****         }
 409:Src/findwayBases.cpp ****         case CORNER_RIGHT_BOT:
 410:Src/findwayBases.cpp ****         {
 411:Src/findwayBases.cpp ****             ret->x = obst->c->x + obst->a + CONST;
 412:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 413:Src/findwayBases.cpp ****             break;
 414:Src/findwayBases.cpp ****         }
 415:Src/findwayBases.cpp ****         case CORNER_RIGHT_TOP:
 416:Src/findwayBases.cpp ****         {
 417:Src/findwayBases.cpp ****             ret->x = obst->c->x + obst->a + CONST;
 418:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 419:Src/findwayBases.cpp ****             break;
 420:Src/findwayBases.cpp ****         }
 421:Src/findwayBases.cpp ****     }
 422:Src/findwayBases.cpp ****     return ret;
 423:Src/findwayBases.cpp **** }
 424:Src/findwayBases.cpp **** 
 425:Src/findwayBases.cpp **** 
 426:Src/findwayBases.cpp **** struct graphPoint* getPoint(const struct obstacle *obst, const uint8_t corner)
 427:Src/findwayBases.cpp **** {
 428:Src/findwayBases.cpp ****     return obst->corners[corner];
 429:Src/findwayBases.cpp **** }
 430:Src/findwayBases.cpp **** 
 431:Src/findwayBases.cpp **** 
 432:Src/findwayBases.cpp **** 
 433:Src/findwayBases.cpp **** bool            hasIntersection(const struct obstacle *obst, const struct vect *v)
 434:Src/findwayBases.cpp **** {
 435:Src/findwayBases.cpp ****     struct coords c = getIntersection(obst, v);
 436:Src/findwayBases.cpp ****     // std::cout << "obst: " << obst->c->x << ":" << obst->c->y << "; vect: " << v->c->x << ":" << 
 437:Src/findwayBases.cpp ****     if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y) ==
 438:Src/findwayBases.cpp ****     {
 439:Src/findwayBases.cpp ****         // std::cout << "have no intersection" << std::endl;
 440:Src/findwayBases.cpp ****         return false;
 441:Src/findwayBases.cpp ****     }
 442:Src/findwayBases.cpp ****     else
 443:Src/findwayBases.cpp ****     {
 444:Src/findwayBases.cpp ****         // std::cout << "have intersection" << std::endl;
 445:Src/findwayBases.cpp ****         return true;
 446:Src/findwayBases.cpp ****     }
 447:Src/findwayBases.cpp **** }
 448:Src/findwayBases.cpp **** 
 449:Src/findwayBases.cpp **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 9


 450:Src/findwayBases.cpp **** void            addTarget(struct graphPoint *start, struct graphPoint *end)
 451:Src/findwayBases.cpp **** {
 452:Src/findwayBases.cpp ****     std::cout << "ADD " << start->toString() << " TO " << end->toString() << std::endl;
 453:Src/findwayBases.cpp ****     // std::cout << "ADD TARGET ";
 454:Src/findwayBases.cpp ****     if(start == end) 
 455:Src/findwayBases.cpp ****     {
 456:Src/findwayBases.cpp ****         std::cout << "SE\n";
 457:Src/findwayBases.cpp ****         return;
 458:Src/findwayBases.cpp ****     }
 459:Src/findwayBases.cpp ****     for(size_t i = 0; i < start->numOfTargets; i++)
 460:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 461:Src/findwayBases.cpp ****         {
 462:Src/findwayBases.cpp ****             std::cout << "AE\n";
 463:Src/findwayBases.cpp ****             // std::cout << "ALREADY EXISTS ";
 464:Src/findwayBases.cpp ****             return;
 465:Src/findwayBases.cpp ****         }
 466:Src/findwayBases.cpp ****     for(size_t i = 0; i < end->numOfTargets; i++)
 467:Src/findwayBases.cpp ****         if(end->targets[i] == start)
 468:Src/findwayBases.cpp ****         {
 469:Src/findwayBases.cpp ****             std::cout << "AE\n";
 470:Src/findwayBases.cpp ****             // std::cout << "ALREADY EXISTS ";
 471:Src/findwayBases.cpp ****             return;
 472:Src/findwayBases.cpp ****         }
 473:Src/findwayBases.cpp **** 
 474:Src/findwayBases.cpp **** 
 475:Src/findwayBases.cpp ****     start->targets = (struct graphPoint**)realloc(start->targets, (++(start->numOfTargets)) * sizeo
 476:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 477:Src/findwayBases.cpp **** 
 478:Src/findwayBases.cpp ****     end->targets = (struct graphPoint**)realloc(end->targets, (++(end->numOfTargets)) * sizeof(stru
 479:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 480:Src/findwayBases.cpp **** }
 481:Src/findwayBases.cpp **** 
 482:Src/findwayBases.cpp **** 
 483:Src/findwayBases.cpp **** COORDS_DATATYPE getWayPrice(struct graphPoint *start, struct graphPoint *end)
 484:Src/findwayBases.cpp **** {
 485:Src/findwayBases.cpp ****     return sqrt(pow(start->c.x - end->c.x, 2) + pow(start->c.y - end->c.y, 2));
 486:Src/findwayBases.cpp **** }
 487:Src/findwayBases.cpp **** 
 488:Src/findwayBases.cpp **** COORDS_DATATYPE getWayPrice(struct coords *start, struct coords *end)
 489:Src/findwayBases.cpp **** {
 490:Src/findwayBases.cpp ****     return sqrt(pow(start->x - end->x, 2) + pow(start->y - end->y, 2));
 491:Src/findwayBases.cpp **** }
   9              		.loc 1 491 1 view -0
  10              		.cfi_startproc
  11              		.loc 1 491 1 is_stmt 0 view .LVU1
  12 0000 83FF01   		cmpl	$1, %edi
  13 0003 7401     		je	.L7
  14              	.L4:
  15 0005 C3       		ret
  16              	.L7:
  17              		.loc 1 491 1 discriminator 1 view .LVU2
  18 0006 81FEFFFF 		cmpl	$65535, %esi
  18      0000
  19 000c 75F7     		jne	.L4
  20              		.loc 1 491 1 view .LVU3
  21 000e 4883EC08 		subq	$8, %rsp
  22              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccEa7iXV.s 			page 10


  23              		.file 2 "/usr/include/c++/9.2.0/iostream"
   1:/usr/include/c++/9.2.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.2.0/iostream **** 
   3:/usr/include/c++/9.2.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/iostream **** //
   5:/usr/include/c++/9.2.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/iostream **** // any later version.
  10:/usr/include/c++/9.2.0/iostream **** 
  11:/usr/include/c++/9.2.0/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/iostream **** 
  16:/usr/include/c++/9.2.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/iostream **** 
  20:/usr/include/c++/9.2.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/iostream **** 
  25:/usr/include/c++/9.2.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.2.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/iostream ****  */
  28:/usr/include/c++/9.2.0/iostream **** 
  29:/usr/include/c++/9.2.0/iostream **** //
  30:/usr/include/c++/9.2.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.2.0/iostream **** //
  32:/usr/include/c++/9.2.0/iostream **** 
  33:/usr/include/c++/9.2.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.2.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.2.0/iostream **** 
  36:/usr/include/c++/9.2.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/iostream **** 
  38:/usr/include/c++/9.2.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/iostream **** #include <ostream>
  40:/usr/include/c++/9.2.0/iostream **** #include <istream>
  41:/usr/include/c++/9.2.0/iostream **** 
  42:/usr/include/c++/9.2.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.2.0/iostream **** {
  44:/usr/include/c++/9.2.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.2.0/iostream **** 
  46:/usr/include/c++/9.2.0/iostream ****   /**
  47:/usr/include/c++/9.2.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.2.0/iostream ****    *
  49:/usr/include/c++/9.2.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/9.2.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.2.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.2.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.2.0/iostream ****    *
  54:/usr/include/c++/9.2.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.2.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.2.0/iostream ****    *  startup and termination. For more information, see the section of the
GAS LISTING /tmp/ccEa7iXV.s 			page 11


  57:/usr/include/c++/9.2.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.2.0/iostream ****   */
  59:/usr/include/c++/9.2.0/iostream ****   //@{
  60:/usr/include/c++/9.2.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.2.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.2.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.2.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.2.0/iostream **** 
  65:/usr/include/c++/9.2.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.2.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.2.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.2.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/9.2.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.2.0/iostream **** #endif
  71:/usr/include/c++/9.2.0/iostream ****   //@}
  72:/usr/include/c++/9.2.0/iostream **** 
  73:/usr/include/c++/9.2.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.2.0/iostream ****   static ios_base::Init __ioinit;
  24              		.loc 2 74 25 view .LVU4
  25 0012 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
  25      000000
  26              	.LVL1:
  27              		.loc 2 74 25 view .LVU5
  28 0019 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
  28      00
  29              	.LVL2:
  30              		.loc 2 74 25 view .LVU6
  31 001e 488D1500 		leaq	__dso_handle(%rip), %rdx
  31      000000
  32 0025 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
  32      000000
  33 002c 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
  33      000000
  34 0033 E8000000 		call	__cxa_atexit@PLT
  34      00
  35              	.LVL3:
  36              		.loc 1 491 1 view .LVU7
  37 0038 4883C408 		addq	$8, %rsp
  38              		.cfi_def_cfa_offset 8
  39 003c C3       		ret
  40              		.cfi_endproc
  41              	.LFE2085:
  43              		.globl	_Z15hasIntersectionPK8baselineS1_
  45              	_Z15hasIntersectionPK8baselineS1_:
  46              	.LVL4:
  47              	.LFB1724:
   5:Src/findwayBases.cpp ****     return b1->k != b2->k;
  48              		.loc 1 5 1 is_stmt 1 view -0
  49              		.cfi_startproc
   6:Src/findwayBases.cpp **** }
  50              		.loc 1 6 5 view .LVU9
   6:Src/findwayBases.cpp **** }
  51              		.loc 1 6 16 is_stmt 0 view .LVU10
  52 003d F30F1007 		movss	(%rdi), %xmm0
   6:Src/findwayBases.cpp **** }
  53              		.loc 1 6 25 view .LVU11
  54 0041 0F2E06   		ucomiss	(%rsi), %xmm0
GAS LISTING /tmp/ccEa7iXV.s 			page 12


  55 0044 0F9AC0   		setp	%al
  56 0047 BA010000 		movl	$1, %edx
  56      00
  57 004c 0F45C2   		cmovne	%edx, %eax
   7:Src/findwayBases.cpp **** 
  58              		.loc 1 7 1 view .LVU12
  59 004f C3       		ret
  60              		.cfi_endproc
  61              	.LFE1724:
  63              		.globl	_Z15getIntersectionPK8baselineS1_
  65              	_Z15getIntersectionPK8baselineS1_:
  66              	.LVL5:
  67              	.LFB1725:
  10:Src/findwayBases.cpp ****     struct coords ret;
  68              		.loc 1 10 1 is_stmt 1 view -0
  69              		.cfi_startproc
  11:Src/findwayBases.cpp ****     if(b1->k == b2->k)
  70              		.loc 1 11 5 view .LVU14
  12:Src/findwayBases.cpp ****         ret = {0, 0};
  71              		.loc 1 12 5 view .LVU15
  12:Src/findwayBases.cpp ****         ret = {0, 0};
  72              		.loc 1 12 12 is_stmt 0 view .LVU16
  73 0050 F30F1007 		movss	(%rdi), %xmm0
  12:Src/findwayBases.cpp ****         ret = {0, 0};
  74              		.loc 1 12 21 view .LVU17
  75 0054 F30F100E 		movss	(%rsi), %xmm1
  12:Src/findwayBases.cpp ****         ret = {0, 0};
  76              		.loc 1 12 5 view .LVU18
  77 0058 0F2EC1   		ucomiss	%xmm1, %xmm0
  78 005b 7A07     		jp	.L10
  79 005d 7505     		jne	.L10
  13:Src/findwayBases.cpp ****     else 
  80              		.loc 1 13 9 is_stmt 1 view .LVU19
  13:Src/findwayBases.cpp ****     else 
  81              		.loc 1 13 13 is_stmt 0 view .LVU20
  82 005f 660FEFC0 		pxor	%xmm0, %xmm0
  83              	.LVL6:
  13:Src/findwayBases.cpp ****     else 
  84              		.loc 1 13 13 view .LVU21
  85 0063 C3       		ret
  86              	.L10:
  16:Src/findwayBases.cpp ****         {
  87              		.loc 1 16 9 is_stmt 1 view .LVU22
  88              	.LVL7:
  89              	.LBB634:
  90              	.LBI634:
  91              		.file 3 "/usr/include/c++/9.2.0/bits/std_abs.h"
   1:/usr/include/c++/9.2.0/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/c++/9.2.0/bits/std_abs.h **** 
   3:/usr/include/c++/9.2.0/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/std_abs.h **** //
   5:/usr/include/c++/9.2.0/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/std_abs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/std_abs.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 13


  11:/usr/include/c++/9.2.0/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  16:/usr/include/c++/9.2.0/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  20:/usr/include/c++/9.2.0/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  25:/usr/include/c++/9.2.0/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/c++/9.2.0/bits/std_abs.h ****  */
  29:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  30:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  33:/usr/include/c++/9.2.0/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  35:/usr/include/c++/9.2.0/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  37:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/c++/9.2.0/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/c++/9.2.0/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  42:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  44:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef abs
  45:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  46:/usr/include/c++/9.2.0/bits/std_abs.h **** extern "C++"
  47:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  48:/usr/include/c++/9.2.0/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  50:/usr/include/c++/9.2.0/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  52:/usr/include/c++/9.2.0/bits/std_abs.h ****   using ::abs;
  53:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  54:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long
  56:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  58:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  59:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long long
  61:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  63:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  64:/usr/include/c++/9.2.0/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
GAS LISTING /tmp/ccEa7iXV.s 			page 14


  68:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  69:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  74:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(float __x)
  92              		.loc 3 75 3 view .LVU23
  93              	.LBB635:
  76:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
  94              		.loc 3 76 5 view .LVU24
  95              		.loc 3 76 31 is_stmt 0 view .LVU25
  96 0064 0F28D8   		movaps	%xmm0, %xmm3
  97 0067 0F541D00 		andps	.LC1(%rip), %xmm3
  97      000000
  98              	.LVL8:
  99              		.loc 3 76 31 view .LVU26
 100              	.LBE635:
 101              	.LBE634:
  16:Src/findwayBases.cpp ****         {
 102              		.loc 1 16 15 view .LVU27
 103 006e F30F5ADB 		cvtss2sd	%xmm3, %xmm3
  16:Src/findwayBases.cpp ****         {
 104              		.loc 1 16 26 view .LVU28
 105 0072 F20F1015 		movsd	.LC2(%rip), %xmm2
 105      00000000 
 106 007a F20F5E15 		divsd	.LC3(%rip), %xmm2
 106      00000000 
  16:Src/findwayBases.cpp ****         {
 107              		.loc 1 16 30 view .LVU29
 108 0082 660F2EDA 		ucomisd	%xmm2, %xmm3
 109 0086 7A36     		jp	.L19
 110 0088 7534     		jne	.L19
 111              	.L13:
  21:Src/findwayBases.cpp ****         {
 112              		.loc 1 21 14 is_stmt 1 discriminator 4 view .LVU30
 113              	.LVL9:
 114              		.loc 3 76 5 discriminator 4 view .LVU31
  21:Src/findwayBases.cpp ****         {
 115              		.loc 1 21 14 is_stmt 0 discriminator 4 view .LVU32
 116 008a 660F2EDA 		ucomisd	%xmm2, %xmm3
 117 008e 0F8A8800 		jp	.L16
 117      0000
 118 0094 0F858200 		jne	.L16
 118      0000
  23:Src/findwayBases.cpp ****             ret.y = b2->k * ret.x + b2->b;
 119              		.loc 1 23 13 is_stmt 1 view .LVU33
  23:Src/findwayBases.cpp ****             ret.y = b2->k * ret.x + b2->b;
 120              		.loc 1 23 25 is_stmt 0 view .LVU34
 121 009a F30F1057 		movss	4(%rdi), %xmm2
 121      04
  24:Src/findwayBases.cpp ****         }
 122              		.loc 1 24 13 is_stmt 1 view .LVU35
  24:Src/findwayBases.cpp ****         }
 123              		.loc 1 24 27 is_stmt 0 view .LVU36
 124 009f F30F59CA 		mulss	%xmm2, %xmm1
GAS LISTING /tmp/ccEa7iXV.s 			page 15


  24:Src/findwayBases.cpp ****         }
 125              		.loc 1 24 19 view .LVU37
 126 00a3 F30F584E 		addss	4(%rsi), %xmm1
 126      04
 127 00a8 66480F7E 		movq	%xmm1, %rax
 127      C8
 128 00ad 48C1E020 		salq	$32, %rax
 129 00b1 660F7ED2 		movd	%xmm2, %edx
 130              	.LVL10:
  24:Src/findwayBases.cpp ****         }
 131              		.loc 1 24 19 view .LVU38
 132 00b5 4809C2   		orq	%rax, %rdx
 133              	.LVL11:
  24:Src/findwayBases.cpp ****         }
 134              		.loc 1 24 19 view .LVU39
 135 00b8 66480F6E 		movq	%rdx, %xmm0
 135      C2
 136 00bd C3       		ret
 137              	.LVL12:
 138              	.L19:
 139              	.LBB636:
 140              	.LBI636:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 141              		.loc 3 75 3 is_stmt 1 discriminator 1 view .LVU40
 142              	.LBB637:
 143              		.loc 3 76 5 discriminator 1 view .LVU41
 144              		.loc 3 76 31 is_stmt 0 discriminator 1 view .LVU42
 145 00be 0F28E1   		movaps	%xmm1, %xmm4
 146 00c1 0F542500 		andps	.LC1(%rip), %xmm4
 146      000000
 147              	.LVL13:
 148              		.loc 3 76 31 discriminator 1 view .LVU43
 149              	.LBE637:
 150              	.LBE636:
  16:Src/findwayBases.cpp ****         {
 151              		.loc 1 16 36 discriminator 1 view .LVU44
 152 00c8 F30F5AE4 		cvtss2sd	%xmm4, %xmm4
  16:Src/findwayBases.cpp ****         {
 153              		.loc 1 16 30 discriminator 1 view .LVU45
 154 00cc 660F2ED4 		ucomisd	%xmm4, %xmm2
 155 00d0 7A02     		jp	.L20
 156 00d2 74B6     		je	.L13
 157              	.L20:
  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 158              		.loc 1 18 13 is_stmt 1 view .LVU46
  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 159              		.loc 1 18 26 is_stmt 0 view .LVU47
 160 00d4 F30F1066 		movss	4(%rsi), %xmm4
 160      04
  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 161              		.loc 1 18 34 view .LVU48
 162 00d9 F30F105F 		movss	4(%rdi), %xmm3
 162      04
  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 163              		.loc 1 18 28 view .LVU49
 164 00de 0F28D4   		movaps	%xmm4, %xmm2
 165 00e1 F30F5CD3 		subss	%xmm3, %xmm2
GAS LISTING /tmp/ccEa7iXV.s 			page 16


  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 166              		.loc 1 18 46 view .LVU50
 167 00e5 0F28E8   		movaps	%xmm0, %xmm5
 168 00e8 F30F5CE9 		subss	%xmm1, %xmm5
  18:Src/findwayBases.cpp ****             ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 169              		.loc 1 18 19 view .LVU51
 170 00ec F30F5ED5 		divss	%xmm5, %xmm2
  19:Src/findwayBases.cpp ****         }
 171              		.loc 1 19 13 is_stmt 1 view .LVU52
  19:Src/findwayBases.cpp ****         }
 172              		.loc 1 19 28 is_stmt 0 view .LVU53
 173 00f0 F30F59D9 		mulss	%xmm1, %xmm3
  19:Src/findwayBases.cpp ****         }
 174              		.loc 1 19 44 view .LVU54
 175 00f4 F30F59E0 		mulss	%xmm0, %xmm4
  19:Src/findwayBases.cpp ****         }
 176              		.loc 1 19 36 view .LVU55
 177 00f8 F30F5CDC 		subss	%xmm4, %xmm3
  19:Src/findwayBases.cpp ****         }
 178              		.loc 1 19 62 view .LVU56
 179 00fc F30F5CC8 		subss	%xmm0, %xmm1
  19:Src/findwayBases.cpp ****         }
 180              		.loc 1 19 19 view .LVU57
 181 0100 F30F5ED9 		divss	%xmm1, %xmm3
 182 0104 660F7ED8 		movd	%xmm3, %eax
 183 0108 4889C2   		movq	%rax, %rdx
 184 010b 48C1E220 		salq	$32, %rdx
 185 010f 660F7ED0 		movd	%xmm2, %eax
 186              	.LVL14:
  19:Src/findwayBases.cpp ****         }
 187              		.loc 1 19 19 view .LVU58
 188 0113 4809D0   		orq	%rdx, %rax
 189              	.LVL15:
  19:Src/findwayBases.cpp ****         }
 190              		.loc 1 19 19 view .LVU59
 191 0116 66480F6E 		movq	%rax, %xmm0
 191      C0
 192 011b C3       		ret
 193              	.LVL16:
 194              	.L16:
  28:Src/findwayBases.cpp ****             ret.y = b1->k * ret.x + b1->b;
 195              		.loc 1 28 13 is_stmt 1 view .LVU60
  28:Src/findwayBases.cpp ****             ret.y = b1->k * ret.x + b1->b;
 196              		.loc 1 28 25 is_stmt 0 view .LVU61
 197 011c F30F1056 		movss	4(%rsi), %xmm2
 197      04
  29:Src/findwayBases.cpp ****         }
 198              		.loc 1 29 13 is_stmt 1 view .LVU62
  29:Src/findwayBases.cpp ****         }
 199              		.loc 1 29 27 is_stmt 0 view .LVU63
 200 0121 F30F59C2 		mulss	%xmm2, %xmm0
  29:Src/findwayBases.cpp ****         }
 201              		.loc 1 29 19 view .LVU64
 202 0125 F30F5847 		addss	4(%rdi), %xmm0
 202      04
 203 012a 66480F7E 		movq	%xmm0, %rax
 203      C0
GAS LISTING /tmp/ccEa7iXV.s 			page 17


 204 012f 48C1E020 		salq	$32, %rax
 205 0133 660F7ED2 		movd	%xmm2, %edx
 206              	.LVL17:
  29:Src/findwayBases.cpp ****         }
 207              		.loc 1 29 19 view .LVU65
 208 0137 4809C2   		orq	%rax, %rdx
 209              	.LVL18:
  29:Src/findwayBases.cpp ****         }
 210              		.loc 1 29 19 view .LVU66
 211 013a 66480F6E 		movq	%rdx, %xmm0
 211      C2
  33:Src/findwayBases.cpp **** }
 212              		.loc 1 33 5 is_stmt 1 view .LVU67
  34:Src/findwayBases.cpp **** 
 213              		.loc 1 34 1 is_stmt 0 view .LVU68
 214 013f C3       		ret
 215              		.cfi_endproc
 216              	.LFE1725:
 218              		.globl	_Z15isCoDirectionalPK4vectPK6coords
 220              	_Z15isCoDirectionalPK4vectPK6coords:
 221              	.LVL19:
 222              	.LFB1726:
  37:Src/findwayBases.cpp ****     return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 223              		.loc 1 37 1 is_stmt 1 view -0
 224              		.cfi_startproc
  38:Src/findwayBases.cpp **** }
 225              		.loc 1 38 5 view .LVU70
  38:Src/findwayBases.cpp **** }
 226              		.loc 1 38 13 is_stmt 0 view .LVU71
 227 0140 660FEFC0 		pxor	%xmm0, %xmm0
 228 0144 0F2F4708 		comiss	8(%rdi), %xmm0
 229 0148 7728     		ja	.L46
 230 014a B9010000 		movl	$1, %ecx
 230      00
 231              	.L23:
  38:Src/findwayBases.cpp **** }
 232              		.loc 1 38 27 discriminator 4 view .LVU72
 233 014f F30F1006 		movss	(%rsi), %xmm0
 234 0153 488B07   		movq	(%rdi), %rax
 235 0156 F30F5C00 		subss	(%rax), %xmm0
 236 015a 660FEFC9 		pxor	%xmm1, %xmm1
 237 015e 0F2FC8   		comiss	%xmm0, %xmm1
 238 0161 7716     		ja	.L47
  38:Src/findwayBases.cpp **** }
 239              		.loc 1 38 27 view .LVU73
 240 0163 BA010000 		movl	$1, %edx
 240      00
 241              	.L25:
  38:Src/findwayBases.cpp **** }
 242              		.loc 1 38 47 discriminator 8 view .LVU74
 243 0168 39D1     		cmpl	%edx, %ecx
 244 016a 7414     		je	.L48
  38:Src/findwayBases.cpp **** }
 245              		.loc 1 38 47 view .LVU75
 246 016c B8000000 		movl	$0, %eax
 246      00
 247 0171 C3       		ret
GAS LISTING /tmp/ccEa7iXV.s 			page 18


 248              	.L46:
  38:Src/findwayBases.cpp **** }
 249              		.loc 1 38 13 view .LVU76
 250 0172 B9FFFFFF 		movl	$-1, %ecx
 250      FF
 251 0177 EBD6     		jmp	.L23
 252              	.L47:
  38:Src/findwayBases.cpp **** }
 253              		.loc 1 38 27 view .LVU77
 254 0179 BAFFFFFF 		movl	$-1, %edx
 254      FF
 255 017e EBE8     		jmp	.L25
 256              	.L48:
  38:Src/findwayBases.cpp **** }
 257              		.loc 1 38 50 discriminator 9 view .LVU78
 258 0180 660FEFC0 		pxor	%xmm0, %xmm0
 259 0184 0F2F470C 		comiss	12(%rdi), %xmm0
 260 0188 7727     		ja	.L49
  38:Src/findwayBases.cpp **** }
 261              		.loc 1 38 50 view .LVU79
 262 018a BA010000 		movl	$1, %edx
 262      00
 263              	.L28:
  38:Src/findwayBases.cpp **** }
 264              		.loc 1 38 64 discriminator 14 view .LVU80
 265 018f F30F1046 		movss	4(%rsi), %xmm0
 265      04
 266 0194 F30F5C40 		subss	4(%rax), %xmm0
 266      04
 267 0199 660FEFC9 		pxor	%xmm1, %xmm1
 268 019d 0F2FC8   		comiss	%xmm0, %xmm1
 269 01a0 7716     		ja	.L50
  38:Src/findwayBases.cpp **** }
 270              		.loc 1 38 64 view .LVU81
 271 01a2 B8010000 		movl	$1, %eax
 271      00
 272              	.L30:
  38:Src/findwayBases.cpp **** }
 273              		.loc 1 38 47 discriminator 18 view .LVU82
 274 01a7 39C2     		cmpl	%eax, %edx
 275 01a9 7414     		je	.L37
  38:Src/findwayBases.cpp **** }
 276              		.loc 1 38 47 view .LVU83
 277 01ab B8000000 		movl	$0, %eax
 277      00
 278 01b0 C3       		ret
 279              	.L49:
  38:Src/findwayBases.cpp **** }
 280              		.loc 1 38 50 view .LVU84
 281 01b1 BAFFFFFF 		movl	$-1, %edx
 281      FF
 282 01b6 EBD7     		jmp	.L28
 283              	.L50:
  38:Src/findwayBases.cpp **** }
 284              		.loc 1 38 64 view .LVU85
 285 01b8 B8FFFFFF 		movl	$-1, %eax
 285      FF
GAS LISTING /tmp/ccEa7iXV.s 			page 19


 286 01bd EBE8     		jmp	.L30
 287              	.L37:
  38:Src/findwayBases.cpp **** }
 288              		.loc 1 38 47 view .LVU86
 289 01bf B8010000 		movl	$1, %eax
 289      00
  39:Src/findwayBases.cpp **** 
 290              		.loc 1 39 1 view .LVU87
 291 01c4 C3       		ret
 292              		.cfi_endproc
 293              	.LFE1726:
 295              		.globl	_Z11isDotInsidePK6coordsPK8obstacle
 297              	_Z11isDotInsidePK6coordsPK8obstacle:
 298              	.LVL20:
 299              	.LFB1731:
 330:Src/findwayBases.cpp ****     return      (dot->x >= obstacle->c->x)
 300              		.loc 1 330 1 is_stmt 1 view -0
 301              		.cfi_startproc
 331:Src/findwayBases.cpp ****             &&  (dot->x <= obstacle->c->x + obstacle->a)
 302              		.loc 1 331 5 view .LVU89
 331:Src/findwayBases.cpp ****             &&  (dot->x <= obstacle->c->x + obstacle->a)
 303              		.loc 1 331 23 is_stmt 0 view .LVU90
 304 01c5 F30F100F 		movss	(%rdi), %xmm1
 331:Src/findwayBases.cpp ****             &&  (dot->x <= obstacle->c->x + obstacle->a)
 305              		.loc 1 331 38 view .LVU91
 306 01c9 488B06   		movq	(%rsi), %rax
 331:Src/findwayBases.cpp ****             &&  (dot->x <= obstacle->c->x + obstacle->a)
 307              		.loc 1 331 41 view .LVU92
 308 01cc F30F1000 		movss	(%rax), %xmm0
 334:Src/findwayBases.cpp **** }
 309              		.loc 1 334 13 view .LVU93
 310 01d0 0F2FC8   		comiss	%xmm0, %xmm1
 311 01d3 722C     		jb	.L63
 332:Src/findwayBases.cpp ****             &&  (dot->y >= obstacle->c->y)
 312              		.loc 1 332 55 view .LVU94
 313 01d5 F30F1056 		movss	40(%rsi), %xmm2
 313      28
 332:Src/findwayBases.cpp ****             &&  (dot->y >= obstacle->c->y)
 314              		.loc 1 332 43 view .LVU95
 315 01da F30F58C2 		addss	%xmm2, %xmm0
 332:Src/findwayBases.cpp ****             &&  (dot->y >= obstacle->c->y)
 316              		.loc 1 332 13 view .LVU96
 317 01de 0F2FC1   		comiss	%xmm1, %xmm0
 318 01e1 7224     		jb	.L64
 333:Src/findwayBases.cpp ****             &&  (dot->y <= obstacle->c->y + obstacle->a);
 319              		.loc 1 333 23 view .LVU97
 320 01e3 F30F1047 		movss	4(%rdi), %xmm0
 320      04
 333:Src/findwayBases.cpp ****             &&  (dot->y <= obstacle->c->y + obstacle->a);
 321              		.loc 1 333 41 view .LVU98
 322 01e8 F30F1048 		movss	4(%rax), %xmm1
 322      04
 333:Src/findwayBases.cpp ****             &&  (dot->y <= obstacle->c->y + obstacle->a);
 323              		.loc 1 333 13 view .LVU99
 324 01ed 0F2FC1   		comiss	%xmm1, %xmm0
 325 01f0 721B     		jb	.L65
 334:Src/findwayBases.cpp **** }
GAS LISTING /tmp/ccEa7iXV.s 			page 20


 326              		.loc 1 334 43 discriminator 3 view .LVU100
 327 01f2 F30F58D1 		addss	%xmm1, %xmm2
 334:Src/findwayBases.cpp **** }
 328              		.loc 1 334 13 discriminator 3 view .LVU101
 329 01f6 0F2FD0   		comiss	%xmm0, %xmm2
 330 01f9 7318     		jnb	.L59
 334:Src/findwayBases.cpp **** }
 331              		.loc 1 334 13 view .LVU102
 332 01fb B8000000 		movl	$0, %eax
 332      00
 333 0200 C3       		ret
 334              	.L63:
 335 0201 B8000000 		movl	$0, %eax
 335      00
 336 0206 C3       		ret
 337              	.L64:
 338 0207 B8000000 		movl	$0, %eax
 338      00
 339 020c C3       		ret
 340              	.L65:
 341 020d B8000000 		movl	$0, %eax
 341      00
 342 0212 C3       		ret
 343              	.L59:
 344 0213 B8010000 		movl	$1, %eax
 344      00
 335:Src/findwayBases.cpp **** 
 345              		.loc 1 335 1 view .LVU103
 346 0218 C3       		ret
 347              		.cfi_endproc
 348              	.LFE1731:
 350              		.globl	_Z14vectToBaselinePK4vect
 352              	_Z14vectToBaselinePK4vect:
 353              	.LVL21:
 354              	.LFB1732:
 338:Src/findwayBases.cpp ****     struct baseline ret;
 355              		.loc 1 338 1 is_stmt 1 view -0
 356              		.cfi_startproc
 339:Src/findwayBases.cpp **** 
 357              		.loc 1 339 5 view .LVU105
 341:Src/findwayBases.cpp **** 
 358              		.loc 1 341 5 view .LVU106
 341:Src/findwayBases.cpp **** 
 359              		.loc 1 341 24 is_stmt 0 view .LVU107
 360 0219 F30F104F 		movss	12(%rdi), %xmm1
 360      0C
 341:Src/findwayBases.cpp **** 
 361              		.loc 1 341 39 view .LVU108
 362 021e F30F1057 		movss	8(%rdi), %xmm2
 362      08
 341:Src/findwayBases.cpp **** 
 363              		.loc 1 341 27 view .LVU109
 364 0223 F30F5ECA 		divss	%xmm2, %xmm1
 341:Src/findwayBases.cpp **** 
 365              		.loc 1 341 11 view .LVU110
 366 0227 660F7EC8 		movd	%xmm1, %eax
 343:Src/findwayBases.cpp ****         ret.b = v->c->y - v->c->x * ret.k;
GAS LISTING /tmp/ccEa7iXV.s 			page 21


 367              		.loc 1 343 5 is_stmt 1 view .LVU111
 368 022b 0F2E1500 		ucomiss	.LC0(%rip), %xmm2
 368      000000
 369 0232 7A10     		jp	.L70
 370 0234 750E     		jne	.L70
 346:Src/findwayBases.cpp **** 
 371              		.loc 1 346 9 view .LVU112
 346:Src/findwayBases.cpp **** 
 372              		.loc 1 346 20 is_stmt 0 view .LVU113
 373 0236 488B17   		movq	(%rdi), %rdx
 346:Src/findwayBases.cpp **** 
 374              		.loc 1 346 15 view .LVU114
 375 0239 8B12     		movl	(%rdx), %edx
 376 023b 48C1E220 		salq	$32, %rdx
 377 023f 4809D0   		orq	%rdx, %rax
 378              	.LVL22:
 346:Src/findwayBases.cpp **** 
 379              		.loc 1 346 15 view .LVU115
 380 0242 EB1B     		jmp	.L69
 381              	.L70:
 344:Src/findwayBases.cpp ****     else
 382              		.loc 1 344 9 is_stmt 1 view .LVU116
 344:Src/findwayBases.cpp ****     else
 383              		.loc 1 344 20 is_stmt 0 view .LVU117
 384 0244 488B0F   		movq	(%rdi), %rcx
 344:Src/findwayBases.cpp ****     else
 385              		.loc 1 344 23 view .LVU118
 386 0247 F30F1041 		movss	4(%rcx), %xmm0
 386      04
 344:Src/findwayBases.cpp ****     else
 387              		.loc 1 344 35 view .LVU119
 388 024c F30F5909 		mulss	(%rcx), %xmm1
 344:Src/findwayBases.cpp ****     else
 389              		.loc 1 344 15 view .LVU120
 390 0250 F30F5CC1 		subss	%xmm1, %xmm0
 391 0254 660F7EC2 		movd	%xmm0, %edx
 392 0258 48C1E220 		salq	$32, %rdx
 393 025c 4809D0   		orq	%rdx, %rax
 394              	.L69:
 348:Src/findwayBases.cpp **** }
 395              		.loc 1 348 5 is_stmt 1 view .LVU121
 396              	.LVL23:
 349:Src/findwayBases.cpp **** 
 397              		.loc 1 349 1 is_stmt 0 view .LVU122
 398 025f 66480F6E 		movq	%rax, %xmm0
 398      C0
 399 0264 C3       		ret
 400              		.cfi_endproc
 401              	.LFE1732:
 403              		.globl	_Z6getLenPK6coordsS1_
 405              	_Z6getLenPK6coordsS1_:
 406              	.LVL24:
 407              	.LFB1733:
 352:Src/findwayBases.cpp ****     COORDS_DATATYPE lx = c1->x - c2->x,
 408              		.loc 1 352 1 is_stmt 1 view -0
 409              		.cfi_startproc
 352:Src/findwayBases.cpp ****     COORDS_DATATYPE lx = c1->x - c2->x,
GAS LISTING /tmp/ccEa7iXV.s 			page 22


 410              		.loc 1 352 1 is_stmt 0 view .LVU124
 411 0265 4883EC08 		subq	$8, %rsp
 412              		.cfi_def_cfa_offset 16
 353:Src/findwayBases.cpp ****                     ly = c1->y - c2->y,
 413              		.loc 1 353 5 is_stmt 1 view .LVU125
 353:Src/findwayBases.cpp ****                     ly = c1->y - c2->y,
 414              		.loc 1 353 30 is_stmt 0 view .LVU126
 415 0269 F30F1007 		movss	(%rdi), %xmm0
 353:Src/findwayBases.cpp ****                     ly = c1->y - c2->y,
 416              		.loc 1 353 21 view .LVU127
 417 026d F30F5C06 		subss	(%rsi), %xmm0
 418              	.LVL25:
 354:Src/findwayBases.cpp ****                     l  = sqrt(sqr(lx) + sqr(ly));
 419              		.loc 1 354 30 view .LVU128
 420 0271 F30F104F 		movss	4(%rdi), %xmm1
 420      04
 354:Src/findwayBases.cpp ****                     l  = sqrt(sqr(lx) + sqr(ly));
 421              		.loc 1 354 21 view .LVU129
 422 0276 F30F5C4E 		subss	4(%rsi), %xmm1
 422      04
 423              	.LVL26:
 355:Src/findwayBases.cpp **** 
 424              		.loc 1 355 31 view .LVU130
 425 027b F30F59C0 		mulss	%xmm0, %xmm0
 426              	.LVL27:
 355:Src/findwayBases.cpp **** 
 427              		.loc 1 355 41 view .LVU131
 428 027f F30F59C9 		mulss	%xmm1, %xmm1
 429              	.LVL28:
 355:Src/findwayBases.cpp **** 
 430              		.loc 1 355 30 view .LVU132
 431 0283 F30F58C1 		addss	%xmm1, %xmm0
 432              	.LVL29:
 433              	.LBB638:
 434              	.LBI638:
 435              		.file 4 "/usr/include/c++/9.2.0/cmath"
   1:/usr/include/c++/9.2.0/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/c++/9.2.0/cmath **** 
   3:/usr/include/c++/9.2.0/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/cmath **** //
   5:/usr/include/c++/9.2.0/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/cmath **** // any later version.
  10:/usr/include/c++/9.2.0/cmath **** 
  11:/usr/include/c++/9.2.0/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/cmath **** 
  16:/usr/include/c++/9.2.0/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/cmath **** 
  20:/usr/include/c++/9.2.0/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
GAS LISTING /tmp/ccEa7iXV.s 			page 23


  22:/usr/include/c++/9.2.0/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/cmath **** 
  25:/usr/include/c++/9.2.0/cmath **** /** @file include/cmath
  26:/usr/include/c++/9.2.0/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/9.2.0/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/c++/9.2.0/cmath ****  *
  29:/usr/include/c++/9.2.0/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/9.2.0/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/9.2.0/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/9.2.0/cmath ****  *  as macros in C).
  33:/usr/include/c++/9.2.0/cmath ****  */
  34:/usr/include/c++/9.2.0/cmath **** 
  35:/usr/include/c++/9.2.0/cmath **** //
  36:/usr/include/c++/9.2.0/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/9.2.0/cmath **** //
  38:/usr/include/c++/9.2.0/cmath **** 
  39:/usr/include/c++/9.2.0/cmath **** #pragma GCC system_header
  40:/usr/include/c++/9.2.0/cmath **** 
  41:/usr/include/c++/9.2.0/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/9.2.0/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/9.2.0/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/9.2.0/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/c++/9.2.0/cmath **** #include_next <math.h>
  46:/usr/include/c++/9.2.0/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/c++/9.2.0/cmath **** #include <bits/std_abs.h>
  48:/usr/include/c++/9.2.0/cmath **** 
  49:/usr/include/c++/9.2.0/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/include/c++/9.2.0/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/include/c++/9.2.0/cmath **** 
  52:/usr/include/c++/9.2.0/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/include/c++/9.2.0/cmath **** #undef div
  54:/usr/include/c++/9.2.0/cmath **** #undef acos
  55:/usr/include/c++/9.2.0/cmath **** #undef asin
  56:/usr/include/c++/9.2.0/cmath **** #undef atan
  57:/usr/include/c++/9.2.0/cmath **** #undef atan2
  58:/usr/include/c++/9.2.0/cmath **** #undef ceil
  59:/usr/include/c++/9.2.0/cmath **** #undef cos
  60:/usr/include/c++/9.2.0/cmath **** #undef cosh
  61:/usr/include/c++/9.2.0/cmath **** #undef exp
  62:/usr/include/c++/9.2.0/cmath **** #undef fabs
  63:/usr/include/c++/9.2.0/cmath **** #undef floor
  64:/usr/include/c++/9.2.0/cmath **** #undef fmod
  65:/usr/include/c++/9.2.0/cmath **** #undef frexp
  66:/usr/include/c++/9.2.0/cmath **** #undef ldexp
  67:/usr/include/c++/9.2.0/cmath **** #undef log
  68:/usr/include/c++/9.2.0/cmath **** #undef log10
  69:/usr/include/c++/9.2.0/cmath **** #undef modf
  70:/usr/include/c++/9.2.0/cmath **** #undef pow
  71:/usr/include/c++/9.2.0/cmath **** #undef sin
  72:/usr/include/c++/9.2.0/cmath **** #undef sinh
  73:/usr/include/c++/9.2.0/cmath **** #undef sqrt
  74:/usr/include/c++/9.2.0/cmath **** #undef tan
  75:/usr/include/c++/9.2.0/cmath **** #undef tanh
  76:/usr/include/c++/9.2.0/cmath **** 
  77:/usr/include/c++/9.2.0/cmath **** extern "C++"
  78:/usr/include/c++/9.2.0/cmath **** {
GAS LISTING /tmp/ccEa7iXV.s 			page 24


  79:/usr/include/c++/9.2.0/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/c++/9.2.0/cmath **** {
  81:/usr/include/c++/9.2.0/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/c++/9.2.0/cmath **** 
  83:/usr/include/c++/9.2.0/cmath ****   using ::acos;
  84:/usr/include/c++/9.2.0/cmath **** 
  85:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/c++/9.2.0/cmath ****   acos(float __x)
  88:/usr/include/c++/9.2.0/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/include/c++/9.2.0/cmath **** 
  90:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/c++/9.2.0/cmath ****   acos(long double __x)
  92:/usr/include/c++/9.2.0/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/include/c++/9.2.0/cmath **** #endif
  94:/usr/include/c++/9.2.0/cmath **** 
  95:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
  96:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
  99:/usr/include/c++/9.2.0/cmath ****     acos(_Tp __x)
 100:/usr/include/c++/9.2.0/cmath ****     { return __builtin_acos(__x); }
 101:/usr/include/c++/9.2.0/cmath **** 
 102:/usr/include/c++/9.2.0/cmath ****   using ::asin;
 103:/usr/include/c++/9.2.0/cmath **** 
 104:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/c++/9.2.0/cmath ****   asin(float __x)
 107:/usr/include/c++/9.2.0/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/include/c++/9.2.0/cmath **** 
 109:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/c++/9.2.0/cmath ****   asin(long double __x)
 111:/usr/include/c++/9.2.0/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/include/c++/9.2.0/cmath **** #endif
 113:/usr/include/c++/9.2.0/cmath **** 
 114:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 115:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 118:/usr/include/c++/9.2.0/cmath ****     asin(_Tp __x)
 119:/usr/include/c++/9.2.0/cmath ****     { return __builtin_asin(__x); }
 120:/usr/include/c++/9.2.0/cmath **** 
 121:/usr/include/c++/9.2.0/cmath ****   using ::atan;
 122:/usr/include/c++/9.2.0/cmath **** 
 123:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/c++/9.2.0/cmath ****   atan(float __x)
 126:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/include/c++/9.2.0/cmath **** 
 128:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/c++/9.2.0/cmath ****   atan(long double __x)
 130:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/include/c++/9.2.0/cmath **** #endif
 132:/usr/include/c++/9.2.0/cmath **** 
 133:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 134:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
GAS LISTING /tmp/ccEa7iXV.s 			page 25


 136:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 137:/usr/include/c++/9.2.0/cmath ****     atan(_Tp __x)
 138:/usr/include/c++/9.2.0/cmath ****     { return __builtin_atan(__x); }
 139:/usr/include/c++/9.2.0/cmath **** 
 140:/usr/include/c++/9.2.0/cmath ****   using ::atan2;
 141:/usr/include/c++/9.2.0/cmath **** 
 142:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/c++/9.2.0/cmath ****   atan2(float __y, float __x)
 145:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/include/c++/9.2.0/cmath **** 
 147:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/c++/9.2.0/cmath ****   atan2(long double __y, long double __x)
 149:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/include/c++/9.2.0/cmath **** #endif
 151:/usr/include/c++/9.2.0/cmath **** 
 152:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/include/c++/9.2.0/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/include/c++/9.2.0/cmath ****     {
 157:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/include/c++/9.2.0/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/include/c++/9.2.0/cmath ****     }
 160:/usr/include/c++/9.2.0/cmath **** 
 161:/usr/include/c++/9.2.0/cmath ****   using ::ceil;
 162:/usr/include/c++/9.2.0/cmath **** 
 163:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/include/c++/9.2.0/cmath ****   ceil(float __x)
 166:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/include/c++/9.2.0/cmath **** 
 168:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/include/c++/9.2.0/cmath ****   ceil(long double __x)
 170:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/include/c++/9.2.0/cmath **** #endif
 172:/usr/include/c++/9.2.0/cmath **** 
 173:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 174:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 177:/usr/include/c++/9.2.0/cmath ****     ceil(_Tp __x)
 178:/usr/include/c++/9.2.0/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/include/c++/9.2.0/cmath **** 
 180:/usr/include/c++/9.2.0/cmath ****   using ::cos;
 181:/usr/include/c++/9.2.0/cmath **** 
 182:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/include/c++/9.2.0/cmath ****   cos(float __x)
 185:/usr/include/c++/9.2.0/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/include/c++/9.2.0/cmath **** 
 187:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/c++/9.2.0/cmath ****   cos(long double __x)
 189:/usr/include/c++/9.2.0/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/include/c++/9.2.0/cmath **** #endif
 191:/usr/include/c++/9.2.0/cmath **** 
 192:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
GAS LISTING /tmp/ccEa7iXV.s 			page 26


 193:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 196:/usr/include/c++/9.2.0/cmath ****     cos(_Tp __x)
 197:/usr/include/c++/9.2.0/cmath ****     { return __builtin_cos(__x); }
 198:/usr/include/c++/9.2.0/cmath **** 
 199:/usr/include/c++/9.2.0/cmath ****   using ::cosh;
 200:/usr/include/c++/9.2.0/cmath **** 
 201:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/c++/9.2.0/cmath ****   cosh(float __x)
 204:/usr/include/c++/9.2.0/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/include/c++/9.2.0/cmath **** 
 206:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/c++/9.2.0/cmath ****   cosh(long double __x)
 208:/usr/include/c++/9.2.0/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/include/c++/9.2.0/cmath **** #endif
 210:/usr/include/c++/9.2.0/cmath **** 
 211:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 212:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 215:/usr/include/c++/9.2.0/cmath ****     cosh(_Tp __x)
 216:/usr/include/c++/9.2.0/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/include/c++/9.2.0/cmath **** 
 218:/usr/include/c++/9.2.0/cmath ****   using ::exp;
 219:/usr/include/c++/9.2.0/cmath **** 
 220:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/c++/9.2.0/cmath ****   exp(float __x)
 223:/usr/include/c++/9.2.0/cmath ****   { return __builtin_expf(__x); }
 224:/usr/include/c++/9.2.0/cmath **** 
 225:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/c++/9.2.0/cmath ****   exp(long double __x)
 227:/usr/include/c++/9.2.0/cmath ****   { return __builtin_expl(__x); }
 228:/usr/include/c++/9.2.0/cmath **** #endif
 229:/usr/include/c++/9.2.0/cmath **** 
 230:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 231:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 234:/usr/include/c++/9.2.0/cmath ****     exp(_Tp __x)
 235:/usr/include/c++/9.2.0/cmath ****     { return __builtin_exp(__x); }
 236:/usr/include/c++/9.2.0/cmath **** 
 237:/usr/include/c++/9.2.0/cmath ****   using ::fabs;
 238:/usr/include/c++/9.2.0/cmath **** 
 239:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/include/c++/9.2.0/cmath ****   fabs(float __x)
 242:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/include/c++/9.2.0/cmath **** 
 244:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/c++/9.2.0/cmath ****   fabs(long double __x)
 246:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/include/c++/9.2.0/cmath **** #endif
 248:/usr/include/c++/9.2.0/cmath **** 
 249:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
GAS LISTING /tmp/ccEa7iXV.s 			page 27


 250:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 253:/usr/include/c++/9.2.0/cmath ****     fabs(_Tp __x)
 254:/usr/include/c++/9.2.0/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/include/c++/9.2.0/cmath **** 
 256:/usr/include/c++/9.2.0/cmath ****   using ::floor;
 257:/usr/include/c++/9.2.0/cmath **** 
 258:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/c++/9.2.0/cmath ****   floor(float __x)
 261:/usr/include/c++/9.2.0/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/include/c++/9.2.0/cmath **** 
 263:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/c++/9.2.0/cmath ****   floor(long double __x)
 265:/usr/include/c++/9.2.0/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/include/c++/9.2.0/cmath **** #endif
 267:/usr/include/c++/9.2.0/cmath **** 
 268:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 269:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 272:/usr/include/c++/9.2.0/cmath ****     floor(_Tp __x)
 273:/usr/include/c++/9.2.0/cmath ****     { return __builtin_floor(__x); }
 274:/usr/include/c++/9.2.0/cmath **** 
 275:/usr/include/c++/9.2.0/cmath ****   using ::fmod;
 276:/usr/include/c++/9.2.0/cmath **** 
 277:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/c++/9.2.0/cmath ****   fmod(float __x, float __y)
 280:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/include/c++/9.2.0/cmath **** 
 282:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/c++/9.2.0/cmath ****   fmod(long double __x, long double __y)
 284:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/include/c++/9.2.0/cmath **** #endif
 286:/usr/include/c++/9.2.0/cmath **** 
 287:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/include/c++/9.2.0/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/include/c++/9.2.0/cmath ****     {
 292:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/include/c++/9.2.0/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/include/c++/9.2.0/cmath ****     }
 295:/usr/include/c++/9.2.0/cmath **** 
 296:/usr/include/c++/9.2.0/cmath ****   using ::frexp;
 297:/usr/include/c++/9.2.0/cmath **** 
 298:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/include/c++/9.2.0/cmath ****   inline float
 300:/usr/include/c++/9.2.0/cmath ****   frexp(float __x, int* __exp)
 301:/usr/include/c++/9.2.0/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/include/c++/9.2.0/cmath **** 
 303:/usr/include/c++/9.2.0/cmath ****   inline long double
 304:/usr/include/c++/9.2.0/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/include/c++/9.2.0/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/include/c++/9.2.0/cmath **** #endif
GAS LISTING /tmp/ccEa7iXV.s 			page 28


 307:/usr/include/c++/9.2.0/cmath **** 
 308:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 309:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 312:/usr/include/c++/9.2.0/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/include/c++/9.2.0/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/include/c++/9.2.0/cmath **** 
 315:/usr/include/c++/9.2.0/cmath ****   using ::ldexp;
 316:/usr/include/c++/9.2.0/cmath **** 
 317:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/include/c++/9.2.0/cmath ****   ldexp(float __x, int __exp)
 320:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/include/c++/9.2.0/cmath **** 
 322:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/include/c++/9.2.0/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/include/c++/9.2.0/cmath **** #endif
 326:/usr/include/c++/9.2.0/cmath **** 
 327:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 328:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 331:/usr/include/c++/9.2.0/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/include/c++/9.2.0/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/include/c++/9.2.0/cmath **** 
 334:/usr/include/c++/9.2.0/cmath ****   using ::log;
 335:/usr/include/c++/9.2.0/cmath **** 
 336:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/c++/9.2.0/cmath ****   log(float __x)
 339:/usr/include/c++/9.2.0/cmath ****   { return __builtin_logf(__x); }
 340:/usr/include/c++/9.2.0/cmath **** 
 341:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/c++/9.2.0/cmath ****   log(long double __x)
 343:/usr/include/c++/9.2.0/cmath ****   { return __builtin_logl(__x); }
 344:/usr/include/c++/9.2.0/cmath **** #endif
 345:/usr/include/c++/9.2.0/cmath **** 
 346:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 347:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 350:/usr/include/c++/9.2.0/cmath ****     log(_Tp __x)
 351:/usr/include/c++/9.2.0/cmath ****     { return __builtin_log(__x); }
 352:/usr/include/c++/9.2.0/cmath **** 
 353:/usr/include/c++/9.2.0/cmath ****   using ::log10;
 354:/usr/include/c++/9.2.0/cmath **** 
 355:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/c++/9.2.0/cmath ****   log10(float __x)
 358:/usr/include/c++/9.2.0/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/include/c++/9.2.0/cmath **** 
 360:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/c++/9.2.0/cmath ****   log10(long double __x)
 362:/usr/include/c++/9.2.0/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/include/c++/9.2.0/cmath **** #endif
GAS LISTING /tmp/ccEa7iXV.s 			page 29


 364:/usr/include/c++/9.2.0/cmath **** 
 365:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 366:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 369:/usr/include/c++/9.2.0/cmath ****     log10(_Tp __x)
 370:/usr/include/c++/9.2.0/cmath ****     { return __builtin_log10(__x); }
 371:/usr/include/c++/9.2.0/cmath **** 
 372:/usr/include/c++/9.2.0/cmath ****   using ::modf;
 373:/usr/include/c++/9.2.0/cmath **** 
 374:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/c++/9.2.0/cmath ****   inline float
 376:/usr/include/c++/9.2.0/cmath ****   modf(float __x, float* __iptr)
 377:/usr/include/c++/9.2.0/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/include/c++/9.2.0/cmath **** 
 379:/usr/include/c++/9.2.0/cmath ****   inline long double
 380:/usr/include/c++/9.2.0/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/include/c++/9.2.0/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/include/c++/9.2.0/cmath **** #endif
 383:/usr/include/c++/9.2.0/cmath **** 
 384:/usr/include/c++/9.2.0/cmath ****   using ::pow;
 385:/usr/include/c++/9.2.0/cmath **** 
 386:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/include/c++/9.2.0/cmath ****   pow(float __x, float __y)
 389:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/include/c++/9.2.0/cmath **** 
 391:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/include/c++/9.2.0/cmath ****   pow(long double __x, long double __y)
 393:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/include/c++/9.2.0/cmath **** 
 395:/usr/include/c++/9.2.0/cmath **** #if __cplusplus < 201103L
 396:/usr/include/c++/9.2.0/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/include/c++/9.2.0/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/include/c++/9.2.0/cmath ****   inline double
 399:/usr/include/c++/9.2.0/cmath ****   pow(double __x, int __i)
 400:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/include/c++/9.2.0/cmath **** 
 402:/usr/include/c++/9.2.0/cmath ****   inline float
 403:/usr/include/c++/9.2.0/cmath ****   pow(float __x, int __n)
 404:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/include/c++/9.2.0/cmath **** 
 406:/usr/include/c++/9.2.0/cmath ****   inline long double
 407:/usr/include/c++/9.2.0/cmath ****   pow(long double __x, int __n)
 408:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/include/c++/9.2.0/cmath **** #endif
 410:/usr/include/c++/9.2.0/cmath **** #endif
 411:/usr/include/c++/9.2.0/cmath **** 
 412:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/include/c++/9.2.0/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/include/c++/9.2.0/cmath ****     {
 417:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/include/c++/9.2.0/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/include/c++/9.2.0/cmath ****     }
 420:/usr/include/c++/9.2.0/cmath **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 30


 421:/usr/include/c++/9.2.0/cmath ****   using ::sin;
 422:/usr/include/c++/9.2.0/cmath **** 
 423:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/include/c++/9.2.0/cmath ****   sin(float __x)
 426:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/include/c++/9.2.0/cmath **** 
 428:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/include/c++/9.2.0/cmath ****   sin(long double __x)
 430:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/include/c++/9.2.0/cmath **** #endif
 432:/usr/include/c++/9.2.0/cmath **** 
 433:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 434:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 437:/usr/include/c++/9.2.0/cmath ****     sin(_Tp __x)
 438:/usr/include/c++/9.2.0/cmath ****     { return __builtin_sin(__x); }
 439:/usr/include/c++/9.2.0/cmath **** 
 440:/usr/include/c++/9.2.0/cmath ****   using ::sinh;
 441:/usr/include/c++/9.2.0/cmath **** 
 442:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/include/c++/9.2.0/cmath ****   sinh(float __x)
 445:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/include/c++/9.2.0/cmath **** 
 447:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/include/c++/9.2.0/cmath ****   sinh(long double __x)
 449:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/include/c++/9.2.0/cmath **** #endif
 451:/usr/include/c++/9.2.0/cmath **** 
 452:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 453:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 456:/usr/include/c++/9.2.0/cmath ****     sinh(_Tp __x)
 457:/usr/include/c++/9.2.0/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/include/c++/9.2.0/cmath **** 
 459:/usr/include/c++/9.2.0/cmath ****   using ::sqrt;
 460:/usr/include/c++/9.2.0/cmath **** 
 461:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/include/c++/9.2.0/cmath ****   sqrt(float __x)
 436              		.loc 4 463 3 is_stmt 1 view .LVU133
 437              	.LBB639:
 464:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sqrtf(__x); }
 438              		.loc 4 464 5 view .LVU134
 439              		.loc 4 464 27 is_stmt 0 view .LVU135
 440 0287 E8000000 		call	sqrtf@PLT
 440      00
 441              	.LVL30:
 442              		.loc 4 464 27 view .LVU136
 443              	.LBE639:
 444              	.LBE638:
 357:Src/findwayBases.cpp **** }
 445              		.loc 1 357 5 is_stmt 1 view .LVU137
 358:Src/findwayBases.cpp **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 31


 446              		.loc 1 358 1 is_stmt 0 view .LVU138
 447 028c 4883C408 		addq	$8, %rsp
 448              		.cfi_def_cfa_offset 8
 449 0290 C3       		ret
 450              		.cfi_endproc
 451              	.LFE1733:
 453              		.globl	_Z6getLenPK4vect
 455              	_Z6getLenPK4vect:
 456              	.LVL31:
 457              	.LFB1734:
 361:Src/findwayBases.cpp ****     COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 458              		.loc 1 361 1 is_stmt 1 view -0
 459              		.cfi_startproc
 361:Src/findwayBases.cpp ****     COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 460              		.loc 1 361 1 is_stmt 0 view .LVU140
 461 0291 4883EC08 		subq	$8, %rsp
 462              		.cfi_def_cfa_offset 16
 362:Src/findwayBases.cpp ****     return l;
 463              		.loc 1 362 5 is_stmt 1 view .LVU141
 362:Src/findwayBases.cpp ****     return l;
 464              		.loc 1 362 30 is_stmt 0 view .LVU142
 465 0295 F30F1047 		movss	8(%rdi), %xmm0
 465      08
 466 029a F30F59C0 		mulss	%xmm0, %xmm0
 362:Src/findwayBases.cpp ****     return l;
 467              		.loc 1 362 43 view .LVU143
 468 029e F30F104F 		movss	12(%rdi), %xmm1
 468      0C
 469 02a3 F30F59C9 		mulss	%xmm1, %xmm1
 362:Src/findwayBases.cpp ****     return l;
 470              		.loc 1 362 29 view .LVU144
 471 02a7 F30F58C1 		addss	%xmm1, %xmm0
 472              	.LVL32:
 473              	.LBB640:
 474              	.LBI640:
 463:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sqrtf(__x); }
 475              		.loc 4 463 3 is_stmt 1 view .LVU145
 476              	.LBB641:
 477              		.loc 4 464 5 view .LVU146
 478              		.loc 4 464 27 is_stmt 0 view .LVU147
 479 02ab E8000000 		call	sqrtf@PLT
 479      00
 480              	.LVL33:
 481              		.loc 4 464 27 view .LVU148
 482              	.LBE641:
 483              	.LBE640:
 363:Src/findwayBases.cpp **** }
 484              		.loc 1 363 5 is_stmt 1 view .LVU149
 364:Src/findwayBases.cpp **** 
 485              		.loc 1 364 1 is_stmt 0 view .LVU150
 486 02b0 4883C408 		addq	$8, %rsp
 487              		.cfi_def_cfa_offset 8
 488 02b4 C3       		ret
 489              		.cfi_endproc
 490              	.LFE1734:
 492              		.globl	_Z15getIntersectionPK8obstaclePK4vect
 494              	_Z15getIntersectionPK8obstaclePK4vect:
GAS LISTING /tmp/ccEa7iXV.s 			page 32


 495              	.LVL34:
 496              	.LFB1727:
  44:Src/findwayBases.cpp ****     struct coords inter1, inter2, tgt;
 497              		.loc 1 44 1 is_stmt 1 view -0
 498              		.cfi_startproc
  44:Src/findwayBases.cpp ****     struct coords inter1, inter2, tgt;
 499              		.loc 1 44 1 is_stmt 0 view .LVU152
 500 02b5 4155     		pushq	%r13
 501              		.cfi_def_cfa_offset 16
 502              		.cfi_offset 13, -16
 503 02b7 4154     		pushq	%r12
 504              		.cfi_def_cfa_offset 24
 505              		.cfi_offset 12, -24
 506 02b9 55       		pushq	%rbp
 507              		.cfi_def_cfa_offset 32
 508              		.cfi_offset 6, -32
 509 02ba 53       		pushq	%rbx
 510              		.cfi_def_cfa_offset 40
 511              		.cfi_offset 3, -40
 512 02bb 4883EC48 		subq	$72, %rsp
 513              		.cfi_def_cfa_offset 112
 514 02bf 4889FB   		movq	%rdi, %rbx
 515 02c2 4889F5   		movq	%rsi, %rbp
  44:Src/findwayBases.cpp ****     struct coords inter1, inter2, tgt;
 516              		.loc 1 44 1 view .LVU153
 517 02c5 64488B04 		movq	%fs:40, %rax
 517      25280000 
 517      00
 518 02ce 48894424 		movq	%rax, 56(%rsp)
 518      38
 519 02d3 31C0     		xorl	%eax, %eax
  45:Src/findwayBases.cpp ****     tgt = {(v->dx + v->c->x), (v->dy + v->c->y)};
 520              		.loc 1 45 5 is_stmt 1 view .LVU154
  46:Src/findwayBases.cpp ****     struct baseline b1,
 521              		.loc 1 46 5 view .LVU155
  47:Src/findwayBases.cpp ****                     b2;
 522              		.loc 1 47 5 view .LVU156
  47:Src/findwayBases.cpp ****                     b2;
 523              		.loc 1 47 21 is_stmt 0 view .LVU157
 524 02d5 C7442428 		movl	$0x00000000, 40(%rsp)
 524      00000000 
 525 02dd C744242C 		movl	$0x00000000, 44(%rsp)
 525      00000000 
  48:Src/findwayBases.cpp ****     COORDS_DATATYPE l1 = 0, l2 = 0, lv = 0;
 526              		.loc 1 48 21 view .LVU158
 527 02e5 C7442430 		movl	$0x00000000, 48(%rsp)
 527      00000000 
 528 02ed C7442434 		movl	$0x00000000, 52(%rsp)
 528      00000000 
  49:Src/findwayBases.cpp **** 
 529              		.loc 1 49 5 is_stmt 1 view .LVU159
 530              	.LVL35:
  51:Src/findwayBases.cpp **** 
 531              		.loc 1 51 5 view .LVU160
  51:Src/findwayBases.cpp **** 
 532              		.loc 1 51 16 is_stmt 0 view .LVU161
 533 02f5 4889F7   		movq	%rsi, %rdi
GAS LISTING /tmp/ccEa7iXV.s 			page 33


 534              	.LVL36:
  51:Src/findwayBases.cpp **** 
 535              		.loc 1 51 16 view .LVU162
 536 02f8 E8000000 		call	_Z6getLenPK4vect
 536      00
 537              	.LVL37:
  51:Src/findwayBases.cpp **** 
 538              		.loc 1 51 16 view .LVU163
 539 02fd F30F1144 		movss	%xmm0, 8(%rsp)
 539      2408
 540              	.LVL38:
  53:Src/findwayBases.cpp **** 
 541              		.loc 1 53 5 is_stmt 1 view .LVU164
  53:Src/findwayBases.cpp **** 
 542              		.loc 1 53 26 is_stmt 0 view .LVU165
 543 0303 4889EF   		movq	%rbp, %rdi
 544 0306 E8000000 		call	_Z14vectToBaselinePK4vect
 544      00
 545              	.LVL39:
  53:Src/findwayBases.cpp **** 
 546              		.loc 1 53 26 view .LVU166
 547 030b 660FD644 		movq	%xmm0, 40(%rsp)
 547      2428
  55:Src/findwayBases.cpp ****     b2.b = obst->c->x;
 548              		.loc 1 55 5 is_stmt 1 view .LVU167
  55:Src/findwayBases.cpp ****     b2.b = obst->c->x;
 549              		.loc 1 55 10 is_stmt 0 view .LVU168
 550 0311 F30F1005 		movss	.LC4(%rip), %xmm0
 550      00000000 
 551 0319 F30F5E05 		divss	.LC0(%rip), %xmm0
 551      00000000 
 552 0321 F30F1144 		movss	%xmm0, 48(%rsp)
 552      2430
  56:Src/findwayBases.cpp **** 
 553              		.loc 1 56 5 is_stmt 1 view .LVU169
  56:Src/findwayBases.cpp **** 
 554              		.loc 1 56 18 is_stmt 0 view .LVU170
 555 0327 488B03   		movq	(%rbx), %rax
  56:Src/findwayBases.cpp **** 
 556              		.loc 1 56 21 view .LVU171
 557 032a F30F1000 		movss	(%rax), %xmm0
  56:Src/findwayBases.cpp **** 
 558              		.loc 1 56 10 view .LVU172
 559 032e F30F1144 		movss	%xmm0, 52(%rsp)
 559      2434
  58:Src/findwayBases.cpp ****     if(isDotInside(&inter1, obst))
 560              		.loc 1 58 5 is_stmt 1 view .LVU173
  58:Src/findwayBases.cpp ****     if(isDotInside(&inter1, obst))
 561              		.loc 1 58 38 is_stmt 0 view .LVU174
 562 0334 488D7424 		leaq	48(%rsp), %rsi
 562      30
 563 0339 488D7C24 		leaq	40(%rsp), %rdi
 563      28
 564 033e E8000000 		call	_Z15getIntersectionPK8baselineS1_
 564      00
 565              	.LVL40:
 566 0343 660FD644 		movq	%xmm0, 24(%rsp)
GAS LISTING /tmp/ccEa7iXV.s 			page 34


 566      2418
  59:Src/findwayBases.cpp ****     {
 567              		.loc 1 59 5 is_stmt 1 view .LVU175
  59:Src/findwayBases.cpp ****     {
 568              		.loc 1 59 19 is_stmt 0 view .LVU176
 569 0349 488D7C24 		leaq	24(%rsp), %rdi
 569      18
 570 034e 4889DE   		movq	%rbx, %rsi
 571 0351 E8000000 		call	_Z11isDotInsidePK6coordsPK8obstacle
 571      00
 572              	.LVL41:
  59:Src/findwayBases.cpp ****     {
 573              		.loc 1 59 5 view .LVU177
 574 0356 84C0     		testb	%al, %al
 575 0358 0F851201 		jne	.L111
 575      0000
  70:Src/findwayBases.cpp ****         inter1 = {0, 0};
 576              		.loc 1 70 9 is_stmt 1 view .LVU178
  71:Src/findwayBases.cpp ****     }
 577              		.loc 1 71 9 view .LVU179
  71:Src/findwayBases.cpp ****     }
 578              		.loc 1 71 16 is_stmt 0 view .LVU180
 579 035e C7442418 		movl	$0x00000000, 24(%rsp)
 579      00000000 
 580 0366 C744241C 		movl	$0x00000000, 28(%rsp)
 580      00000000 
  70:Src/findwayBases.cpp ****         inter1 = {0, 0};
 581              		.loc 1 70 12 view .LVU181
 582 036e 448B2500 		movl	.LC0(%rip), %r12d
 582      000000
 583              	.LVL42:
 584              	.L79:
  74:Src/findwayBases.cpp **** 
 585              		.loc 1 74 5 is_stmt 1 view .LVU182
  74:Src/findwayBases.cpp **** 
 586              		.loc 1 74 10 is_stmt 0 view .LVU183
 587 0375 F30F1044 		movss	52(%rsp), %xmm0
 587      2434
 588 037b F30F5843 		addss	40(%rbx), %xmm0
 588      28
 589 0380 F30F1144 		movss	%xmm0, 52(%rsp)
 589      2434
  76:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 590              		.loc 1 76 5 is_stmt 1 view .LVU184
  76:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 591              		.loc 1 76 38 is_stmt 0 view .LVU185
 592 0386 488D7424 		leaq	48(%rsp), %rsi
 592      30
 593 038b 488D7C24 		leaq	40(%rsp), %rdi
 593      28
 594 0390 E8000000 		call	_Z15getIntersectionPK8baselineS1_
 594      00
 595              	.LVL43:
 596 0395 660FD644 		movq	%xmm0, 32(%rsp)
 596      2420
  77:Src/findwayBases.cpp ****     {
 597              		.loc 1 77 5 is_stmt 1 view .LVU186
GAS LISTING /tmp/ccEa7iXV.s 			page 35


  77:Src/findwayBases.cpp ****     {
 598              		.loc 1 77 19 is_stmt 0 view .LVU187
 599 039b 488D7C24 		leaq	32(%rsp), %rdi
 599      20
 600 03a0 4889DE   		movq	%rbx, %rsi
 601 03a3 E8000000 		call	_Z11isDotInsidePK6coordsPK8obstacle
 601      00
 602              	.LVL44:
  77:Src/findwayBases.cpp ****     {
 603              		.loc 1 77 5 view .LVU188
 604 03a8 84C0     		testb	%al, %al
 605 03aa 0F851501 		jne	.L112
 605      0000
 100:Src/findwayBases.cpp ****         inter2 = {0, 0};
 606              		.loc 1 100 9 is_stmt 1 view .LVU189
 101:Src/findwayBases.cpp ****     }
 607              		.loc 1 101 9 view .LVU190
 101:Src/findwayBases.cpp ****     }
 608              		.loc 1 101 16 is_stmt 0 view .LVU191
 609 03b0 C7442420 		movl	$0x00000000, 32(%rsp)
 609      00000000 
 610 03b8 C7442424 		movl	$0x00000000, 36(%rsp)
 610      00000000 
 611              	.L86:
 187:Src/findwayBases.cpp ****     b2.b = obst->c->y;
 612              		.loc 1 187 5 is_stmt 1 view .LVU192
 187:Src/findwayBases.cpp ****     b2.b = obst->c->y;
 613              		.loc 1 187 10 is_stmt 0 view .LVU193
 614 03c0 C7442430 		movl	$0x00000000, 48(%rsp)
 614      00000000 
 188:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 615              		.loc 1 188 5 is_stmt 1 view .LVU194
 188:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 616              		.loc 1 188 18 is_stmt 0 view .LVU195
 617 03c8 488B03   		movq	(%rbx), %rax
 188:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 618              		.loc 1 188 21 view .LVU196
 619 03cb F30F1040 		movss	4(%rax), %xmm0
 619      04
 188:Src/findwayBases.cpp ****     inter2 = getIntersection(&b1, &b2);
 620              		.loc 1 188 10 view .LVU197
 621 03d0 F30F1144 		movss	%xmm0, 52(%rsp)
 621      2434
 189:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 622              		.loc 1 189 5 is_stmt 1 view .LVU198
 189:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 623              		.loc 1 189 38 is_stmt 0 view .LVU199
 624 03d6 488D7424 		leaq	48(%rsp), %rsi
 624      30
 625 03db 488D7C24 		leaq	40(%rsp), %rdi
 625      28
 626 03e0 E8000000 		call	_Z15getIntersectionPK8baselineS1_
 626      00
 627              	.LVL45:
 628 03e5 660FD644 		movq	%xmm0, 32(%rsp)
 628      2420
 190:Src/findwayBases.cpp ****     {
GAS LISTING /tmp/ccEa7iXV.s 			page 36


 629              		.loc 1 190 5 is_stmt 1 view .LVU200
 190:Src/findwayBases.cpp ****     {
 630              		.loc 1 190 19 is_stmt 0 view .LVU201
 631 03eb 488D7C24 		leaq	32(%rsp), %rdi
 631      20
 632 03f0 4889DE   		movq	%rbx, %rsi
 633 03f3 E8000000 		call	_Z11isDotInsidePK6coordsPK8obstacle
 633      00
 634              	.LVL46:
 190:Src/findwayBases.cpp ****     {
 635              		.loc 1 190 5 view .LVU202
 636 03f8 84C0     		testb	%al, %al
 637 03fa 0F857401 		jne	.L113
 637      0000
 213:Src/findwayBases.cpp ****         inter2 = {0, 0};
 638              		.loc 1 213 9 is_stmt 1 view .LVU203
 214:Src/findwayBases.cpp ****     }
 639              		.loc 1 214 9 view .LVU204
 214:Src/findwayBases.cpp ****     }
 640              		.loc 1 214 16 is_stmt 0 view .LVU205
 641 0400 C7442420 		movl	$0x00000000, 32(%rsp)
 641      00000000 
 642 0408 C7442424 		movl	$0x00000000, 36(%rsp)
 642      00000000 
 643              	.L95:
 218:Src/findwayBases.cpp **** 
 644              		.loc 1 218 5 is_stmt 1 view .LVU206
 218:Src/findwayBases.cpp **** 
 645              		.loc 1 218 10 is_stmt 0 view .LVU207
 646 0410 F30F1044 		movss	52(%rsp), %xmm0
 646      2434
 647 0416 F30F5843 		addss	40(%rbx), %xmm0
 647      28
 648 041b F30F1144 		movss	%xmm0, 52(%rsp)
 648      2434
 220:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 649              		.loc 1 220 5 is_stmt 1 view .LVU208
 220:Src/findwayBases.cpp ****     if(isDotInside(&inter2, obst))
 650              		.loc 1 220 38 is_stmt 0 view .LVU209
 651 0421 488D7424 		leaq	48(%rsp), %rsi
 651      30
 652 0426 488D7C24 		leaq	40(%rsp), %rdi
 652      28
 653 042b E8000000 		call	_Z15getIntersectionPK8baselineS1_
 653      00
 654              	.LVL47:
 655 0430 660FD644 		movq	%xmm0, 32(%rsp)
 655      2420
 221:Src/findwayBases.cpp ****     {
 656              		.loc 1 221 5 is_stmt 1 view .LVU210
 221:Src/findwayBases.cpp ****     {
 657              		.loc 1 221 19 is_stmt 0 view .LVU211
 658 0436 488D7C24 		leaq	32(%rsp), %rdi
 658      20
 659 043b 4889DE   		movq	%rbx, %rsi
 660 043e E8000000 		call	_Z11isDotInsidePK6coordsPK8obstacle
 660      00
GAS LISTING /tmp/ccEa7iXV.s 			page 37


 661              	.LVL48:
 221:Src/findwayBases.cpp ****     {
 662              		.loc 1 221 5 view .LVU212
 663 0443 84C0     		testb	%al, %al
 664 0445 0F85D801 		jne	.L114
 664      0000
 665              	.LVL49:
 666              	.L98:
 248:Src/findwayBases.cpp ****     
 667              		.loc 1 248 5 is_stmt 1 view .LVU213
 248:Src/findwayBases.cpp ****     
 668              		.loc 1 248 12 is_stmt 0 view .LVU214
 669 044b F30F7E44 		movq	24(%rsp), %xmm0
 669      2418
 324:Src/findwayBases.cpp **** 
 670              		.loc 1 324 1 view .LVU215
 671 0451 488B4424 		movq	56(%rsp), %rax
 671      38
 672 0456 64483304 		xorq	%fs:40, %rax
 672      25280000 
 672      00
 673 045f 0F853A02 		jne	.L115
 673      0000
 674 0465 4883C448 		addq	$72, %rsp
 675              		.cfi_remember_state
 676              		.cfi_def_cfa_offset 40
 677 0469 5B       		popq	%rbx
 678              		.cfi_def_cfa_offset 32
 679 046a 5D       		popq	%rbp
 680              		.cfi_def_cfa_offset 24
 681              	.LVL50:
 324:Src/findwayBases.cpp **** 
 682              		.loc 1 324 1 view .LVU216
 683 046b 415C     		popq	%r12
 684              		.cfi_def_cfa_offset 16
 685 046d 415D     		popq	%r13
 686              		.cfi_def_cfa_offset 8
 687 046f C3       		ret
 688              	.LVL51:
 689              	.L111:
 690              		.cfi_restore_state
  61:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 691              		.loc 1 61 9 is_stmt 1 view .LVU217
  61:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 692              		.loc 1 61 24 is_stmt 0 view .LVU218
 693 0470 488B7D00 		movq	0(%rbp), %rdi
  61:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 694              		.loc 1 61 20 view .LVU219
 695 0474 4C8D6C24 		leaq	24(%rsp), %r13
 695      18
 696 0479 4C89EE   		movq	%r13, %rsi
 697 047c E8000000 		call	_Z6getLenPK6coordsS1_
 697      00
 698              	.LVL52:
 699 0481 66410F7E 		movd	%xmm0, %r12d
 699      C4
 700              	.LVL53:
GAS LISTING /tmp/ccEa7iXV.s 			page 38


  62:Src/findwayBases.cpp ****         {
 701              		.loc 1 62 9 is_stmt 1 view .LVU220
  62:Src/findwayBases.cpp ****         {
 702              		.loc 1 62 29 is_stmt 0 view .LVU221
 703 0486 4C89EE   		movq	%r13, %rsi
 704 0489 4889EF   		movq	%rbp, %rdi
 705 048c E8000000 		call	_Z15isCoDirectionalPK4vectPK6coords
 705      00
 706              	.LVL54:
  62:Src/findwayBases.cpp ****         {
 707              		.loc 1 62 12 view .LVU222
 708 0491 84C0     		testb	%al, %al
 709 0493 7414     		je	.L78
  62:Src/findwayBases.cpp ****         {
 710              		.loc 1 62 12 discriminator 2 view .LVU223
 711 0495 F30F1064 		movss	8(%rsp), %xmm4
 711      2408
 712 049b 66410F6E 		movd	%r12d, %xmm5
 712      EC
 713 04a0 0F2FE5   		comiss	%xmm5, %xmm4
 714 04a3 0F83CCFE 		jnb	.L79
 714      FFFF
 715              	.L78:
  64:Src/findwayBases.cpp ****             inter1 = {0, 0};
 716              		.loc 1 64 13 is_stmt 1 view .LVU224
 717              	.LVL55:
  65:Src/findwayBases.cpp ****         }
 718              		.loc 1 65 13 view .LVU225
  65:Src/findwayBases.cpp ****         }
 719              		.loc 1 65 20 is_stmt 0 view .LVU226
 720 04a9 C7442418 		movl	$0x00000000, 24(%rsp)
 720      00000000 
 721 04b1 C744241C 		movl	$0x00000000, 28(%rsp)
 721      00000000 
  64:Src/findwayBases.cpp ****             inter1 = {0, 0};
 722              		.loc 1 64 16 view .LVU227
 723 04b9 448B2500 		movl	.LC0(%rip), %r12d
 723      000000
 724 04c0 E9B0FEFF 		jmp	.L79
 724      FF
 725              	.LVL56:
 726              	.L112:
  79:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 727              		.loc 1 79 9 is_stmt 1 view .LVU228
  79:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 728              		.loc 1 79 24 is_stmt 0 view .LVU229
 729 04c5 488B7D00 		movq	0(%rbp), %rdi
  79:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 730              		.loc 1 79 20 view .LVU230
 731 04c9 4C8D6C24 		leaq	32(%rsp), %r13
 731      20
 732 04ce 4C89EE   		movq	%r13, %rsi
 733 04d1 E8000000 		call	_Z6getLenPK6coordsS1_
 733      00
 734              	.LVL57:
 735 04d6 F30F1144 		movss	%xmm0, 12(%rsp)
 735      240C
GAS LISTING /tmp/ccEa7iXV.s 			page 39


 736              	.LVL58:
  80:Src/findwayBases.cpp ****         {
 737              		.loc 1 80 9 is_stmt 1 view .LVU231
  80:Src/findwayBases.cpp ****         {
 738              		.loc 1 80 29 is_stmt 0 view .LVU232
 739 04dc 4C89EE   		movq	%r13, %rsi
 740 04df 4889EF   		movq	%rbp, %rdi
 741 04e2 E8000000 		call	_Z15isCoDirectionalPK4vectPK6coords
 741      00
 742              	.LVL59:
  80:Src/findwayBases.cpp ****         {
 743              		.loc 1 80 12 view .LVU233
 744 04e7 84C0     		testb	%al, %al
 745 04e9 7453     		je	.L81
  80:Src/findwayBases.cpp ****         {
 746              		.loc 1 80 12 discriminator 2 view .LVU234
 747 04eb F30F1074 		movss	8(%rsp), %xmm6
 747      2408
 748 04f1 0F2F7424 		comiss	12(%rsp), %xmm6
 748      0C
 749 04f6 7246     		jb	.L81
  85:Src/findwayBases.cpp ****         {
 750              		.loc 1 85 14 is_stmt 1 view .LVU235
 751              	.LVL60:
 752              	.LBB642:
 753              	.LBI642:
 754              		.file 5 "Includes/findwayBases.hpp"
   1:Includes/findwayBases.hpp **** #include "math.hpp"
   2:Includes/findwayBases.hpp **** #include <string>
   3:Includes/findwayBases.hpp **** 
   4:Includes/findwayBases.hpp **** #define COORDS_DATATYPE float
   5:Includes/findwayBases.hpp **** 
   6:Includes/findwayBases.hpp **** #define CORNER_LEFT_BOT     0
   7:Includes/findwayBases.hpp **** #define CORNER_LEFT_TOP     1
   8:Includes/findwayBases.hpp **** #define CORNER_RIGHT_TOP    2
   9:Includes/findwayBases.hpp **** #define CORNER_RIGHT_BOT    3
  10:Includes/findwayBases.hpp **** 
  11:Includes/findwayBases.hpp **** 
  12:Includes/findwayBases.hpp **** struct coords
  13:Includes/findwayBases.hpp **** {
  14:Includes/findwayBases.hpp ****     COORDS_DATATYPE     x,
  15:Includes/findwayBases.hpp ****                         y;
  16:Includes/findwayBases.hpp ****     std::string toString()
  17:Includes/findwayBases.hpp ****     {
  18:Includes/findwayBases.hpp ****         std::string str = "";
  19:Includes/findwayBases.hpp ****         str += "{";
  20:Includes/findwayBases.hpp ****         str += std::to_string(x);
  21:Includes/findwayBases.hpp ****         str += ", ";
  22:Includes/findwayBases.hpp ****         str += std::to_string(y);
  23:Includes/findwayBases.hpp ****         str += "}";
  24:Includes/findwayBases.hpp ****         return str;
  25:Includes/findwayBases.hpp ****     }
  26:Includes/findwayBases.hpp **** 
  27:Includes/findwayBases.hpp ****     bool eq(struct coords *c)
  28:Includes/findwayBases.hpp ****     {
  29:Includes/findwayBases.hpp ****         return (x == c->x && y == c->y);
  30:Includes/findwayBases.hpp ****     }
GAS LISTING /tmp/ccEa7iXV.s 			page 40


  31:Includes/findwayBases.hpp **** 
  32:Includes/findwayBases.hpp ****     bool eq(COORDS_DATATYPE _x, COORDS_DATATYPE _y)
 755              		.loc 5 32 10 view .LVU236
 756              	.LBB643:
  33:Includes/findwayBases.hpp ****     {
  34:Includes/findwayBases.hpp ****         return (x == _x && y == _y);
 757              		.loc 5 34 9 view .LVU237
 758              		.loc 5 34 17 is_stmt 0 view .LVU238
 759 04f8 F30F1044 		movss	24(%rsp), %xmm0
 759      2418
 760              		.loc 5 34 25 view .LVU239
 761 04fe 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 761      000000
 762 0505 7A4C     		jp	.L85
 763 0507 754A     		jne	.L85
 764              		.loc 5 34 28 view .LVU240
 765 0509 F30F1044 		movss	28(%rsp), %xmm0
 765      241C
 766              		.loc 5 34 25 view .LVU241
 767 050f 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 767      000000
 768 0516 7A3B     		jp	.L85
 769 0518 7539     		jne	.L85
 770              	.LVL61:
 771              	.L87:
 772              		.loc 5 34 25 view .LVU242
 773              	.LBE643:
 774              	.LBE642:
  87:Src/findwayBases.cpp ****             l1 = l2;
 775              		.loc 1 87 13 is_stmt 1 view .LVU243
  87:Src/findwayBases.cpp ****             l1 = l2;
 776              		.loc 1 87 20 is_stmt 0 view .LVU244
 777 051a 488B4424 		movq	32(%rsp), %rax
 777      20
 778 051f 48894424 		movq	%rax, 24(%rsp)
 778      18
  88:Src/findwayBases.cpp ****             l2 = 0;
 779              		.loc 1 88 13 is_stmt 1 view .LVU245
 780              	.LVL62:
  89:Src/findwayBases.cpp ****             inter2 = {0, 0};
 781              		.loc 1 89 13 view .LVU246
  90:Src/findwayBases.cpp ****         }
 782              		.loc 1 90 13 view .LVU247
  90:Src/findwayBases.cpp ****         }
 783              		.loc 1 90 20 is_stmt 0 view .LVU248
 784 0524 C7442420 		movl	$0x00000000, 32(%rsp)
 784      00000000 
 785 052c C7442424 		movl	$0x00000000, 36(%rsp)
 785      00000000 
  88:Src/findwayBases.cpp ****             l2 = 0;
 786              		.loc 1 88 16 view .LVU249
 787 0534 448B6424 		movl	12(%rsp), %r12d
 787      0C
 788 0539 E982FEFF 		jmp	.L86
 788      FF
 789              	.LVL63:
 790              	.L81:
GAS LISTING /tmp/ccEa7iXV.s 			page 41


  82:Src/findwayBases.cpp ****             l2 = 0;
 791              		.loc 1 82 13 is_stmt 1 view .LVU250
  82:Src/findwayBases.cpp ****             l2 = 0;
 792              		.loc 1 82 20 is_stmt 0 view .LVU251
 793 053e C7442420 		movl	$0x00000000, 32(%rsp)
 793      00000000 
 794 0546 C7442424 		movl	$0x00000000, 36(%rsp)
 794      00000000 
  83:Src/findwayBases.cpp ****         }
 795              		.loc 1 83 13 is_stmt 1 view .LVU252
 796              	.LVL64:
  83:Src/findwayBases.cpp ****         }
 797              		.loc 1 83 13 is_stmt 0 view .LVU253
 798 054e E96DFEFF 		jmp	.L86
 798      FF
 799              	.LVL65:
 800              	.L85:
  85:Src/findwayBases.cpp ****         {
 801              		.loc 1 85 33 view .LVU254
 802 0553 66410F6E 		movd	%r12d, %xmm2
 802      D4
 803 0558 0F2F5424 		comiss	12(%rsp), %xmm2
 803      0C
 804 055d 77BB     		ja	.L87
 805              	.LVL66:
  94:Src/findwayBases.cpp ****             inter2 = {0, 0};
 806              		.loc 1 94 13 is_stmt 1 view .LVU255
  95:Src/findwayBases.cpp ****         }
 807              		.loc 1 95 13 view .LVU256
  95:Src/findwayBases.cpp ****         }
 808              		.loc 1 95 20 is_stmt 0 view .LVU257
 809 055f C7442420 		movl	$0x00000000, 32(%rsp)
 809      00000000 
 810 0567 C7442424 		movl	$0x00000000, 36(%rsp)
 810      00000000 
 811 056f E94CFEFF 		jmp	.L86
 811      FF
 812              	.LVL67:
 813              	.L113:
 192:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 814              		.loc 1 192 9 is_stmt 1 view .LVU258
 192:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 815              		.loc 1 192 24 is_stmt 0 view .LVU259
 816 0574 488B7D00 		movq	0(%rbp), %rdi
 192:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 817              		.loc 1 192 20 view .LVU260
 818 0578 4C8D6C24 		leaq	32(%rsp), %r13
 818      20
 819 057d 4C89EE   		movq	%r13, %rsi
 820 0580 E8000000 		call	_Z6getLenPK6coordsS1_
 820      00
 821              	.LVL68:
 822 0585 F30F1144 		movss	%xmm0, 12(%rsp)
 822      240C
 823              	.LVL69:
 193:Src/findwayBases.cpp ****         {
 824              		.loc 1 193 9 is_stmt 1 view .LVU261
GAS LISTING /tmp/ccEa7iXV.s 			page 42


 193:Src/findwayBases.cpp ****         {
 825              		.loc 1 193 29 is_stmt 0 view .LVU262
 826 058b 4C89EE   		movq	%r13, %rsi
 827 058e 4889EF   		movq	%rbp, %rdi
 828 0591 E8000000 		call	_Z15isCoDirectionalPK4vectPK6coords
 828      00
 829              	.LVL70:
 193:Src/findwayBases.cpp ****         {
 830              		.loc 1 193 12 view .LVU263
 831 0596 84C0     		testb	%al, %al
 832 0598 7453     		je	.L90
 193:Src/findwayBases.cpp ****         {
 833              		.loc 1 193 12 discriminator 2 view .LVU264
 834 059a F30F107C 		movss	8(%rsp), %xmm7
 834      2408
 835 05a0 0F2F7C24 		comiss	12(%rsp), %xmm7
 835      0C
 836 05a5 7246     		jb	.L90
 198:Src/findwayBases.cpp ****         {
 837              		.loc 1 198 14 is_stmt 1 view .LVU265
 838              	.LVL71:
 839              	.LBB644:
 840              	.LBI644:
  32:Includes/findwayBases.hpp ****     {
 841              		.loc 5 32 10 view .LVU266
 842              	.LBB645:
 843              		.loc 5 34 9 view .LVU267
 844              		.loc 5 34 17 is_stmt 0 view .LVU268
 845 05a7 F30F1044 		movss	24(%rsp), %xmm0
 845      2418
 846              		.loc 5 34 25 view .LVU269
 847 05ad 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 847      000000
 848 05b4 7A4C     		jp	.L94
 849 05b6 754A     		jne	.L94
 850              		.loc 5 34 28 view .LVU270
 851 05b8 F30F1044 		movss	28(%rsp), %xmm0
 851      241C
 852              		.loc 5 34 25 view .LVU271
 853 05be 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 853      000000
 854 05c5 7A3B     		jp	.L94
 855 05c7 7539     		jne	.L94
 856              	.LVL72:
 857              	.L96:
 858              		.loc 5 34 25 view .LVU272
 859              	.LBE645:
 860              	.LBE644:
 200:Src/findwayBases.cpp ****             l1 = l2;
 861              		.loc 1 200 13 is_stmt 1 view .LVU273
 200:Src/findwayBases.cpp ****             l1 = l2;
 862              		.loc 1 200 20 is_stmt 0 view .LVU274
 863 05c9 488B4424 		movq	32(%rsp), %rax
 863      20
 864 05ce 48894424 		movq	%rax, 24(%rsp)
 864      18
 201:Src/findwayBases.cpp ****             l2 = 0;
GAS LISTING /tmp/ccEa7iXV.s 			page 43


 865              		.loc 1 201 13 is_stmt 1 view .LVU275
 866              	.LVL73:
 202:Src/findwayBases.cpp ****             inter2 = {0, 0};
 867              		.loc 1 202 13 view .LVU276
 203:Src/findwayBases.cpp ****         }
 868              		.loc 1 203 13 view .LVU277
 203:Src/findwayBases.cpp ****         }
 869              		.loc 1 203 20 is_stmt 0 view .LVU278
 870 05d3 C7442420 		movl	$0x00000000, 32(%rsp)
 870      00000000 
 871 05db C7442424 		movl	$0x00000000, 36(%rsp)
 871      00000000 
 201:Src/findwayBases.cpp ****             l2 = 0;
 872              		.loc 1 201 16 view .LVU279
 873 05e3 448B6424 		movl	12(%rsp), %r12d
 873      0C
 874 05e8 E923FEFF 		jmp	.L95
 874      FF
 875              	.LVL74:
 876              	.L90:
 195:Src/findwayBases.cpp ****             l2 = 0;
 877              		.loc 1 195 13 is_stmt 1 view .LVU280
 195:Src/findwayBases.cpp ****             l2 = 0;
 878              		.loc 1 195 20 is_stmt 0 view .LVU281
 879 05ed C7442420 		movl	$0x00000000, 32(%rsp)
 879      00000000 
 880 05f5 C7442424 		movl	$0x00000000, 36(%rsp)
 880      00000000 
 196:Src/findwayBases.cpp ****         }
 881              		.loc 1 196 13 is_stmt 1 view .LVU282
 882              	.LVL75:
 196:Src/findwayBases.cpp ****         }
 883              		.loc 1 196 13 is_stmt 0 view .LVU283
 884 05fd E90EFEFF 		jmp	.L95
 884      FF
 885              	.LVL76:
 886              	.L94:
 198:Src/findwayBases.cpp ****         {
 887              		.loc 1 198 33 view .LVU284
 888 0602 66410F6E 		movd	%r12d, %xmm4
 888      E4
 889 0607 0F2F6424 		comiss	12(%rsp), %xmm4
 889      0C
 890 060c 77BB     		ja	.L96
 891              	.LVL77:
 207:Src/findwayBases.cpp ****             inter2 = {0, 0};
 892              		.loc 1 207 13 is_stmt 1 view .LVU285
 208:Src/findwayBases.cpp ****         }
 893              		.loc 1 208 13 view .LVU286
 208:Src/findwayBases.cpp ****         }
 894              		.loc 1 208 20 is_stmt 0 view .LVU287
 895 060e C7442420 		movl	$0x00000000, 32(%rsp)
 895      00000000 
 896 0616 C7442424 		movl	$0x00000000, 36(%rsp)
 896      00000000 
 897 061e E9EDFDFF 		jmp	.L95
 897      FF
GAS LISTING /tmp/ccEa7iXV.s 			page 44


 898              	.LVL78:
 899              	.L114:
 223:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 900              		.loc 1 223 9 is_stmt 1 view .LVU288
 223:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 901              		.loc 1 223 24 is_stmt 0 view .LVU289
 902 0623 488B7D00 		movq	0(%rbp), %rdi
 223:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 903              		.loc 1 223 20 view .LVU290
 904 0627 488D5C24 		leaq	32(%rsp), %rbx
 904      20
 905              	.LVL79:
 223:Src/findwayBases.cpp ****         if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 906              		.loc 1 223 20 view .LVU291
 907 062c 4889DE   		movq	%rbx, %rsi
 908 062f E8000000 		call	_Z6getLenPK6coordsS1_
 908      00
 909              	.LVL80:
 910 0634 F30F1144 		movss	%xmm0, 12(%rsp)
 910      240C
 911              	.LVL81:
 224:Src/findwayBases.cpp ****         {
 912              		.loc 1 224 9 is_stmt 1 view .LVU292
 224:Src/findwayBases.cpp ****         {
 913              		.loc 1 224 29 is_stmt 0 view .LVU293
 914 063a 4889DE   		movq	%rbx, %rsi
 915 063d 4889EF   		movq	%rbp, %rdi
 916 0640 E8000000 		call	_Z15isCoDirectionalPK4vectPK6coords
 916      00
 917              	.LVL82:
 224:Src/findwayBases.cpp ****         {
 918              		.loc 1 224 12 view .LVU294
 919 0645 84C0     		testb	%al, %al
 920 0647 0F84FEFD 		je	.L98
 920      FFFF
 224:Src/findwayBases.cpp ****         {
 921              		.loc 1 224 12 discriminator 2 view .LVU295
 922 064d F30F104C 		movss	8(%rsp), %xmm1
 922      2408
 923 0653 0F2F4C24 		comiss	12(%rsp), %xmm1
 923      0C
 924 0658 0F82EDFD 		jb	.L98
 924      FFFF
 229:Src/findwayBases.cpp ****         {
 925              		.loc 1 229 14 is_stmt 1 view .LVU296
 926              	.LVL83:
 927              	.LBB646:
 928              	.LBI646:
  32:Includes/findwayBases.hpp ****     {
 929              		.loc 5 32 10 view .LVU297
 930              	.LBB647:
 931              		.loc 5 34 9 view .LVU298
 932              		.loc 5 34 17 is_stmt 0 view .LVU299
 933 065e F30F1044 		movss	24(%rsp), %xmm0
 933      2418
 934              		.loc 5 34 25 view .LVU300
 935 0664 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
GAS LISTING /tmp/ccEa7iXV.s 			page 45


 935      000000
 936 066b 7A13     		jp	.L100
 937 066d 7511     		jne	.L100
 938              		.loc 5 34 28 view .LVU301
 939 066f F30F1044 		movss	28(%rsp), %xmm0
 939      241C
 940              		.loc 5 34 25 view .LVU302
 941 0675 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 941      000000
 942 067c 7A02     		jp	.L100
 943 067e 7410     		je	.L102
 944              	.L100:
 945              	.LVL84:
 946              		.loc 5 34 25 view .LVU303
 947              	.LBE647:
 948              	.LBE646:
 229:Src/findwayBases.cpp ****         {
 949              		.loc 1 229 33 view .LVU304
 950 0680 66410F6E 		movd	%r12d, %xmm6
 950      F4
 951 0685 0F2F7424 		comiss	12(%rsp), %xmm6
 951      0C
 952 068a 0F86BBFD 		jbe	.L98
 952      FFFF
 953              	.L102:
 231:Src/findwayBases.cpp ****             l1 = l2;
 954              		.loc 1 231 13 is_stmt 1 view .LVU305
 231:Src/findwayBases.cpp ****             l1 = l2;
 955              		.loc 1 231 20 is_stmt 0 view .LVU306
 956 0690 488B4424 		movq	32(%rsp), %rax
 956      20
 957 0695 48894424 		movq	%rax, 24(%rsp)
 957      18
 232:Src/findwayBases.cpp ****             l2 = 0;
 958              		.loc 1 232 13 is_stmt 1 view .LVU307
 959              	.LVL85:
 233:Src/findwayBases.cpp ****             inter2 = {0, 0};
 960              		.loc 1 233 13 view .LVU308
 234:Src/findwayBases.cpp ****         }
 961              		.loc 1 234 13 view .LVU309
 962 069a E9ACFDFF 		jmp	.L98
 962      FF
 963              	.LVL86:
 964              	.L115:
 324:Src/findwayBases.cpp **** 
 965              		.loc 1 324 1 is_stmt 0 view .LVU310
 966 069f E8000000 		call	__stack_chk_fail@PLT
 966      00
 967              	.LVL87:
 968              		.cfi_endproc
 969              	.LFE1727:
 971              		.globl	_Z12createCoordsff
 973              	_Z12createCoordsff:
 974              	.LVL88:
 975              	.LFB1735:
 367:Src/findwayBases.cpp ****     struct coords ret;
 976              		.loc 1 367 1 is_stmt 1 view -0
GAS LISTING /tmp/ccEa7iXV.s 			page 46


 977              		.cfi_startproc
 368:Src/findwayBases.cpp ****     ret.x = x;
 978              		.loc 1 368 5 view .LVU312
 369:Src/findwayBases.cpp ****     ret.y = y;
 979              		.loc 1 369 5 view .LVU313
 370:Src/findwayBases.cpp ****     return ret;
 980              		.loc 1 370 5 view .LVU314
 370:Src/findwayBases.cpp ****     return ret;
 981              		.loc 1 370 11 is_stmt 0 view .LVU315
 982 06a4 660F7EC8 		movd	%xmm1, %eax
 983 06a8 4889C2   		movq	%rax, %rdx
 984 06ab 48C1E220 		salq	$32, %rdx
 985 06af 660F7EC0 		movd	%xmm0, %eax
 986              	.LVL89:
 370:Src/findwayBases.cpp ****     return ret;
 987              		.loc 1 370 11 view .LVU316
 988 06b3 4809D0   		orq	%rdx, %rax
 989              	.LVL90:
 371:Src/findwayBases.cpp **** }
 990              		.loc 1 371 5 is_stmt 1 view .LVU317
 372:Src/findwayBases.cpp **** 
 991              		.loc 1 372 1 is_stmt 0 view .LVU318
 992 06b6 66480F6E 		movq	%rax, %xmm0
 992      C0
 993              	.LVL91:
 372:Src/findwayBases.cpp **** 
 994              		.loc 1 372 1 view .LVU319
 995 06bb C3       		ret
 996              		.cfi_endproc
 997              	.LFE1735:
 999              		.globl	_Z17getCoordsOfCornerPK8obstacleh
 1001              	_Z17getCoordsOfCornerPK8obstacleh:
 1002              	.LVL92:
 1003              	.LFB1740:
 394:Src/findwayBases.cpp ****     struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 1004              		.loc 1 394 1 is_stmt 1 view -0
 1005              		.cfi_startproc
 394:Src/findwayBases.cpp ****     struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 1006              		.loc 1 394 1 is_stmt 0 view .LVU321
 1007 06bc 55       		pushq	%rbp
 1008              		.cfi_def_cfa_offset 16
 1009              		.cfi_offset 6, -16
 1010 06bd 53       		pushq	%rbx
 1011              		.cfi_def_cfa_offset 24
 1012              		.cfi_offset 3, -24
 1013 06be 4883EC08 		subq	$8, %rsp
 1014              		.cfi_def_cfa_offset 32
 1015 06c2 4889FD   		movq	%rdi, %rbp
 1016 06c5 89F3     		movl	%esi, %ebx
 395:Src/findwayBases.cpp ****     switch (corner) {
 1017              		.loc 1 395 5 is_stmt 1 view .LVU322
 395:Src/findwayBases.cpp ****     switch (corner) {
 1018              		.loc 1 395 48 is_stmt 0 view .LVU323
 1019 06c7 BF080000 		movl	$8, %edi
 1019      00
 1020              	.LVL93:
 395:Src/findwayBases.cpp ****     switch (corner) {
GAS LISTING /tmp/ccEa7iXV.s 			page 47


 1021              		.loc 1 395 48 view .LVU324
 1022 06cc E8000000 		call	malloc@PLT
 1022      00
 1023              	.LVL94:
 396:Src/findwayBases.cpp ****         case CORNER_LEFT_BOT:
 1024              		.loc 1 396 5 is_stmt 1 view .LVU325
 1025 06d1 80FB02   		cmpb	$2, %bl
 1026 06d4 0F84CF00 		je	.L118
 1026      0000
 1027 06da 774E     		ja	.L119
 1028 06dc 84DB     		testb	%bl, %bl
 1029 06de 0F848800 		je	.L120
 1029      0000
 1030 06e4 80FB01   		cmpb	$1, %bl
 1031 06e7 0F85B500 		jne	.L117
 1031      0000
 403:Src/findwayBases.cpp ****         {
 1032              		.loc 1 403 9 view .LVU326
 404:Src/findwayBases.cpp ****             ret->x = obst->c->x - CONST;
 1033              		.loc 1 404 9 view .LVU327
 405:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1034              		.loc 1 405 13 view .LVU328
 405:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1035              		.loc 1 405 28 is_stmt 0 view .LVU329
 1036 06ed 488B5500 		movq	0(%rbp), %rdx
 405:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1037              		.loc 1 405 31 view .LVU330
 1038 06f1 660FEFC9 		pxor	%xmm1, %xmm1
 1039 06f5 F30F5A0A 		cvtss2sd	(%rdx), %xmm1
 405:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1040              		.loc 1 405 33 view .LVU331
 1041 06f9 F20F1015 		movsd	.LC5(%rip), %xmm2
 1041      00000000 
 1042 0701 F20F5CCA 		subsd	%xmm2, %xmm1
 1043 0705 F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
 405:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1044              		.loc 1 405 20 view .LVU332
 1045 0709 F30F1108 		movss	%xmm1, (%rax)
 406:Src/findwayBases.cpp ****             break;
 1046              		.loc 1 406 13 is_stmt 1 view .LVU333
 406:Src/findwayBases.cpp ****             break;
 1047              		.loc 1 406 41 is_stmt 0 view .LVU334
 1048 070d F30F1045 		movss	40(%rbp), %xmm0
 1048      28
 406:Src/findwayBases.cpp ****             break;
 1049              		.loc 1 406 33 view .LVU335
 1050 0712 F30F5842 		addss	4(%rdx), %xmm0
 1050      04
 1051 0717 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 406:Src/findwayBases.cpp ****             break;
 1052              		.loc 1 406 43 view .LVU336
 1053 071b F20F58C2 		addsd	%xmm2, %xmm0
 1054 071f F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 406:Src/findwayBases.cpp ****             break;
 1055              		.loc 1 406 20 view .LVU337
 1056 0723 F30F1140 		movss	%xmm0, 4(%rax)
 1056      04
GAS LISTING /tmp/ccEa7iXV.s 			page 48


 407:Src/findwayBases.cpp ****         }
 1057              		.loc 1 407 13 is_stmt 1 view .LVU338
 1058 0728 EB78     		jmp	.L117
 1059              	.L119:
 396:Src/findwayBases.cpp ****         case CORNER_LEFT_BOT:
 1060              		.loc 1 396 5 is_stmt 0 view .LVU339
 1061 072a 80FB03   		cmpb	$3, %bl
 1062 072d 7573     		jne	.L117
 409:Src/findwayBases.cpp ****         {
 1063              		.loc 1 409 9 is_stmt 1 view .LVU340
 410:Src/findwayBases.cpp ****             ret->x = obst->c->x + obst->a + CONST;
 1064              		.loc 1 410 9 view .LVU341
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1065              		.loc 1 411 13 view .LVU342
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1066              		.loc 1 411 28 is_stmt 0 view .LVU343
 1067 072f 488B5500 		movq	0(%rbp), %rdx
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1068              		.loc 1 411 41 view .LVU344
 1069 0733 F30F1045 		movss	40(%rbp), %xmm0
 1069      28
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1070              		.loc 1 411 33 view .LVU345
 1071 0738 F30F5802 		addss	(%rdx), %xmm0
 1072 073c F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1073              		.loc 1 411 43 view .LVU346
 1074 0740 F20F100D 		movsd	.LC5(%rip), %xmm1
 1074      00000000 
 1075 0748 F20F58C1 		addsd	%xmm1, %xmm0
 1076 074c F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 411:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1077              		.loc 1 411 20 view .LVU347
 1078 0750 F30F1100 		movss	%xmm0, (%rax)
 412:Src/findwayBases.cpp ****             break;
 1079              		.loc 1 412 13 is_stmt 1 view .LVU348
 412:Src/findwayBases.cpp ****             break;
 1080              		.loc 1 412 31 is_stmt 0 view .LVU349
 1081 0754 660FEFC0 		pxor	%xmm0, %xmm0
 1082 0758 F30F5A42 		cvtss2sd	4(%rdx), %xmm0
 1082      04
 412:Src/findwayBases.cpp ****             break;
 1083              		.loc 1 412 33 view .LVU350
 1084 075d F20F5CC1 		subsd	%xmm1, %xmm0
 1085 0761 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 412:Src/findwayBases.cpp ****             break;
 1086              		.loc 1 412 20 view .LVU351
 1087 0765 F30F1140 		movss	%xmm0, 4(%rax)
 1087      04
 413:Src/findwayBases.cpp ****         }
 1088              		.loc 1 413 13 is_stmt 1 view .LVU352
 1089 076a EB36     		jmp	.L117
 1090              	.L120:
 397:Src/findwayBases.cpp ****         {
 1091              		.loc 1 397 9 view .LVU353
 398:Src/findwayBases.cpp ****             ret->x = obst->c->x - CONST;
 1092              		.loc 1 398 9 view .LVU354
GAS LISTING /tmp/ccEa7iXV.s 			page 49


 399:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1093              		.loc 1 399 13 view .LVU355
 399:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1094              		.loc 1 399 28 is_stmt 0 view .LVU356
 1095 076c 488B5500 		movq	0(%rbp), %rdx
 399:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1096              		.loc 1 399 31 view .LVU357
 1097 0770 660FEFC0 		pxor	%xmm0, %xmm0
 1098 0774 F30F5A02 		cvtss2sd	(%rdx), %xmm0
 399:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1099              		.loc 1 399 33 view .LVU358
 1100 0778 F20F100D 		movsd	.LC5(%rip), %xmm1
 1100      00000000 
 1101 0780 F20F5CC1 		subsd	%xmm1, %xmm0
 1102 0784 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 399:Src/findwayBases.cpp ****             ret->y = obst->c->y - CONST;
 1103              		.loc 1 399 20 view .LVU359
 1104 0788 F30F1100 		movss	%xmm0, (%rax)
 400:Src/findwayBases.cpp ****             break;
 1105              		.loc 1 400 13 is_stmt 1 view .LVU360
 400:Src/findwayBases.cpp ****             break;
 1106              		.loc 1 400 31 is_stmt 0 view .LVU361
 1107 078c 660FEFC0 		pxor	%xmm0, %xmm0
 1108 0790 F30F5A42 		cvtss2sd	4(%rdx), %xmm0
 1108      04
 400:Src/findwayBases.cpp ****             break;
 1109              		.loc 1 400 33 view .LVU362
 1110 0795 F20F5CC1 		subsd	%xmm1, %xmm0
 1111 0799 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 400:Src/findwayBases.cpp ****             break;
 1112              		.loc 1 400 20 view .LVU363
 1113 079d F30F1140 		movss	%xmm0, 4(%rax)
 1113      04
 401:Src/findwayBases.cpp ****         }
 1114              		.loc 1 401 13 is_stmt 1 view .LVU364
 1115              	.L117:
 423:Src/findwayBases.cpp **** 
 1116              		.loc 1 423 1 is_stmt 0 view .LVU365
 1117 07a2 4883C408 		addq	$8, %rsp
 1118              		.cfi_remember_state
 1119              		.cfi_def_cfa_offset 24
 1120 07a6 5B       		popq	%rbx
 1121              		.cfi_def_cfa_offset 16
 1122 07a7 5D       		popq	%rbp
 1123              		.cfi_def_cfa_offset 8
 1124              	.LVL95:
 423:Src/findwayBases.cpp **** 
 1125              		.loc 1 423 1 view .LVU366
 1126 07a8 C3       		ret
 1127              	.LVL96:
 1128              	.L118:
 1129              		.cfi_restore_state
 415:Src/findwayBases.cpp ****         {
 1130              		.loc 1 415 9 is_stmt 1 view .LVU367
 416:Src/findwayBases.cpp ****             ret->x = obst->c->x + obst->a + CONST;
 1131              		.loc 1 416 9 view .LVU368
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
GAS LISTING /tmp/ccEa7iXV.s 			page 50


 1132              		.loc 1 417 13 view .LVU369
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1133              		.loc 1 417 28 is_stmt 0 view .LVU370
 1134 07a9 488B5500 		movq	0(%rbp), %rdx
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1135              		.loc 1 417 41 view .LVU371
 1136 07ad F30F1045 		movss	40(%rbp), %xmm0
 1136      28
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1137              		.loc 1 417 33 view .LVU372
 1138 07b2 0F28C8   		movaps	%xmm0, %xmm1
 1139 07b5 F30F580A 		addss	(%rdx), %xmm1
 1140 07b9 F30F5AC9 		cvtss2sd	%xmm1, %xmm1
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1141              		.loc 1 417 43 view .LVU373
 1142 07bd F20F1015 		movsd	.LC5(%rip), %xmm2
 1142      00000000 
 1143 07c5 F20F58CA 		addsd	%xmm2, %xmm1
 1144 07c9 F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
 417:Src/findwayBases.cpp ****             ret->y = obst->c->y + obst->a + CONST;
 1145              		.loc 1 417 20 view .LVU374
 1146 07cd F30F1108 		movss	%xmm1, (%rax)
 418:Src/findwayBases.cpp ****             break;
 1147              		.loc 1 418 13 is_stmt 1 view .LVU375
 418:Src/findwayBases.cpp ****             break;
 1148              		.loc 1 418 33 is_stmt 0 view .LVU376
 1149 07d1 F30F5842 		addss	4(%rdx), %xmm0
 1149      04
 1150 07d6 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 418:Src/findwayBases.cpp ****             break;
 1151              		.loc 1 418 43 view .LVU377
 1152 07da F20F58C2 		addsd	%xmm2, %xmm0
 1153 07de F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 418:Src/findwayBases.cpp ****             break;
 1154              		.loc 1 418 20 view .LVU378
 1155 07e2 F30F1140 		movss	%xmm0, 4(%rax)
 1155      04
 419:Src/findwayBases.cpp ****         }
 1156              		.loc 1 419 13 is_stmt 1 view .LVU379
 422:Src/findwayBases.cpp **** }
 1157              		.loc 1 422 5 view .LVU380
 422:Src/findwayBases.cpp **** }
 1158              		.loc 1 422 12 is_stmt 0 view .LVU381
 1159 07e7 EBB9     		jmp	.L117
 1160              		.cfi_endproc
 1161              	.LFE1740:
 1163              		.globl	_Z14createObstaclefff
 1165              	_Z14createObstaclefff:
 1166              	.LVL97:
 1167              	.LFB1736:
 375:Src/findwayBases.cpp ****     struct obstacle ret;
 1168              		.loc 1 375 1 is_stmt 1 view -0
 1169              		.cfi_startproc
 375:Src/findwayBases.cpp ****     struct obstacle ret;
 1170              		.loc 1 375 1 is_stmt 0 view .LVU383
 1171 07e9 4155     		pushq	%r13
 1172              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccEa7iXV.s 			page 51


 1173              		.cfi_offset 13, -16
 1174 07eb 4154     		pushq	%r12
 1175              		.cfi_def_cfa_offset 24
 1176              		.cfi_offset 12, -24
 1177 07ed 55       		pushq	%rbp
 1178              		.cfi_def_cfa_offset 32
 1179              		.cfi_offset 6, -32
 1180 07ee 53       		pushq	%rbx
 1181              		.cfi_def_cfa_offset 40
 1182              		.cfi_offset 3, -40
 1183 07ef 4883EC08 		subq	$8, %rsp
 1184              		.cfi_def_cfa_offset 48
 1185 07f3 4889FB   		movq	%rdi, %rbx
 1186 07f6 66410F7E 		movd	%xmm0, %r13d
 1186      C5
 1187 07fb 66410F7E 		movd	%xmm1, %r12d
 1187      CC
 1188 0800 660F7ED5 		movd	%xmm2, %ebp
 376:Src/findwayBases.cpp ****     ret.c = (struct coords*)malloc(sizeof(struct coords));
 1189              		.loc 1 376 5 is_stmt 1 view .LVU384
 376:Src/findwayBases.cpp ****     ret.c = (struct coords*)malloc(sizeof(struct coords));
 1190              		.loc 1 376 21 is_stmt 0 view .LVU385
 1191 0804 48C74708 		movq	$0, 8(%rdi)
 1191      00000000 
 1192 080c 48C74710 		movq	$0, 16(%rdi)
 1192      00000000 
 1193 0814 48C74718 		movq	$0, 24(%rdi)
 1193      00000000 
 1194 081c 48C74720 		movq	$0, 32(%rdi)
 1194      00000000 
 377:Src/findwayBases.cpp ****     ret.c->x = x;
 1195              		.loc 1 377 5 is_stmt 1 view .LVU386
 377:Src/findwayBases.cpp ****     ret.c->x = x;
 1196              		.loc 1 377 35 is_stmt 0 view .LVU387
 1197 0824 BF080000 		movl	$8, %edi
 1197      00
 1198              	.LVL98:
 377:Src/findwayBases.cpp ****     ret.c->x = x;
 1199              		.loc 1 377 35 view .LVU388
 1200 0829 E8000000 		call	malloc@PLT
 1200      00
 1201              	.LVL99:
 377:Src/findwayBases.cpp ****     ret.c->x = x;
 1202              		.loc 1 377 11 view .LVU389
 1203 082e 488903   		movq	%rax, (%rbx)
 378:Src/findwayBases.cpp ****     ret.c->y = y;
 1204              		.loc 1 378 5 is_stmt 1 view .LVU390
 378:Src/findwayBases.cpp ****     ret.c->y = y;
 1205              		.loc 1 378 14 is_stmt 0 view .LVU391
 1206 0831 448928   		movl	%r13d, (%rax)
 379:Src/findwayBases.cpp ****     ret.a    = a;
 1207              		.loc 1 379 5 is_stmt 1 view .LVU392
 379:Src/findwayBases.cpp ****     ret.a    = a;
 1208              		.loc 1 379 14 is_stmt 0 view .LVU393
 1209 0834 44896004 		movl	%r12d, 4(%rax)
 380:Src/findwayBases.cpp ****     for(uint8_t i = 0; i < 4; i++)
 1210              		.loc 1 380 5 is_stmt 1 view .LVU394
GAS LISTING /tmp/ccEa7iXV.s 			page 52


 380:Src/findwayBases.cpp ****     for(uint8_t i = 0; i < 4; i++)
 1211              		.loc 1 380 14 is_stmt 0 view .LVU395
 1212 0838 896B28   		movl	%ebp, 40(%rbx)
 381:Src/findwayBases.cpp ****     {
 1213              		.loc 1 381 5 is_stmt 1 view .LVU396
 1214              	.LVL100:
 1215              	.LBB648:
 381:Src/findwayBases.cpp ****     {
 1216              		.loc 1 381 17 is_stmt 0 view .LVU397
 1217 083b BD000000 		movl	$0, %ebp
 1217      00
 1218              	.LVL101:
 381:Src/findwayBases.cpp ****     {
 1219              		.loc 1 381 17 view .LVU398
 1220 0840 EB33     		jmp	.L127
 1221              	.LVL102:
 1222              	.L129:
 383:Src/findwayBases.cpp ****         ret.corners[i]->c = *getCoordsOfCorner(&ret, i);
 1223              		.loc 1 383 9 is_stmt 1 discriminator 2 view .LVU399
 383:Src/findwayBases.cpp ****         ret.corners[i]->c = *getCoordsOfCorner(&ret, i);
 1224              		.loc 1 383 21 is_stmt 0 discriminator 2 view .LVU400
 1225 0842 440FB6ED 		movzbl	%bpl, %r13d
 383:Src/findwayBases.cpp ****         ret.corners[i]->c = *getCoordsOfCorner(&ret, i);
 1226              		.loc 1 383 52 discriminator 2 view .LVU401
 1227 0846 BF280000 		movl	$40, %edi
 1227      00
 1228 084b E8000000 		call	malloc@PLT
 1228      00
 1229              	.LVL103:
 383:Src/findwayBases.cpp ****         ret.corners[i]->c = *getCoordsOfCorner(&ret, i);
 1230              		.loc 1 383 24 discriminator 2 view .LVU402
 1231 0850 4D63E5   		movslq	%r13d, %r12
 1232 0853 4A8944E3 		movq	%rax, 8(%rbx,%r12,8)
 1232      08
 384:Src/findwayBases.cpp ****     }
 1233              		.loc 1 384 9 is_stmt 1 discriminator 2 view .LVU403
 384:Src/findwayBases.cpp ****     }
 1234              		.loc 1 384 47 is_stmt 0 discriminator 2 view .LVU404
 1235 0858 4489EE   		movl	%r13d, %esi
 1236 085b 4889DF   		movq	%rbx, %rdi
 1237 085e E8000000 		call	_Z17getCoordsOfCornerPK8obstacleh
 1237      00
 1238              	.LVL104:
 1239 0863 4889C2   		movq	%rax, %rdx
 384:Src/findwayBases.cpp ****     }
 1240              		.loc 1 384 22 discriminator 2 view .LVU405
 1241 0866 4A8B44E3 		movq	8(%rbx,%r12,8), %rax
 1241      08
 384:Src/findwayBases.cpp ****     }
 1242              		.loc 1 384 27 discriminator 2 view .LVU406
 1243 086b 488B12   		movq	(%rdx), %rdx
 1244 086e 48895010 		movq	%rdx, 16(%rax)
 381:Src/findwayBases.cpp ****     {
 1245              		.loc 1 381 5 is_stmt 1 discriminator 2 view .LVU407
 1246 0872 83C501   		addl	$1, %ebp
 1247              	.LVL105:
 1248              	.L127:
GAS LISTING /tmp/ccEa7iXV.s 			page 53


 381:Src/findwayBases.cpp ****     {
 1249              		.loc 1 381 26 discriminator 3 view .LVU408
 1250 0875 4080FD03 		cmpb	$3, %bpl
 1251 0879 76C7     		jbe	.L129
 1252              	.LBE648:
 388:Src/findwayBases.cpp **** 
 1253              		.loc 1 388 1 is_stmt 0 view .LVU409
 1254 087b 4889D8   		movq	%rbx, %rax
 1255 087e 4883C408 		addq	$8, %rsp
 1256              		.cfi_def_cfa_offset 40
 1257 0882 5B       		popq	%rbx
 1258              		.cfi_def_cfa_offset 32
 1259              	.LVL106:
 388:Src/findwayBases.cpp **** 
 1260              		.loc 1 388 1 view .LVU410
 1261 0883 5D       		popq	%rbp
 1262              		.cfi_def_cfa_offset 24
 1263              	.LVL107:
 388:Src/findwayBases.cpp **** 
 1264              		.loc 1 388 1 view .LVU411
 1265 0884 415C     		popq	%r12
 1266              		.cfi_def_cfa_offset 16
 1267 0886 415D     		popq	%r13
 1268              		.cfi_def_cfa_offset 8
 1269 0888 C3       		ret
 1270              		.cfi_endproc
 1271              	.LFE1736:
 1273              		.globl	_Z8getPointPK8obstacleh
 1275              	_Z8getPointPK8obstacleh:
 1276              	.LVL108:
 1277              	.LFB1741:
 427:Src/findwayBases.cpp ****     return obst->corners[corner];
 1278              		.loc 1 427 1 is_stmt 1 view -0
 1279              		.cfi_startproc
 428:Src/findwayBases.cpp **** }
 1280              		.loc 1 428 5 view .LVU413
 428:Src/findwayBases.cpp **** }
 1281              		.loc 1 428 32 is_stmt 0 view .LVU414
 1282 0889 400FB6F6 		movzbl	%sil, %esi
 428:Src/findwayBases.cpp **** }
 1283              		.loc 1 428 32 view .LVU415
 1284 088d 488B44F7 		movq	8(%rdi,%rsi,8), %rax
 1284      08
 429:Src/findwayBases.cpp **** 
 1285              		.loc 1 429 1 view .LVU416
 1286 0892 C3       		ret
 1287              		.cfi_endproc
 1288              	.LFE1741:
 1290              		.globl	_Z15hasIntersectionPK8obstaclePK4vect
 1292              	_Z15hasIntersectionPK8obstaclePK4vect:
 1293              	.LVL109:
 1294              	.LFB1742:
 434:Src/findwayBases.cpp ****     struct coords c = getIntersection(obst, v);
 1295              		.loc 1 434 1 is_stmt 1 view -0
 1296              		.cfi_startproc
 434:Src/findwayBases.cpp ****     struct coords c = getIntersection(obst, v);
 1297              		.loc 1 434 1 is_stmt 0 view .LVU418
GAS LISTING /tmp/ccEa7iXV.s 			page 54


 1298 0893 53       		pushq	%rbx
 1299              		.cfi_def_cfa_offset 16
 1300              		.cfi_offset 3, -16
 1301 0894 4889F3   		movq	%rsi, %rbx
 435:Src/findwayBases.cpp ****     // std::cout << "obst: " << obst->c->x << ":" << obst->c->y << "; vect: " << v->c->x << ":" << 
 1302              		.loc 1 435 5 is_stmt 1 view .LVU419
 435:Src/findwayBases.cpp ****     // std::cout << "obst: " << obst->c->x << ":" << obst->c->y << "; vect: " << v->c->x << ":" << 
 1303              		.loc 1 435 46 is_stmt 0 view .LVU420
 1304 0897 E8000000 		call	_Z15getIntersectionPK8obstaclePK4vect
 1304      00
 1305              	.LVL110:
 435:Src/findwayBases.cpp ****     // std::cout << "obst: " << obst->c->x << ":" << obst->c->y << "; vect: " << v->c->x << ":" << 
 1306              		.loc 1 435 46 view .LVU421
 1307 089c 66480F7E 		movq	%xmm0, %rax
 1307      C0
 1308              	.LVL111:
 437:Src/findwayBases.cpp ****     {
 1309              		.loc 1 437 5 is_stmt 1 view .LVU422
 437:Src/findwayBases.cpp ****     {
 1310              		.loc 1 437 45 is_stmt 0 view .LVU423
 1311 08a1 0F2E0500 		ucomiss	.LC0(%rip), %xmm0
 1311      000000
 1312 08a8 7A18     		jp	.L132
 1313 08aa 7516     		jne	.L132
 1314              	.LVL112:
 437:Src/findwayBases.cpp ****     {
 1315              		.loc 1 437 23 discriminator 1 view .LVU424
 1316 08ac 66480F7E 		movq	%xmm0, %rcx
 1316      C1
 1317 08b1 48C1E920 		shrq	$32, %rcx
 1318 08b5 660F6EC9 		movd	%ecx, %xmm1
 437:Src/findwayBases.cpp ****     {
 1319              		.loc 1 437 18 discriminator 1 view .LVU425
 1320 08b9 0F2E0D00 		ucomiss	.LC0(%rip), %xmm1
 1320      000000
 1321 08c0 7B2C     		jnp	.L150
 1322              	.L132:
 437:Src/findwayBases.cpp ****     {
 1323              		.loc 1 437 42 discriminator 4 view .LVU426
 1324 08c2 488B13   		movq	(%rbx), %rdx
 1325              	.LVL113:
 1326              	.LBB649:
 1327              	.LBI649:
  27:Includes/findwayBases.hpp ****     {
 1328              		.loc 5 27 10 is_stmt 1 discriminator 4 view .LVU427
 1329              	.LBB650:
  29:Includes/findwayBases.hpp ****     }
 1330              		.loc 5 29 9 discriminator 4 view .LVU428
  29:Includes/findwayBases.hpp ****     }
 1331              		.loc 5 29 25 is_stmt 0 discriminator 4 view .LVU429
 1332 08c5 F30F100A 		movss	(%rdx), %xmm1
  29:Includes/findwayBases.hpp ****     }
 1333              		.loc 5 29 27 discriminator 4 view .LVU430
 1334 08c9 0F2EC1   		ucomiss	%xmm1, %xmm0
 1335 08cc 7A29     		jp	.L136
 1336 08ce 7527     		jne	.L136
 1337              	.LVL114:
GAS LISTING /tmp/ccEa7iXV.s 			page 55


  29:Includes/findwayBases.hpp ****     }
 1338              		.loc 5 29 30 view .LVU431
 1339 08d0 4889C1   		movq	%rax, %rcx
 1340 08d3 48C1E920 		shrq	$32, %rcx
 1341 08d7 660F6ED1 		movd	%ecx, %xmm2
  29:Includes/findwayBases.hpp ****     }
 1342              		.loc 5 29 38 view .LVU432
 1343 08db F30F105A 		movss	4(%rdx), %xmm3
 1343      04
  29:Includes/findwayBases.hpp ****     }
 1344              		.loc 5 29 27 view .LVU433
 1345 08e0 0F2ED3   		ucomiss	%xmm3, %xmm2
 1346 08e3 7A12     		jp	.L136
 1347 08e5 7510     		jne	.L136
 1348              	.LBE650:
 1349              	.LBE649:
 440:Src/findwayBases.cpp ****     }
 1350              		.loc 1 440 16 view .LVU434
 1351 08e7 B8000000 		movl	$0, %eax
 1351      00
 1352 08ec EB41     		jmp	.L131
 1353              	.LVL115:
 1354              	.L150:
 437:Src/findwayBases.cpp ****     {
 1355              		.loc 1 437 18 discriminator 1 view .LVU435
 1356 08ee 75D2     		jne	.L132
 440:Src/findwayBases.cpp ****     }
 1357              		.loc 1 440 16 view .LVU436
 1358 08f0 B8000000 		movl	$0, %eax
 1358      00
 1359 08f5 EB38     		jmp	.L131
 1360              	.LVL116:
 1361              	.L136:
 437:Src/findwayBases.cpp ****     {
 1362              		.loc 1 437 57 view .LVU437
 1363 08f7 F30F584B 		addss	8(%rbx), %xmm1
 1363      08
 437:Src/findwayBases.cpp ****     {
 1364              		.loc 1 437 45 view .LVU438
 1365 08fc 0F2EC1   		ucomiss	%xmm1, %xmm0
 1366 08ff 7A29     		jp	.L143
 1367 0901 7527     		jne	.L143
 437:Src/findwayBases.cpp ****     {
 1368              		.loc 1 437 95 discriminator 7 view .LVU439
 1369 0903 F30F104A 		movss	4(%rdx), %xmm1
 1369      04
 437:Src/findwayBases.cpp ****     {
 1370              		.loc 1 437 87 discriminator 7 view .LVU440
 1371 0908 F30F584B 		addss	12(%rbx), %xmm1
 1371      0C
 437:Src/findwayBases.cpp ****     {
 1372              		.loc 1 437 103 discriminator 7 view .LVU441
 1373 090d 48C1E820 		shrq	$32, %rax
 1374              	.LVL117:
 437:Src/findwayBases.cpp ****     {
 1375              		.loc 1 437 103 discriminator 7 view .LVU442
 1376 0911 660F6EC0 		movd	%eax, %xmm0
GAS LISTING /tmp/ccEa7iXV.s 			page 56


 1377              	.LVL118:
 437:Src/findwayBases.cpp ****     {
 1378              		.loc 1 437 76 discriminator 7 view .LVU443
 1379 0915 0F2EC8   		ucomiss	%xmm0, %xmm1
 1380 0918 7A09     		jp	.L148
 1381 091a 7507     		jne	.L148
 440:Src/findwayBases.cpp ****     }
 1382              		.loc 1 440 16 view .LVU444
 1383 091c B8000000 		movl	$0, %eax
 1383      00
 1384 0921 EB0C     		jmp	.L131
 1385              	.L148:
 445:Src/findwayBases.cpp ****     }
 1386              		.loc 1 445 16 view .LVU445
 1387 0923 B8010000 		movl	$1, %eax
 1387      00
 1388 0928 EB05     		jmp	.L131
 1389              	.LVL119:
 1390              	.L143:
 445:Src/findwayBases.cpp ****     }
 1391              		.loc 1 445 16 view .LVU446
 1392 092a B8010000 		movl	$1, %eax
 1392      00
 1393              	.LVL120:
 1394              	.L131:
 447:Src/findwayBases.cpp **** 
 1395              		.loc 1 447 1 view .LVU447
 1396 092f 5B       		popq	%rbx
 1397              		.cfi_def_cfa_offset 8
 1398              	.LVL121:
 447:Src/findwayBases.cpp **** 
 1399              		.loc 1 447 1 view .LVU448
 1400 0930 C3       		ret
 1401              		.cfi_endproc
 1402              	.LFE1742:
 1404              		.globl	_Z11getWayPriceP10graphPointS0_
 1406              	_Z11getWayPriceP10graphPointS0_:
 1407              	.LVL122:
 1408              	.LFB1744:
 484:Src/findwayBases.cpp ****     return sqrt(pow(start->c.x - end->c.x, 2) + pow(start->c.y - end->c.y, 2));
 1409              		.loc 1 484 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 484:Src/findwayBases.cpp ****     return sqrt(pow(start->c.x - end->c.x, 2) + pow(start->c.y - end->c.y, 2));
 1411              		.loc 1 484 1 is_stmt 0 view .LVU450
 1412 0931 55       		pushq	%rbp
 1413              		.cfi_def_cfa_offset 16
 1414              		.cfi_offset 6, -16
 1415 0932 53       		pushq	%rbx
 1416              		.cfi_def_cfa_offset 24
 1417              		.cfi_offset 3, -24
 1418 0933 4883EC18 		subq	$24, %rsp
 1419              		.cfi_def_cfa_offset 48
 1420 0937 4889FD   		movq	%rdi, %rbp
 1421 093a 4889F3   		movq	%rsi, %rbx
 485:Src/findwayBases.cpp **** }
 1422              		.loc 1 485 5 is_stmt 1 view .LVU451
 485:Src/findwayBases.cpp **** }
GAS LISTING /tmp/ccEa7iXV.s 			page 57


 1423              		.loc 1 485 30 is_stmt 0 view .LVU452
 1424 093d F30F1047 		movss	16(%rdi), %xmm0
 1424      10
 485:Src/findwayBases.cpp **** }
 1425              		.loc 1 485 20 view .LVU453
 1426 0942 F30F5C46 		subss	16(%rsi), %xmm0
 1426      10
 1427              	.LVL123:
 1428              	.LBB651:
 1429              	.LBI651:
 415:/usr/include/c++/9.2.0/cmath ****     {
 1430              		.loc 4 415 5 is_stmt 1 view .LVU454
 1431              	.LBB652:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1432              		.loc 4 418 17 is_stmt 0 view .LVU455
 1433 0947 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1434              	.LVL124:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1435              		.loc 4 418 17 view .LVU456
 1436 094b 488B0500 		movq	.LC6(%rip), %rax
 1436      000000
 1437 0952 66480F6E 		movq	%rax, %xmm1
 1437      C8
 1438 0957 E8000000 		call	pow@PLT
 1438      00
 1439              	.LVL125:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1440              		.loc 4 418 17 view .LVU457
 1441 095c F20F1144 		movsd	%xmm0, 8(%rsp)
 1441      2408
 1442              	.LVL126:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1443              		.loc 4 418 17 view .LVU458
 1444              	.LBE652:
 1445              	.LBE651:
 485:Src/findwayBases.cpp **** }
 1446              		.loc 1 485 62 view .LVU459
 1447 0962 F30F1045 		movss	20(%rbp), %xmm0
 1447      14
 485:Src/findwayBases.cpp **** }
 1448              		.loc 1 485 52 view .LVU460
 1449 0967 F30F5C43 		subss	20(%rbx), %xmm0
 1449      14
 1450              	.LVL127:
 1451              	.LBB653:
 1452              	.LBI653:
 415:/usr/include/c++/9.2.0/cmath ****     {
 1453              		.loc 4 415 5 is_stmt 1 view .LVU461
 1454              	.LBB654:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1455              		.loc 4 418 17 is_stmt 0 view .LVU462
 1456 096c F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1457              	.LVL128:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1458              		.loc 4 418 17 view .LVU463
 1459 0970 488B0500 		movq	.LC6(%rip), %rax
 1459      000000
GAS LISTING /tmp/ccEa7iXV.s 			page 58


 1460 0977 66480F6E 		movq	%rax, %xmm1
 1460      C8
 1461 097c E8000000 		call	pow@PLT
 1461      00
 1462              	.LVL129:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1463              		.loc 4 418 17 view .LVU464
 1464              	.LBE654:
 1465              	.LBE653:
 485:Src/findwayBases.cpp **** }
 1466              		.loc 1 485 16 view .LVU465
 1467 0981 F20F5844 		addsd	8(%rsp), %xmm0
 1467      2408
 1468 0987 E8000000 		call	sqrt@PLT
 1468      00
 1469              	.LVL130:
 485:Src/findwayBases.cpp **** }
 1470              		.loc 1 485 78 view .LVU466
 1471 098c F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 486:Src/findwayBases.cpp **** 
 1472              		.loc 1 486 1 view .LVU467
 1473 0990 4883C418 		addq	$24, %rsp
 1474              		.cfi_def_cfa_offset 24
 1475 0994 5B       		popq	%rbx
 1476              		.cfi_def_cfa_offset 16
 1477              	.LVL131:
 486:Src/findwayBases.cpp **** 
 1478              		.loc 1 486 1 view .LVU468
 1479 0995 5D       		popq	%rbp
 1480              		.cfi_def_cfa_offset 8
 1481              	.LVL132:
 486:Src/findwayBases.cpp **** 
 1482              		.loc 1 486 1 view .LVU469
 1483 0996 C3       		ret
 1484              		.cfi_endproc
 1485              	.LFE1744:
 1487              		.globl	_Z11getWayPriceP6coordsS0_
 1489              	_Z11getWayPriceP6coordsS0_:
 1490              	.LVL133:
 1491              	.LFB1746:
 489:Src/findwayBases.cpp ****     return sqrt(pow(start->x - end->x, 2) + pow(start->y - end->y, 2));
 1492              		.loc 1 489 1 is_stmt 1 view -0
 1493              		.cfi_startproc
 489:Src/findwayBases.cpp ****     return sqrt(pow(start->x - end->x, 2) + pow(start->y - end->y, 2));
 1494              		.loc 1 489 1 is_stmt 0 view .LVU471
 1495 0997 55       		pushq	%rbp
 1496              		.cfi_def_cfa_offset 16
 1497              		.cfi_offset 6, -16
 1498 0998 53       		pushq	%rbx
 1499              		.cfi_def_cfa_offset 24
 1500              		.cfi_offset 3, -24
 1501 0999 4883EC18 		subq	$24, %rsp
 1502              		.cfi_def_cfa_offset 48
 1503 099d 4889FD   		movq	%rdi, %rbp
 1504 09a0 4889F3   		movq	%rsi, %rbx
 490:Src/findwayBases.cpp **** }
 1505              		.loc 1 490 5 is_stmt 1 view .LVU472
GAS LISTING /tmp/ccEa7iXV.s 			page 59


 490:Src/findwayBases.cpp **** }
 1506              		.loc 1 490 28 is_stmt 0 view .LVU473
 1507 09a3 F30F1007 		movss	(%rdi), %xmm0
 490:Src/findwayBases.cpp **** }
 1508              		.loc 1 490 20 view .LVU474
 1509 09a7 F30F5C06 		subss	(%rsi), %xmm0
 1510              	.LVL134:
 1511              	.LBB655:
 1512              	.LBI655:
 415:/usr/include/c++/9.2.0/cmath ****     {
 1513              		.loc 4 415 5 is_stmt 1 view .LVU475
 1514              	.LBB656:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1515              		.loc 4 418 17 is_stmt 0 view .LVU476
 1516 09ab F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1517              	.LVL135:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1518              		.loc 4 418 17 view .LVU477
 1519 09af 488B0500 		movq	.LC6(%rip), %rax
 1519      000000
 1520 09b6 66480F6E 		movq	%rax, %xmm1
 1520      C8
 1521 09bb E8000000 		call	pow@PLT
 1521      00
 1522              	.LVL136:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1523              		.loc 4 418 17 view .LVU478
 1524 09c0 F20F1144 		movsd	%xmm0, 8(%rsp)
 1524      2408
 1525              	.LVL137:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1526              		.loc 4 418 17 view .LVU479
 1527              	.LBE656:
 1528              	.LBE655:
 490:Src/findwayBases.cpp **** }
 1529              		.loc 1 490 56 view .LVU480
 1530 09c6 F30F1045 		movss	4(%rbp), %xmm0
 1530      04
 490:Src/findwayBases.cpp **** }
 1531              		.loc 1 490 48 view .LVU481
 1532 09cb F30F5C43 		subss	4(%rbx), %xmm0
 1532      04
 1533              	.LVL138:
 1534              	.LBB657:
 1535              	.LBI657:
 415:/usr/include/c++/9.2.0/cmath ****     {
 1536              		.loc 4 415 5 is_stmt 1 view .LVU482
 1537              	.LBB658:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1538              		.loc 4 418 17 is_stmt 0 view .LVU483
 1539 09d0 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 1540              	.LVL139:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1541              		.loc 4 418 17 view .LVU484
 1542 09d4 488B0500 		movq	.LC6(%rip), %rax
 1542      000000
 1543 09db 66480F6E 		movq	%rax, %xmm1
GAS LISTING /tmp/ccEa7iXV.s 			page 60


 1543      C8
 1544 09e0 E8000000 		call	pow@PLT
 1544      00
 1545              	.LVL140:
 418:/usr/include/c++/9.2.0/cmath ****     }
 1546              		.loc 4 418 17 view .LVU485
 1547              	.LBE658:
 1548              	.LBE657:
 490:Src/findwayBases.cpp **** }
 1549              		.loc 1 490 16 view .LVU486
 1550 09e5 F20F5844 		addsd	8(%rsp), %xmm0
 1550      2408
 1551 09eb E8000000 		call	sqrt@PLT
 1551      00
 1552              	.LVL141:
 490:Src/findwayBases.cpp **** }
 1553              		.loc 1 490 70 view .LVU487
 1554 09f0 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 1555              		.loc 1 491 1 view .LVU488
 1556 09f4 4883C418 		addq	$24, %rsp
 1557              		.cfi_def_cfa_offset 24
 1558 09f8 5B       		popq	%rbx
 1559              		.cfi_def_cfa_offset 16
 1560              	.LVL142:
 1561              		.loc 1 491 1 view .LVU489
 1562 09f9 5D       		popq	%rbp
 1563              		.cfi_def_cfa_offset 8
 1564              	.LVL143:
 1565              		.loc 1 491 1 view .LVU490
 1566 09fa C3       		ret
 1567              		.cfi_endproc
 1568              	.LFE1746:
 1570              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 1571              		.align 8
 1572              	.LC7:
 1573 0000 62617369 		.string	"basic_string::_M_construct null not valid"
 1573      635F7374 
 1573      72696E67 
 1573      3A3A5F4D 
 1573      5F636F6E 
 1574              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 1575              		.align 2
 1576              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_i
 1578              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 1579              	.LVL144:
 1580              	.LFB2057:
 1581              		.file 6 "/usr/include/c++/9.2.0/bits/basic_string.tcc"
   1:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 61


  11:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.tcc ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.tcc **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/usr/include/c++/9.2.0/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  42:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  44:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  46:/usr/include/c++/9.2.0/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/bits/basic_string.tcc **** {
  48:/usr/include/c++/9.2.0/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  50:/usr/include/c++/9.2.0/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     void
  58:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
  61:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	return;
  63:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  64:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
  66:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (_M_is_local())
  67:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__s._M_is_local())
GAS LISTING /tmp/ccEa7iXV.s 			page 62


  68:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  69:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  71:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  79:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  81:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  86:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  87:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    else if (length())
  88:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
  89:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		return;
  94:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
  95:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
  96:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	else
  97:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
  98:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 105:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       else
 106:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 107:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 109:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 110:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 115:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  else
 116:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    {
 117:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    }
 122:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 124:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 63


 125:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 129:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 130:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     {
 135:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 140:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	{
 145:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	}
 150:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 151:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       // null char_type() element.
 153:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     }
 155:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 156:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 163:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 166:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 167:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 170:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 172:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    ++__beg;
 174:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 175:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 176:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 177:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 178:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      {
 180:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  {
GAS LISTING /tmp/ccEa7iXV.s 			page 64


 182:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_dispose();
 187:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		  }
 190:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		++__beg;
 192:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	      }
 193:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 194:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 195:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 196:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 197:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 199:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 200:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 202:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 203:/usr/include/c++/9.2.0/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/usr/include/c++/9.2.0/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       void
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 1582              		.loc 6 206 7 is_stmt 1 view -0
 1583              		.cfi_startproc
 1584              		.loc 6 206 7 is_stmt 0 view .LVU492
 1585 0000 4154     		pushq	%r12
 1586              		.cfi_def_cfa_offset 16
 1587              		.cfi_offset 12, -16
 1588 0002 55       		pushq	%rbp
 1589              		.cfi_def_cfa_offset 24
 1590              		.cfi_offset 6, -24
 1591 0003 53       		pushq	%rbx
 1592              		.cfi_def_cfa_offset 32
 1593              		.cfi_offset 3, -32
 1594 0004 4883EC10 		subq	$16, %rsp
 1595              		.cfi_def_cfa_offset 48
 1596 0008 4889FD   		movq	%rdi, %rbp
 1597 000b 4989F4   		movq	%rsi, %r12
 1598 000e 4889D3   		movq	%rdx, %rbx
 1599              		.loc 6 206 7 view .LVU493
 1600 0011 64488B04 		movq	%fs:40, %rax
 1600      25280000 
 1600      00
 1601 001a 48894424 		movq	%rax, 8(%rsp)
 1601      08
 1602 001f 31C0     		xorl	%eax, %eax
 207:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       {
 210:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 1603              		.loc 6 211 42 view .LVU494
 1604 0021 4885F6   		testq	%rsi, %rsi
 1605 0024 7429     		je	.L162
GAS LISTING /tmp/ccEa7iXV.s 			page 65


 1606              	.L156:
 1607              	.LVL145:
 1608              	.LBB659:
 1609              	.LBI659:
 1610              		.file 7 "/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h"
   1:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  16:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
GAS LISTING /tmp/ccEa7iXV.s 			page 66


  53:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
  74:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  77:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
  83:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  86:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	{
  89:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	}
  92:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
  94:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
  95:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     {
 101:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 106:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 107:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
GAS LISTING /tmp/ccEa7iXV.s 			page 67


 110:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 115:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** #endif
 121:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h **** 
 122:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   /**
 123:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 128:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 131:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *
 132:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   */
 135:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 1611              		.loc 7 138 5 is_stmt 1 view .LVU495
 1612              	.LBB660:
 1613              	.LBI660:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 1614              		.loc 7 98 5 view .LVU496
 1615              	.LBB661:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1616              		.loc 7 104 23 is_stmt 0 view .LVU497
 1617 0026 4C29E3   		subq	%r12, %rbx
 1618              	.LVL146:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1619              		.loc 7 104 23 view .LVU498
 1620              	.LBE661:
 1621              	.LBE660:
 1622              	.LBE659:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 1623              		.loc 6 215 12 view .LVU499
 1624 0029 48891C24 		movq	%rbx, (%rsp)
 216:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 1625              		.loc 6 217 2 view .LVU500
 1626 002d 4883FB0F 		cmpq	$15, %rbx
 1627 0031 772D     		ja	.L163
 1628              	.LVL147:
 1629              	.L157:
GAS LISTING /tmp/ccEa7iXV.s 			page 68


 1630              	.LBB662:
 1631              	.LBI662:
 1632              		.file 8 "/usr/include/c++/9.2.0/bits/basic_string.h"
   1:/usr/include/c++/9.2.0/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_string.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_string.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/basic_string.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  31:/usr/include/c++/9.2.0/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/9.2.0/bits/basic_string.h **** //
  33:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  34:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/9.2.0/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  37:/usr/include/c++/9.2.0/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  39:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  43:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <initializer_list>
  45:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  46:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  47:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/usr/include/c++/9.2.0/bits/basic_string.h **** # include <string_view>
  49:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
  50:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  51:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  52:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/9.2.0/bits/basic_string.h **** {
  54:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccEa7iXV.s 			page 69


  55:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  56:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
  59:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  62:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
  63:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
  64:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  65:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
  70:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
  76:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
  78:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
  79:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/usr/include/c++/9.2.0/bits/basic_string.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
  84:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
  85:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/usr/include/c++/9.2.0/bits/basic_string.h **** 							const_iterator;
  97:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 100:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 103:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
 104:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 108:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 111:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
GAS LISTING /tmp/ccEa7iXV.s 			page 70


 112:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 116:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
 122:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
 125:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
 127:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 128:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
 132:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
 133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
 141:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 144:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 145:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 152:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 162:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 163:/usr/include/c++/9.2.0/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 166:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type		_M_string_length;
 168:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 71


 169:/usr/include/c++/9.2.0/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 171:/usr/include/c++/9.2.0/bits/basic_string.h ****       union
 172:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 173:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
 176:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 177:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(pointer __p)
 179:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 181:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_length(size_type __length)
 183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 185:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const
 1633              		.loc 8 186 7 is_stmt 1 view .LVU501
 1634              	.LBB663:
 187:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1635              		.loc 8 187 28 is_stmt 0 view .LVU502
 1636 0033 488B7D00 		movq	0(%rbp), %rdi
 1637              	.LVL148:
 1638              		.loc 8 187 28 view .LVU503
 1639              	.LBE663:
 1640              	.LBE662:
 1641              	.LBB664:
 1642              	.LBI664:
 188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 189:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data()
 191:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 197:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 199:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_pointer
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_local_data() const
 201:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 202:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 207:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 209:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 213:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 72


 216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__n);
 217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 219:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 220:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_is_local() const
 222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 224:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Create & Destroy
 225:/usr/include/c++/9.2.0/bits/basic_string.h ****       pointer
 226:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 228:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_dispose()
 230:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local())
 232:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 234:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 235:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 239:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 242:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 243:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 245:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 246:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/usr/include/c++/9.2.0/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 249:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 250:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Integer>
 253:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 254:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 257:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 258:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 261:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 262:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 263:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
 268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 269:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InIterator>
 271:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 272:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
GAS LISTING /tmp/ccEa7iXV.s 			page 73


 273:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
 279:/usr/include/c++/9.2.0/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 282:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 283:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 285:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type&
 286:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator()
 287:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 288:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 289:/usr/include/c++/9.2.0/bits/basic_string.h ****       const allocator_type&
 290:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_get_allocator() const
 291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
 292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 293:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
 294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 295:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/usr/include/c++/9.2.0/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/usr/include/c++/9.2.0/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
 306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 308:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 309:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 310:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 312:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
 313:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
 317:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 319:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 327:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 329:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccEa7iXV.s 			page 74


 330:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 334:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 335:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
 337:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 343:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 354:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 355:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 357:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 358:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 360:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 362:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 364:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
 367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 369:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 371:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 372:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
 375:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
 376:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
 378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 382:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 383:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 386:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
GAS LISTING /tmp/ccEa7iXV.s 			page 75


 387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 391:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 395:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
 396:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 1643              		.loc 8 396 7 is_stmt 1 view .LVU504
 1644              	.LBB665:
 1645              	.LBI665:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1646              		.loc 8 346 7 view .LVU505
 1647              	.LBB666:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1648              		.loc 8 348 2 is_stmt 0 view .LVU506
 1649 0037 4883FB01 		cmpq	$1, %rbx
 1650 003b 7441     		je	.L164
 1651              	.LVL149:
 1652              	.LBB667:
 1653              	.LBI667:
 1654              		.file 9 "/usr/include/c++/9.2.0/bits/char_traits.h"
   1:/usr/include/c++/9.2.0/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/char_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/char_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/9.2.0/bits/char_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  31:/usr/include/c++/9.2.0/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/9.2.0/bits/char_traits.h **** //
  33:/usr/include/c++/9.2.0/bits/char_traits.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 76


  34:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/9.2.0/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  37:/usr/include/c++/9.2.0/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/9.2.0/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  43:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/usr/include/c++/9.2.0/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
  46:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  47:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/usr/include/c++/9.2.0/bits/char_traits.h **** {
  49:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  51:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  52:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  54:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  62:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct _Char_types
  63:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  64:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streampos  pos_type;
  66:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
  69:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  70:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  71:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
  72:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  74:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
  82:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
  86:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
  87:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits
  88:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
  89:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
GAS LISTING /tmp/ccEa7iXV.s 			page 77


  91:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  95:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
  98:/usr/include/c++/9.2.0/bits/char_traits.h **** 
  99:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 103:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 107:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 110:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s);
 112:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 113:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 117:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 119:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 120:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 122:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 123:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 125:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 129:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/usr/include/c++/9.2.0/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 133:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/9.2.0/bits/char_traits.h ****       eof()
 139:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 141:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/usr/include/c++/9.2.0/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/usr/include/c++/9.2.0/bits/char_traits.h ****     };
 145:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 146:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 147:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
GAS LISTING /tmp/ccEa7iXV.s 			page 78


 148:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 149:/usr/include/c++/9.2.0/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 151:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return -1;
 154:/usr/include/c++/9.2.0/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 1;
 156:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 157:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 158:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 159:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 160:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 162:/usr/include/c++/9.2.0/bits/char_traits.h ****     length(const char_type* __p)
 163:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 164:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::size_t __i = 0;
 165:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/usr/include/c++/9.2.0/bits/char_traits.h ****         ++__i;
 167:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i;
 168:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 169:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 170:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 171:/usr/include/c++/9.2.0/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 173:/usr/include/c++/9.2.0/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 175:/usr/include/c++/9.2.0/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/usr/include/c++/9.2.0/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/usr/include/c++/9.2.0/bits/char_traits.h ****           return __s + __i;
 178:/usr/include/c++/9.2.0/bits/char_traits.h ****       return 0;
 179:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 180:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 181:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 182:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 184:/usr/include/c++/9.2.0/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 186:/usr/include/c++/9.2.0/bits/char_traits.h ****       if (__n == 0)
 187:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __s1;
 188:/usr/include/c++/9.2.0/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/usr/include/c++/9.2.0/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 191:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 192:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 193:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
 195:/usr/include/c++/9.2.0/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 197:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s1;
 200:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 201:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 202:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 203:/usr/include/c++/9.2.0/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/usr/include/c++/9.2.0/bits/char_traits.h ****     char_traits<_CharT>::
GAS LISTING /tmp/ccEa7iXV.s 			page 79


 205:/usr/include/c++/9.2.0/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 207:/usr/include/c++/9.2.0/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/usr/include/c++/9.2.0/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __s;
 210:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 211:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 212:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/usr/include/c++/9.2.0/bits/char_traits.h **** } // namespace
 214:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 215:/usr/include/c++/9.2.0/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/usr/include/c++/9.2.0/bits/char_traits.h **** {
 217:/usr/include/c++/9.2.0/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 219:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/usr/include/c++/9.2.0/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 223:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  string are known at compile time.
 225:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __s  The string.
 226:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 227:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 229:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 230:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 233:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __s;
 235:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 237:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
 238:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__s++;
 240:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 242:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 243:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 244:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 245:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  known at compile time.
 247:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 250:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/usr/include/c++/9.2.0/bits/char_traits.h ****    */
 252:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<typename _CharT>
 253:/usr/include/c++/9.2.0/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/usr/include/c++/9.2.0/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 256:/usr/include/c++/9.2.0/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __a;
 258:/usr/include/c++/9.2.0/bits/char_traits.h ****       (void) __n;
 259:/usr/include/c++/9.2.0/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/usr/include/c++/9.2.0/bits/char_traits.h **** #else
GAS LISTING /tmp/ccEa7iXV.s 			page 80


 262:/usr/include/c++/9.2.0/bits/char_traits.h ****       size_t __i = 0;
 263:/usr/include/c++/9.2.0/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/usr/include/c++/9.2.0/bits/char_traits.h **** 	__i++;
 265:/usr/include/c++/9.2.0/bits/char_traits.h ****       return __i == __n;
 266:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 267:/usr/include/c++/9.2.0/bits/char_traits.h ****     }
 268:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 269:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 270:/usr/include/c++/9.2.0/bits/char_traits.h ****   // 21.1
 271:/usr/include/c++/9.2.0/bits/char_traits.h ****   /**
 272:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 274:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/usr/include/c++/9.2.0/bits/char_traits.h ****    *
 279:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/usr/include/c++/9.2.0/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/usr/include/c++/9.2.0/bits/char_traits.h ****   */
 283:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<class _CharT>
 284:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/usr/include/c++/9.2.0/bits/char_traits.h ****     { };
 286:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 287:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 288:/usr/include/c++/9.2.0/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/usr/include/c++/9.2.0/bits/char_traits.h ****   template<>
 290:/usr/include/c++/9.2.0/bits/char_traits.h ****     struct char_traits<char>
 291:/usr/include/c++/9.2.0/bits/char_traits.h ****     {
 292:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef char              char_type;
 293:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef int               int_type;
 294:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/usr/include/c++/9.2.0/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 298:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 301:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 302:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/usr/include/c++/9.2.0/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/usr/include/c++/9.2.0/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 306:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/usr/include/c++/9.2.0/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 309:/usr/include/c++/9.2.0/bits/char_traits.h **** 	// LWG 467.
 310:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/usr/include/c++/9.2.0/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 313:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 314:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/usr/include/c++/9.2.0/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 317:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 318:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
GAS LISTING /tmp/ccEa7iXV.s 			page 81


 319:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 325:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 327:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 328:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       length(const char_type* __s)
 330:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 331:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__constant_string_p(__s))
 333:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 335:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return __builtin_strlen(__s);
 336:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 337:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 338:/usr/include/c++/9.2.0/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/usr/include/c++/9.2.0/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 341:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 342:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return 0;
 343:/usr/include/c++/9.2.0/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/usr/include/c++/9.2.0/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/usr/include/c++/9.2.0/bits/char_traits.h **** #endif
 349:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 351:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 352:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 353:/usr/include/c++/9.2.0/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 355:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 356:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 357:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 359:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 360:/usr/include/c++/9.2.0/bits/char_traits.h ****       static char_type*
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 1655              		.loc 9 361 7 is_stmt 1 view .LVU507
 1656              	.LBB668:
 362:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	if (__n == 0)
 1657              		.loc 9 363 2 view .LVU508
 1658 003d 4885DB   		testq	%rbx, %rbx
 1659 0040 7443     		je	.L159
 364:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 365:/usr/include/c++/9.2.0/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 1660              		.loc 9 365 2 view .LVU509
 1661              		.loc 9 365 49 is_stmt 0 view .LVU510
 1662 0042 4889DA   		movq	%rbx, %rdx
 1663 0045 4C89E6   		movq	%r12, %rsi
 1664 0048 E8000000 		call	memcpy@PLT
GAS LISTING /tmp/ccEa7iXV.s 			page 82


 1664      00
 1665              	.LVL150:
 1666              		.loc 9 365 66 view .LVU511
 1667 004d EB36     		jmp	.L159
 1668              	.LVL151:
 1669              	.L162:
 1670              		.loc 9 365 66 view .LVU512
 1671              	.LBE668:
 1672              	.LBE667:
 1673              	.LBE666:
 1674              	.LBE665:
 1675              	.LBE664:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1676              		.loc 6 211 42 discriminator 1 view .LVU513
 1677 004f 4839D6   		cmpq	%rdx, %rsi
 1678 0052 74D2     		je	.L156
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1679              		.loc 6 212 28 view .LVU514
 1680 0054 488D3D00 		leaq	.LC7(%rip), %rdi
 1680      000000
 1681              	.LVL152:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1682              		.loc 6 212 28 view .LVU515
 1683 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 1683      00
 1684              	.LVL153:
 1685              	.L163:
 218:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 1686              		.loc 6 219 6 view .LVU516
 1687 0060 4889E6   		movq	%rsp, %rsi
 1688              	.LVL154:
 1689              		.loc 6 219 6 view .LVU517
 1690 0063 BA000000 		movl	$0, %edx
 1690      00
 1691              	.LVL155:
 1692              		.loc 6 219 6 view .LVU518
 1693 0068 4889EF   		movq	%rbp, %rdi
 1694              	.LVL156:
 1695              		.loc 6 219 6 view .LVU519
 1696 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 1696      00
 1697              	.LVL157:
 1698              	.LBB673:
 1699              	.LBI673:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1700              		.loc 8 178 7 is_stmt 1 view .LVU520
 1701              	.LBB674:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1702              		.loc 8 179 9 is_stmt 0 view .LVU521
 1703 0070 48894500 		movq	%rax, 0(%rbp)
 1704              	.LVL158:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1705              		.loc 8 179 9 view .LVU522
 1706              	.LBE674:
 1707              	.LBE673:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
GAS LISTING /tmp/ccEa7iXV.s 			page 83


 1708              		.loc 6 220 6 view .LVU523
 1709 0074 488B0424 		movq	(%rsp), %rax
 1710              	.LVL159:
 1711              	.LBB675:
 1712              	.LBI675:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1713              		.loc 8 210 7 is_stmt 1 view .LVU524
 1714              	.LBB676:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1715              		.loc 8 211 9 is_stmt 0 view .LVU525
 1716 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1717              		.loc 8 211 45 view .LVU526
 1718 007c EBB5     		jmp	.L157
 1719              	.LVL160:
 1720              	.L164:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1721              		.loc 8 211 45 view .LVU527
 1722              	.LBE676:
 1723              	.LBE675:
 1724              	.LBB677:
 1725              	.LBB672:
 1726              	.LBB671:
 1727              	.LBB669:
 1728              	.LBI669:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 1729              		.loc 9 299 7 is_stmt 1 view .LVU528
 1730              	.LBB670:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1731              		.loc 9 300 9 view .LVU529
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1732              		.loc 9 300 16 is_stmt 0 view .LVU530
 1733 007e 410FB604 		movzbl	(%r12), %eax
 1733      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1734              		.loc 9 300 14 view .LVU531
 1735 0083 8807     		movb	%al, (%rdi)
 1736              	.LVL161:
 1737              	.L159:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1738              		.loc 9 300 14 view .LVU532
 1739              	.LBE670:
 1740              	.LBE669:
 1741              	.LBE671:
 1742              	.LBE672:
 1743              	.LBE677:
 221:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 222:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 223:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__try
 225:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	__catch(...)
 227:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 228:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_dispose();
 229:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 231:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 84


 232:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 1744              		.loc 6 232 2 view .LVU533
 1745 0085 488B0424 		movq	(%rsp), %rax
 1746              	.LVL162:
 1747              	.LBB678:
 1748              	.LBI678:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1749              		.loc 8 214 7 is_stmt 1 view .LVU534
 1750              	.LBB679:
 1751              	.LBB680:
 1752              	.LBI680:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 1753              		.loc 8 182 7 view .LVU535
 1754              	.LBB681:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1755              		.loc 8 183 9 is_stmt 0 view .LVU536
 1756 0089 48894508 		movq	%rax, 8(%rbp)
 1757              	.LVL163:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1758              		.loc 8 183 9 view .LVU537
 1759              	.LBE681:
 1760              	.LBE680:
 1761              	.LBB682:
 1762              	.LBI682:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1763              		.loc 8 186 7 is_stmt 1 view .LVU538
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1764              		.loc 8 186 7 is_stmt 0 view .LVU539
 1765              	.LBE682:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 1766              		.loc 8 217 31 view .LVU540
 1767 008d 48034500 		addq	0(%rbp), %rax
 1768              	.LVL164:
 1769              	.LBB683:
 1770              	.LBI683:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 1771              		.loc 9 299 7 is_stmt 1 view .LVU541
 1772              	.LBB684:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1773              		.loc 9 300 9 view .LVU542
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1774              		.loc 9 300 14 is_stmt 0 view .LVU543
 1775 0091 C60000   		movb	$0, (%rax)
 1776              	.LVL165:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1777              		.loc 9 300 14 view .LVU544
 1778              	.LBE684:
 1779              	.LBE683:
 1780              	.LBE679:
 1781              	.LBE678:
 233:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 1782              		.loc 6 233 7 view .LVU545
 1783 0094 488B4424 		movq	8(%rsp), %rax
 1783      08
 1784 0099 64483304 		xorq	%fs:40, %rax
 1784      25280000 
 1784      00
GAS LISTING /tmp/ccEa7iXV.s 			page 85


 1785 00a2 7509     		jne	.L165
 1786 00a4 4883C410 		addq	$16, %rsp
 1787              		.cfi_remember_state
 1788              		.cfi_def_cfa_offset 32
 1789 00a8 5B       		popq	%rbx
 1790              		.cfi_def_cfa_offset 24
 1791 00a9 5D       		popq	%rbp
 1792              		.cfi_def_cfa_offset 16
 1793              	.LVL166:
 1794              		.loc 6 233 7 view .LVU546
 1795 00aa 415C     		popq	%r12
 1796              		.cfi_def_cfa_offset 8
 1797              	.LVL167:
 1798              		.loc 6 233 7 view .LVU547
 1799 00ac C3       		ret
 1800              	.LVL168:
 1801              	.L165:
 1802              		.cfi_restore_state
 1803              		.loc 6 233 7 view .LVU548
 1804 00ad E8000000 		call	__stack_chk_fail@PLT
 1804      00
 1805              	.LVL169:
 1806              		.cfi_endproc
 1807              	.LFE2057:
 1809              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 1810              		.align 2
 1811              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
 1813              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 1814              	.LVL170:
 1815              	.LFB2058:
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1816              		.loc 6 206 7 is_stmt 1 view -0
 1817              		.cfi_startproc
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1818              		.loc 6 206 7 is_stmt 0 view .LVU550
 1819 0000 4154     		pushq	%r12
 1820              		.cfi_def_cfa_offset 16
 1821              		.cfi_offset 12, -16
 1822 0002 55       		pushq	%rbp
 1823              		.cfi_def_cfa_offset 24
 1824              		.cfi_offset 6, -24
 1825 0003 53       		pushq	%rbx
 1826              		.cfi_def_cfa_offset 32
 1827              		.cfi_offset 3, -32
 1828 0004 4883EC10 		subq	$16, %rsp
 1829              		.cfi_def_cfa_offset 48
 1830 0008 4889FD   		movq	%rdi, %rbp
 1831 000b 4989F4   		movq	%rsi, %r12
 1832 000e 4889D3   		movq	%rdx, %rbx
 206:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1833              		.loc 6 206 7 view .LVU551
 1834 0011 64488B04 		movq	%fs:40, %rax
 1834      25280000 
 1834      00
 1835 001a 48894424 		movq	%rax, 8(%rsp)
 1835      08
 1836 001f 31C0     		xorl	%eax, %eax
GAS LISTING /tmp/ccEa7iXV.s 			page 86


 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1837              		.loc 6 211 42 view .LVU552
 1838 0021 4885F6   		testq	%rsi, %rsi
 1839 0024 7429     		je	.L173
 1840              	.L167:
 1841              	.LVL171:
 1842              	.LBB685:
 1843              	.LBI685:
 1844              		.loc 7 138 5 is_stmt 1 view .LVU553
 1845              	.LBB686:
 1846              	.LBI686:
  98:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 1847              		.loc 7 98 5 view .LVU554
 1848              	.LBB687:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1849              		.loc 7 104 23 is_stmt 0 view .LVU555
 1850 0026 4C29E3   		subq	%r12, %rbx
 1851              	.LVL172:
 104:/usr/include/c++/9.2.0/bits/stl_iterator_base_funcs.h ****     }
 1852              		.loc 7 104 23 view .LVU556
 1853              	.LBE687:
 1854              	.LBE686:
 1855              	.LBE685:
 215:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 
 1856              		.loc 6 215 12 view .LVU557
 1857 0029 48891C24 		movq	%rbx, (%rsp)
 217:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  {
 1858              		.loc 6 217 2 view .LVU558
 1859 002d 4883FB0F 		cmpq	$15, %rbx
 1860 0031 772D     		ja	.L174
 1861              	.LVL173:
 1862              	.L168:
 1863              	.LBB688:
 1864              	.LBI688:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1865              		.loc 8 186 7 is_stmt 1 view .LVU559
 1866              	.LBB689:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1867              		.loc 8 187 28 is_stmt 0 view .LVU560
 1868 0033 488B7D00 		movq	0(%rbp), %rdi
 1869              	.LVL174:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1870              		.loc 8 187 28 view .LVU561
 1871              	.LBE689:
 1872              	.LBE688:
 1873              	.LBB690:
 1874              	.LBI690:
 392:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1875              		.loc 8 392 7 is_stmt 1 view .LVU562
 1876              	.LBB691:
 1877              	.LBI691:
 346:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1878              		.loc 8 346 7 view .LVU563
 1879              	.LBB692:
 348:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1880              		.loc 8 348 2 is_stmt 0 view .LVU564
 1881 0037 4883FB01 		cmpq	$1, %rbx
GAS LISTING /tmp/ccEa7iXV.s 			page 87


 1882 003b 7441     		je	.L175
 1883              	.LVL175:
 1884              	.LBB693:
 1885              	.LBI693:
 361:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 1886              		.loc 9 361 7 is_stmt 1 view .LVU565
 1887              	.LBB694:
 363:/usr/include/c++/9.2.0/bits/char_traits.h **** 	  return __s1;
 1888              		.loc 9 363 2 view .LVU566
 1889 003d 4885DB   		testq	%rbx, %rbx
 1890 0040 7443     		je	.L170
 1891              		.loc 9 365 2 view .LVU567
 1892              		.loc 9 365 49 is_stmt 0 view .LVU568
 1893 0042 4889DA   		movq	%rbx, %rdx
 1894 0045 4C89E6   		movq	%r12, %rsi
 1895 0048 E8000000 		call	memcpy@PLT
 1895      00
 1896              	.LVL176:
 1897              		.loc 9 365 66 view .LVU569
 1898 004d EB36     		jmp	.L170
 1899              	.LVL177:
 1900              	.L173:
 1901              		.loc 9 365 66 view .LVU570
 1902              	.LBE694:
 1903              	.LBE693:
 1904              	.LBE692:
 1905              	.LBE691:
 1906              	.LBE690:
 211:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1907              		.loc 6 211 42 discriminator 1 view .LVU571
 1908 004f 4839D6   		cmpq	%rdx, %rsi
 1909 0052 74D2     		je	.L167
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1910              		.loc 6 212 28 view .LVU572
 1911 0054 488D3D00 		leaq	.LC7(%rip), %rdi
 1911      000000
 1912              	.LVL178:
 212:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 1913              		.loc 6 212 28 view .LVU573
 1914 005b E8000000 		call	_ZSt19__throw_logic_errorPKc@PLT
 1914      00
 1915              	.LVL179:
 1916              	.L174:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 1917              		.loc 6 219 6 view .LVU574
 1918 0060 4889E6   		movq	%rsp, %rsi
 1919              	.LVL180:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 1920              		.loc 6 219 6 view .LVU575
 1921 0063 BA000000 		movl	$0, %edx
 1921      00
 1922              	.LVL181:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 1923              		.loc 6 219 6 view .LVU576
 1924 0068 4889EF   		movq	%rbp, %rdi
 1925              	.LVL182:
 219:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
GAS LISTING /tmp/ccEa7iXV.s 			page 88


 1926              		.loc 6 219 6 view .LVU577
 1927 006b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
 1927      00
 1928              	.LVL183:
 1929              	.LBB699:
 1930              	.LBI699:
 178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1931              		.loc 8 178 7 is_stmt 1 view .LVU578
 1932              	.LBB700:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1933              		.loc 8 179 9 is_stmt 0 view .LVU579
 1934 0070 48894500 		movq	%rax, 0(%rbp)
 1935              	.LVL184:
 179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1936              		.loc 8 179 9 view .LVU580
 1937              	.LBE700:
 1938              	.LBE699:
 220:/usr/include/c++/9.2.0/bits/basic_string.tcc **** 	  }
 1939              		.loc 6 220 6 view .LVU581
 1940 0074 488B0424 		movq	(%rsp), %rax
 1941              	.LVL185:
 1942              	.LBB701:
 1943              	.LBI701:
 210:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1944              		.loc 8 210 7 is_stmt 1 view .LVU582
 1945              	.LBB702:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1946              		.loc 8 211 9 is_stmt 0 view .LVU583
 1947 0078 48894510 		movq	%rax, 16(%rbp)
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1948              		.loc 8 211 45 view .LVU584
 1949 007c EBB5     		jmp	.L168
 1950              	.LVL186:
 1951              	.L175:
 211:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1952              		.loc 8 211 45 view .LVU585
 1953              	.LBE702:
 1954              	.LBE701:
 1955              	.LBB703:
 1956              	.LBB698:
 1957              	.LBB697:
 1958              	.LBB695:
 1959              	.LBI695:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 1960              		.loc 9 299 7 is_stmt 1 view .LVU586
 1961              	.LBB696:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1962              		.loc 9 300 9 view .LVU587
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1963              		.loc 9 300 16 is_stmt 0 view .LVU588
 1964 007e 410FB604 		movzbl	(%r12), %eax
 1964      24
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1965              		.loc 9 300 14 view .LVU589
 1966 0083 8807     		movb	%al, (%rdi)
 1967              	.LVL187:
 1968              	.L170:
GAS LISTING /tmp/ccEa7iXV.s 			page 89


 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 1969              		.loc 9 300 14 view .LVU590
 1970              	.LBE696:
 1971              	.LBE695:
 1972              	.LBE697:
 1973              	.LBE698:
 1974              	.LBE703:
 232:/usr/include/c++/9.2.0/bits/basic_string.tcc ****       }
 1975              		.loc 6 232 2 view .LVU591
 1976 0085 488B0424 		movq	(%rsp), %rax
 1977              	.LVL188:
 1978              	.LBB704:
 1979              	.LBI704:
 214:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 1980              		.loc 8 214 7 is_stmt 1 view .LVU592
 1981              	.LBB705:
 1982              	.LBB706:
 1983              	.LBI706:
 182:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_string_length = __length; }
 1984              		.loc 8 182 7 view .LVU593
 1985              	.LBB707:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1986              		.loc 8 183 9 is_stmt 0 view .LVU594
 1987 0089 48894508 		movq	%rax, 8(%rbp)
 1988              	.LVL189:
 183:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 1989              		.loc 8 183 9 view .LVU595
 1990              	.LBE707:
 1991              	.LBE706:
 1992              	.LBB708:
 1993              	.LBI708:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1994              		.loc 8 186 7 is_stmt 1 view .LVU596
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1995              		.loc 8 186 7 is_stmt 0 view .LVU597
 1996              	.LBE708:
 217:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 1997              		.loc 8 217 31 view .LVU598
 1998 008d 48034500 		addq	0(%rbp), %rax
 1999              	.LVL190:
 2000              	.LBB709:
 2001              	.LBI709:
 299:/usr/include/c++/9.2.0/bits/char_traits.h ****       { __c1 = __c2; }
 2002              		.loc 9 299 7 is_stmt 1 view .LVU599
 2003              	.LBB710:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2004              		.loc 9 300 9 view .LVU600
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2005              		.loc 9 300 14 is_stmt 0 view .LVU601
 2006 0091 C60000   		movb	$0, (%rax)
 2007              	.LVL191:
 300:/usr/include/c++/9.2.0/bits/char_traits.h **** 
 2008              		.loc 9 300 14 view .LVU602
 2009              	.LBE710:
 2010              	.LBE709:
 2011              	.LBE705:
 2012              	.LBE704:
GAS LISTING /tmp/ccEa7iXV.s 			page 90


 2013              		.loc 6 233 7 view .LVU603
 2014 0094 488B4424 		movq	8(%rsp), %rax
 2014      08
 2015 0099 64483304 		xorq	%fs:40, %rax
 2015      25280000 
 2015      00
 2016 00a2 7509     		jne	.L176
 2017 00a4 4883C410 		addq	$16, %rsp
 2018              		.cfi_remember_state
 2019              		.cfi_def_cfa_offset 32
 2020 00a8 5B       		popq	%rbx
 2021              		.cfi_def_cfa_offset 24
 2022 00a9 5D       		popq	%rbp
 2023              		.cfi_def_cfa_offset 16
 2024              	.LVL192:
 2025              		.loc 6 233 7 view .LVU604
 2026 00aa 415C     		popq	%r12
 2027              		.cfi_def_cfa_offset 8
 2028              	.LVL193:
 2029              		.loc 6 233 7 view .LVU605
 2030 00ac C3       		ret
 2031              	.LVL194:
 2032              	.L176:
 2033              		.cfi_restore_state
 2034              		.loc 6 233 7 view .LVU606
 2035 00ad E8000000 		call	__stack_chk_fail@PLT
 2035      00
 2036              	.LVL195:
 2037              		.cfi_endproc
 2038              	.LFE2058:
 2040              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
 2041              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_
 2043              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P
 2044              	.LVL196:
 2045              	.LFB1820:
 2046              		.file 10 "/usr/include/c++/9.2.0/ext/string_conversions.h"
   1:/usr/include/c++/9.2.0/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
   3:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/string_conversions.h **** //
   5:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/string_conversions.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  11:/usr/include/c++/9.2.0/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  16:/usr/include/c++/9.2.0/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  20:/usr/include/c++/9.2.0/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
GAS LISTING /tmp/ccEa7iXV.s 			page 91


  22:/usr/include/c++/9.2.0/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  25:/usr/include/c++/9.2.0/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/usr/include/c++/9.2.0/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/9.2.0/ext/string_conversions.h ****  */
  28:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  29:/usr/include/c++/9.2.0/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/usr/include/c++/9.2.0/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  32:/usr/include/c++/9.2.0/ext/string_conversions.h **** #pragma GCC system_header
  33:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  34:/usr/include/c++/9.2.0/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/usr/include/c++/9.2.0/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/9.2.0/ext/string_conversions.h **** #else
  37:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  38:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdlib>
  42:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cwchar>
  43:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cstdio>
  44:/usr/include/c++/9.2.0/ext/string_conversions.h **** #include <cerrno>
  45:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  46:/usr/include/c++/9.2.0/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/9.2.0/ext/string_conversions.h **** {
  48:/usr/include/c++/9.2.0/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  50:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   typename... _Base>
  53:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _Ret
  54:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	   _Base... __base)
  57:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
  58:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _Ret __ret;
  59:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  60:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __endptr;
  61:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  62:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Save_errno {
  63:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	int _M_errno;
  66:/usr/include/c++/9.2.0/ext/string_conversions.h ****       } const __save_errno;
  67:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  68:/usr/include/c++/9.2.0/ext/string_conversions.h ****       struct _Range_chk {
  69:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  70:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  72:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  static bool
  73:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  {
  75:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  }
  78:/usr/include/c++/9.2.0/ext/string_conversions.h ****       };
GAS LISTING /tmp/ccEa7iXV.s 			page 92


  79:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  80:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  82:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__endptr == __str)
  83:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/usr/include/c++/9.2.0/ext/string_conversions.h ****       else
  88:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	__ret = __tmp;
  89:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  90:/usr/include/c++/9.2.0/ext/string_conversions.h ****       if (__idx)
  91:/usr/include/c++/9.2.0/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  93:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return __ret;
  94:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
  95:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
  96:/usr/include/c++/9.2.0/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/usr/include/c++/9.2.0/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/usr/include/c++/9.2.0/ext/string_conversions.h ****     _String
  99:/usr/include/c++/9.2.0/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 2047              		.loc 10 99 5 is_stmt 1 view -0
 2048              		.cfi_startproc
 2049              		.loc 10 99 5 is_stmt 0 view .LVU608
 2050 0000 55       		pushq	%rbp
 2051              		.cfi_def_cfa_offset 16
 2052              		.cfi_offset 6, -16
 2053 0001 4889E5   		movq	%rsp, %rbp
 2054              		.cfi_def_cfa_register 6
 2055 0004 4155     		pushq	%r13
 2056 0006 4154     		pushq	%r12
 2057 0008 53       		pushq	%rbx
 2058 0009 4881ECD8 		subq	$216, %rsp
 2058      000000
 2059              		.cfi_offset 13, -24
 2060              		.cfi_offset 12, -32
 2061              		.cfi_offset 3, -40
 2062 0010 4889FB   		movq	%rdi, %rbx
 2063 0013 4989F2   		movq	%rsi, %r10
 2064 0016 4889D6   		movq	%rdx, %rsi
 2065              	.LVL197:
 2066              		.loc 10 99 5 view .LVU609
 2067 0019 4889CA   		movq	%rcx, %rdx
 2068              	.LVL198:
 2069              		.loc 10 99 5 view .LVU610
 2070 001c 4C898550 		movq	%r8, -176(%rbp)
 2070      FFFFFF
 2071 0023 4C898D58 		movq	%r9, -168(%rbp)
 2071      FFFFFF
 2072 002a 84C0     		testb	%al, %al
 2073 002c 7426     		je	.L178
 2074 002e 0F298560 		movaps	%xmm0, -160(%rbp)
 2074      FFFFFF
 2075 0035 0F298D70 		movaps	%xmm1, -144(%rbp)
 2075      FFFFFF
 2076 003c 0F295580 		movaps	%xmm2, -128(%rbp)
 2077 0040 0F295D90 		movaps	%xmm3, -112(%rbp)
GAS LISTING /tmp/ccEa7iXV.s 			page 93


 2078 0044 0F2965A0 		movaps	%xmm4, -96(%rbp)
 2079 0048 0F296DB0 		movaps	%xmm5, -80(%rbp)
 2080 004c 0F2975C0 		movaps	%xmm6, -64(%rbp)
 2081 0050 0F297DD0 		movaps	%xmm7, -48(%rbp)
 2082              	.L178:
 2083              		.loc 10 99 5 view .LVU611
 2084 0054 41BD2800 		movl	$40, %r13d
 2084      0000
 2085 005a 64498B45 		movq	%fs:0(%r13), %rax
 2085      00
 2086 005f 48898528 		movq	%rax, -216(%rbp)
 2086      FFFFFF
 2087 0066 31C0     		xorl	%eax, %eax
 100:/usr/include/c++/9.2.0/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/usr/include/c++/9.2.0/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/usr/include/c++/9.2.0/ext/string_conversions.h ****     {
 103:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/usr/include/c++/9.2.0/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/usr/include/c++/9.2.0/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 2088              		.loc 10 105 58 view .LVU612
 2089 0068 488D4617 		leaq	23(%rsi), %rax
 2090 006c 4883E0F0 		andq	$-16, %rax
 2091 0070 4829C4   		subq	%rax, %rsp
 2092 0073 4C8D6424 		leaq	15(%rsp), %r12
 2092      0F
 2093 0078 4983E4F0 		andq	$-16, %r12
 2094              	.LVL199:
 106:/usr/include/c++/9.2.0/ext/string_conversions.h **** 							  * __n));
 107:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 108:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 2095              		.loc 10 109 25 view .LVU613
 2096 007c C78510FF 		movl	$32, -240(%rbp)
 2096      FFFF2000 
 2096      0000
 2097 0086 C78514FF 		movl	$48, -236(%rbp)
 2097      FFFF3000 
 2097      0000
 2098 0090 488D4510 		leaq	16(%rbp), %rax
 2099 0094 48898518 		movq	%rax, -232(%rbp)
 2099      FFFFFF
 2100 009b 488D8530 		leaq	-208(%rbp), %rax
 2100      FFFFFF
 2101 00a2 48898520 		movq	%rax, -224(%rbp)
 2101      FFFFFF
 110:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 111:/usr/include/c++/9.2.0/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 2102              		.loc 10 111 32 view .LVU614
 2103 00a9 488D8D10 		leaq	-240(%rbp), %rcx
 2103      FFFFFF
 2104              	.LVL200:
 2105              		.loc 10 111 32 view .LVU615
 2106 00b0 4C89E7   		movq	%r12, %rdi
 2107              	.LVL201:
 2108              		.loc 10 111 32 view .LVU616
 2109 00b3 41FFD2   		call	*%r10
 2110              	.LVL202:
GAS LISTING /tmp/ccEa7iXV.s 			page 94


 2111              	.LBB711:
 2112              	.LBI711:
 2113              		.file 11 "/usr/include/c++/9.2.0/bits/allocator.h"
   1:/usr/include/c++/9.2.0/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/allocator.h **** 
   3:/usr/include/c++/9.2.0/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/allocator.h **** //
   5:/usr/include/c++/9.2.0/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/allocator.h **** 
  11:/usr/include/c++/9.2.0/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/allocator.h **** 
  16:/usr/include/c++/9.2.0/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/allocator.h **** 
  20:/usr/include/c++/9.2.0/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/allocator.h **** 
  25:/usr/include/c++/9.2.0/bits/allocator.h **** /*
  26:/usr/include/c++/9.2.0/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/9.2.0/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/9.2.0/bits/allocator.h ****  *
  29:/usr/include/c++/9.2.0/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/9.2.0/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/9.2.0/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/9.2.0/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/9.2.0/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/9.2.0/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/9.2.0/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  37:/usr/include/c++/9.2.0/bits/allocator.h **** 
  38:/usr/include/c++/9.2.0/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/9.2.0/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/9.2.0/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/9.2.0/bits/allocator.h ****  */
  42:/usr/include/c++/9.2.0/bits/allocator.h **** 
  43:/usr/include/c++/9.2.0/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/9.2.0/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/9.2.0/bits/allocator.h **** 
  46:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/9.2.0/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/9.2.0/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  51:/usr/include/c++/9.2.0/bits/allocator.h **** 
  52:/usr/include/c++/9.2.0/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/usr/include/c++/9.2.0/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
GAS LISTING /tmp/ccEa7iXV.s 			page 95


  55:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
  56:/usr/include/c++/9.2.0/bits/allocator.h **** 
  57:/usr/include/c++/9.2.0/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/usr/include/c++/9.2.0/bits/allocator.h **** {
  59:/usr/include/c++/9.2.0/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/usr/include/c++/9.2.0/bits/allocator.h **** 
  61:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
  62:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @addtogroup allocators
  63:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @{
  64:/usr/include/c++/9.2.0/bits/allocator.h ****    */
  65:/usr/include/c++/9.2.0/bits/allocator.h **** 
  66:/usr/include/c++/9.2.0/bits/allocator.h ****   /// allocator<void> specialization.
  67:/usr/include/c++/9.2.0/bits/allocator.h ****   template<>
  68:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator<void>
  69:/usr/include/c++/9.2.0/bits/allocator.h ****     {
  70:/usr/include/c++/9.2.0/bits/allocator.h ****     public:
  71:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t      size_type;
  72:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void*       pointer;
  74:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const void* const_pointer;
  75:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef void        value_type;
  76:/usr/include/c++/9.2.0/bits/allocator.h **** 
  77:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
  78:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
  79:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/usr/include/c++/9.2.0/bits/allocator.h **** 
  81:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/usr/include/c++/9.2.0/bits/allocator.h **** 
  86:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/usr/include/c++/9.2.0/bits/allocator.h **** 
  88:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  90:/usr/include/c++/9.2.0/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/usr/include/c++/9.2.0/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/usr/include/c++/9.2.0/bits/allocator.h **** 
  95:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Up>
  96:/usr/include/c++/9.2.0/bits/allocator.h **** 	void
  97:/usr/include/c++/9.2.0/bits/allocator.h **** 	destroy(_Up* __p)
  98:/usr/include/c++/9.2.0/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 101:/usr/include/c++/9.2.0/bits/allocator.h ****     };
 102:/usr/include/c++/9.2.0/bits/allocator.h **** 
 103:/usr/include/c++/9.2.0/bits/allocator.h ****   /**
 104:/usr/include/c++/9.2.0/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 106:/usr/include/c++/9.2.0/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/usr/include/c++/9.2.0/bits/allocator.h ****    *  for further details.
 108:/usr/include/c++/9.2.0/bits/allocator.h ****    *
 109:/usr/include/c++/9.2.0/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/usr/include/c++/9.2.0/bits/allocator.h ****    */
 111:/usr/include/c++/9.2.0/bits/allocator.h ****   template<typename _Tp>
GAS LISTING /tmp/ccEa7iXV.s 			page 96


 112:/usr/include/c++/9.2.0/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/usr/include/c++/9.2.0/bits/allocator.h ****     {
 114:/usr/include/c++/9.2.0/bits/allocator.h ****    public:
 115:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef size_t     size_type;
 116:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp*       pointer;
 118:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp&       reference;
 120:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef _Tp        value_type;
 122:/usr/include/c++/9.2.0/bits/allocator.h **** 
 123:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 124:/usr/include/c++/9.2.0/bits/allocator.h **** 	struct rebind
 125:/usr/include/c++/9.2.0/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/usr/include/c++/9.2.0/bits/allocator.h **** 
 127:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/usr/include/c++/9.2.0/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/usr/include/c++/9.2.0/bits/allocator.h **** 
 132:/usr/include/c++/9.2.0/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 134:/usr/include/c++/9.2.0/bits/allocator.h **** 
 135:/usr/include/c++/9.2.0/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/usr/include/c++/9.2.0/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 2114              		.loc 11 138 7 is_stmt 1 view .LVU617
 2115              	.LBB712:
 2116              	.LBI712:
 2117              		.file 12 "/usr/include/c++/9.2.0/ext/new_allocator.h"
   1:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
   3:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ext/new_allocator.h **** //
   5:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  11:/usr/include/c++/9.2.0/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  16:/usr/include/c++/9.2.0/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  20:/usr/include/c++/9.2.0/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  25:/usr/include/c++/9.2.0/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/9.2.0/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
GAS LISTING /tmp/ccEa7iXV.s 			page 97


  27:/usr/include/c++/9.2.0/ext/new_allocator.h ****  */
  28:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  29:/usr/include/c++/9.2.0/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/9.2.0/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  32:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/9.2.0/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  39:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  40:/usr/include/c++/9.2.0/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/9.2.0/ext/new_allocator.h **** {
  42:/usr/include/c++/9.2.0/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  44:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/9.2.0/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  47:/usr/include/c++/9.2.0/ext/new_allocator.h ****   /**
  48:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  51:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *
  55:/usr/include/c++/9.2.0/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/9.2.0/ext/new_allocator.h ****    */
  57:/usr/include/c++/9.2.0/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/9.2.0/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/9.2.0/ext/new_allocator.h ****     {
  60:/usr/include/c++/9.2.0/ext/new_allocator.h ****     public:
  61:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  69:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	struct rebind
  71:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  73:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/9.2.0/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
  78:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  79:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 2118              		.loc 12 80 7 view .LVU618
 2119              		.loc 12 80 7 is_stmt 0 view .LVU619
 2120              	.LBE712:
GAS LISTING /tmp/ccEa7iXV.s 			page 98


 2121              	.LBE711:
 112:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 113:/usr/include/c++/9.2.0/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/usr/include/c++/9.2.0/ext/string_conversions.h **** 
 115:/usr/include/c++/9.2.0/ext/string_conversions.h ****       return _String(__s, __s + __len);
 2122              		.loc 10 115 33 view .LVU620
 2123 00b6 4863D0   		movslq	%eax, %rdx
 2124              		.loc 10 115 38 view .LVU621
 2125 00b9 4C01E2   		addq	%r12, %rdx
 2126              	.LVL203:
 2127              	.LBB713:
 2128              	.LBI713:
 397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 400:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
 401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 403:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 405:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 410:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
 411:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 412:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 413:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 414:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 416:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 417:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __len2);
 419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 420:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 421:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 423:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 424:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 431:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
 432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 435:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 436:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 437:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 439:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
 440:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
GAS LISTING /tmp/ccEa7iXV.s 			page 99


 442:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
 443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 448:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 453:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 461:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 469:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 470:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 471:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 476:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n)
 478:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 480:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 484:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 492:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const _CharT* __start
 497:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
GAS LISTING /tmp/ccEa7iXV.s 			page 100


 499:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 500:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 501:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
 509:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 510:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 515:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 516:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 520:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 529:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 535:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 540:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 544:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 552:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
GAS LISTING /tmp/ccEa7iXV.s 			page 101


 556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 557:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 560:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 561:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 562:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 566:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_length(__str.length());
 570:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 579:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 587:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 591:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 593:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 607:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
 608:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 610:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 611:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 612:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 102


 613:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator,
 621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 623:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _InputIterator>
 624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 625:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 2129              		.loc 8 625 9 is_stmt 1 view .LVU622
 2130              	.LBB714:
 2131              	.LBI714:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2132              		.loc 8 190 7 view .LVU623
 2133              	.LBB715:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 2134              		.loc 8 193 51 is_stmt 0 view .LVU624
 2135 00bc 488D4310 		leaq	16(%rbx), %rax
 2136              	.LVL204:
 193:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
 2137              		.loc 8 193 51 view .LVU625
 2138              	.LBE715:
 2139              	.LBE714:
 2140              	.LBB716:
 2141              	.LBI716:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2142              		.loc 8 156 2 is_stmt 1 view .LVU626
 2143              	.LBB717:
 2144              	.LBB718:
 2145              	.LBI718:
 139:/usr/include/c++/9.2.0/bits/allocator.h **** 
 140:/usr/include/c++/9.2.0/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 2146              		.loc 11 141 7 view .LVU627
 2147              	.LBB719:
 2148              	.LBI719:
  81:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  82:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/usr/include/c++/9.2.0/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 2149              		.loc 12 83 7 view .LVU628
 2150              		.loc 12 83 7 is_stmt 0 view .LVU629
 2151              	.LBE719:
 2152              	.LBE718:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2153              		.loc 8 157 35 view .LVU630
 2154 00c0 488903   		movq	%rax, (%rbx)
 2155              	.LVL205:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2156              		.loc 8 157 35 view .LVU631
 2157              	.LBE717:
 2158              	.LBE716:
 2159              	.LBB720:
 2160              	.LBI720:
GAS LISTING /tmp/ccEa7iXV.s 			page 103


 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2161              		.loc 8 263 9 is_stmt 1 view .LVU632
 2162              	.LBB721:
 2163              	.LBB722:
 2164              	.LBI722:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 2165              		.loc 8 243 9 view .LVU633
 2166              	.LBB723:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2167              		.loc 8 247 11 is_stmt 0 view .LVU634
 2168 00c3 4C89E6   		movq	%r12, %rsi
 2169 00c6 4889DF   		movq	%rbx, %rdi
 2170 00c9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_ite
 2170      00
 2171              	.LVL206:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2172              		.loc 8 247 11 view .LVU635
 2173              	.LBE723:
 2174              	.LBE722:
 2175              	.LBE721:
 2176              	.LBE720:
 2177              	.LBE713:
 2178              	.LBB724:
 2179              	.LBI724:
 142:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/usr/include/c++/9.2.0/bits/allocator.h **** 
 144:/usr/include/c++/9.2.0/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/usr/include/c++/9.2.0/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/usr/include/c++/9.2.0/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/usr/include/c++/9.2.0/bits/allocator.h **** #endif
 148:/usr/include/c++/9.2.0/bits/allocator.h **** 
 149:/usr/include/c++/9.2.0/bits/allocator.h ****       template<typename _Tp1>
 150:/usr/include/c++/9.2.0/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/usr/include/c++/9.2.0/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/usr/include/c++/9.2.0/bits/allocator.h **** 
 153:/usr/include/c++/9.2.0/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 2180              		.loc 11 153 7 is_stmt 1 view .LVU636
 2181              	.LBB725:
 2182              	.LBI725:
  84:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  85:/usr/include/c++/9.2.0/ext/new_allocator.h ****       template<typename _Tp1>
  86:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  89:/usr/include/c++/9.2.0/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 2183              		.loc 12 89 7 view .LVU637
 2184              		.loc 12 89 7 is_stmt 0 view .LVU638
 2185              	.LBE725:
 2186              	.LBE724:
 116:/usr/include/c++/9.2.0/ext/string_conversions.h ****     }
 2187              		.loc 10 116 5 view .LVU639
 2188 00ce 488B8528 		movq	-216(%rbp), %rax
 2188      FFFFFF
 2189 00d5 64493345 		xorq	%fs:0(%r13), %rax
 2189      00
 2190 00da 750E     		jne	.L181
 2191 00dc 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccEa7iXV.s 			page 104


 2192 00df 488D65E8 		leaq	-24(%rbp), %rsp
 2193 00e3 5B       		popq	%rbx
 2194              	.LVL207:
 2195              		.loc 10 116 5 view .LVU640
 2196 00e4 415C     		popq	%r12
 2197              	.LVL208:
 2198              		.loc 10 116 5 view .LVU641
 2199 00e6 415D     		popq	%r13
 2200 00e8 5D       		popq	%rbp
 2201              		.cfi_remember_state
 2202              		.cfi_def_cfa 7, 8
 2203 00e9 C3       		ret
 2204              	.LVL209:
 2205              	.L181:
 2206              		.cfi_restore_state
 2207              		.loc 10 116 5 view .LVU642
 2208 00ea E8000000 		call	__stack_chk_fail@PLT
 2208      00
 2209              	.LVL210:
 2210              		.cfi_endproc
 2211              	.LFE1820:
 2213              		.section	.rodata.str1.1,"aMS",@progbits,1
 2214              	.LC8:
 2215 0000 41444420 		.string	"ADD "
 2215      00
 2216              	.LC9:
 2217 0005 00       		.string	""
 2218              	.LC10:
 2219 0006 62617369 		.string	"basic_string::append"
 2219      635F7374 
 2219      72696E67 
 2219      3A3A6170 
 2219      70656E64 
 2220              	.LC11:
 2221 001b 7B746774 		.string	"{tgts: "
 2221      733A2000 
 2222              	.LC12:
 2223 0023 256C7500 		.string	"%lu"
 2224              	.LC13:
 2225 0027 3B206361 		.string	"; cal: "
 2225      6C3A2000 
 2226              	.LC14:
 2227 002f 256400   		.string	"%d"
 2228              	.LC15:
 2229 0032 3B207765 		.string	"; weight: "
 2229      69676874 
 2229      3A2000
 2230              	.LC16:
 2231 003d 256600   		.string	"%f"
 2232              	.LC17:
 2233 0040 3B20693A 		.string	"; i: "
 2233      2000
 2234              	.LC18:
 2235 0046 7D00     		.string	"}"
 2236              	.LC19:
 2237 0048 20544F20 		.string	" TO "
 2237      00
GAS LISTING /tmp/ccEa7iXV.s 			page 105


 2238              	.LC20:
 2239 004d 53450A00 		.string	"SE\n"
 2240              	.LC21:
 2241 0051 41450A00 		.string	"AE\n"
 2242              		.text
 2243              		.globl	_Z9addTargetP10graphPointS0_
 2245              	_Z9addTargetP10graphPointS0_:
 2246              	.LVL211:
 2247              	.LFB1743:
 451:Src/findwayBases.cpp ****     std::cout << "ADD " << start->toString() << " TO " << end->toString() << std::endl;
 2248              		.loc 1 451 1 is_stmt 1 view -0
 2249              		.cfi_startproc
 2250              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 2251              		.cfi_lsda 0x1b,.LLSDA1743
 451:Src/findwayBases.cpp ****     std::cout << "ADD " << start->toString() << " TO " << end->toString() << std::endl;
 2252              		.loc 1 451 1 is_stmt 0 view .LVU644
 2253 09fb 4155     		pushq	%r13
 2254              		.cfi_def_cfa_offset 16
 2255              		.cfi_offset 13, -16
 2256 09fd 4154     		pushq	%r12
 2257              		.cfi_def_cfa_offset 24
 2258              		.cfi_offset 12, -24
 2259 09ff 55       		pushq	%rbp
 2260              		.cfi_def_cfa_offset 32
 2261              		.cfi_offset 6, -32
 2262 0a00 53       		pushq	%rbx
 2263              		.cfi_def_cfa_offset 40
 2264              		.cfi_offset 3, -40
 2265 0a01 4883EC78 		subq	$120, %rsp
 2266              		.cfi_def_cfa_offset 160
 2267 0a05 4889FB   		movq	%rdi, %rbx
 2268 0a08 4889F5   		movq	%rsi, %rbp
 451:Src/findwayBases.cpp ****     std::cout << "ADD " << start->toString() << " TO " << end->toString() << std::endl;
 2269              		.loc 1 451 1 view .LVU645
 2270 0a0b 64488B04 		movq	%fs:40, %rax
 2270      25280000 
 2270      00
 2271 0a14 48894424 		movq	%rax, 104(%rsp)
 2271      68
 2272 0a19 31C0     		xorl	%eax, %eax
 452:Src/findwayBases.cpp ****     // std::cout << "ADD TARGET ";
 2273              		.loc 1 452 5 is_stmt 1 view .LVU646
 2274              	.LVL212:
 2275              	.LBB1346:
 2276              	.LBI1346:
 2277              		.file 13 "/usr/include/c++/9.2.0/ostream"
   1:/usr/include/c++/9.2.0/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/9.2.0/ostream **** 
   3:/usr/include/c++/9.2.0/ostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/ostream **** //
   5:/usr/include/c++/9.2.0/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/ostream **** // any later version.
  10:/usr/include/c++/9.2.0/ostream **** 
  11:/usr/include/c++/9.2.0/ostream **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/ccEa7iXV.s 			page 106


  12:/usr/include/c++/9.2.0/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/ostream **** 
  16:/usr/include/c++/9.2.0/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/ostream **** 
  20:/usr/include/c++/9.2.0/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/ostream **** 
  25:/usr/include/c++/9.2.0/ostream **** /** @file include/ostream
  26:/usr/include/c++/9.2.0/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/ostream ****  */
  28:/usr/include/c++/9.2.0/ostream **** 
  29:/usr/include/c++/9.2.0/ostream **** //
  30:/usr/include/c++/9.2.0/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/9.2.0/ostream **** //
  32:/usr/include/c++/9.2.0/ostream **** 
  33:/usr/include/c++/9.2.0/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/9.2.0/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/9.2.0/ostream **** 
  36:/usr/include/c++/9.2.0/ostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/ostream **** 
  38:/usr/include/c++/9.2.0/ostream **** #include <ios>
  39:/usr/include/c++/9.2.0/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/9.2.0/ostream **** 
  41:/usr/include/c++/9.2.0/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/ostream **** {
  43:/usr/include/c++/9.2.0/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/ostream **** 
  45:/usr/include/c++/9.2.0/ostream ****   /**
  46:/usr/include/c++/9.2.0/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/9.2.0/ostream ****    *  @ingroup io
  48:/usr/include/c++/9.2.0/ostream ****    *
  49:/usr/include/c++/9.2.0/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/9.2.0/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/9.2.0/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/9.2.0/ostream ****    *
  53:/usr/include/c++/9.2.0/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/9.2.0/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/9.2.0/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/9.2.0/ostream ****   */
  57:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/9.2.0/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/9.2.0/ostream ****     {
  60:/usr/include/c++/9.2.0/ostream ****     public:
  61:/usr/include/c++/9.2.0/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/9.2.0/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/9.2.0/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/9.2.0/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/9.2.0/ostream **** 
  68:/usr/include/c++/9.2.0/ostream ****       // Non-standard Types:
GAS LISTING /tmp/ccEa7iXV.s 			page 107


  69:/usr/include/c++/9.2.0/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/9.2.0/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/9.2.0/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/9.2.0/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/9.2.0/ostream ****       							__num_put_type;
  74:/usr/include/c++/9.2.0/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/9.2.0/ostream **** 
  76:/usr/include/c++/9.2.0/ostream ****       /**
  77:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/9.2.0/ostream ****        *
  79:/usr/include/c++/9.2.0/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/9.2.0/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/9.2.0/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/9.2.0/ostream ****       */
  83:/usr/include/c++/9.2.0/ostream ****       explicit
  84:/usr/include/c++/9.2.0/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/9.2.0/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/9.2.0/ostream **** 
  87:/usr/include/c++/9.2.0/ostream ****       /**
  88:/usr/include/c++/9.2.0/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/9.2.0/ostream ****        *
  90:/usr/include/c++/9.2.0/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/9.2.0/ostream ****       */
  92:/usr/include/c++/9.2.0/ostream ****       virtual
  93:/usr/include/c++/9.2.0/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/9.2.0/ostream **** 
  95:/usr/include/c++/9.2.0/ostream ****       /// Safe prefix/suffix operations.
  96:/usr/include/c++/9.2.0/ostream ****       class sentry;
  97:/usr/include/c++/9.2.0/ostream ****       friend class sentry;
  98:/usr/include/c++/9.2.0/ostream **** 
  99:/usr/include/c++/9.2.0/ostream ****       //@{
 100:/usr/include/c++/9.2.0/ostream ****       /**
 101:/usr/include/c++/9.2.0/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/9.2.0/ostream ****        *
 103:/usr/include/c++/9.2.0/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/9.2.0/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/9.2.0/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/9.2.0/ostream ****       */
 107:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 108:/usr/include/c++/9.2.0/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/9.2.0/ostream ****       {
 110:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/9.2.0/ostream **** 	return __pf(*this);
 114:/usr/include/c++/9.2.0/ostream ****       }
 115:/usr/include/c++/9.2.0/ostream **** 
 116:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 117:/usr/include/c++/9.2.0/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/9.2.0/ostream ****       {
 119:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 123:/usr/include/c++/9.2.0/ostream **** 	return *this;
 124:/usr/include/c++/9.2.0/ostream ****       }
 125:/usr/include/c++/9.2.0/ostream **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 108


 126:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 127:/usr/include/c++/9.2.0/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/9.2.0/ostream ****       {
 129:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/9.2.0/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/9.2.0/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/9.2.0/ostream **** 	__pf(*this);
 133:/usr/include/c++/9.2.0/ostream **** 	return *this;
 134:/usr/include/c++/9.2.0/ostream ****       }
 135:/usr/include/c++/9.2.0/ostream ****       //@}
 136:/usr/include/c++/9.2.0/ostream **** 
 137:/usr/include/c++/9.2.0/ostream ****       //@{
 138:/usr/include/c++/9.2.0/ostream ****       /**
 139:/usr/include/c++/9.2.0/ostream ****        *  @name Inserters
 140:/usr/include/c++/9.2.0/ostream ****        *
 141:/usr/include/c++/9.2.0/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/9.2.0/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/9.2.0/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/9.2.0/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/9.2.0/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/9.2.0/ostream ****        *
 147:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/9.2.0/ostream ****        *
 150:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/9.2.0/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 153:/usr/include/c++/9.2.0/ostream ****        *  be rethrown.
 154:/usr/include/c++/9.2.0/ostream ****       */
 155:/usr/include/c++/9.2.0/ostream **** 
 156:/usr/include/c++/9.2.0/ostream ****       //@{
 157:/usr/include/c++/9.2.0/ostream ****       /**
 158:/usr/include/c++/9.2.0/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/9.2.0/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/9.2.0/ostream ****        *
 162:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/9.2.0/ostream ****       */
 165:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 166:/usr/include/c++/9.2.0/ostream ****       operator<<(long __n)
 167:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/9.2.0/ostream **** 
 169:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 170:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/9.2.0/ostream **** 
 173:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 174:/usr/include/c++/9.2.0/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/9.2.0/ostream **** 
 177:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 178:/usr/include/c++/9.2.0/ostream ****       operator<<(short __n);
 179:/usr/include/c++/9.2.0/ostream **** 
 180:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 181:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/9.2.0/ostream ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 109


 183:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/9.2.0/ostream ****       }
 187:/usr/include/c++/9.2.0/ostream **** 
 188:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 189:/usr/include/c++/9.2.0/ostream ****       operator<<(int __n);
 190:/usr/include/c++/9.2.0/ostream **** 
 191:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 192:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/9.2.0/ostream ****       {
 194:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/9.2.0/ostream ****       }
 198:/usr/include/c++/9.2.0/ostream **** 
 199:/usr/include/c++/9.2.0/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 201:/usr/include/c++/9.2.0/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/9.2.0/ostream **** 
 204:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 205:/usr/include/c++/9.2.0/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/9.2.0/ostream **** #endif
 208:/usr/include/c++/9.2.0/ostream ****       //@}
 209:/usr/include/c++/9.2.0/ostream **** 
 210:/usr/include/c++/9.2.0/ostream ****       //@{
 211:/usr/include/c++/9.2.0/ostream ****       /**
 212:/usr/include/c++/9.2.0/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/9.2.0/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/9.2.0/ostream ****        *
 216:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/9.2.0/ostream ****       */
 219:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 220:/usr/include/c++/9.2.0/ostream ****       operator<<(double __f)
 221:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/9.2.0/ostream **** 
 223:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 224:/usr/include/c++/9.2.0/ostream ****       operator<<(float __f)
 225:/usr/include/c++/9.2.0/ostream ****       {
 226:/usr/include/c++/9.2.0/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/9.2.0/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/9.2.0/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/9.2.0/ostream ****       }
 230:/usr/include/c++/9.2.0/ostream **** 
 231:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 232:/usr/include/c++/9.2.0/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/9.2.0/ostream ****       //@}
 235:/usr/include/c++/9.2.0/ostream **** 
 236:/usr/include/c++/9.2.0/ostream ****       /**
 237:/usr/include/c++/9.2.0/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/9.2.0/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/9.2.0/ostream ****        *  @return  @c *this if successful
GAS LISTING /tmp/ccEa7iXV.s 			page 110


 240:/usr/include/c++/9.2.0/ostream ****        *
 241:/usr/include/c++/9.2.0/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/9.2.0/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/9.2.0/ostream ****       */
 244:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 245:/usr/include/c++/9.2.0/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/9.2.0/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/9.2.0/ostream **** 
 248:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201703L
 249:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 250:/usr/include/c++/9.2.0/ostream ****       operator<<(nullptr_t)
 251:/usr/include/c++/9.2.0/ostream ****       { return *this << "nullptr"; }
 252:/usr/include/c++/9.2.0/ostream **** #endif
 253:/usr/include/c++/9.2.0/ostream **** 
 254:/usr/include/c++/9.2.0/ostream ****       /**
 255:/usr/include/c++/9.2.0/ostream ****        *  @brief  Extracting from another streambuf.
 256:/usr/include/c++/9.2.0/ostream ****        *  @param  __sb  A pointer to a streambuf
 257:/usr/include/c++/9.2.0/ostream ****        *
 258:/usr/include/c++/9.2.0/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 259:/usr/include/c++/9.2.0/ostream ****        *  in that it also constructs a sentry object and has the same error
 260:/usr/include/c++/9.2.0/ostream ****        *  handling behavior.
 261:/usr/include/c++/9.2.0/ostream ****        *
 262:/usr/include/c++/9.2.0/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 263:/usr/include/c++/9.2.0/ostream ****        *
 264:/usr/include/c++/9.2.0/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 265:/usr/include/c++/9.2.0/ostream ****        *  until one of the following occurs:
 266:/usr/include/c++/9.2.0/ostream ****        *
 267:/usr/include/c++/9.2.0/ostream ****        *  - the input stream reaches end-of-file,
 268:/usr/include/c++/9.2.0/ostream ****        *  - insertion into the output sequence fails (in this case, the
 269:/usr/include/c++/9.2.0/ostream ****        *    character that would have been inserted is not extracted), or
 270:/usr/include/c++/9.2.0/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 271:/usr/include/c++/9.2.0/ostream ****        *    sets failbit in the error state
 272:/usr/include/c++/9.2.0/ostream ****        *
 273:/usr/include/c++/9.2.0/ostream ****        *  If the function inserts no characters, failbit is set.
 274:/usr/include/c++/9.2.0/ostream ****       */
 275:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 276:/usr/include/c++/9.2.0/ostream ****       operator<<(__streambuf_type* __sb);
 277:/usr/include/c++/9.2.0/ostream ****       //@}
 278:/usr/include/c++/9.2.0/ostream **** 
 279:/usr/include/c++/9.2.0/ostream ****       //@{
 280:/usr/include/c++/9.2.0/ostream ****       /**
 281:/usr/include/c++/9.2.0/ostream ****        *  @name Unformatted Output Functions
 282:/usr/include/c++/9.2.0/ostream ****        *
 283:/usr/include/c++/9.2.0/ostream ****        *  All the unformatted output functions have some common behavior.
 284:/usr/include/c++/9.2.0/ostream ****        *  Each starts by constructing a temporary object of type
 285:/usr/include/c++/9.2.0/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 286:/usr/include/c++/9.2.0/ostream ****        *  with the setting of a status flag; see the sentry documentation
 287:/usr/include/c++/9.2.0/ostream ****        *  for more.
 288:/usr/include/c++/9.2.0/ostream ****        *
 289:/usr/include/c++/9.2.0/ostream ****        *  If the sentry status is good, the function tries to generate
 290:/usr/include/c++/9.2.0/ostream ****        *  whatever data is appropriate for the type of the argument.
 291:/usr/include/c++/9.2.0/ostream ****        *
 292:/usr/include/c++/9.2.0/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 293:/usr/include/c++/9.2.0/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 294:/usr/include/c++/9.2.0/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 295:/usr/include/c++/9.2.0/ostream ****        *  without completing its actions.
 296:/usr/include/c++/9.2.0/ostream ****       */
GAS LISTING /tmp/ccEa7iXV.s 			page 111


 297:/usr/include/c++/9.2.0/ostream **** 
 298:/usr/include/c++/9.2.0/ostream ****       /**
 299:/usr/include/c++/9.2.0/ostream ****        *  @brief  Simple insertion.
 300:/usr/include/c++/9.2.0/ostream ****        *  @param  __c  The character to insert.
 301:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 302:/usr/include/c++/9.2.0/ostream ****        *
 303:/usr/include/c++/9.2.0/ostream ****        *  Tries to insert @p __c.
 304:/usr/include/c++/9.2.0/ostream ****        *
 305:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 306:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 307:/usr/include/c++/9.2.0/ostream ****       */
 308:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 309:/usr/include/c++/9.2.0/ostream ****       put(char_type __c);
 310:/usr/include/c++/9.2.0/ostream **** 
 311:/usr/include/c++/9.2.0/ostream ****       /**
 312:/usr/include/c++/9.2.0/ostream ****        *  @brief  Core write functionality, without sentry.
 313:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 314:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 315:/usr/include/c++/9.2.0/ostream ****       */
 316:/usr/include/c++/9.2.0/ostream ****       void
 317:/usr/include/c++/9.2.0/ostream ****       _M_write(const char_type* __s, streamsize __n)
 318:/usr/include/c++/9.2.0/ostream ****       {
 319:/usr/include/c++/9.2.0/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 320:/usr/include/c++/9.2.0/ostream **** 	if (__put != __n)
 321:/usr/include/c++/9.2.0/ostream **** 	  this->setstate(ios_base::badbit);
 322:/usr/include/c++/9.2.0/ostream ****       }
 323:/usr/include/c++/9.2.0/ostream **** 
 324:/usr/include/c++/9.2.0/ostream ****       /**
 325:/usr/include/c++/9.2.0/ostream ****        *  @brief  Character string insertion.
 326:/usr/include/c++/9.2.0/ostream ****        *  @param  __s  The array to insert.
 327:/usr/include/c++/9.2.0/ostream ****        *  @param  __n  Maximum number of characters to insert.
 328:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 329:/usr/include/c++/9.2.0/ostream ****        *
 330:/usr/include/c++/9.2.0/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 331:/usr/include/c++/9.2.0/ostream ****        *  one of the following happens:
 332:/usr/include/c++/9.2.0/ostream ****        *
 333:/usr/include/c++/9.2.0/ostream ****        *  - @p __n characters are inserted
 334:/usr/include/c++/9.2.0/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 335:/usr/include/c++/9.2.0/ostream ****        *    will be set in the stream's error state)
 336:/usr/include/c++/9.2.0/ostream ****        *
 337:/usr/include/c++/9.2.0/ostream ****        *  @note  This function is not overloaded on signed char and
 338:/usr/include/c++/9.2.0/ostream ****        *         unsigned char.
 339:/usr/include/c++/9.2.0/ostream ****       */
 340:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 341:/usr/include/c++/9.2.0/ostream ****       write(const char_type* __s, streamsize __n);
 342:/usr/include/c++/9.2.0/ostream ****       //@}
 343:/usr/include/c++/9.2.0/ostream **** 
 344:/usr/include/c++/9.2.0/ostream ****       /**
 345:/usr/include/c++/9.2.0/ostream ****        *  @brief  Synchronizing the stream buffer.
 346:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 347:/usr/include/c++/9.2.0/ostream ****        *
 348:/usr/include/c++/9.2.0/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 349:/usr/include/c++/9.2.0/ostream ****        *
 350:/usr/include/c++/9.2.0/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 351:/usr/include/c++/9.2.0/ostream ****        *  sets badbit.
 352:/usr/include/c++/9.2.0/ostream ****       */
 353:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
GAS LISTING /tmp/ccEa7iXV.s 			page 112


 354:/usr/include/c++/9.2.0/ostream ****       flush();
 355:/usr/include/c++/9.2.0/ostream **** 
 356:/usr/include/c++/9.2.0/ostream ****       /**
 357:/usr/include/c++/9.2.0/ostream ****        *  @brief  Getting the current write position.
 358:/usr/include/c++/9.2.0/ostream ****        *  @return  A file position object.
 359:/usr/include/c++/9.2.0/ostream ****        *
 360:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 361:/usr/include/c++/9.2.0/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 362:/usr/include/c++/9.2.0/ostream ****       */
 363:/usr/include/c++/9.2.0/ostream ****       pos_type
 364:/usr/include/c++/9.2.0/ostream ****       tellp();
 365:/usr/include/c++/9.2.0/ostream **** 
 366:/usr/include/c++/9.2.0/ostream ****       /**
 367:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 368:/usr/include/c++/9.2.0/ostream ****        *  @param  __pos  A file position object.
 369:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 370:/usr/include/c++/9.2.0/ostream ****        *
 371:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 372:/usr/include/c++/9.2.0/ostream ****        *  that function fails, sets failbit.
 373:/usr/include/c++/9.2.0/ostream ****       */
 374:/usr/include/c++/9.2.0/ostream ****       __ostream_type&
 375:/usr/include/c++/9.2.0/ostream ****       seekp(pos_type);
 376:/usr/include/c++/9.2.0/ostream **** 
 377:/usr/include/c++/9.2.0/ostream ****       /**
 378:/usr/include/c++/9.2.0/ostream ****        *  @brief  Changing the current write position.
 379:/usr/include/c++/9.2.0/ostream ****        *  @param  __off  A file offset object.
 380:/usr/include/c++/9.2.0/ostream ****        *  @param  __dir  The direction in which to seek.
 381:/usr/include/c++/9.2.0/ostream ****        *  @return  *this
 382:/usr/include/c++/9.2.0/ostream ****        *
 383:/usr/include/c++/9.2.0/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 384:/usr/include/c++/9.2.0/ostream ****        *  If that function fails, sets failbit.
 385:/usr/include/c++/9.2.0/ostream ****       */
 386:/usr/include/c++/9.2.0/ostream ****        __ostream_type&
 387:/usr/include/c++/9.2.0/ostream ****       seekp(off_type, ios_base::seekdir);
 388:/usr/include/c++/9.2.0/ostream **** 
 389:/usr/include/c++/9.2.0/ostream ****     protected:
 390:/usr/include/c++/9.2.0/ostream ****       basic_ostream()
 391:/usr/include/c++/9.2.0/ostream ****       { this->init(0); }
 392:/usr/include/c++/9.2.0/ostream **** 
 393:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 394:/usr/include/c++/9.2.0/ostream ****       // Non-standard constructor that does not call init()
 395:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 396:/usr/include/c++/9.2.0/ostream **** 
 397:/usr/include/c++/9.2.0/ostream ****       basic_ostream(const basic_ostream&) = delete;
 398:/usr/include/c++/9.2.0/ostream **** 
 399:/usr/include/c++/9.2.0/ostream ****       basic_ostream(basic_ostream&& __rhs)
 400:/usr/include/c++/9.2.0/ostream ****       : __ios_type()
 401:/usr/include/c++/9.2.0/ostream ****       { __ios_type::move(__rhs); }
 402:/usr/include/c++/9.2.0/ostream **** 
 403:/usr/include/c++/9.2.0/ostream ****       // 27.7.3.3 Assign/swap
 404:/usr/include/c++/9.2.0/ostream **** 
 405:/usr/include/c++/9.2.0/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 406:/usr/include/c++/9.2.0/ostream **** 
 407:/usr/include/c++/9.2.0/ostream ****       basic_ostream&
 408:/usr/include/c++/9.2.0/ostream ****       operator=(basic_ostream&& __rhs)
 409:/usr/include/c++/9.2.0/ostream ****       {
 410:/usr/include/c++/9.2.0/ostream **** 	swap(__rhs);
GAS LISTING /tmp/ccEa7iXV.s 			page 113


 411:/usr/include/c++/9.2.0/ostream **** 	return *this;
 412:/usr/include/c++/9.2.0/ostream ****       }
 413:/usr/include/c++/9.2.0/ostream **** 
 414:/usr/include/c++/9.2.0/ostream ****       void
 415:/usr/include/c++/9.2.0/ostream ****       swap(basic_ostream& __rhs)
 416:/usr/include/c++/9.2.0/ostream ****       { __ios_type::swap(__rhs); }
 417:/usr/include/c++/9.2.0/ostream **** #endif
 418:/usr/include/c++/9.2.0/ostream **** 
 419:/usr/include/c++/9.2.0/ostream ****       template<typename _ValueT>
 420:/usr/include/c++/9.2.0/ostream **** 	__ostream_type&
 421:/usr/include/c++/9.2.0/ostream **** 	_M_insert(_ValueT __v);
 422:/usr/include/c++/9.2.0/ostream ****     };
 423:/usr/include/c++/9.2.0/ostream **** 
 424:/usr/include/c++/9.2.0/ostream ****   /**
 425:/usr/include/c++/9.2.0/ostream ****    *  @brief  Performs setup work for output streams.
 426:/usr/include/c++/9.2.0/ostream ****    *
 427:/usr/include/c++/9.2.0/ostream ****    *  Objects of this class are created before all of the standard
 428:/usr/include/c++/9.2.0/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 429:/usr/include/c++/9.2.0/ostream ****    *  suffix operations</em>.
 430:/usr/include/c++/9.2.0/ostream ****   */
 431:/usr/include/c++/9.2.0/ostream ****   template <typename _CharT, typename _Traits>
 432:/usr/include/c++/9.2.0/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 433:/usr/include/c++/9.2.0/ostream ****     {
 434:/usr/include/c++/9.2.0/ostream ****       // Data Members.
 435:/usr/include/c++/9.2.0/ostream ****       bool 				_M_ok;
 436:/usr/include/c++/9.2.0/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 437:/usr/include/c++/9.2.0/ostream **** 
 438:/usr/include/c++/9.2.0/ostream ****     public:
 439:/usr/include/c++/9.2.0/ostream ****       /**
 440:/usr/include/c++/9.2.0/ostream ****        *  @brief  The constructor performs preparatory work.
 441:/usr/include/c++/9.2.0/ostream ****        *  @param  __os  The output stream to guard.
 442:/usr/include/c++/9.2.0/ostream ****        *
 443:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 444:/usr/include/c++/9.2.0/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 445:/usr/include/c++/9.2.0/ostream ****        *  is called to synchronize the output sequences.
 446:/usr/include/c++/9.2.0/ostream ****        *
 447:/usr/include/c++/9.2.0/ostream ****        *  If the stream state is still good, then the sentry state becomes
 448:/usr/include/c++/9.2.0/ostream ****        *  true (@a okay).
 449:/usr/include/c++/9.2.0/ostream ****       */
 450:/usr/include/c++/9.2.0/ostream ****       explicit
 451:/usr/include/c++/9.2.0/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 452:/usr/include/c++/9.2.0/ostream **** 
 453:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic push
 454:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 455:/usr/include/c++/9.2.0/ostream ****       /**
 456:/usr/include/c++/9.2.0/ostream ****        *  @brief  Possibly flushes the stream.
 457:/usr/include/c++/9.2.0/ostream ****        *
 458:/usr/include/c++/9.2.0/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 459:/usr/include/c++/9.2.0/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 460:/usr/include/c++/9.2.0/ostream ****        *  @c flush() on the output stream.
 461:/usr/include/c++/9.2.0/ostream ****       */
 462:/usr/include/c++/9.2.0/ostream ****       ~sentry()
 463:/usr/include/c++/9.2.0/ostream ****       {
 464:/usr/include/c++/9.2.0/ostream **** 	// XXX MT
 465:/usr/include/c++/9.2.0/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 466:/usr/include/c++/9.2.0/ostream **** 	  {
 467:/usr/include/c++/9.2.0/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
GAS LISTING /tmp/ccEa7iXV.s 			page 114


 468:/usr/include/c++/9.2.0/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 469:/usr/include/c++/9.2.0/ostream **** 	      _M_os.setstate(ios_base::badbit);
 470:/usr/include/c++/9.2.0/ostream **** 	  }
 471:/usr/include/c++/9.2.0/ostream ****       }
 472:/usr/include/c++/9.2.0/ostream **** #pragma GCC diagnostic pop
 473:/usr/include/c++/9.2.0/ostream **** 
 474:/usr/include/c++/9.2.0/ostream ****       /**
 475:/usr/include/c++/9.2.0/ostream ****        *  @brief  Quick status checking.
 476:/usr/include/c++/9.2.0/ostream ****        *  @return  The sentry state.
 477:/usr/include/c++/9.2.0/ostream ****        *
 478:/usr/include/c++/9.2.0/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 479:/usr/include/c++/9.2.0/ostream ****        *  return value is that of the sentry state (true == okay).
 480:/usr/include/c++/9.2.0/ostream ****       */
 481:/usr/include/c++/9.2.0/ostream **** #if __cplusplus >= 201103L
 482:/usr/include/c++/9.2.0/ostream ****       explicit
 483:/usr/include/c++/9.2.0/ostream **** #endif
 484:/usr/include/c++/9.2.0/ostream ****       operator bool() const
 485:/usr/include/c++/9.2.0/ostream ****       { return _M_ok; }
 486:/usr/include/c++/9.2.0/ostream ****     };
 487:/usr/include/c++/9.2.0/ostream **** 
 488:/usr/include/c++/9.2.0/ostream ****   //@{
 489:/usr/include/c++/9.2.0/ostream ****   /**
 490:/usr/include/c++/9.2.0/ostream ****    *  @brief  Character inserters
 491:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 492:/usr/include/c++/9.2.0/ostream ****    *  @param  __c  A character.
 493:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 494:/usr/include/c++/9.2.0/ostream ****    *
 495:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 496:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 497:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts a single character and any required
 498:/usr/include/c++/9.2.0/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 499:/usr/include/c++/9.2.0/ostream ****    *  called.
 500:/usr/include/c++/9.2.0/ostream ****    *
 501:/usr/include/c++/9.2.0/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 502:/usr/include/c++/9.2.0/ostream ****    *  @c char, the character is widened before insertion.
 503:/usr/include/c++/9.2.0/ostream ****   */
 504:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 505:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 506:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 507:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 508:/usr/include/c++/9.2.0/ostream **** 
 509:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 510:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 511:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 512:/usr/include/c++/9.2.0/ostream ****     { return (__out << __out.widen(__c)); }
 513:/usr/include/c++/9.2.0/ostream **** 
 514:/usr/include/c++/9.2.0/ostream ****   // Specialization
 515:/usr/include/c++/9.2.0/ostream ****   template <class _Traits>
 516:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 517:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 518:/usr/include/c++/9.2.0/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 519:/usr/include/c++/9.2.0/ostream **** 
 520:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 521:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 522:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 523:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 524:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
GAS LISTING /tmp/ccEa7iXV.s 			page 115


 525:/usr/include/c++/9.2.0/ostream **** 
 526:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 527:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 528:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 529:/usr/include/c++/9.2.0/ostream ****     { return (__out << static_cast<char>(__c)); }
 530:/usr/include/c++/9.2.0/ostream ****   //@}
 531:/usr/include/c++/9.2.0/ostream **** 
 532:/usr/include/c++/9.2.0/ostream ****   //@{
 533:/usr/include/c++/9.2.0/ostream ****   /**
 534:/usr/include/c++/9.2.0/ostream ****    *  @brief  String inserters
 535:/usr/include/c++/9.2.0/ostream ****    *  @param  __out  An output stream.
 536:/usr/include/c++/9.2.0/ostream ****    *  @param  __s  A character string.
 537:/usr/include/c++/9.2.0/ostream ****    *  @return  out
 538:/usr/include/c++/9.2.0/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 539:/usr/include/c++/9.2.0/ostream ****    *
 540:/usr/include/c++/9.2.0/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 541:/usr/include/c++/9.2.0/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 542:/usr/include/c++/9.2.0/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 543:/usr/include/c++/9.2.0/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 544:/usr/include/c++/9.2.0/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 545:/usr/include/c++/9.2.0/ostream ****   */
 546:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 547:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 548:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 549:/usr/include/c++/9.2.0/ostream ****     {
 550:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 551:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 552:/usr/include/c++/9.2.0/ostream ****       else
 553:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 554:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 555:/usr/include/c++/9.2.0/ostream ****       return __out;
 556:/usr/include/c++/9.2.0/ostream ****     }
 557:/usr/include/c++/9.2.0/ostream **** 
 558:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/9.2.0/ostream ****     basic_ostream<_CharT, _Traits> &
 560:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 561:/usr/include/c++/9.2.0/ostream **** 
 562:/usr/include/c++/9.2.0/ostream ****   // Partial specializations
 563:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 564:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 565:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 2278              		.loc 13 565 5 view .LVU647
 2279              		.loc 13 565 5 is_stmt 0 view .LVU648
 2280              	.LBE1346:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2281              		.loc 9 335 2 is_stmt 1 view .LVU649
 2282              	.LBB1348:
 2283              	.LBB1347:
 566:/usr/include/c++/9.2.0/ostream ****     {
 567:/usr/include/c++/9.2.0/ostream ****       if (!__s)
 568:/usr/include/c++/9.2.0/ostream **** 	__out.setstate(ios_base::badbit);
 569:/usr/include/c++/9.2.0/ostream ****       else
 570:/usr/include/c++/9.2.0/ostream **** 	__ostream_insert(__out, __s,
 2284              		.loc 13 570 18 is_stmt 0 view .LVU650
 2285 0a1b BA040000 		movl	$4, %edx
 2285      00
 2286 0a20 488D3500 		leaq	.LC8(%rip), %rsi
GAS LISTING /tmp/ccEa7iXV.s 			page 116


 2286      000000
 2287              	.LVL213:
 2288              		.loc 13 570 18 view .LVU651
 2289 0a27 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 2289      000000
 2290              	.LVL214:
 2291              	.LEHB0:
 2292              		.loc 13 570 18 view .LVU652
 2293 0a2e E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 2293      00
 2294              	.LVL215:
 2295              		.loc 13 570 18 view .LVU653
 2296              	.LBE1347:
 2297              	.LBE1348:
 2298              	.LBB1349:
 2299              	.LBI1349:
  35:Includes/findwayBases.hpp ****     }
  36:Includes/findwayBases.hpp **** };
  37:Includes/findwayBases.hpp **** 
  38:Includes/findwayBases.hpp **** struct graphPoint
  39:Includes/findwayBases.hpp **** {
  40:Includes/findwayBases.hpp ****     struct graphPoint **targets = NULL;
  41:Includes/findwayBases.hpp ****     size_t numOfTargets = 0;
  42:Includes/findwayBases.hpp ****     struct coords c;
  43:Includes/findwayBases.hpp ****     bool calculated = false;
  44:Includes/findwayBases.hpp ****     COORDS_DATATYPE weight = INF;
  45:Includes/findwayBases.hpp ****     size_t i = 0;
  46:Includes/findwayBases.hpp **** 
  47:Includes/findwayBases.hpp ****     std::string toString()
 2300              		.loc 5 47 17 is_stmt 1 view .LVU654
 2301              	.LBB1350:
  48:Includes/findwayBases.hpp ****     {
  49:Includes/findwayBases.hpp ****         std::string str = "";
 2302              		.loc 5 49 9 view .LVU655
 2303              	.LBB1351:
 2304              	.LBI1351:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 2305              		.loc 11 138 7 view .LVU656
 2306              	.LBB1352:
 2307              	.LBI1352:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2308              		.loc 12 80 7 view .LVU657
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2309              		.loc 12 80 7 is_stmt 0 view .LVU658
 2310              	.LBE1352:
 2311              	.LBE1351:
 2312              	.LBB1353:
 2313              	.LBI1353:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 2314              		.loc 8 525 7 is_stmt 1 view .LVU659
 2315              	.LBB1354:
 2316              	.LBB1355:
 2317              	.LBI1355:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2318              		.loc 8 190 7 view .LVU660
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2319              		.loc 8 190 7 is_stmt 0 view .LVU661
GAS LISTING /tmp/ccEa7iXV.s 			page 117


 2320              	.LBE1355:
 2321              	.LBB1356:
 2322              	.LBI1356:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 2323              		.loc 8 156 2 is_stmt 1 view .LVU662
 2324              	.LBB1357:
 2325              	.LBB1358:
 2326              	.LBB1359:
 2327              	.LBI1359:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2328              		.loc 11 141 7 view .LVU663
 2329              	.LBB1360:
 2330              	.LBI1360:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2331              		.loc 12 83 7 view .LVU664
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2332              		.loc 12 83 7 is_stmt 0 view .LVU665
 2333              	.LBE1360:
 2334              	.LBE1359:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2335              		.loc 8 157 35 view .LVU666
 2336 0a33 4889E7   		movq	%rsp, %rdi
 2337 0a36 488D4424 		leaq	16(%rsp), %rax
 2337      10
 2338              	.LVL216:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2339              		.loc 8 157 35 view .LVU667
 2340 0a3b 48890424 		movq	%rax, (%rsp)
 2341              	.LVL217:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2342              		.loc 8 157 35 view .LVU668
 2343              	.LBE1358:
 2344              	.LBE1357:
 2345              	.LBE1356:
 2346              	.LBB1361:
 2347              	.LBI1361:
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 2348              		.loc 9 329 7 is_stmt 1 view .LVU669
 2349              	.LBE1361:
 2350              	.LBE1354:
 2351              	.LBE1353:
 2352              	.LBE1350:
 2353              	.LBE1349:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2354              		.loc 9 335 2 view .LVU670
 2355              	.LBB1602:
 2356              	.LBB1595:
 2357              	.LBB1367:
 2358              	.LBB1366:
 2359              	.LBB1362:
 2360              	.LBI1362:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 2361              		.loc 8 263 9 view .LVU671
 2362              	.LBB1363:
 2363              	.LBB1364:
 2364              	.LBI1364:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
GAS LISTING /tmp/ccEa7iXV.s 			page 118


 2365              		.loc 8 243 9 view .LVU672
 2366              	.LBB1365:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2367              		.loc 8 247 11 is_stmt 0 view .LVU673
 2368 0a3f 488D1500 		leaq	.LC9(%rip), %rdx
 2368      000000
 2369 0a46 4889D6   		movq	%rdx, %rsi
 2370 0a49 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
 2370      00
 2371              	.LVL218:
 2372              	.LEHE0:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 2373              		.loc 8 247 11 view .LVU674
 2374              	.LBE1365:
 2375              	.LBE1364:
 2376              	.LBE1363:
 2377              	.LBE1362:
 2378              	.LBE1366:
 2379              	.LBE1367:
 2380              	.LBB1368:
 2381              	.LBI1368:
 2382              		.loc 11 153 7 is_stmt 1 view .LVU675
 2383              	.LBB1369:
 2384              	.LBI1369:
 2385              		.loc 12 89 7 view .LVU676
 2386              		.loc 12 89 7 is_stmt 0 view .LVU677
 2387              	.LBE1369:
 2388              	.LBE1368:
  50:Includes/findwayBases.hpp ****         str += "{tgts: ";
 2389              		.loc 5 50 9 is_stmt 1 view .LVU678
 2390              	.LBB1370:
 2391              	.LBI1370:
 626:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 630:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 638:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 648:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
 650:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
GAS LISTING /tmp/ccEa7iXV.s 			page 119


 651:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 653:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 654:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string()
 658:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 659:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 660:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 664:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 665:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 667:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 670:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/usr/include/c++/9.2.0/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 673:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/usr/include/c++/9.2.0/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 677:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(0);
 680:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 681:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else
 682:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
 683:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 692:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 693:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 695:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 696:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__str);
 697:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 698:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 699:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 704:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
 706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 120


 708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 714:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 715:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c)
 716:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 717:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c);
 718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 719:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 720:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 721:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
 729:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 739:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(0);
 743:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 744:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 747:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__str.size())
 751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_set_length(__str.size());
 753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    size_type __capacity;
 761:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 763:/usr/include/c++/9.2.0/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  {
GAS LISTING /tmp/ccEa7iXV.s 			page 121


 765:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __data = _M_data();
 767:/usr/include/c++/9.2.0/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  }
 769:/usr/include/c++/9.2.0/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    if (__data)
 777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      {
 778:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_data(__data);
 779:/usr/include/c++/9.2.0/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      }
 781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    else
 782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  assign(__str);
 786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str.clear();
 787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 788:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 789:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 790:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 794:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
 795:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
 799:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 800:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
 801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 802:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 806:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 807:/usr/include/c++/9.2.0/bits/basic_string.h ****      template<typename _Tp>
 808:/usr/include/c++/9.2.0/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/usr/include/c++/9.2.0/bits/basic_string.h ****        operator=(const _Tp& __svt)
 810:/usr/include/c++/9.2.0/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 812:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
 815:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 816:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
 819:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 820:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
 821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 122


 822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.
 824:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 826:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 829:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 832:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 833:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 834:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 837:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 840:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 841:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
 842:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 845:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 848:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 849:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 850:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 853:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.
 857:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 858:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 859:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 862:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 866:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 867:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 868:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.
 875:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 876:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
 877:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
GAS LISTING /tmp/ccEa7iXV.s 			page 123


 879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 884:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 885:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 886:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 889:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
 893:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 894:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 895:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
 896:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 898:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
 901:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 902:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
 903:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
 904:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 906:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
 910:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 911:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 912:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
 913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
 919:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 920:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
 921:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
 922:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 924:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 925:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
 926:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
 927:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 929:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 931:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 932:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 933:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
 935:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccEa7iXV.s 			page 124


 936:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 938:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 939:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
 941:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 954:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 955:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 957:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
 961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
 966:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 967:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 968:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
 969:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 971:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
 974:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 976:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
 977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
 978:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
 979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
 980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
 981:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
 982:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
 983:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
 984:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 985:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 986:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
 987:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 988:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
 989:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
 992:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccEa7iXV.s 			page 125


 993:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 998:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 999:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
1002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
1015:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1016:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1017:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1019:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1022:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1023:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_set_length(0); }
1025:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1026:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1030:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
1033:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1034:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
1035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1045:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
GAS LISTING /tmp/ccEa7iXV.s 			page 126


1050:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
1061:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1062:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1063:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
1064:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1065:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
1067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1083:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1084:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
1085:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
1087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1092:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1093:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1094:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1095:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1100:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1104:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1105:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
1106:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 127


1107:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
1108:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
1112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
1113:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1114:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1115:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1117:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1119:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1120:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1121:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() noexcept
1122:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1123:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1125:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1126:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1127:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1128:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1130:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1131:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1132:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
1133:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1134:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
1136:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1137:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1138:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1139:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
1141:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1142:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
1143:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() noexcept
1144:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1145:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1149:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
1152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1153:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
1154:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
1155:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1159:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1161:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
1162:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
GAS LISTING /tmp/ccEa7iXV.s 			page 128


1164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1167:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
1170:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1171:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1176:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
 2392              		.loc 8 1177 7 view .LVU679
 2393              	.LBB1371:
 2394              	.LBI1371:
1178:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
1179:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1180:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
1182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1185:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1186:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
1189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1190:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1192:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1194:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1198:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1199:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1202:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1203:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1209:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1214:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1215:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
GAS LISTING /tmp/ccEa7iXV.s 			page 129


1218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1220:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str)
1222:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1224:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1232:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1237:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1238:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1243:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1244:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
1245:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1249:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1250:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1251:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
1255:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1257:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1258:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
 2395              		.loc 8 1263 7 view .LVU680
 2396              		.loc 8 1263 7 is_stmt 0 view .LVU681
 2397              	.LBE1371:
 2398              	.LBE1370:
 2399              	.LBE1595:
 2400              	.LBE1602:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2401              		.loc 9 335 2 is_stmt 1 view .LVU682
 2402              	.LBB1603:
 2403              	.LBB1596:
 2404              	.LBB1379:
GAS LISTING /tmp/ccEa7iXV.s 			page 130


 2405              	.LBB1378:
 2406              	.LBB1372:
 2407              	.LBB1373:
 2408              	.LBI1373:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2409              		.loc 8 320 7 view .LVU683
 2410              	.LBB1374:
 2411              	.LBB1375:
 2412              	.LBI1375:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2413              		.loc 8 930 7 view .LVU684
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2414              		.loc 8 930 7 is_stmt 0 view .LVU685
 2415              	.LBE1375:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2416              		.loc 8 322 2 view .LVU686
 2417 0a4e 48B8FFFF 		movabsq	$4611686018427387903, %rax
 2417      FFFFFFFF 
 2417      FF3F
 2418 0a58 482B4424 		subq	8(%rsp), %rax
 2418      08
 2419 0a5d 4883F806 		cmpq	$6, %rax
 2420 0a61 7616     		jbe	.L256
 2421              	.LVL219:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2422              		.loc 8 322 2 view .LVU687
 2423              	.LBE1374:
 2424              	.LBE1373:
1264:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_append(__s, __n);
 2425              		.loc 8 1268 27 view .LVU688
 2426 0a63 4889E7   		movq	%rsp, %rdi
 2427 0a66 BA070000 		movl	$7, %edx
 2427      00
 2428 0a6b 488D3500 		leaq	.LC11(%rip), %rsi
 2428      000000
 2429              	.LEHB1:
 2430 0a72 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2430      00
 2431              	.LVL220:
 2432 0a77 EB14     		jmp	.L257
 2433              	.LVL221:
 2434              	.L256:
 2435              	.LBB1377:
 2436              	.LBB1376:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2437              		.loc 8 323 24 view .LVU689
 2438 0a79 488D3D00 		leaq	.LC10(%rip), %rdi
 2438      000000
 2439 0a80 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 2439      00
 2440              	.LVL222:
 2441              	.L243:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccEa7iXV.s 			page 131


 2442              		.loc 8 323 24 view .LVU690
 2443 0a85 4889C3   		movq	%rax, %rbx
 2444              	.LVL223:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2445              		.loc 8 323 24 view .LVU691
 2446 0a88 E9530200 		jmp	.L195
 2446      00
 2447              	.LVL224:
 2448              	.L257:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2449              		.loc 8 323 24 view .LVU692
 2450              	.LBE1376:
 2451              	.LBE1377:
 2452              	.LBE1372:
 2453              	.LBE1378:
 2454              	.LBE1379:
  51:Includes/findwayBases.hpp ****         str += std::to_string(numOfTargets);
 2455              		.loc 5 51 9 is_stmt 1 view .LVU693
 2456              	.LBB1380:
 2457              	.LBI1380:
1269:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1270:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1271:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1279:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1280:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1283:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1289:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1290:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1302:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
GAS LISTING /tmp/ccEa7iXV.s 			page 132


1306:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1307:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1308:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1309:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1312:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1318:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1319:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1322:/usr/include/c++/9.2.0/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
1325:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1326:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1333:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1334:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1337:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1342:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1343:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1344:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
1346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1348:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1349:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
1350:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1351:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
GAS LISTING /tmp/ccEa7iXV.s 			page 133


1363:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1364:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1368:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1369:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1370:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1372:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1379:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1380:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1387:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1388:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1389:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1402:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1403:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1408:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1418:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1419:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
GAS LISTING /tmp/ccEa7iXV.s 			page 134


1420:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1421:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1424:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1425:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
1433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1442:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
1450:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1451:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1452:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1463:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1467:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1468:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1469:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
1470:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1473:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
GAS LISTING /tmp/ccEa7iXV.s 			page 135


1477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1479:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1483:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1484:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1486:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1490:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1491:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1494:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1497:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1498:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1505:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1506:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1509:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1512:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1515:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1517:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1519:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1532:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1533:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
GAS LISTING /tmp/ccEa7iXV.s 			page 136


1534:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1536:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1541:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1542:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1554:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1555:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1556:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1559:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1560:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *              insert at.
1565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
1567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1574:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1575:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
1576:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/usr/include/c++/9.2.0/bits/basic_string.h **** 	iterator
1578:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
1580:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1585:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
1586:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
GAS LISTING /tmp/ccEa7iXV.s 			page 137


1591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
1599:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
1600:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1603:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1604:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1611:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1612:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1615:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/usr/include/c++/9.2.0/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1618:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1620:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1623:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
1624:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1625:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1626:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1637:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1638:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1639:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1643:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
GAS LISTING /tmp/ccEa7iXV.s 			page 138


1648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1661:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1662:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1684:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1685:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1688:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
1702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1703:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1704:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
GAS LISTING /tmp/ccEa7iXV.s 			page 139


1705:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1706:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1710:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1711:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1726:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1727:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1728:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1732:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1744:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1745:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1746:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1748:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1753:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1754:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1761:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
GAS LISTING /tmp/ccEa7iXV.s 			page 140


1762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1768:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1769:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
1775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1778:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
1779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
1783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
1786:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
1789:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
1790:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1791:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1805:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1806:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1807:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1809:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == npos)
1811:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__n != 0)
1813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
1815:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1816:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1817:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
GAS LISTING /tmp/ccEa7iXV.s 			page 141


1819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1825:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1826:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1828:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < end());
1830:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1834:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1835:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1844:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
1845:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1847:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __last <= end());
1849:/usr/include/c++/9.2.0/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__last == end())
1851:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
1853:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1856:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1857:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
1862:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
1863:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
1864:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() noexcept
1865:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1866:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1869:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
1870:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1871:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
GAS LISTING /tmp/ccEa7iXV.s 			page 142


1876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
1879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
1887:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1888:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1889:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
1902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1910:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1911:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1916:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1917:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
GAS LISTING /tmp/ccEa7iXV.s 			page 143


1933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1934:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1935:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1936:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2)
1938:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1939:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/usr/include/c++/9.2.0/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1943:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1944:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1945:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
1959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1960:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1961:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
1963:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
1966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
1968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
1973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
1983:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
1984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
1985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/usr/include/c++/9.2.0/bits/basic_string.h **** 
1989:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 144


1990:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
1997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2002:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2003:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string& __str)
2005:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2007:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2016:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2021:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2022:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2023:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2026:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2028:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2030:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2031:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2044:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2045:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 145


2047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2050:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2051:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2052:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2065:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2066:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __c)
2068:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2073:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2074:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2088:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2089:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator,
2091:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2093:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2096:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   std::__false_type());
2101:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2102:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2103:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
GAS LISTING /tmp/ccEa7iXV.s 			page 146


2104:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/usr/include/c++/9.2.0/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
2107:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
2108:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2109:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
2112:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= end());
2114:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2118:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2119:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2120:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2123:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2126:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2132:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2133:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2134:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2137:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2144:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2145:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2148:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
2150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2155:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2156:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2159:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= end());
GAS LISTING /tmp/ccEa7iXV.s 			page 147


2161:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2166:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2175:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
2180:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2181:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
2185:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2186:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2188:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2194:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2201:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2202:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2211:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2212:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2216:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
GAS LISTING /tmp/ccEa7iXV.s 			page 148


2218:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
2219:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2223:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2224:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
2227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
2229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2232:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2233:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2236:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2239:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2241:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
2242:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
2243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2244:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2248:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
2249:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
2250:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __false_type);
2253:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2255:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
2257:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2258:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2259:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const size_type __len2);
2261:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2262:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
2263:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2265:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
2266:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2267:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 149


2275:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2279:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2280:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
2288:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2289:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
2290:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2292:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
2293:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2294:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
2298:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2299:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2300:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2302:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2303:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2304:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2306:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2311:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2314:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2315:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2319:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
2323:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
2324:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
2325:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
2326:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2327:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2330:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
2331:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccEa7iXV.s 			page 150


2332:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2334:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2345:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2346:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2347:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2350:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2351:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
2359:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2360:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2361:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2365:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2367:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2372:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2373:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2377:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2380:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2381:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2382:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2383:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
GAS LISTING /tmp/ccEa7iXV.s 			page 151


2389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2392:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2393:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2395:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2398:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2399:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2400:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2409:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2410:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2412:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2422:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2423:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2427:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2429:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2434:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2439:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2442:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2443:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2444:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
GAS LISTING /tmp/ccEa7iXV.s 			page 152


2446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2451:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2455:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2456:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2457:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2460:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2461:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2466:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2470:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2471:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2473:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2476:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2477:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2483:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2486:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2487:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2488:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2490:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2500:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2501:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2502:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
GAS LISTING /tmp/ccEa7iXV.s 			page 153


2503:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2506:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2514:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2522:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2523:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2524:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2535:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2536:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2537:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2540:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2550:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2551:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2554:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2557:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2558:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
GAS LISTING /tmp/ccEa7iXV.s 			page 154


2560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2570:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2571:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2574:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2584:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2585:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2586:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2590:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
2595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2598:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2600:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2603:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2606:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2607:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2608:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
GAS LISTING /tmp/ccEa7iXV.s 			page 155


2617:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2619:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2620:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2621:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2624:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2634:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2635:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2638:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2641:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2642:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2652:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2654:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2655:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2657:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2658:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2668:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2669:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2673:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
GAS LISTING /tmp/ccEa7iXV.s 			page 156


2674:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2678:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2681:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2682:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2686:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2689:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2698:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2703:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2704:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2707:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2713:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2714:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2717:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2718:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2724:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2725:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 157


2731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2735:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2736:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2750:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2751:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2755:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
2760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2763:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2764:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2768:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2771:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2772:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2773:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
2784:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2785:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2786:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
GAS LISTING /tmp/ccEa7iXV.s 			page 158


2788:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2794:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
2798:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2799:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2800:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2803:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2806:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2807:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2813:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2817:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
2818:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2821:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
2826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2833:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
2834:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
2836:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2838:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
GAS LISTING /tmp/ccEa7iXV.s 			page 159


2845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2852:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2853:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
2855:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2859:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
2861:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
2863:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
2864:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2865:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2871:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2872:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2876:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2881:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
2883:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
2885:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2886:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2887:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2895:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2896:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
GAS LISTING /tmp/ccEa7iXV.s 			page 160


2902:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2904:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
2910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
2914:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
2915:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
2920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
2924:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
2925:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2926:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
2941:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2942:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2945:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2946:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2948:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
GAS LISTING /tmp/ccEa7iXV.s 			page 161


2959:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
2967:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2971:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2972:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2975:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
2980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
2988:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
2989:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
2990:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
2992:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
2995:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
2999:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3001:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3012:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3013:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3014:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 162


3016:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3017:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
3036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
3039:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
3040:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
3041:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
3043:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3044:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3046:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3049:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3050:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3053:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3054:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3057:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3058:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3061:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3062:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3065:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3066:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
3069:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3070:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/usr/include/c++/9.2.0/bits/basic_string.h ****     };
GAS LISTING /tmp/ccEa7iXV.s 			page 163


3073:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/usr/include/c++/9.2.0/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/usr/include/c++/9.2.0/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3077:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
3078:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3081:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup strings
3082:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @ingroup sequences
3083:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3084:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3089:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3095:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @doctodo
3096:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3097:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3098:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3101:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  A string looks like this:
3102:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3103:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @code
3104:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        [_Rep]
3105:/usr/include/c++/9.2.0/bits/basic_string.h ****    *                                        _M_length
3106:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/usr/include/c++/9.2.0/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @endcode
3110:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3111:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
3113:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  pointer to the header.
3114:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3115:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  object at the front.
3122:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3123:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  string length.)
3128:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3129:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
GAS LISTING /tmp/ccEa7iXV.s 			page 164


3130:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
3135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/usr/include/c++/9.2.0/bits/basic_string.h ****   */
3138:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/usr/include/c++/9.2.0/bits/basic_string.h ****     class basic_string
3141:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
3142:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3144:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Types:
3145:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3146:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3155:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3158:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/usr/include/c++/9.2.0/bits/basic_string.h ****                                                             const_iterator;
3163:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3166:/usr/include/c++/9.2.0/bits/basic_string.h ****     protected:
3167:/usr/include/c++/9.2.0/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3170:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3171:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _Rep: string representation
3172:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   Invariants:
3173:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/usr/include/c++/9.2.0/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/usr/include/c++/9.2.0/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/usr/include/c++/9.2.0/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/usr/include/c++/9.2.0/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3185:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep_base
3186:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 165


3187:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_length;
3188:/usr/include/c++/9.2.0/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3191:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3192:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3194:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Types:
3195:/usr/include/c++/9.2.0/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// (Public) Data members:
3198:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3199:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// look like this:
3206:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Solving for m:
3208:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3213:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/usr/include/c++/9.2.0/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/usr/include/c++/9.2.0/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3217:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _Rep&
3218:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/usr/include/c++/9.2.0/bits/basic_string.h ****         { 
3220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3226:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3227:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3228:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3230:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/usr/include/c++/9.2.0/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/usr/include/c++/9.2.0/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3237:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3239:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3240:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3241:/usr/include/c++/9.2.0/bits/basic_string.h ****         bool
3242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/ccEa7iXV.s 			page 166


3244:/usr/include/c++/9.2.0/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/usr/include/c++/9.2.0/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/usr/include/c++/9.2.0/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/usr/include/c++/9.2.0/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/usr/include/c++/9.2.0/bits/basic_string.h ****           // _M_dispose.
3250:/usr/include/c++/9.2.0/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3252:/usr/include/c++/9.2.0/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3254:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
3255:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3256:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3257:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3260:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
3261:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3264:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3267:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3270:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
3271:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3278:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3279:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3280:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refdata() throw()
3281:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3283:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3284:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3286:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/usr/include/c++/9.2.0/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3289:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// Create & Destroy
3291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	static _Rep*
3292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3294:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3295:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3297:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3300:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    {
GAS LISTING /tmp/ccEa7iXV.s 			page 167


3301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/usr/include/c++/9.2.0/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   all the previous decrements.
3308:/usr/include/c++/9.2.0/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/usr/include/c++/9.2.0/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/usr/include/c++/9.2.0/bits/basic_string.h **** 							 -1) <= 0)
3313:/usr/include/c++/9.2.0/bits/basic_string.h **** 		{
3314:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/usr/include/c++/9.2.0/bits/basic_string.h **** 		}
3317:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    }
3318:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3319:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3320:/usr/include/c++/9.2.0/bits/basic_string.h **** 	void
3321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
3326:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3329:/usr/include/c++/9.2.0/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_refdata();
3331:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}  // XXX MT
3332:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3333:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT*
3334:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3336:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3337:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3340:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
3341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3343:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3345:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3346:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3347:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (public):
3348:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/usr/include/c++/9.2.0/bits/basic_string.h ****       // size that the allocator can hold.
3350:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/usr/include/c++/9.2.0/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3353:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
3354:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Data Members (private):
3355:/usr/include/c++/9.2.0/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3357:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
GAS LISTING /tmp/ccEa7iXV.s 			page 168


3358:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3361:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
3362:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3365:/usr/include/c++/9.2.0/bits/basic_string.h ****       _Rep*
3366:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3369:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/usr/include/c++/9.2.0/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3372:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3375:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3376:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3379:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3380:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_leak_hard();
3384:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3386:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3387:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3389:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__pos > this->size())
3390:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __pos;
3394:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3395:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3396:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3397:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
3398:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3402:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3403:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3405:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3407:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3410:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3411:/usr/include/c++/9.2.0/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
3413:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 169


3415:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/usr/include/c++/9.2.0/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3418:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3422:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3424:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3425:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3427:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3429:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3430:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3431:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3433:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3436:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3439:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3440:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3442:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n == 1)
3443:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3445:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3447:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3448:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/usr/include/c++/9.2.0/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Iterator>
3451:/usr/include/c++/9.2.0/bits/basic_string.h ****         static void
3452:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
3454:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
3455:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
3457:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3458:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3459:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3462:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3463:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3467:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
3468:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3471:/usr/include/c++/9.2.0/bits/basic_string.h ****       static void
GAS LISTING /tmp/ccEa7iXV.s 			page 170


3472:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3476:/usr/include/c++/9.2.0/bits/basic_string.h ****       static int
3477:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3481:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3486:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return int(__d);
3487:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3488:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3489:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3490:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3492:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3493:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_leak_hard();
3494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3495:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _Rep&
3496:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3499:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/usr/include/c++/9.2.0/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3503:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/usr/include/c++/9.2.0/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _Res>;
3509:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3510:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/usr/include/c++/9.2.0/bits/basic_string.h ****       static __sv_type
3512:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __svt; }
3514:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3515:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/usr/include/c++/9.2.0/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/usr/include/c++/9.2.0/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/usr/include/c++/9.2.0/bits/basic_string.h ****       // is provided.
3519:/usr/include/c++/9.2.0/bits/basic_string.h ****       struct __sv_wrapper
3520:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3521:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/usr/include/c++/9.2.0/bits/basic_string.h ****       };
3524:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3525:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          wrapper.
3528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
GAS LISTING /tmp/ccEa7iXV.s 			page 171


3529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3531:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/usr/include/c++/9.2.0/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3536:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3537:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/usr/include/c++/9.2.0/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3541:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3544:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string()
3545:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3549:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3551:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3552:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3553:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3554:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3556:/usr/include/c++/9.2.0/bits/basic_string.h ****       explicit
3557:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3559:/usr/include/c++/9.2.0/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3564:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3566:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3574:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3577:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3583:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n);
3585:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 172


3586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3592:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3595:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3596:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3601:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  has no special meaning.
3603:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3604:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/usr/include/c++/9.2.0/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3611:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3620:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
3626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3628:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3632:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3634:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3637:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3639:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3640:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3641:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
GAS LISTING /tmp/ccEa7iXV.s 			page 173


3643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3646:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3648:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/usr/include/c++/9.2.0/bits/basic_string.h ****       { }
3651:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3652:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3657:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
3660:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3662:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3663:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
3664:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3666:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3667:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3674:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
3675:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3678:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3680:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
3683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3686:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3691:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3696:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/usr/include/c++/9.2.0/bits/basic_string.h **** 	explicit
3698:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
GAS LISTING /tmp/ccEa7iXV.s 			page 174


3700:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3701:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3705:/usr/include/c++/9.2.0/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3708:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3712:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3713:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str); }
3715:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3716:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3717:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3720:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3721:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__s); }
3723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3732:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
3734:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3736:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3737:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3738:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/usr/include/c++/9.2.0/bits/basic_string.h ****        **/
3746:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3747:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3750:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// NB: DR 1204.
3751:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
3752:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3753:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3754:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3755:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
GAS LISTING /tmp/ccEa7iXV.s 			page 175


3757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3759:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
3760:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3762:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
3764:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3765:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
3766:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3767:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3769:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3772:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
3773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3777:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return A string_view.
3780:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3781:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
3784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3785:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Iterators:
3786:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3790:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3791:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3793:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data());
3795:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3796:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3797:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3800:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3801:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3802:/usr/include/c++/9.2.0/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3805:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3809:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
3810:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3812:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
3813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
GAS LISTING /tmp/ccEa7iXV.s 			page 176


3814:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3815:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3816:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3817:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3819:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3820:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3821:/usr/include/c++/9.2.0/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3829:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3830:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3833:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3837:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3838:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3839:/usr/include/c++/9.2.0/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3842:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3847:/usr/include/c++/9.2.0/bits/basic_string.h ****       reverse_iterator
3848:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3851:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3855:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3856:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3857:/usr/include/c++/9.2.0/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3860:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character in the %string.
3864:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3865:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3866:/usr/include/c++/9.2.0/bits/basic_string.h ****       cbegin() const noexcept
3867:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3869:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
GAS LISTING /tmp/ccEa7iXV.s 			page 177


3871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last character in the %string.
3872:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3873:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_iterator
3874:/usr/include/c++/9.2.0/bits/basic_string.h ****       cend() const noexcept
3875:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3877:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  reverse element order.
3881:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3882:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3883:/usr/include/c++/9.2.0/bits/basic_string.h ****       crbegin() const noexcept
3884:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3886:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is done in reverse element order.
3890:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3891:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reverse_iterator
3892:/usr/include/c++/9.2.0/bits/basic_string.h ****       crend() const noexcept
3893:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3895:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3896:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
3897:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Capacity:
3898:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3900:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3901:/usr/include/c++/9.2.0/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3904:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  null-termination.
3906:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3907:/usr/include/c++/9.2.0/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3910:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3911:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3912:/usr/include/c++/9.2.0/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3915:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3925:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3926:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 178


3928:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  setting them to 0.
3937:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3938:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3939:/usr/include/c++/9.2.0/bits/basic_string.h ****       resize(size_type __n)
3940:/usr/include/c++/9.2.0/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/usr/include/c++/9.2.0/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3945:/usr/include/c++/9.2.0/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3947:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_exceptions
3948:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (capacity() > size())
3949:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3950:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    try
3951:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { reserve(0); }
3952:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    catch(...)
3953:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      { }
3954:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3955:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3956:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
3957:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
3958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3959:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3960:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3963:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
3964:/usr/include/c++/9.2.0/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3967:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3968:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/usr/include/c++/9.2.0/bits/basic_string.h ****        *          characters.
3970:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3973:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
3977:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
3978:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  data.
3983:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3984:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
GAS LISTING /tmp/ccEa7iXV.s 			page 179


3985:/usr/include/c++/9.2.0/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/usr/include/c++/9.2.0/bits/basic_string.h **** 
3987:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
3988:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
3990:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
3992:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
3994:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  {
3996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  }
3999:/usr/include/c++/9.2.0/bits/basic_string.h **** 	else
4000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4002:/usr/include/c++/9.2.0/bits/basic_string.h **** #else
4003:/usr/include/c++/9.2.0/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4005:/usr/include/c++/9.2.0/bits/basic_string.h ****       clear()
4006:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4008:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4009:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4010:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4013:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/usr/include/c++/9.2.0/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->size() == 0; }
4016:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4017:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Element access:
4018:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)
4027:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4028:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4029:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4031:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4034:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4035:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4036:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
GAS LISTING /tmp/ccEa7iXV.s 			page 180


4042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4045:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4046:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator[](size_type __pos)
4047:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4048:/usr/include/c++/9.2.0/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	// and in C++11 mode.
4050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/usr/include/c++/9.2.0/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4054:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4056:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4057:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4063:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4067:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4068:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n) const
4069:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= this->size())
4071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4075:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
4076:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4077:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4078:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4082:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4084:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  unsharing the string.
4088:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4089:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4090:/usr/include/c++/9.2.0/bits/basic_string.h ****       at(size_type __n)
4091:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__n >= size())
4093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/usr/include/c++/9.2.0/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   __n, this->size());
4097:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
4098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data()[__n];
GAS LISTING /tmp/ccEa7iXV.s 			page 181


4099:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4100:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4101:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4103:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4105:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4106:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4107:/usr/include/c++/9.2.0/bits/basic_string.h ****       front()
4108:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4109:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4111:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4113:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4114:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4116:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4117:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4118:/usr/include/c++/9.2.0/bits/basic_string.h ****       front() const noexcept
4119:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](0);
4122:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4123:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4124:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4125:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  element of the %string.
4127:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4128:/usr/include/c++/9.2.0/bits/basic_string.h ****       reference
4129:/usr/include/c++/9.2.0/bits/basic_string.h ****       back()
4130:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4131:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4135:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4136:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  last element of the %string.
4138:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4139:/usr/include/c++/9.2.0/bits/basic_string.h ****       const_reference
4140:/usr/include/c++/9.2.0/bits/basic_string.h ****       back() const noexcept
4141:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4145:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
4146:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4147:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Modifiers:
4148:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4149:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4153:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4154:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
GAS LISTING /tmp/ccEa7iXV.s 			page 182


4156:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4157:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4158:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4162:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4163:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
4165:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4166:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a character.
4168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4171:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4172:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4174:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->push_back(__c);
4175:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4176:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4177:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4178:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4184:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4185:/usr/include/c++/9.2.0/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4188:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4189:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4195:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4196:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/usr/include/c++/9.2.0/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4200:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4201:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4206:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4207:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str);
4208:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4209:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4210:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
GAS LISTING /tmp/ccEa7iXV.s 			page 183


4213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4217:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4222:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4223:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4231:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4232:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4234:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4239:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4240:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(const _CharT* __s)
4241:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4242:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4245:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4246:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4247:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
4253:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4254:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4255:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4257:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4259:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4263:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4264:/usr/include/c++/9.2.0/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4267:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4268:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters.
GAS LISTING /tmp/ccEa7iXV.s 			page 184


4270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4274:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4276:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4277:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4278:/usr/include/c++/9.2.0/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4281:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4287:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4288:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4291:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4294:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4295:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *               from.
4299:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4303:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4304:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return append(__sv.data()
4309:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
4310:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4312:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4313:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4314:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4318:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4319:/usr/include/c++/9.2.0/bits/basic_string.h ****       push_back(_CharT __c)
4320:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4321:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  this->reserve(__len);
4324:/usr/include/c++/9.2.0/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccEa7iXV.s 			page 185


4327:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4328:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4333:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4334:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4336:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4338:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4345:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4346:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/usr/include/c++/9.2.0/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4349:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->swap(__str);
4350:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4351:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4352:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4353:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4354:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4355:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4367:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4368:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4373:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4379:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4383:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccEa7iXV.s 			page 186


4384:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4386:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4387:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function returns.
4394:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4395:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4396:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4398:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4401:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4402:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4403:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  character @a __c.
4410:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4411:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4412:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4415:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4416:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4423:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4424:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4425:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4428:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4430:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4434:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4435:/usr/include/c++/9.2.0/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4438:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4439:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 187


4441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4445:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4446:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/usr/include/c++/9.2.0/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4449:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4452:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4453:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4454:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4460:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4461:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/usr/include/c++/9.2.0/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4469:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4470:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4471:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4472:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4483:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4484:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4485:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/usr/include/c++/9.2.0/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __end  End of range.
4493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
GAS LISTING /tmp/ccEa7iXV.s 			page 188


4498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4500:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4501:/usr/include/c++/9.2.0/bits/basic_string.h ****         void
4502:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/usr/include/c++/9.2.0/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4505:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4512:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4513:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4515:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/usr/include/c++/9.2.0/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4518:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4519:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4520:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4521:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4531:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4532:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4533:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4536:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4537:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a substring.
4538:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4547:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4554:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccEa7iXV.s 			page 189


4555:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4561:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4570:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4571:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4577:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4578:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4580:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4594:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4595:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4596:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4598:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4601:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4602:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4603:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 190


4612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4617:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4618:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4619:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4623:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4630:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4635:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4636:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4637:/usr/include/c++/9.2.0/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4639:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4645:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4646:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4648:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4652:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4653:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4654:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/usr/include/c++/9.2.0/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4657:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4660:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4661:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from.
4667:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccEa7iXV.s 			page 191


4669:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4670:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
4671:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/usr/include/c++/9.2.0/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
4675:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4680:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
4681:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4682:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4683:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4697:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4698:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/usr/include/c++/9.2.0/bits/basic_string.h ****       { 
4700:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/usr/include/c++/9.2.0/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return *this;
4703:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4704:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4705:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
4709:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4710:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4713:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4714:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __position)
4715:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4723:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4724:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove a range of characters.
GAS LISTING /tmp/ccEa7iXV.s 			page 192


4726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4730:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4733:/usr/include/c++/9.2.0/bits/basic_string.h ****       iterator
4734:/usr/include/c++/9.2.0/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/usr/include/c++/9.2.0/bits/basic_string.h ****  
4736:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The string must be non-empty.
4741:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
4742:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
4743:/usr/include/c++/9.2.0/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4745:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/usr/include/c++/9.2.0/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4748:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
4749:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4750:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4751:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.
4758:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4760:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  error is thrown.
4766:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4767:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4768:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4771:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4772:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.size().
4781:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 193


4783:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4789:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4790:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4796:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4797:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4813:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4814:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4815:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2);
4817:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4818:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4819:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to insert.
4823:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  change if an error is thrown.
4833:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4834:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4835:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4837:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
GAS LISTING /tmp/ccEa7iXV.s 			page 194


4840:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4841:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4842:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is thrown.
4857:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4858:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4859:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/usr/include/c++/9.2.0/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4863:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4871:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4876:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4877:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4880:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4889:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4894:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4895:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4896:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
GAS LISTING /tmp/ccEa7iXV.s 			page 195


4897:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4898:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4902:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4903:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4911:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4916:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4917:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4919:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4922:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4923:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
4932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4937:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4938:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4944:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4945:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
4946:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 196


4954:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
4959:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
4960:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
4961:/usr/include/c++/9.2.0/bits/basic_string.h ****         basic_string&
4962:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/usr/include/c++/9.2.0/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/usr/include/c++/9.2.0/bits/basic_string.h ****         {
4965:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/usr/include/c++/9.2.0/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
4971:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4972:/usr/include/c++/9.2.0/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/usr/include/c++/9.2.0/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4975:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4977:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4983:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4984:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4985:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
4994:/usr/include/c++/9.2.0/bits/basic_string.h **** 
4995:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
4996:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
4998:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5004:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5005:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5006:/usr/include/c++/9.2.0/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5009:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/usr/include/c++/9.2.0/bits/basic_string.h **** 				 && __i2 <= _M_iend());
GAS LISTING /tmp/ccEa7iXV.s 			page 197


5011:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5015:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5016:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5018:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5025:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  thrown.
5030:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5031:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++11
5035:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5036:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5038:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5044:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5045:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5048:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5051:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5052:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5053:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5061:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5062:/usr/include/c++/9.2.0/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/usr/include/c++/9.2.0/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5066:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
GAS LISTING /tmp/ccEa7iXV.s 			page 198


5068:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      __sv.data()
5069:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5072:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5073:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5074:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/usr/include/c++/9.2.0/bits/basic_string.h ****           to replace at.
5077:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/usr/include/c++/9.2.0/bits/basic_string.h ****           for the replace.
5079:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5082:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5083:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/usr/include/c++/9.2.0/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5089:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5090:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5091:/usr/include/c++/9.2.0/bits/basic_string.h ****     private:
5092:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
5093:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5094:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5098:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InputIterator>
5099:/usr/include/c++/9.2.0/bits/basic_string.h **** 	basic_string&
5100:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5103:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5104:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     _CharT __c);
5106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5107:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string&
5108:/usr/include/c++/9.2.0/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      size_type __n2);
5110:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5111:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/usr/include/c++/9.2.0/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5114:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5115:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5118:/usr/include/c++/9.2.0/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/usr/include/c++/9.2.0/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5121:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5122:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _Integer>
GAS LISTING /tmp/ccEa7iXV.s 			page 199


5125:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5126:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/usr/include/c++/9.2.0/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/usr/include/c++/9.2.0/bits/basic_string.h **** 				    __end, __a); }
5130:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5131:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5132:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5135:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5136:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5137:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5139:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/usr/include/c++/9.2.0/bits/basic_string.h ****         }
5142:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5143:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _InIterator>
5145:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5146:/usr/include/c++/9.2.0/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/usr/include/c++/9.2.0/bits/basic_string.h **** 		      input_iterator_tag);
5148:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5149:/usr/include/c++/9.2.0/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/usr/include/c++/9.2.0/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<class _FwdIterator>
5152:/usr/include/c++/9.2.0/bits/basic_string.h ****         static _CharT*
5153:/usr/include/c++/9.2.0/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/usr/include/c++/9.2.0/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5156:/usr/include/c++/9.2.0/bits/basic_string.h ****       static _CharT*
5157:/usr/include/c++/9.2.0/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5159:/usr/include/c++/9.2.0/bits/basic_string.h ****     public:
5160:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5161:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5162:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
5165:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5169:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5173:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5174:/usr/include/c++/9.2.0/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5176:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5177:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5180:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  time.
GAS LISTING /tmp/ccEa7iXV.s 			page 200


5182:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5183:/usr/include/c++/9.2.0/bits/basic_string.h ****       void
5184:/usr/include/c++/9.2.0/bits/basic_string.h ****       swap(basic_string& __s)
5185:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5187:/usr/include/c++/9.2.0/bits/basic_string.h ****       // String operations:
5188:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5189:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5191:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  happen.
5193:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5194:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5195:/usr/include/c++/9.2.0/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5197:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5198:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5199:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5201:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5206:/usr/include/c++/9.2.0/bits/basic_string.h ****       const _CharT*
5207:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
5209:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5210:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5212:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5214:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5217:/usr/include/c++/9.2.0/bits/basic_string.h ****       _CharT*
5218:/usr/include/c++/9.2.0/bits/basic_string.h ****       data() noexcept
5219:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5220:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_M_leak();
5221:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return _M_data();
5222:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5223:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
5224:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5225:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5226:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5228:/usr/include/c++/9.2.0/bits/basic_string.h ****       allocator_type
5229:/usr/include/c++/9.2.0/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus; }
5231:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5232:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5233:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 201


5239:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5243:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5244:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5245:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5248:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5249:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5254:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns npos.
5257:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5258:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5259:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5263:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5264:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5269:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5273:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5274:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5276:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5279:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5280:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5281:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5286:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5290:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5291:/usr/include/c++/9.2.0/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5293:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5295:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a string_view.
GAS LISTING /tmp/ccEa7iXV.s 			page 202


5296:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5300:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5301:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5305:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5308:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5309:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5310:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5311:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5316:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5320:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5321:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5325:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5326:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5332:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5336:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5337:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5338:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5341:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5342:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5347:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5351:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5352:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccEa7iXV.s 			page 203


5353:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5357:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5358:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5359:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5364:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5368:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5369:/usr/include/c++/9.2.0/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5371:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5373:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5378:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/usr/include/c++/9.2.0/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5383:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5386:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5387:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5388:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5389:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5393:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5394:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5398:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5399:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5400:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5404:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5405:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
GAS LISTING /tmp/ccEa7iXV.s 			page 204


5410:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5411:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5415:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5416:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5417:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5420:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5421:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5426:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5430:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5431:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5434:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5437:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5438:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5439:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5444:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5448:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5450:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5451:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5454:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5456:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5459:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5462:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5463:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
GAS LISTING /tmp/ccEa7iXV.s 			page 205


5467:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5470:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5471:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5472:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5473:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5478:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5482:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5483:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5484:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5488:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5489:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5495:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5499:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5500:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5501:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5504:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5505:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5507:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5510:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5514:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5515:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5518:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5522:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5523:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character.
GAS LISTING /tmp/ccEa7iXV.s 			page 206


5524:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5528:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5532:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5534:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5535:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5538:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5540:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to locate.
5543:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5546:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5547:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5551:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5554:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5556:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5557:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5562:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
5564:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5566:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5567:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5571:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5572:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5578:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
GAS LISTING /tmp/ccEa7iXV.s 			page 207


5581:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5583:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5584:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/usr/include/c++/9.2.0/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5587:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5588:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5593:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5597:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5598:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5601:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5604:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5605:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5606:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5611:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5615:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5616:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5619:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5621:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5624:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5627:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5628:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5632:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5635:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5636:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5637:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 208


5638:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5643:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5647:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5648:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5649:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5653:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5654:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5660:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns npos.
5664:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5665:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5666:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/usr/include/c++/9.2.0/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5669:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5674:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  npos.
5678:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5679:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5680:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5683:/usr/include/c++/9.2.0/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5686:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5687:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5688:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5693:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
GAS LISTING /tmp/ccEa7iXV.s 			page 209


5695:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5697:/usr/include/c++/9.2.0/bits/basic_string.h ****       size_type
5698:/usr/include/c++/9.2.0/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/usr/include/c++/9.2.0/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5701:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5703:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                characters to avoid.
5706:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5709:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5710:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/usr/include/c++/9.2.0/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5714:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5717:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5718:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5719:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5720:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  The new string.
5724:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5726:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5731:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string
5732:/usr/include/c++/9.2.0/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return basic_string(*this,
5734:/usr/include/c++/9.2.0/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
5735:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5736:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5737:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5741:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5750:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5751:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const basic_string& __str) const
GAS LISTING /tmp/ccEa7iXV.s 			page 210


5752:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
5753:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/usr/include/c++/9.2.0/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5757:/usr/include/c++/9.2.0/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/usr/include/c++/9.2.0/bits/basic_string.h **** 	if (!__r)
5759:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/usr/include/c++/9.2.0/bits/basic_string.h **** 	return __r;
5761:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
5762:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5763:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5765:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5769:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5770:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5774:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5779:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  if (!__r)
5781:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __r;
5783:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5784:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5785:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5786:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                against.
5791:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5792:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5793:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5794:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5798:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5801:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5802:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5803:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/usr/include/c++/9.2.0/bits/basic_string.h ****        *                 against.
5808:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
GAS LISTING /tmp/ccEa7iXV.s 			page 211


5809:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/usr/include/c++/9.2.0/bits/basic_string.h ****        */
5812:/usr/include/c++/9.2.0/bits/basic_string.h ****       template<typename _Tp>
5813:/usr/include/c++/9.2.0/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/usr/include/c++/9.2.0/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/usr/include/c++/9.2.0/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/usr/include/c++/9.2.0/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
5818:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
5822:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++17
5823:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5824:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5825:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5831:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings by calling
5839:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5843:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5844:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5846:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5847:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
5849:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5855:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  calling
5865:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
GAS LISTING /tmp/ccEa7iXV.s 			page 212


5866:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5869:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5870:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5873:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5874:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5878:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  ordered first.
5886:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5887:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5888:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5890:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5893:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5899:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
5906:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5910:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5911:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5912:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5914:/usr/include/c++/9.2.0/bits/basic_string.h ****       /**
5915:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5922:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
GAS LISTING /tmp/ccEa7iXV.s 			page 213


5923:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  one is ordered first.
5934:/usr/include/c++/9.2.0/bits/basic_string.h ****        *
5935:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/usr/include/c++/9.2.0/bits/basic_string.h ****        *  no special meaning.
5937:/usr/include/c++/9.2.0/bits/basic_string.h ****       */
5938:/usr/include/c++/9.2.0/bits/basic_string.h ****       int
5939:/usr/include/c++/9.2.0/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      size_type __n2) const;
5941:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5942:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5944:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5947:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5948:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5951:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5952:/usr/include/c++/9.2.0/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5955:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5956:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5959:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5960:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5963:/usr/include/c++/9.2.0/bits/basic_string.h ****       bool
5964:/usr/include/c++/9.2.0/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // C++20
5967:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5968:/usr/include/c++/9.2.0/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5970:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/usr/include/c++/9.2.0/bits/basic_string.h **** 					    void* exc);
5972:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend const char*
5973:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5975:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/usr/include/c++/9.2.0/bits/basic_string.h ****       friend void
5977:/usr/include/c++/9.2.0/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/usr/include/c++/9.2.0/bits/basic_string.h **** # endif
5979:/usr/include/c++/9.2.0/bits/basic_string.h ****   };
GAS LISTING /tmp/ccEa7iXV.s 			page 214


5980:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5982:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/usr/include/c++/9.2.0/bits/basic_string.h **** 
5992:/usr/include/c++/9.2.0/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6000:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/usr/include/c++/9.2.0/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/usr/include/c++/9.2.0/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/usr/include/c++/9.2.0/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6010:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6011:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator+
6012:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6013:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6018:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
6020:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6023:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6025:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6026:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6027:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6028:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6029:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6034:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
GAS LISTING /tmp/ccEa7iXV.s 			page 215


6037:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6039:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6040:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6045:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6049:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6050:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6055:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6060:/usr/include/c++/9.2.0/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__rhs);
6062:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6063:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6064:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6065:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6066:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6071:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6075:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/usr/include/c++/9.2.0/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
6077:/usr/include/c++/9.2.0/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/usr/include/c++/9.2.0/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __str;
6080:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6081:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6082:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6089:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
GAS LISTING /tmp/ccEa7iXV.s 			page 216


6094:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6095:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6100:/usr/include/c++/9.2.0/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/usr/include/c++/9.2.0/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/usr/include/c++/9.2.0/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/usr/include/c++/9.2.0/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6106:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6107:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6113:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6119:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6125:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      _CharT __rhs)
6129:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6131:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6132:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator ==
6133:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6134:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6139:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6141:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6146:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT>
6147:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline
6148:/usr/include/c++/9.2.0/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccEa7iXV.s 			page 217


6151:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/usr/include/c++/9.2.0/bits/basic_string.h **** 						    __lhs.size())); }
6154:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6155:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6156:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6159:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6161:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6163:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6167:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6168:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6170:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6173:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6175:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6176:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6178:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6179:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator !=
6180:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6181:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6186:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6188:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6193:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6194:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6197:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6198:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6199:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6201:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6205:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6206:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
GAS LISTING /tmp/ccEa7iXV.s 			page 218


6208:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6210:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6211:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6213:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6217:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <
6218:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6219:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6224:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6226:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6231:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6232:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6234:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6237:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6239:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6243:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6244:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6247:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6249:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6251:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6255:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >
6256:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6257:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6262:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6264:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
GAS LISTING /tmp/ccEa7iXV.s 			page 219


6265:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6267:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6269:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6270:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6272:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6275:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6277:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6281:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6282:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6283:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6285:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6287:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6289:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/usr/include/c++/9.2.0/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6293:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator <=
6294:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6295:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6300:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6302:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6307:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6308:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6310:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6312:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6313:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6315:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6319:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6320:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
GAS LISTING /tmp/ccEa7iXV.s 			page 220


6322:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6323:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6324:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6325:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6327:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6331:/usr/include/c++/9.2.0/bits/basic_string.h ****   // operator >=
6332:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6333:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6338:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6340:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6345:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6346:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  String.
6348:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6351:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6353:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6357:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6358:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  String.
6361:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6363:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline bool
6365:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/usr/include/c++/9.2.0/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6369:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6370:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6374:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6376:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline void
6378:/usr/include/c++/9.2.0/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
GAS LISTING /tmp/ccEa7iXV.s 			page 221


6379:/usr/include/c++/9.2.0/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/usr/include/c++/9.2.0/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
6381:/usr/include/c++/9.2.0/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6383:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6384:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6385:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6390:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6396:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6397:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6401:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6402:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6403:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6405:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6406:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6411:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  writing a C string.
6413:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6414:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/usr/include/c++/9.2.0/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/usr/include/c++/9.2.0/bits/basic_string.h ****     {
6419:/usr/include/c++/9.2.0/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/usr/include/c++/9.2.0/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
6423:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6424:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6425:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6426:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6431:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6434:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
GAS LISTING /tmp/ccEa7iXV.s 			page 222


6436:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6437:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6438:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6442:/usr/include/c++/9.2.0/bits/basic_string.h ****   /**
6443:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/usr/include/c++/9.2.0/bits/basic_string.h ****    *
6448:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/usr/include/c++/9.2.0/bits/basic_string.h ****    *  @a __str.
6453:/usr/include/c++/9.2.0/bits/basic_string.h ****    */
6454:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6460:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6468:/usr/include/c++/9.2.0/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/usr/include/c++/9.2.0/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/usr/include/c++/9.2.0/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif
6475:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6476:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6477:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<char>&
6478:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    char __delim);
6480:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6481:/usr/include/c++/9.2.0/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/usr/include/c++/9.2.0/bits/basic_string.h ****   template<>
6483:/usr/include/c++/9.2.0/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/usr/include/c++/9.2.0/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/usr/include/c++/9.2.0/bits/basic_string.h **** 	    wchar_t __delim);
6486:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif  
6487:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6488:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/usr/include/c++/9.2.0/bits/basic_string.h **** } // namespace
6490:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6491:/usr/include/c++/9.2.0/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 223


6493:/usr/include/c++/9.2.0/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6495:/usr/include/c++/9.2.0/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/usr/include/c++/9.2.0/bits/basic_string.h **** {
6497:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/usr/include/c++/9.2.0/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6500:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/usr/include/c++/9.2.0/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline int
6503:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/usr/include/c++/9.2.0/bits/basic_string.h **** 					__idx, __base); }
6506:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6507:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long
6508:/usr/include/c++/9.2.0/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6511:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6512:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long
6513:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6516:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6517:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long long
6518:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6521:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6522:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline unsigned long long
6523:/usr/include/c++/9.2.0/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/usr/include/c++/9.2.0/bits/basic_string.h **** 			     __idx, __base); }
6526:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6527:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline float
6529:/usr/include/c++/9.2.0/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6532:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline double
6533:/usr/include/c++/9.2.0/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6536:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline long double
6537:/usr/include/c++/9.2.0/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/usr/include/c++/9.2.0/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6540:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6541:/usr/include/c++/9.2.0/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/usr/include/c++/9.2.0/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6544:/usr/include/c++/9.2.0/bits/basic_string.h ****   // DR 1261.
6545:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(int __val)
6547:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
6549:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 224


6550:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6551:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned __val)
6552:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6553:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%u", __val); }
6555:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6556:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6557:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long __val)
6558:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
6559:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%ld", __val); }
6560:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6561:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long __val)
 2458              		.loc 8 6562 3 view .LVU694
 2459              	.LBB1381:
6563:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 2460              		.loc 8 6563 5 view .LVU695
6564:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lu", __val); }
 2461              		.loc 8 6565 21 is_stmt 0 view .LVU696
 2462 0a8d 488D7C24 		leaq	64(%rsp), %rdi
 2462      40
 2463 0a92 4C8B4308 		movq	8(%rbx), %r8
 2464 0a96 488D0D00 		leaq	.LC12(%rip), %rcx
 2464      000000
 2465 0a9d BA200000 		movl	$32, %edx
 2465      00
 2466 0aa2 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 2466      000000
 2467 0aa9 B8000000 		movl	$0, %eax
 2467      00
 2468 0aae E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 2468      00
 2469              	.LVL225:
 2470              	.LEHE1:
 2471              		.loc 8 6565 21 view .LVU697
 2472              	.LBE1381:
 2473              	.LBE1380:
 2474              	.LBB1382:
 2475              	.LBI1382:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 2476              		.loc 8 1168 7 is_stmt 1 view .LVU698
 2477              	.LBB1383:
 2478              	.LBI1383:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 2479              		.loc 8 1221 7 view .LVU699
 2480              	.LBB1384:
 2481              	.LBB1385:
 2482              	.LBI1385:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2483              		.loc 8 930 7 view .LVU700
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2484              		.loc 8 930 7 is_stmt 0 view .LVU701
 2485              	.LBE1385:
 2486              	.LBB1386:
 2487              	.LBI1386:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
GAS LISTING /tmp/ccEa7iXV.s 			page 225


 2488              		.loc 8 186 7 is_stmt 1 view .LVU702
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2489              		.loc 8 186 7 is_stmt 0 view .LVU703
 2490              	.LBE1386:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2491              		.loc 8 1222 55 view .LVU704
 2492 0ab3 4889E7   		movq	%rsp, %rdi
 2493 0ab6 488B5424 		movq	72(%rsp), %rdx
 2493      48
 2494 0abb 488B7424 		movq	64(%rsp), %rsi
 2494      40
 2495              	.LEHB2:
 2496 0ac0 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2496      00
 2497              	.LVL226:
 2498              	.LEHE2:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2499              		.loc 8 1222 55 view .LVU705
 2500              	.LBE1384:
 2501              	.LBE1383:
 2502              	.LBE1382:
 2503              	.LBB1387:
 2504              	.LBI1387:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 2505              		.loc 8 657 7 is_stmt 1 view .LVU706
 2506              	.LBB1388:
 2507              	.LBI1388:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2508              		.loc 8 229 7 view .LVU707
 2509              	.LBB1389:
 2510              	.LBB1390:
 2511              	.LBI1390:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2512              		.loc 8 221 7 view .LVU708
 2513              	.LBB1391:
 2514              	.LBI1391:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2515              		.loc 8 186 7 view .LVU709
 2516              	.LBB1392:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2517              		.loc 8 187 28 is_stmt 0 view .LVU710
 2518 0ac5 488B7C24 		movq	64(%rsp), %rdi
 2518      40
 2519              	.LVL227:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2520              		.loc 8 187 28 view .LVU711
 2521              	.LBE1392:
 2522              	.LBE1391:
 2523              	.LBB1393:
 2524              	.LBI1393:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2525              		.loc 8 200 7 is_stmt 1 view .LVU712
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2526              		.loc 8 200 7 is_stmt 0 view .LVU713
 2527              	.LBE1393:
 2528              	.LBE1390:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
GAS LISTING /tmp/ccEa7iXV.s 			page 226


 2529              		.loc 8 231 2 view .LVU714
 2530 0aca 488D4424 		leaq	80(%rsp), %rax
 2530      50
 2531 0acf 4839C7   		cmpq	%rax, %rdi
 2532 0ad2 7405     		je	.L184
 2533              	.LVL228:
 2534              	.LBB1394:
 2535              	.LBI1394:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2536              		.loc 8 236 7 is_stmt 1 view .LVU715
 2537              	.LBB1395:
 2538              	.LBB1396:
 2539              	.LBI1396:
 2540              		.file 14 "/usr/include/c++/9.2.0/bits/alloc_traits.h"
   1:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
   3:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/alloc_traits.h **** //
   5:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  11:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  16:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  20:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  25:/usr/include/c++/9.2.0/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/9.2.0/bits/alloc_traits.h ****  */
  29:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  30:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  33:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  35:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  39:/usr/include/c++/9.2.0/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  41:/usr/include/c++/9.2.0/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/alloc_traits.h **** {
  43:/usr/include/c++/9.2.0/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccEa7iXV.s 			page 227


  44:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  45:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   {
  47:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  50:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  55:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   protected:
  56:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  57:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  59:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  61:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  63:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  65:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  67:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  69:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     template<typename _Tp>
  71:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   };
  73:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  74:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     using __alloc_rebind
  76:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  78:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/9.2.0/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   */
  82:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
  85:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  90:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
  91:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
  93:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
  95:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
  97:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
  98:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr
GAS LISTING /tmp/ccEa7iXV.s 			page 228


 101:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 102:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 104:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 105:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 107:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 108:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 110:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 111:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff
 114:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 116:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 120:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 124:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 128:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 129:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 130:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 132:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 135:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 137:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 138:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 140:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 143:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 145:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 146:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 148:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 151:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 153:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 154:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 156:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
GAS LISTING /tmp/ccEa7iXV.s 			page 229


 158:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 159:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 161:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 162:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 164:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 167:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 169:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 170:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 172:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 175:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 178:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 179:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 181:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 184:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 187:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 188:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 190:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 193:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 196:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 197:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 199:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 202:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal
 203:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 205:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 206:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 208:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 210:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     private:
 211:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 213:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
GAS LISTING /tmp/ccEa7iXV.s 			page 230


 215:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 217:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static pointer
 219:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 221:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 222:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	struct __construct_helper
 224:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 225:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 230:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  template<typename>
 231:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 233:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	};
 235:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 236:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using __has_construct
 238:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 240:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 246:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static
 248:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 255:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 257:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 262:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void
 264:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 268:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 270:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
GAS LISTING /tmp/ccEa7iXV.s 			page 231


 272:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 274:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static size_type
 276:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{
 278:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	}
 283:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 284:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto
 286:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 290:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static _Alloc2
 292:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ return __a; }
 294:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 295:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     public:
 296:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 297:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 298:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 302:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 304:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 308:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 309:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 315:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 316:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 319:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 323:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 324:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 232


 329:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 331:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 332:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 335:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 336:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 341:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 346:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 353:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 354:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 358:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 361:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Tp>
 362:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 366:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 367:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 371:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 374:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 377:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 378:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 382:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 385:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static _Alloc
GAS LISTING /tmp/ccEa7iXV.s 			page 233


 386:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     };
 389:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 390:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/usr/include/c++/9.2.0/bits/alloc_traits.h ****   template<typename _Tp>
 392:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/usr/include/c++/9.2.0/bits/alloc_traits.h ****     {
 394:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator type
 395:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocated type
 397:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 399:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 402:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 405:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 408:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 411:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 414:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// The allocator's size type
 415:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 417:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 420:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 423:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 426:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 429:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 430:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 432:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       template<typename _Up>
 433:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 435:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 436:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 440:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 442:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
GAS LISTING /tmp/ccEa7iXV.s 			page 234


 443:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 446:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 447:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 449:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *          of type @c value_type
 453:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 454:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 456:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/usr/include/c++/9.2.0/bits/alloc_traits.h **** 
 460:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       /**
 461:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *
 466:/usr/include/c++/9.2.0/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       */
 468:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       static void
 469:/usr/include/c++/9.2.0/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 2541              		.loc 14 469 7 view .LVU716
 2542              	.LBB1397:
 2543              	.LBI1397:
  90:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  91:/usr/include/c++/9.2.0/ext/new_allocator.h ****       pointer
  92:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  95:/usr/include/c++/9.2.0/ext/new_allocator.h ****       const_pointer
  96:/usr/include/c++/9.2.0/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/usr/include/c++/9.2.0/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
  99:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/usr/include/c++/9.2.0/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/usr/include/c++/9.2.0/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 104:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 107:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 110:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 113:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 114:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/usr/include/c++/9.2.0/ext/new_allocator.h ****       }
 116:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 235


 117:/usr/include/c++/9.2.0/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/usr/include/c++/9.2.0/ext/new_allocator.h ****       void
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 2544              		.loc 12 119 7 view .LVU717
 2545              	.LBB1398:
 120:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 121:/usr/include/c++/9.2.0/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  {
 124:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	    return;
 126:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	  }
 127:/usr/include/c++/9.2.0/ext/new_allocator.h **** #endif
 128:/usr/include/c++/9.2.0/ext/new_allocator.h **** 	::operator delete(__p);
 2546              		.loc 12 128 19 is_stmt 0 view .LVU718
 2547 0ad4 E8000000 		call	_ZdlPv@PLT
 2547      00
 2548              	.LVL229:
 2549              	.L184:
 2550              		.loc 12 128 19 view .LVU719
 2551              	.LBE1398:
 2552              	.LBE1397:
 2553              	.LBE1396:
 2554              	.LBE1395:
 2555              	.LBE1394:
 2556              	.LBE1389:
 2557              	.LBE1388:
 2558              	.LBB1399:
 2559              	.LBI1399:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2560              		.loc 8 150 14 is_stmt 1 view .LVU720
 2561              	.LBB1400:
 2562              	.LBI1400:
 2563              		.loc 11 153 7 view .LVU721
 2564              	.LBB1401:
 2565              	.LBI1401:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2566              		.loc 12 89 7 view .LVU722
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2567              		.loc 12 89 7 is_stmt 0 view .LVU723
 2568              	.LBE1401:
 2569              	.LBE1400:
 2570              	.LBE1399:
 2571              	.LBE1387:
  52:Includes/findwayBases.hpp ****         str += "; cal: ";
 2572              		.loc 5 52 9 is_stmt 1 view .LVU724
 2573              	.LBB1402:
 2574              	.LBI1402:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 2575              		.loc 8 1177 7 view .LVU725
 2576              	.LBB1403:
 2577              	.LBI1403:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2578              		.loc 8 1263 7 view .LVU726
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2579              		.loc 8 1263 7 is_stmt 0 view .LVU727
 2580              	.LBE1403:
GAS LISTING /tmp/ccEa7iXV.s 			page 236


 2581              	.LBE1402:
 2582              	.LBE1596:
 2583              	.LBE1603:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2584              		.loc 9 335 2 is_stmt 1 view .LVU728
 2585              	.LBB1604:
 2586              	.LBB1597:
 2587              	.LBB1411:
 2588              	.LBB1410:
 2589              	.LBB1404:
 2590              	.LBB1405:
 2591              	.LBI1405:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2592              		.loc 8 320 7 view .LVU729
 2593              	.LBB1406:
 2594              	.LBB1407:
 2595              	.LBI1407:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2596              		.loc 8 930 7 view .LVU730
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2597              		.loc 8 930 7 is_stmt 0 view .LVU731
 2598              	.LBE1407:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2599              		.loc 8 322 2 view .LVU732
 2600 0ad9 48B8FFFF 		movabsq	$4611686018427387903, %rax
 2600      FFFFFFFF 
 2600      FF3F
 2601 0ae3 482B4424 		subq	8(%rsp), %rax
 2601      08
 2602 0ae8 4883F806 		cmpq	$6, %rax
 2603 0aec 7616     		jbe	.L258
 2604              	.LVL230:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2605              		.loc 8 322 2 view .LVU733
 2606              	.LBE1406:
 2607              	.LBE1405:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2608              		.loc 8 1268 27 view .LVU734
 2609 0aee 4889E7   		movq	%rsp, %rdi
 2610 0af1 BA070000 		movl	$7, %edx
 2610      00
 2611 0af6 488D3500 		leaq	.LC13(%rip), %rsi
 2611      000000
 2612              	.LEHB3:
 2613 0afd E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2613      00
 2614              	.LVL231:
 2615 0b02 EB0C     		jmp	.L259
 2616              	.LVL232:
 2617              	.L258:
 2618              	.LBB1409:
 2619              	.LBB1408:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2620              		.loc 8 323 24 view .LVU735
 2621 0b04 488D3D00 		leaq	.LC10(%rip), %rdi
 2621      000000
 2622 0b0b E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
GAS LISTING /tmp/ccEa7iXV.s 			page 237


 2622      00
 2623              	.LVL233:
 2624              	.L259:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2625              		.loc 8 323 24 view .LVU736
 2626              	.LBE1408:
 2627              	.LBE1409:
 2628              	.LBE1404:
 2629              	.LBE1410:
 2630              	.LBE1411:
  53:Includes/findwayBases.hpp ****         str += std::to_string(calculated);
 2631              		.loc 5 53 9 is_stmt 1 view .LVU737
 2632              	.LBB1412:
 2633              	.LBI1412:
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 2634              		.loc 8 6546 3 view .LVU738
 2635              	.LBB1413:
6547:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
 2636              		.loc 8 6547 5 view .LVU739
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2637              		.loc 8 6548 20 is_stmt 0 view .LVU740
 2638 0b10 488D7C24 		leaq	64(%rsp), %rdi
 2638      40
 2639 0b15 440FB643 		movzbl	24(%rbx), %r8d
 2639      18
 2640              	.LVL234:
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2641              		.loc 8 6548 20 view .LVU741
 2642 0b1a 488D0D00 		leaq	.LC14(%rip), %rcx
 2642      000000
 2643 0b21 BA100000 		movl	$16, %edx
 2643      00
 2644 0b26 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 2644      000000
 2645 0b2d B8000000 		movl	$0, %eax
 2645      00
 2646 0b32 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 2646      00
 2647              	.LVL235:
 2648              	.LEHE3:
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2649              		.loc 8 6548 20 view .LVU742
 2650              	.LBE1413:
 2651              	.LBE1412:
 2652              	.LBB1414:
 2653              	.LBI1414:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 2654              		.loc 8 1168 7 is_stmt 1 view .LVU743
 2655              	.LBB1415:
 2656              	.LBI1415:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 2657              		.loc 8 1221 7 view .LVU744
 2658              	.LBB1416:
 2659              	.LBB1417:
 2660              	.LBI1417:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2661              		.loc 8 930 7 view .LVU745
GAS LISTING /tmp/ccEa7iXV.s 			page 238


 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2662              		.loc 8 930 7 is_stmt 0 view .LVU746
 2663              	.LBE1417:
 2664              	.LBB1418:
 2665              	.LBI1418:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2666              		.loc 8 186 7 is_stmt 1 view .LVU747
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2667              		.loc 8 186 7 is_stmt 0 view .LVU748
 2668              	.LBE1418:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2669              		.loc 8 1222 55 view .LVU749
 2670 0b37 4889E7   		movq	%rsp, %rdi
 2671 0b3a 488B5424 		movq	72(%rsp), %rdx
 2671      48
 2672 0b3f 488B7424 		movq	64(%rsp), %rsi
 2672      40
 2673              	.LEHB4:
 2674 0b44 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2674      00
 2675              	.LVL236:
 2676              	.LEHE4:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2677              		.loc 8 1222 55 view .LVU750
 2678              	.LBE1416:
 2679              	.LBE1415:
 2680              	.LBE1414:
 2681              	.LBB1419:
 2682              	.LBI1419:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 2683              		.loc 8 657 7 is_stmt 1 view .LVU751
 2684              	.LBB1420:
 2685              	.LBI1420:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2686              		.loc 8 229 7 view .LVU752
 2687              	.LBB1421:
 2688              	.LBB1422:
 2689              	.LBI1422:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2690              		.loc 8 221 7 view .LVU753
 2691              	.LBB1423:
 2692              	.LBI1423:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2693              		.loc 8 186 7 view .LVU754
 2694              	.LBB1424:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2695              		.loc 8 187 28 is_stmt 0 view .LVU755
 2696 0b49 488B7C24 		movq	64(%rsp), %rdi
 2696      40
 2697              	.LVL237:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2698              		.loc 8 187 28 view .LVU756
 2699              	.LBE1424:
 2700              	.LBE1423:
 2701              	.LBB1425:
 2702              	.LBI1425:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 239


 2703              		.loc 8 200 7 is_stmt 1 view .LVU757
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2704              		.loc 8 200 7 is_stmt 0 view .LVU758
 2705              	.LBE1425:
 2706              	.LBE1422:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2707              		.loc 8 231 2 view .LVU759
 2708 0b4e 488D4424 		leaq	80(%rsp), %rax
 2708      50
 2709 0b53 4839C7   		cmpq	%rax, %rdi
 2710 0b56 7405     		je	.L186
 2711              	.LVL238:
 2712              	.LBB1426:
 2713              	.LBI1426:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2714              		.loc 8 236 7 is_stmt 1 view .LVU760
 2715              	.LBB1427:
 2716              	.LBB1428:
 2717              	.LBI1428:
 2718              		.loc 14 469 7 view .LVU761
 2719              	.LBB1429:
 2720              	.LBI1429:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 2721              		.loc 12 119 7 view .LVU762
 2722              	.LBB1430:
 2723              		.loc 12 128 19 is_stmt 0 view .LVU763
 2724 0b58 E8000000 		call	_ZdlPv@PLT
 2724      00
 2725              	.LVL239:
 2726              	.L186:
 2727              		.loc 12 128 19 view .LVU764
 2728              	.LBE1430:
 2729              	.LBE1429:
 2730              	.LBE1428:
 2731              	.LBE1427:
 2732              	.LBE1426:
 2733              	.LBE1421:
 2734              	.LBE1420:
 2735              	.LBB1431:
 2736              	.LBI1431:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2737              		.loc 8 150 14 is_stmt 1 view .LVU765
 2738              	.LBB1432:
 2739              	.LBI1432:
 2740              		.loc 11 153 7 view .LVU766
 2741              	.LBB1433:
 2742              	.LBI1433:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2743              		.loc 12 89 7 view .LVU767
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2744              		.loc 12 89 7 is_stmt 0 view .LVU768
 2745              	.LBE1433:
 2746              	.LBE1432:
 2747              	.LBE1431:
 2748              	.LBE1419:
  54:Includes/findwayBases.hpp ****         str += "; weight: ";
 2749              		.loc 5 54 9 is_stmt 1 view .LVU769
GAS LISTING /tmp/ccEa7iXV.s 			page 240


 2750              	.LBB1434:
 2751              	.LBI1434:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 2752              		.loc 8 1177 7 view .LVU770
 2753              	.LBB1435:
 2754              	.LBI1435:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2755              		.loc 8 1263 7 view .LVU771
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2756              		.loc 8 1263 7 is_stmt 0 view .LVU772
 2757              	.LBE1435:
 2758              	.LBE1434:
 2759              	.LBE1597:
 2760              	.LBE1604:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2761              		.loc 9 335 2 is_stmt 1 view .LVU773
 2762              	.LBB1605:
 2763              	.LBB1598:
 2764              	.LBB1443:
 2765              	.LBB1442:
 2766              	.LBB1436:
 2767              	.LBB1437:
 2768              	.LBI1437:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2769              		.loc 8 320 7 view .LVU774
 2770              	.LBB1438:
 2771              	.LBB1439:
 2772              	.LBI1439:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2773              		.loc 8 930 7 view .LVU775
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2774              		.loc 8 930 7 is_stmt 0 view .LVU776
 2775              	.LBE1439:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2776              		.loc 8 322 2 view .LVU777
 2777 0b5d 48B8FFFF 		movabsq	$4611686018427387903, %rax
 2777      FFFFFFFF 
 2777      FF3F
 2778 0b67 482B4424 		subq	8(%rsp), %rax
 2778      08
 2779 0b6c 4883F809 		cmpq	$9, %rax
 2780 0b70 7616     		jbe	.L260
 2781              	.LVL240:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2782              		.loc 8 322 2 view .LVU778
 2783              	.LBE1438:
 2784              	.LBE1437:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2785              		.loc 8 1268 27 view .LVU779
 2786 0b72 4889E7   		movq	%rsp, %rdi
 2787 0b75 BA0A0000 		movl	$10, %edx
 2787      00
 2788 0b7a 488D3500 		leaq	.LC15(%rip), %rsi
 2788      000000
 2789              	.LEHB5:
 2790 0b81 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2790      00
GAS LISTING /tmp/ccEa7iXV.s 			page 241


 2791              	.LVL241:
 2792 0b86 EB0C     		jmp	.L261
 2793              	.LVL242:
 2794              	.L260:
 2795              	.LBB1441:
 2796              	.LBB1440:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2797              		.loc 8 323 24 view .LVU780
 2798 0b88 488D3D00 		leaq	.LC10(%rip), %rdi
 2798      000000
 2799 0b8f E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 2799      00
 2800              	.LVL243:
 2801              	.L261:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2802              		.loc 8 323 24 view .LVU781
 2803              	.LBE1440:
 2804              	.LBE1441:
 2805              	.LBE1436:
 2806              	.LBE1442:
 2807              	.LBE1443:
  55:Includes/findwayBases.hpp ****         str += std::to_string(weight);
 2808              		.loc 5 55 9 is_stmt 1 view .LVU782
 2809              	.LBB1444:
 2810              	.LBI1444:
6566:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6567:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6568:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(long long __val)
6569:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6570:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(long long),
6571:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%lld", __val); }
6572:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6573:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6574:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(unsigned long long __val)
6575:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
6576:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long long),
6577:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%llu", __val); }
6578:/usr/include/c++/9.2.0/bits/basic_string.h **** 
6579:/usr/include/c++/9.2.0/bits/basic_string.h ****   inline string
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   to_string(float __val)
 2811              		.loc 8 6580 3 view .LVU783
 2812              	.LBB1445:
6581:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****     const int __n = 
 2813              		.loc 8 6582 5 view .LVU784
6583:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
6584:/usr/include/c++/9.2.0/bits/basic_string.h ****     return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, __n,
 2814              		.loc 8 6584 5 view .LVU785
6585:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 2815              		.loc 8 6585 20 is_stmt 0 view .LVU786
 2816 0b94 488D7C24 		leaq	64(%rsp), %rdi
 2816      40
 2817 0b99 660FEFC0 		pxor	%xmm0, %xmm0
 2818 0b9d F30F5A43 		cvtss2sd	28(%rbx), %xmm0
 2818      1C
 2819 0ba2 488D0D00 		leaq	.LC16(%rip), %rcx
 2819      000000
GAS LISTING /tmp/ccEa7iXV.s 			page 242


 2820 0ba9 BA3A0000 		movl	$58, %edx
 2820      00
 2821 0bae 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 2821      000000
 2822 0bb5 B8010000 		movl	$1, %eax
 2822      00
 2823 0bba E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 2823      00
 2824              	.LVL244:
 2825              	.LEHE5:
 2826              		.loc 8 6585 20 view .LVU787
 2827              	.LBE1445:
 2828              	.LBE1444:
 2829              	.LBB1446:
 2830              	.LBI1446:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 2831              		.loc 8 1168 7 is_stmt 1 view .LVU788
 2832              	.LBB1447:
 2833              	.LBI1447:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 2834              		.loc 8 1221 7 view .LVU789
 2835              	.LBB1448:
 2836              	.LBB1449:
 2837              	.LBI1449:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2838              		.loc 8 930 7 view .LVU790
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2839              		.loc 8 930 7 is_stmt 0 view .LVU791
 2840              	.LBE1449:
 2841              	.LBB1450:
 2842              	.LBI1450:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2843              		.loc 8 186 7 is_stmt 1 view .LVU792
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2844              		.loc 8 186 7 is_stmt 0 view .LVU793
 2845              	.LBE1450:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2846              		.loc 8 1222 55 view .LVU794
 2847 0bbf 4889E7   		movq	%rsp, %rdi
 2848 0bc2 488B5424 		movq	72(%rsp), %rdx
 2848      48
 2849 0bc7 488B7424 		movq	64(%rsp), %rsi
 2849      40
 2850              	.LEHB6:
 2851 0bcc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2851      00
 2852              	.LVL245:
 2853              	.LEHE6:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2854              		.loc 8 1222 55 view .LVU795
 2855              	.LBE1448:
 2856              	.LBE1447:
 2857              	.LBE1446:
 2858              	.LBB1451:
 2859              	.LBI1451:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 2860              		.loc 8 657 7 is_stmt 1 view .LVU796
GAS LISTING /tmp/ccEa7iXV.s 			page 243


 2861              	.LBB1452:
 2862              	.LBI1452:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2863              		.loc 8 229 7 view .LVU797
 2864              	.LBB1453:
 2865              	.LBB1454:
 2866              	.LBI1454:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 2867              		.loc 8 221 7 view .LVU798
 2868              	.LBB1455:
 2869              	.LBI1455:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2870              		.loc 8 186 7 view .LVU799
 2871              	.LBB1456:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2872              		.loc 8 187 28 is_stmt 0 view .LVU800
 2873 0bd1 488B7C24 		movq	64(%rsp), %rdi
 2873      40
 2874              	.LVL246:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 2875              		.loc 8 187 28 view .LVU801
 2876              	.LBE1456:
 2877              	.LBE1455:
 2878              	.LBB1457:
 2879              	.LBI1457:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2880              		.loc 8 200 7 is_stmt 1 view .LVU802
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2881              		.loc 8 200 7 is_stmt 0 view .LVU803
 2882              	.LBE1457:
 2883              	.LBE1454:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2884              		.loc 8 231 2 view .LVU804
 2885 0bd6 488D4424 		leaq	80(%rsp), %rax
 2885      50
 2886 0bdb 4839C7   		cmpq	%rax, %rdi
 2887 0bde 7405     		je	.L188
 2888              	.LVL247:
 2889              	.LBB1458:
 2890              	.LBI1458:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2891              		.loc 8 236 7 is_stmt 1 view .LVU805
 2892              	.LBB1459:
 2893              	.LBB1460:
 2894              	.LBI1460:
 2895              		.loc 14 469 7 view .LVU806
 2896              	.LBB1461:
 2897              	.LBI1461:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 2898              		.loc 12 119 7 view .LVU807
 2899              	.LBB1462:
 2900              		.loc 12 128 19 is_stmt 0 view .LVU808
 2901 0be0 E8000000 		call	_ZdlPv@PLT
 2901      00
 2902              	.LVL248:
 2903              	.L188:
 2904              		.loc 12 128 19 view .LVU809
GAS LISTING /tmp/ccEa7iXV.s 			page 244


 2905              	.LBE1462:
 2906              	.LBE1461:
 2907              	.LBE1460:
 2908              	.LBE1459:
 2909              	.LBE1458:
 2910              	.LBE1453:
 2911              	.LBE1452:
 2912              	.LBB1463:
 2913              	.LBI1463:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2914              		.loc 8 150 14 is_stmt 1 view .LVU810
 2915              	.LBB1464:
 2916              	.LBI1464:
 2917              		.loc 11 153 7 view .LVU811
 2918              	.LBB1465:
 2919              	.LBI1465:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2920              		.loc 12 89 7 view .LVU812
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 2921              		.loc 12 89 7 is_stmt 0 view .LVU813
 2922              	.LBE1465:
 2923              	.LBE1464:
 2924              	.LBE1463:
 2925              	.LBE1451:
  56:Includes/findwayBases.hpp ****         str += "; i: ";
 2926              		.loc 5 56 9 is_stmt 1 view .LVU814
 2927              	.LBB1466:
 2928              	.LBI1466:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 2929              		.loc 8 1177 7 view .LVU815
 2930              	.LBB1467:
 2931              	.LBI1467:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2932              		.loc 8 1263 7 view .LVU816
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2933              		.loc 8 1263 7 is_stmt 0 view .LVU817
 2934              	.LBE1467:
 2935              	.LBE1466:
 2936              	.LBE1598:
 2937              	.LBE1605:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 2938              		.loc 9 335 2 is_stmt 1 view .LVU818
 2939              	.LBB1606:
 2940              	.LBB1599:
 2941              	.LBB1475:
 2942              	.LBB1474:
 2943              	.LBB1468:
 2944              	.LBB1469:
 2945              	.LBI1469:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 2946              		.loc 8 320 7 view .LVU819
 2947              	.LBB1470:
 2948              	.LBB1471:
 2949              	.LBI1471:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 2950              		.loc 8 930 7 view .LVU820
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
GAS LISTING /tmp/ccEa7iXV.s 			page 245


 2951              		.loc 8 930 7 is_stmt 0 view .LVU821
 2952              	.LBE1471:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2953              		.loc 8 322 2 view .LVU822
 2954 0be5 48B8FFFF 		movabsq	$4611686018427387903, %rax
 2954      FFFFFFFF 
 2954      FF3F
 2955 0bef 482B4424 		subq	8(%rsp), %rax
 2955      08
 2956 0bf4 4883F804 		cmpq	$4, %rax
 2957 0bf8 7616     		jbe	.L262
 2958              	.LVL249:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 2959              		.loc 8 322 2 view .LVU823
 2960              	.LBE1470:
 2961              	.LBE1469:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2962              		.loc 8 1268 27 view .LVU824
 2963 0bfa 4889E7   		movq	%rsp, %rdi
 2964 0bfd BA050000 		movl	$5, %edx
 2964      00
 2965 0c02 488D3500 		leaq	.LC17(%rip), %rsi
 2965      000000
 2966              	.LEHB7:
 2967 0c09 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 2967      00
 2968              	.LVL250:
 2969 0c0e EB0C     		jmp	.L263
 2970              	.LVL251:
 2971              	.L262:
 2972              	.LBB1473:
 2973              	.LBB1472:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2974              		.loc 8 323 24 view .LVU825
 2975 0c10 488D3D00 		leaq	.LC10(%rip), %rdi
 2975      000000
 2976 0c17 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 2976      00
 2977              	.LVL252:
 2978              	.L263:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 2979              		.loc 8 323 24 view .LVU826
 2980              	.LBE1472:
 2981              	.LBE1473:
 2982              	.LBE1468:
 2983              	.LBE1474:
 2984              	.LBE1475:
  57:Includes/findwayBases.hpp ****         str += std::to_string(i);
 2985              		.loc 5 57 9 is_stmt 1 view .LVU827
 2986              	.LBB1476:
 2987              	.LBI1476:
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 2988              		.loc 8 6562 3 view .LVU828
 2989              	.LBB1477:
6563:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
 2990              		.loc 8 6563 5 view .LVU829
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 246


 2991              		.loc 8 6565 21 is_stmt 0 view .LVU830
 2992 0c1c 488D7C24 		leaq	64(%rsp), %rdi
 2992      40
 2993 0c21 4C8B4320 		movq	32(%rbx), %r8
 2994 0c25 488D0D00 		leaq	.LC12(%rip), %rcx
 2994      000000
 2995 0c2c BA200000 		movl	$32, %edx
 2995      00
 2996 0c31 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 2996      000000
 2997 0c38 B8000000 		movl	$0, %eax
 2997      00
 2998 0c3d E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 2998      00
 2999              	.LVL253:
 3000              	.LEHE7:
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3001              		.loc 8 6565 21 view .LVU831
 3002              	.LBE1477:
 3003              	.LBE1476:
 3004              	.LBB1478:
 3005              	.LBI1478:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 3006              		.loc 8 1168 7 is_stmt 1 view .LVU832
 3007              	.LBB1479:
 3008              	.LBI1479:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 3009              		.loc 8 1221 7 view .LVU833
 3010              	.LBB1480:
 3011              	.LBB1481:
 3012              	.LBI1481:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3013              		.loc 8 930 7 view .LVU834
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3014              		.loc 8 930 7 is_stmt 0 view .LVU835
 3015              	.LBE1481:
 3016              	.LBB1482:
 3017              	.LBI1482:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3018              		.loc 8 186 7 is_stmt 1 view .LVU836
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3019              		.loc 8 186 7 is_stmt 0 view .LVU837
 3020              	.LBE1482:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3021              		.loc 8 1222 55 view .LVU838
 3022 0c42 4889E7   		movq	%rsp, %rdi
 3023 0c45 488B5424 		movq	72(%rsp), %rdx
 3023      48
 3024 0c4a 488B7424 		movq	64(%rsp), %rsi
 3024      40
 3025              	.LEHB8:
 3026 0c4f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3026      00
 3027              	.LVL254:
 3028              	.LEHE8:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3029              		.loc 8 1222 55 view .LVU839
GAS LISTING /tmp/ccEa7iXV.s 			page 247


 3030              	.LBE1480:
 3031              	.LBE1479:
 3032              	.LBE1478:
 3033              	.LBB1483:
 3034              	.LBI1483:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3035              		.loc 8 657 7 is_stmt 1 view .LVU840
 3036              	.LBB1484:
 3037              	.LBI1484:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3038              		.loc 8 229 7 view .LVU841
 3039              	.LBB1485:
 3040              	.LBB1486:
 3041              	.LBI1486:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3042              		.loc 8 221 7 view .LVU842
 3043              	.LBB1487:
 3044              	.LBI1487:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3045              		.loc 8 186 7 view .LVU843
 3046              	.LBB1488:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3047              		.loc 8 187 28 is_stmt 0 view .LVU844
 3048 0c54 488B7C24 		movq	64(%rsp), %rdi
 3048      40
 3049              	.LVL255:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3050              		.loc 8 187 28 view .LVU845
 3051              	.LBE1488:
 3052              	.LBE1487:
 3053              	.LBB1489:
 3054              	.LBI1489:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3055              		.loc 8 200 7 is_stmt 1 view .LVU846
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3056              		.loc 8 200 7 is_stmt 0 view .LVU847
 3057              	.LBE1489:
 3058              	.LBE1486:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3059              		.loc 8 231 2 view .LVU848
 3060 0c59 488D4424 		leaq	80(%rsp), %rax
 3060      50
 3061 0c5e 4839C7   		cmpq	%rax, %rdi
 3062 0c61 7405     		je	.L190
 3063              	.LVL256:
 3064              	.LBB1490:
 3065              	.LBI1490:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3066              		.loc 8 236 7 is_stmt 1 view .LVU849
 3067              	.LBB1491:
 3068              	.LBB1492:
 3069              	.LBI1492:
 3070              		.loc 14 469 7 view .LVU850
 3071              	.LBB1493:
 3072              	.LBI1493:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3073              		.loc 12 119 7 view .LVU851
GAS LISTING /tmp/ccEa7iXV.s 			page 248


 3074              	.LBB1494:
 3075              		.loc 12 128 19 is_stmt 0 view .LVU852
 3076 0c63 E8000000 		call	_ZdlPv@PLT
 3076      00
 3077              	.LVL257:
 3078              	.L190:
 3079              		.loc 12 128 19 view .LVU853
 3080              	.LBE1494:
 3081              	.LBE1493:
 3082              	.LBE1492:
 3083              	.LBE1491:
 3084              	.LBE1490:
 3085              	.LBE1485:
 3086              	.LBE1484:
 3087              	.LBB1495:
 3088              	.LBI1495:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3089              		.loc 8 150 14 is_stmt 1 view .LVU854
 3090              	.LBB1496:
 3091              	.LBI1496:
 3092              		.loc 11 153 7 view .LVU855
 3093              	.LBB1497:
 3094              	.LBI1497:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3095              		.loc 12 89 7 view .LVU856
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3096              		.loc 12 89 7 is_stmt 0 view .LVU857
 3097              	.LBE1497:
 3098              	.LBE1496:
 3099              	.LBE1495:
 3100              	.LBE1483:
  58:Includes/findwayBases.hpp ****         str += "}";
 3101              		.loc 5 58 9 is_stmt 1 view .LVU858
 3102              	.LBB1498:
 3103              	.LBI1498:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 3104              		.loc 8 1177 7 view .LVU859
 3105              	.LBB1499:
 3106              	.LBI1499:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3107              		.loc 8 1263 7 view .LVU860
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3108              		.loc 8 1263 7 is_stmt 0 view .LVU861
 3109              	.LBE1499:
 3110              	.LBE1498:
 3111              	.LBE1599:
 3112              	.LBE1606:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3113              		.loc 9 335 2 is_stmt 1 view .LVU862
 3114              	.LBB1607:
 3115              	.LBB1600:
 3116              	.LBB1507:
 3117              	.LBB1506:
 3118              	.LBB1500:
 3119              	.LBB1501:
 3120              	.LBI1501:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 249


 3121              		.loc 8 320 7 view .LVU863
 3122              	.LBB1502:
 3123              	.LBB1503:
 3124              	.LBI1503:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3125              		.loc 8 930 7 view .LVU864
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3126              		.loc 8 930 7 is_stmt 0 view .LVU865
 3127              	.LBE1503:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3128              		.loc 8 322 2 view .LVU866
 3129 0c68 48B8FFFF 		movabsq	$4611686018427387903, %rax
 3129      FFFFFFFF 
 3129      FF3F
 3130 0c72 48394424 		cmpq	%rax, 8(%rsp)
 3130      08
 3131 0c77 7416     		je	.L264
 3132              	.LVL258:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3133              		.loc 8 322 2 view .LVU867
 3134              	.LBE1502:
 3135              	.LBE1501:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3136              		.loc 8 1268 27 view .LVU868
 3137 0c79 4889E7   		movq	%rsp, %rdi
 3138 0c7c BA010000 		movl	$1, %edx
 3138      00
 3139 0c81 488D3500 		leaq	.LC18(%rip), %rsi
 3139      000000
 3140              	.LEHB9:
 3141 0c88 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3141      00
 3142              	.LVL259:
 3143 0c8d EB0C     		jmp	.L265
 3144              	.LVL260:
 3145              	.L264:
 3146              	.LBB1505:
 3147              	.LBB1504:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3148              		.loc 8 323 24 view .LVU869
 3149 0c8f 488D3D00 		leaq	.LC10(%rip), %rdi
 3149      000000
 3150 0c96 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 3150      00
 3151              	.LVL261:
 3152              	.LEHE9:
 3153              	.L265:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3154              		.loc 8 323 24 view .LVU870
 3155              	.LBE1504:
 3156              	.LBE1505:
 3157              	.LBE1500:
 3158              	.LBE1506:
 3159              	.LBE1507:
  59:Includes/findwayBases.hpp ****         return str;
 3160              		.loc 5 59 9 is_stmt 1 view .LVU871
 3161              		.loc 5 59 9 is_stmt 0 view .LVU872
GAS LISTING /tmp/ccEa7iXV.s 			page 250


 3162              	.LBE1600:
 3163              	.LBE1607:
 3164              	.LBB1608:
 3165              	.LBI1608:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 3166              		.loc 8 6416 5 is_stmt 1 view .LVU873
 3167              	.LBB1609:
 3168              	.LBB1610:
 3169              	.LBI1610:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3170              		.loc 8 930 7 view .LVU874
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3171              		.loc 8 930 7 is_stmt 0 view .LVU875
 3172              	.LBE1610:
 3173              	.LBB1611:
 3174              	.LBI1611:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 3175              		.loc 8 2312 7 is_stmt 1 view .LVU876
 3176              	.LBB1612:
 3177              	.LBI1612:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3178              		.loc 8 186 7 view .LVU877
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3179              		.loc 8 186 7 is_stmt 0 view .LVU878
 3180              	.LBE1612:
 3181              	.LBE1611:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 3182              		.loc 8 6421 30 view .LVU879
 3183 0c9b 488B5424 		movq	8(%rsp), %rdx
 3183      08
 3184 0ca0 488B3424 		movq	(%rsp), %rsi
 3185 0ca4 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 3185      000000
 3186              	.LEHB10:
 3187 0cab E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3187      00
 3188              	.LVL262:
 3189 0cb0 4989C4   		movq	%rax, %r12
 3190              	.LVL263:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 3191              		.loc 8 6421 30 view .LVU880
 3192              	.LBE1609:
 3193              	.LBE1608:
 3194              	.LBB1613:
 3195              	.LBI1613:
 565:/usr/include/c++/9.2.0/ostream ****     {
 3196              		.loc 13 565 5 is_stmt 1 view .LVU881
 565:/usr/include/c++/9.2.0/ostream ****     {
 3197              		.loc 13 565 5 is_stmt 0 view .LVU882
 3198              	.LBE1613:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3199              		.loc 9 335 2 is_stmt 1 view .LVU883
 3200              	.LBB1615:
 3201              	.LBB1614:
 3202              		.loc 13 570 18 is_stmt 0 view .LVU884
 3203 0cb3 BA040000 		movl	$4, %edx
 3203      00
GAS LISTING /tmp/ccEa7iXV.s 			page 251


 3204 0cb8 488D3500 		leaq	.LC19(%rip), %rsi
 3204      000000
 3205 0cbf 4889C7   		movq	%rax, %rdi
 3206 0cc2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 3206      00
 3207              	.LVL264:
 3208              	.LEHE10:
 3209              		.loc 13 570 18 view .LVU885
 3210 0cc7 EB7D     		jmp	.L266
 3211              	.LVL265:
 3212              	.L247:
 3213              		.loc 13 570 18 view .LVU886
 3214 0cc9 4889C3   		movq	%rax, %rbx
 3215              	.LVL266:
 3216              		.loc 13 570 18 view .LVU887
 3217              	.LBE1614:
 3218              	.LBE1615:
 3219              	.LBB1616:
 3220              	.LBB1601:
 3221              	.LBB1508:
 3222              	.LBI1508:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3223              		.loc 8 657 7 is_stmt 1 view .LVU888
 3224              	.LBB1509:
 3225              	.LBI1509:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3226              		.loc 8 229 7 view .LVU889
 3227              	.LBB1510:
 3228              	.LBB1511:
 3229              	.LBI1511:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3230              		.loc 8 221 7 view .LVU890
 3231              	.LBB1512:
 3232              	.LBI1512:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3233              		.loc 8 186 7 view .LVU891
 3234              	.LBB1513:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3235              		.loc 8 187 28 is_stmt 0 view .LVU892
 3236 0ccc 488B7C24 		movq	64(%rsp), %rdi
 3236      40
 3237              	.LVL267:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3238              		.loc 8 187 28 view .LVU893
 3239              	.LBE1513:
 3240              	.LBE1512:
 3241              	.LBB1514:
 3242              	.LBI1514:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3243              		.loc 8 200 7 is_stmt 1 view .LVU894
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3244              		.loc 8 200 7 is_stmt 0 view .LVU895
 3245              	.LBE1514:
 3246              	.LBE1511:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3247              		.loc 8 231 2 view .LVU896
 3248 0cd1 488D4424 		leaq	80(%rsp), %rax
GAS LISTING /tmp/ccEa7iXV.s 			page 252


 3248      50
 3249 0cd6 4839C7   		cmpq	%rax, %rdi
 3250 0cd9 7405     		je	.L195
 3251              	.LVL268:
 3252              	.LBB1515:
 3253              	.LBI1515:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3254              		.loc 8 236 7 is_stmt 1 view .LVU897
 3255              	.LBB1516:
 3256              	.LBB1517:
 3257              	.LBI1517:
 3258              		.loc 14 469 7 view .LVU898
 3259              	.LBB1518:
 3260              	.LBI1518:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3261              		.loc 12 119 7 view .LVU899
 3262              	.LBB1519:
 3263              		.loc 12 128 19 is_stmt 0 view .LVU900
 3264 0cdb E8000000 		call	_ZdlPv@PLT
 3264      00
 3265              	.LVL269:
 3266              		.loc 12 128 19 view .LVU901
 3267              	.LBE1519:
 3268              	.LBE1518:
 3269              	.LBE1517:
 3270              	.LBE1516:
 3271              	.LBE1515:
 3272              	.LBE1510:
 3273              	.LBE1509:
 3274              	.LBB1520:
 3275              	.LBI1520:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3276              		.loc 8 150 14 is_stmt 1 view .LVU902
 3277              	.LBB1521:
 3278              	.LBI1521:
 3279              		.loc 11 153 7 view .LVU903
 3280              	.LBB1522:
 3281              	.LBI1522:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3282              		.loc 12 89 7 view .LVU904
 3283              	.L195:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3284              		.loc 12 89 7 is_stmt 0 view .LVU905
 3285              	.LBE1522:
 3286              	.LBE1521:
 3287              	.LBE1520:
 3288              	.LBE1508:
 3289              	.LBB1523:
 3290              	.LBI1523:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3291              		.loc 8 657 7 is_stmt 1 view .LVU906
 3292              	.LBB1524:
 3293              	.LBI1524:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3294              		.loc 8 229 7 view .LVU907
 3295              	.LBB1525:
 3296              	.LBB1526:
GAS LISTING /tmp/ccEa7iXV.s 			page 253


 3297              	.LBI1526:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3298              		.loc 8 221 7 view .LVU908
 3299              	.LBB1527:
 3300              	.LBI1527:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3301              		.loc 8 186 7 view .LVU909
 3302              	.LBB1528:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3303              		.loc 8 187 28 is_stmt 0 view .LVU910
 3304 0ce0 488B3C24 		movq	(%rsp), %rdi
 3305              	.LVL270:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3306              		.loc 8 187 28 view .LVU911
 3307              	.LBE1528:
 3308              	.LBE1527:
 3309              	.LBB1529:
 3310              	.LBI1529:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3311              		.loc 8 200 7 is_stmt 1 view .LVU912
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3312              		.loc 8 200 7 is_stmt 0 view .LVU913
 3313              	.LBE1529:
 3314              	.LBE1526:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3315              		.loc 8 231 2 view .LVU914
 3316 0ce4 488D4424 		leaq	16(%rsp), %rax
 3316      10
 3317 0ce9 4839C7   		cmpq	%rax, %rdi
 3318 0cec 7405     		je	.L202
 3319              	.LVL271:
 3320              	.LBB1530:
 3321              	.LBI1530:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3322              		.loc 8 236 7 is_stmt 1 view .LVU915
 3323              	.LBB1531:
 3324              	.LBB1532:
 3325              	.LBI1532:
 3326              		.loc 14 469 7 view .LVU916
 3327              	.LBB1533:
 3328              	.LBI1533:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3329              		.loc 12 119 7 view .LVU917
 3330              	.LBB1534:
 3331              		.loc 12 128 19 is_stmt 0 view .LVU918
 3332 0cee E8000000 		call	_ZdlPv@PLT
 3332      00
 3333              	.LVL272:
 3334              	.L202:
 3335              		.loc 12 128 19 view .LVU919
 3336              	.LBE1534:
 3337              	.LBE1533:
 3338              	.LBE1532:
 3339              	.LBE1531:
 3340              	.LBE1530:
 3341              	.LBE1525:
 3342              	.LBE1524:
GAS LISTING /tmp/ccEa7iXV.s 			page 254


 3343              	.LBB1535:
 3344              	.LBI1535:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3345              		.loc 8 150 14 is_stmt 1 view .LVU920
 3346              	.LBB1536:
 3347              	.LBI1536:
 3348              		.loc 11 153 7 view .LVU921
 3349              	.LBB1537:
 3350              	.LBI1537:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3351              		.loc 12 89 7 view .LVU922
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3352              		.loc 12 89 7 is_stmt 0 view .LVU923
 3353 0cf3 4889DF   		movq	%rbx, %rdi
 3354              	.LEHB11:
 3355 0cf6 E8000000 		call	_Unwind_Resume@PLT
 3355      00
 3356              	.LVL273:
 3357              	.LEHE11:
 3358              	.L246:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3359              		.loc 12 89 7 view .LVU924
 3360 0cfb 4889C3   		movq	%rax, %rbx
 3361              	.LVL274:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3362              		.loc 12 89 7 view .LVU925
 3363              	.LBE1537:
 3364              	.LBE1536:
 3365              	.LBE1535:
 3366              	.LBE1523:
 3367              	.LBB1538:
 3368              	.LBI1538:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3369              		.loc 8 657 7 is_stmt 1 view .LVU926
 3370              	.LBB1539:
 3371              	.LBI1539:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3372              		.loc 8 229 7 view .LVU927
 3373              	.LBB1540:
 3374              	.LBB1541:
 3375              	.LBI1541:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3376              		.loc 8 221 7 view .LVU928
 3377              	.LBB1542:
 3378              	.LBI1542:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3379              		.loc 8 186 7 view .LVU929
 3380              	.LBB1543:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3381              		.loc 8 187 28 is_stmt 0 view .LVU930
 3382 0cfe 488B7C24 		movq	64(%rsp), %rdi
 3382      40
 3383              	.LVL275:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3384              		.loc 8 187 28 view .LVU931
 3385              	.LBE1543:
 3386              	.LBE1542:
GAS LISTING /tmp/ccEa7iXV.s 			page 255


 3387              	.LBB1544:
 3388              	.LBI1544:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3389              		.loc 8 200 7 is_stmt 1 view .LVU932
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3390              		.loc 8 200 7 is_stmt 0 view .LVU933
 3391              	.LBE1544:
 3392              	.LBE1541:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3393              		.loc 8 231 2 view .LVU934
 3394 0d03 488D4424 		leaq	80(%rsp), %rax
 3394      50
 3395 0d08 4839C7   		cmpq	%rax, %rdi
 3396 0d0b 74D3     		je	.L195
 3397              	.LVL276:
 3398              	.LBB1545:
 3399              	.LBI1545:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3400              		.loc 8 236 7 is_stmt 1 view .LVU935
 3401              	.LBB1546:
 3402              	.LBB1547:
 3403              	.LBI1547:
 3404              		.loc 14 469 7 view .LVU936
 3405              	.LBB1548:
 3406              	.LBI1548:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3407              		.loc 12 119 7 view .LVU937
 3408              	.LBB1549:
 3409              		.loc 12 128 19 is_stmt 0 view .LVU938
 3410 0d0d E8000000 		call	_ZdlPv@PLT
 3410      00
 3411              	.LVL277:
 3412              		.loc 12 128 19 view .LVU939
 3413              	.LBE1549:
 3414              	.LBE1548:
 3415              	.LBE1547:
 3416              	.LBE1546:
 3417              	.LBE1545:
 3418              	.LBE1540:
 3419              	.LBE1539:
 3420              	.LBB1553:
 3421              	.LBI1553:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3422              		.loc 8 150 14 is_stmt 1 view .LVU940
 3423              	.LBB1554:
 3424              	.LBI1554:
 3425              		.loc 11 153 7 view .LVU941
 3426              	.LBB1555:
 3427              	.LBI1555:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3428              		.loc 12 89 7 view .LVU942
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3429              		.loc 12 89 7 is_stmt 0 view .LVU943
 3430              	.LBE1555:
 3431              	.LBE1554:
 3432              	.LBE1553:
 3433              	.LBB1556:
GAS LISTING /tmp/ccEa7iXV.s 			page 256


 3434              	.LBB1552:
 3435              	.LBB1551:
 3436              	.LBB1550:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3437              		.loc 8 237 79 view .LVU944
 3438 0d12 EBCC     		jmp	.L195
 3439              	.LVL278:
 3440              	.L245:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3441              		.loc 8 237 79 view .LVU945
 3442 0d14 4889C3   		movq	%rax, %rbx
 3443              	.LVL279:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3444              		.loc 8 237 79 view .LVU946
 3445              	.LBE1550:
 3446              	.LBE1551:
 3447              	.LBE1552:
 3448              	.LBE1556:
 3449              	.LBE1538:
 3450              	.LBB1557:
 3451              	.LBI1557:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3452              		.loc 8 657 7 is_stmt 1 view .LVU947
 3453              	.LBB1558:
 3454              	.LBI1558:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3455              		.loc 8 229 7 view .LVU948
 3456              	.LBB1559:
 3457              	.LBB1560:
 3458              	.LBI1560:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3459              		.loc 8 221 7 view .LVU949
 3460              	.LBB1561:
 3461              	.LBI1561:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3462              		.loc 8 186 7 view .LVU950
 3463              	.LBB1562:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3464              		.loc 8 187 28 is_stmt 0 view .LVU951
 3465 0d17 488B7C24 		movq	64(%rsp), %rdi
 3465      40
 3466              	.LVL280:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3467              		.loc 8 187 28 view .LVU952
 3468              	.LBE1562:
 3469              	.LBE1561:
 3470              	.LBB1563:
 3471              	.LBI1563:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3472              		.loc 8 200 7 is_stmt 1 view .LVU953
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3473              		.loc 8 200 7 is_stmt 0 view .LVU954
 3474              	.LBE1563:
 3475              	.LBE1560:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3476              		.loc 8 231 2 view .LVU955
 3477 0d1c 488D4424 		leaq	80(%rsp), %rax
GAS LISTING /tmp/ccEa7iXV.s 			page 257


 3477      50
 3478 0d21 4839C7   		cmpq	%rax, %rdi
 3479 0d24 74BA     		je	.L195
 3480              	.LVL281:
 3481              	.LBB1564:
 3482              	.LBI1564:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3483              		.loc 8 236 7 is_stmt 1 view .LVU956
 3484              	.LBB1565:
 3485              	.LBB1566:
 3486              	.LBI1566:
 3487              		.loc 14 469 7 view .LVU957
 3488              	.LBB1567:
 3489              	.LBI1567:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3490              		.loc 12 119 7 view .LVU958
 3491              	.LBB1568:
 3492              		.loc 12 128 19 is_stmt 0 view .LVU959
 3493 0d26 E8000000 		call	_ZdlPv@PLT
 3493      00
 3494              	.LVL282:
 3495              		.loc 12 128 19 view .LVU960
 3496              	.LBE1568:
 3497              	.LBE1567:
 3498              	.LBE1566:
 3499              	.LBE1565:
 3500              	.LBE1564:
 3501              	.LBE1559:
 3502              	.LBE1558:
 3503              	.LBB1572:
 3504              	.LBI1572:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3505              		.loc 8 150 14 is_stmt 1 view .LVU961
 3506              	.LBB1573:
 3507              	.LBI1573:
 3508              		.loc 11 153 7 view .LVU962
 3509              	.LBB1574:
 3510              	.LBI1574:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3511              		.loc 12 89 7 view .LVU963
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3512              		.loc 12 89 7 is_stmt 0 view .LVU964
 3513              	.LBE1574:
 3514              	.LBE1573:
 3515              	.LBE1572:
 3516              	.LBB1575:
 3517              	.LBB1571:
 3518              	.LBB1570:
 3519              	.LBB1569:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3520              		.loc 8 237 79 view .LVU965
 3521 0d2b EBB3     		jmp	.L195
 3522              	.LVL283:
 3523              	.L244:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3524              		.loc 8 237 79 view .LVU966
 3525 0d2d 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccEa7iXV.s 			page 258


 3526              	.LVL284:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3527              		.loc 8 237 79 view .LVU967
 3528              	.LBE1569:
 3529              	.LBE1570:
 3530              	.LBE1571:
 3531              	.LBE1575:
 3532              	.LBE1557:
 3533              	.LBB1576:
 3534              	.LBI1576:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3535              		.loc 8 657 7 is_stmt 1 view .LVU968
 3536              	.LBB1577:
 3537              	.LBI1577:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3538              		.loc 8 229 7 view .LVU969
 3539              	.LBB1578:
 3540              	.LBB1579:
 3541              	.LBI1579:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3542              		.loc 8 221 7 view .LVU970
 3543              	.LBB1580:
 3544              	.LBI1580:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3545              		.loc 8 186 7 view .LVU971
 3546              	.LBB1581:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3547              		.loc 8 187 28 is_stmt 0 view .LVU972
 3548 0d30 488B7C24 		movq	64(%rsp), %rdi
 3548      40
 3549              	.LVL285:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3550              		.loc 8 187 28 view .LVU973
 3551              	.LBE1581:
 3552              	.LBE1580:
 3553              	.LBB1582:
 3554              	.LBI1582:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3555              		.loc 8 200 7 is_stmt 1 view .LVU974
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3556              		.loc 8 200 7 is_stmt 0 view .LVU975
 3557              	.LBE1582:
 3558              	.LBE1579:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3559              		.loc 8 231 2 view .LVU976
 3560 0d35 488D4424 		leaq	80(%rsp), %rax
 3560      50
 3561 0d3a 4839C7   		cmpq	%rax, %rdi
 3562 0d3d 74A1     		je	.L195
 3563              	.LVL286:
 3564              	.LBB1583:
 3565              	.LBI1583:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3566              		.loc 8 236 7 is_stmt 1 view .LVU977
 3567              	.LBB1584:
 3568              	.LBB1585:
 3569              	.LBI1585:
GAS LISTING /tmp/ccEa7iXV.s 			page 259


 3570              		.loc 14 469 7 view .LVU978
 3571              	.LBB1586:
 3572              	.LBI1586:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3573              		.loc 12 119 7 view .LVU979
 3574              	.LBB1587:
 3575              		.loc 12 128 19 is_stmt 0 view .LVU980
 3576 0d3f E8000000 		call	_ZdlPv@PLT
 3576      00
 3577              	.LVL287:
 3578              		.loc 12 128 19 view .LVU981
 3579              	.LBE1587:
 3580              	.LBE1586:
 3581              	.LBE1585:
 3582              	.LBE1584:
 3583              	.LBE1583:
 3584              	.LBE1578:
 3585              	.LBE1577:
 3586              	.LBB1591:
 3587              	.LBI1591:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3588              		.loc 8 150 14 is_stmt 1 view .LVU982
 3589              	.LBB1592:
 3590              	.LBI1592:
 3591              		.loc 11 153 7 view .LVU983
 3592              	.LBB1593:
 3593              	.LBI1593:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3594              		.loc 12 89 7 view .LVU984
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3595              		.loc 12 89 7 is_stmt 0 view .LVU985
 3596              	.LBE1593:
 3597              	.LBE1592:
 3598              	.LBE1591:
 3599              	.LBB1594:
 3600              	.LBB1590:
 3601              	.LBB1589:
 3602              	.LBB1588:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3603              		.loc 8 237 79 view .LVU986
 3604 0d44 EB9A     		jmp	.L195
 3605              	.LVL288:
 3606              	.L266:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3607              		.loc 8 237 79 view .LVU987
 3608              	.LBE1588:
 3609              	.LBE1589:
 3610              	.LBE1590:
 3611              	.LBE1594:
 3612              	.LBE1576:
 3613              	.LBE1601:
 3614              	.LBE1616:
 3615              	.LBB1617:
 3616              	.LBI1617:
  47:Includes/findwayBases.hpp ****     {
 3617              		.loc 5 47 17 is_stmt 1 view .LVU988
 3618              	.LBB1618:
GAS LISTING /tmp/ccEa7iXV.s 			page 260


  49:Includes/findwayBases.hpp ****         str += "{tgts: ";
 3619              		.loc 5 49 9 view .LVU989
 3620              	.LBB1619:
 3621              	.LBI1619:
 138:/usr/include/c++/9.2.0/bits/allocator.h **** 
 3622              		.loc 11 138 7 view .LVU990
 3623              	.LBB1620:
 3624              	.LBI1620:
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3625              		.loc 12 80 7 view .LVU991
  80:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3626              		.loc 12 80 7 is_stmt 0 view .LVU992
 3627              	.LBE1620:
 3628              	.LBE1619:
 3629              	.LBB1621:
 3630              	.LBI1621:
 525:/usr/include/c++/9.2.0/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3631              		.loc 8 525 7 is_stmt 1 view .LVU993
 3632              	.LBB1622:
 3633              	.LBB1623:
 3634              	.LBI1623:
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3635              		.loc 8 190 7 view .LVU994
 190:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3636              		.loc 8 190 7 is_stmt 0 view .LVU995
 3637              	.LBE1623:
 3638              	.LBB1624:
 3639              	.LBI1624:
 156:/usr/include/c++/9.2.0/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3640              		.loc 8 156 2 is_stmt 1 view .LVU996
 3641              	.LBB1625:
 3642              	.LBB1626:
 3643              	.LBB1627:
 3644              	.LBI1627:
 141:/usr/include/c++/9.2.0/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3645              		.loc 11 141 7 view .LVU997
 3646              	.LBB1628:
 3647              	.LBI1628:
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3648              		.loc 12 83 7 view .LVU998
  83:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3649              		.loc 12 83 7 is_stmt 0 view .LVU999
 3650              	.LBE1628:
 3651              	.LBE1627:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3652              		.loc 8 157 35 view .LVU1000
 3653 0d46 488D7C24 		leaq	32(%rsp), %rdi
 3653      20
 3654              	.LVL289:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3655              		.loc 8 157 35 view .LVU1001
 3656 0d4b 488D4424 		leaq	48(%rsp), %rax
 3656      30
 3657              	.LVL290:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3658              		.loc 8 157 35 view .LVU1002
 3659 0d50 48894424 		movq	%rax, 32(%rsp)
GAS LISTING /tmp/ccEa7iXV.s 			page 261


 3659      20
 3660              	.LVL291:
 157:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3661              		.loc 8 157 35 view .LVU1003
 3662              	.LBE1626:
 3663              	.LBE1625:
 3664              	.LBE1624:
 3665              	.LBB1629:
 3666              	.LBI1629:
 329:/usr/include/c++/9.2.0/bits/char_traits.h ****       {
 3667              		.loc 9 329 7 is_stmt 1 view .LVU1004
 3668              	.LBE1629:
 3669              	.LBE1622:
 3670              	.LBE1621:
 3671              	.LBE1618:
 3672              	.LBE1617:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3673              		.loc 9 335 2 view .LVU1005
 3674              	.LBB1871:
 3675              	.LBB1863:
 3676              	.LBB1635:
 3677              	.LBB1634:
 3678              	.LBB1630:
 3679              	.LBI1630:
 263:/usr/include/c++/9.2.0/bits/basic_string.h **** 	{
 3680              		.loc 8 263 9 view .LVU1006
 3681              	.LBB1631:
 3682              	.LBB1632:
 3683              	.LBI1632:
 243:/usr/include/c++/9.2.0/bits/basic_string.h **** 			 std::__false_type)
 3684              		.loc 8 243 9 view .LVU1007
 3685              	.LBB1633:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3686              		.loc 8 247 11 is_stmt 0 view .LVU1008
 3687 0d55 488D1500 		leaq	.LC9(%rip), %rdx
 3687      000000
 3688 0d5c 4889D6   		movq	%rdx, %rsi
 3689              	.LEHB12:
 3690 0d5f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_it
 3690      00
 3691              	.LVL292:
 3692              	.LEHE12:
 247:/usr/include/c++/9.2.0/bits/basic_string.h **** 	}
 3693              		.loc 8 247 11 view .LVU1009
 3694              	.LBE1633:
 3695              	.LBE1632:
 3696              	.LBE1631:
 3697              	.LBE1630:
 3698              	.LBE1634:
 3699              	.LBE1635:
 3700              	.LBB1636:
 3701              	.LBI1636:
 3702              		.loc 11 153 7 is_stmt 1 view .LVU1010
 3703              	.LBB1637:
 3704              	.LBI1637:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3705              		.loc 12 89 7 view .LVU1011
GAS LISTING /tmp/ccEa7iXV.s 			page 262


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3706              		.loc 12 89 7 is_stmt 0 view .LVU1012
 3707              	.LBE1637:
 3708              	.LBE1636:
  50:Includes/findwayBases.hpp ****         str += std::to_string(numOfTargets);
 3709              		.loc 5 50 9 is_stmt 1 view .LVU1013
 3710              	.LBB1638:
 3711              	.LBI1638:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 3712              		.loc 8 1177 7 view .LVU1014
 3713              	.LBB1639:
 3714              	.LBI1639:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3715              		.loc 8 1263 7 view .LVU1015
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3716              		.loc 8 1263 7 is_stmt 0 view .LVU1016
 3717              	.LBE1639:
 3718              	.LBE1638:
 3719              	.LBE1863:
 3720              	.LBE1871:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3721              		.loc 9 335 2 is_stmt 1 view .LVU1017
 3722              	.LBB1872:
 3723              	.LBB1864:
 3724              	.LBB1647:
 3725              	.LBB1646:
 3726              	.LBB1640:
 3727              	.LBB1641:
 3728              	.LBI1641:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3729              		.loc 8 320 7 view .LVU1018
 3730              	.LBB1642:
 3731              	.LBB1643:
 3732              	.LBI1643:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3733              		.loc 8 930 7 view .LVU1019
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3734              		.loc 8 930 7 is_stmt 0 view .LVU1020
 3735              	.LBE1643:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3736              		.loc 8 322 2 view .LVU1021
 3737 0d64 48B8FFFF 		movabsq	$4611686018427387903, %rax
 3737      FFFFFFFF 
 3737      FF3F
 3738 0d6e 482B4424 		subq	40(%rsp), %rax
 3738      28
 3739 0d73 4883F806 		cmpq	$6, %rax
 3740 0d77 7618     		jbe	.L267
 3741              	.LVL293:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3742              		.loc 8 322 2 view .LVU1022
 3743              	.LBE1642:
 3744              	.LBE1641:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3745              		.loc 8 1268 27 view .LVU1023
 3746 0d79 488D7C24 		leaq	32(%rsp), %rdi
 3746      20
GAS LISTING /tmp/ccEa7iXV.s 			page 263


 3747              	.LVL294:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3748              		.loc 8 1268 27 view .LVU1024
 3749 0d7e BA070000 		movl	$7, %edx
 3749      00
 3750 0d83 488D3500 		leaq	.LC11(%rip), %rsi
 3750      000000
 3751              	.LEHB13:
 3752 0d8a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3752      00
 3753              	.LVL295:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3754              		.loc 8 1268 27 view .LVU1025
 3755 0d8f EB14     		jmp	.L268
 3756              	.LVL296:
 3757              	.L267:
 3758              	.LBB1645:
 3759              	.LBB1644:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3760              		.loc 8 323 24 view .LVU1026
 3761 0d91 488D3D00 		leaq	.LC10(%rip), %rdi
 3761      000000
 3762 0d98 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 3762      00
 3763              	.LVL297:
 3764              	.L248:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3765              		.loc 8 323 24 view .LVU1027
 3766 0d9d 4889C3   		movq	%rax, %rbx
 3767              	.LVL298:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3768              		.loc 8 323 24 view .LVU1028
 3769 0da0 E9850200 		jmp	.L215
 3769      00
 3770              	.LVL299:
 3771              	.L268:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3772              		.loc 8 323 24 view .LVU1029
 3773              	.LBE1644:
 3774              	.LBE1645:
 3775              	.LBE1640:
 3776              	.LBE1646:
 3777              	.LBE1647:
  51:Includes/findwayBases.hpp ****         str += "; cal: ";
 3778              		.loc 5 51 9 is_stmt 1 view .LVU1030
 3779              	.LBB1648:
 3780              	.LBI1648:
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 3781              		.loc 8 6562 3 view .LVU1031
 3782              	.LBB1649:
6563:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
 3783              		.loc 8 6563 5 view .LVU1032
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3784              		.loc 8 6565 21 is_stmt 0 view .LVU1033
 3785 0da5 488D7C24 		leaq	64(%rsp), %rdi
 3785      40
 3786 0daa 4C8B4508 		movq	8(%rbp), %r8
GAS LISTING /tmp/ccEa7iXV.s 			page 264


 3787 0dae 488D0D00 		leaq	.LC12(%rip), %rcx
 3787      000000
 3788 0db5 BA200000 		movl	$32, %edx
 3788      00
 3789 0dba 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 3789      000000
 3790 0dc1 B8000000 		movl	$0, %eax
 3790      00
 3791 0dc6 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 3791      00
 3792              	.LVL300:
 3793              	.LEHE13:
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3794              		.loc 8 6565 21 view .LVU1034
 3795              	.LBE1649:
 3796              	.LBE1648:
 3797              	.LBB1650:
 3798              	.LBI1650:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 3799              		.loc 8 1168 7 is_stmt 1 view .LVU1035
 3800              	.LBB1651:
 3801              	.LBI1651:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 3802              		.loc 8 1221 7 view .LVU1036
 3803              	.LBB1652:
 3804              	.LBB1653:
 3805              	.LBI1653:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3806              		.loc 8 930 7 view .LVU1037
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3807              		.loc 8 930 7 is_stmt 0 view .LVU1038
 3808              	.LBE1653:
 3809              	.LBB1654:
 3810              	.LBI1654:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3811              		.loc 8 186 7 is_stmt 1 view .LVU1039
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3812              		.loc 8 186 7 is_stmt 0 view .LVU1040
 3813              	.LBE1654:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3814              		.loc 8 1222 55 view .LVU1041
 3815 0dcb 488D7C24 		leaq	32(%rsp), %rdi
 3815      20
 3816              	.LVL301:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3817              		.loc 8 1222 55 view .LVU1042
 3818 0dd0 488B5424 		movq	72(%rsp), %rdx
 3818      48
 3819 0dd5 488B7424 		movq	64(%rsp), %rsi
 3819      40
 3820              	.LEHB14:
 3821 0dda E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3821      00
 3822              	.LVL302:
 3823              	.LEHE14:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3824              		.loc 8 1222 55 view .LVU1043
GAS LISTING /tmp/ccEa7iXV.s 			page 265


 3825              	.LBE1652:
 3826              	.LBE1651:
 3827              	.LBE1650:
 3828              	.LBB1655:
 3829              	.LBI1655:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 3830              		.loc 8 657 7 is_stmt 1 view .LVU1044
 3831              	.LBB1656:
 3832              	.LBI1656:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3833              		.loc 8 229 7 view .LVU1045
 3834              	.LBB1657:
 3835              	.LBB1658:
 3836              	.LBI1658:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3837              		.loc 8 221 7 view .LVU1046
 3838              	.LBB1659:
 3839              	.LBI1659:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3840              		.loc 8 186 7 view .LVU1047
 3841              	.LBB1660:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3842              		.loc 8 187 28 is_stmt 0 view .LVU1048
 3843 0ddf 488B7C24 		movq	64(%rsp), %rdi
 3843      40
 3844              	.LVL303:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3845              		.loc 8 187 28 view .LVU1049
 3846              	.LBE1660:
 3847              	.LBE1659:
 3848              	.LBB1661:
 3849              	.LBI1661:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3850              		.loc 8 200 7 is_stmt 1 view .LVU1050
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3851              		.loc 8 200 7 is_stmt 0 view .LVU1051
 3852              	.LBE1661:
 3853              	.LBE1658:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3854              		.loc 8 231 2 view .LVU1052
 3855 0de4 488D4424 		leaq	80(%rsp), %rax
 3855      50
 3856 0de9 4839C7   		cmpq	%rax, %rdi
 3857 0dec 7405     		je	.L204
 3858              	.LVL304:
 3859              	.LBB1662:
 3860              	.LBI1662:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3861              		.loc 8 236 7 is_stmt 1 view .LVU1053
 3862              	.LBB1663:
 3863              	.LBB1664:
 3864              	.LBI1664:
 3865              		.loc 14 469 7 view .LVU1054
 3866              	.LBB1665:
 3867              	.LBI1665:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 3868              		.loc 12 119 7 view .LVU1055
GAS LISTING /tmp/ccEa7iXV.s 			page 266


 3869              	.LBB1666:
 3870              		.loc 12 128 19 is_stmt 0 view .LVU1056
 3871 0dee E8000000 		call	_ZdlPv@PLT
 3871      00
 3872              	.LVL305:
 3873              	.L204:
 3874              		.loc 12 128 19 view .LVU1057
 3875              	.LBE1666:
 3876              	.LBE1665:
 3877              	.LBE1664:
 3878              	.LBE1663:
 3879              	.LBE1662:
 3880              	.LBE1657:
 3881              	.LBE1656:
 3882              	.LBB1667:
 3883              	.LBI1667:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3884              		.loc 8 150 14 is_stmt 1 view .LVU1058
 3885              	.LBB1668:
 3886              	.LBI1668:
 3887              		.loc 11 153 7 view .LVU1059
 3888              	.LBB1669:
 3889              	.LBI1669:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3890              		.loc 12 89 7 view .LVU1060
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 3891              		.loc 12 89 7 is_stmt 0 view .LVU1061
 3892              	.LBE1669:
 3893              	.LBE1668:
 3894              	.LBE1667:
 3895              	.LBE1655:
  52:Includes/findwayBases.hpp ****         str += std::to_string(calculated);
 3896              		.loc 5 52 9 is_stmt 1 view .LVU1062
 3897              	.LBB1670:
 3898              	.LBI1670:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 3899              		.loc 8 1177 7 view .LVU1063
 3900              	.LBB1671:
 3901              	.LBI1671:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3902              		.loc 8 1263 7 view .LVU1064
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 3903              		.loc 8 1263 7 is_stmt 0 view .LVU1065
 3904              	.LBE1671:
 3905              	.LBE1670:
 3906              	.LBE1864:
 3907              	.LBE1872:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 3908              		.loc 9 335 2 is_stmt 1 view .LVU1066
 3909              	.LBB1873:
 3910              	.LBB1865:
 3911              	.LBB1679:
 3912              	.LBB1678:
 3913              	.LBB1672:
 3914              	.LBB1673:
 3915              	.LBI1673:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 267


 3916              		.loc 8 320 7 view .LVU1067
 3917              	.LBB1674:
 3918              	.LBB1675:
 3919              	.LBI1675:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3920              		.loc 8 930 7 view .LVU1068
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3921              		.loc 8 930 7 is_stmt 0 view .LVU1069
 3922              	.LBE1675:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3923              		.loc 8 322 2 view .LVU1070
 3924 0df3 48B8FFFF 		movabsq	$4611686018427387903, %rax
 3924      FFFFFFFF 
 3924      FF3F
 3925 0dfd 482B4424 		subq	40(%rsp), %rax
 3925      28
 3926 0e02 4883F806 		cmpq	$6, %rax
 3927 0e06 7618     		jbe	.L269
 3928              	.LVL306:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 3929              		.loc 8 322 2 view .LVU1071
 3930              	.LBE1674:
 3931              	.LBE1673:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3932              		.loc 8 1268 27 view .LVU1072
 3933 0e08 488D7C24 		leaq	32(%rsp), %rdi
 3933      20
 3934              	.LVL307:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3935              		.loc 8 1268 27 view .LVU1073
 3936 0e0d BA070000 		movl	$7, %edx
 3936      00
 3937 0e12 488D3500 		leaq	.LC13(%rip), %rsi
 3937      000000
 3938              	.LEHB15:
 3939 0e19 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 3939      00
 3940              	.LVL308:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3941              		.loc 8 1268 27 view .LVU1074
 3942 0e1e EB0C     		jmp	.L270
 3943              	.LVL309:
 3944              	.L269:
 3945              	.LBB1677:
 3946              	.LBB1676:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3947              		.loc 8 323 24 view .LVU1075
 3948 0e20 488D3D00 		leaq	.LC10(%rip), %rdi
 3948      000000
 3949 0e27 E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 3949      00
 3950              	.LVL310:
 3951              	.L270:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 3952              		.loc 8 323 24 view .LVU1076
 3953              	.LBE1676:
 3954              	.LBE1677:
GAS LISTING /tmp/ccEa7iXV.s 			page 268


 3955              	.LBE1672:
 3956              	.LBE1678:
 3957              	.LBE1679:
  53:Includes/findwayBases.hpp ****         str += "; weight: ";
 3958              		.loc 5 53 9 is_stmt 1 view .LVU1077
 3959              	.LBB1680:
 3960              	.LBI1680:
6546:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
 3961              		.loc 8 6546 3 view .LVU1078
 3962              	.LBB1681:
6547:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%d", __val); }
 3963              		.loc 8 6547 5 view .LVU1079
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3964              		.loc 8 6548 20 is_stmt 0 view .LVU1080
 3965 0e2c 488D7C24 		leaq	64(%rsp), %rdi
 3965      40
 3966 0e31 440FB645 		movzbl	24(%rbp), %r8d
 3966      18
 3967              	.LVL311:
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3968              		.loc 8 6548 20 view .LVU1081
 3969 0e36 488D0D00 		leaq	.LC14(%rip), %rcx
 3969      000000
 3970 0e3d BA100000 		movl	$16, %edx
 3970      00
 3971 0e42 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 3971      000000
 3972 0e49 B8000000 		movl	$0, %eax
 3972      00
 3973 0e4e E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 3973      00
 3974              	.LVL312:
 3975              	.LEHE15:
6548:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3976              		.loc 8 6548 20 view .LVU1082
 3977              	.LBE1681:
 3978              	.LBE1680:
 3979              	.LBB1682:
 3980              	.LBI1682:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 3981              		.loc 8 1168 7 is_stmt 1 view .LVU1083
 3982              	.LBB1683:
 3983              	.LBI1683:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 3984              		.loc 8 1221 7 view .LVU1084
 3985              	.LBB1684:
 3986              	.LBB1685:
 3987              	.LBI1685:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3988              		.loc 8 930 7 view .LVU1085
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 3989              		.loc 8 930 7 is_stmt 0 view .LVU1086
 3990              	.LBE1685:
 3991              	.LBB1686:
 3992              	.LBI1686:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3993              		.loc 8 186 7 is_stmt 1 view .LVU1087
GAS LISTING /tmp/ccEa7iXV.s 			page 269


 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3994              		.loc 8 186 7 is_stmt 0 view .LVU1088
 3995              	.LBE1686:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3996              		.loc 8 1222 55 view .LVU1089
 3997 0e53 488D7C24 		leaq	32(%rsp), %rdi
 3997      20
 3998              	.LVL313:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 3999              		.loc 8 1222 55 view .LVU1090
 4000 0e58 488B5424 		movq	72(%rsp), %rdx
 4000      48
 4001 0e5d 488B7424 		movq	64(%rsp), %rsi
 4001      40
 4002              	.LEHB16:
 4003 0e62 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4003      00
 4004              	.LVL314:
 4005              	.LEHE16:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4006              		.loc 8 1222 55 view .LVU1091
 4007              	.LBE1684:
 4008              	.LBE1683:
 4009              	.LBE1682:
 4010              	.LBB1687:
 4011              	.LBI1687:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4012              		.loc 8 657 7 is_stmt 1 view .LVU1092
 4013              	.LBB1688:
 4014              	.LBI1688:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4015              		.loc 8 229 7 view .LVU1093
 4016              	.LBB1689:
 4017              	.LBB1690:
 4018              	.LBI1690:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4019              		.loc 8 221 7 view .LVU1094
 4020              	.LBB1691:
 4021              	.LBI1691:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4022              		.loc 8 186 7 view .LVU1095
 4023              	.LBB1692:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4024              		.loc 8 187 28 is_stmt 0 view .LVU1096
 4025 0e67 488B7C24 		movq	64(%rsp), %rdi
 4025      40
 4026              	.LVL315:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4027              		.loc 8 187 28 view .LVU1097
 4028              	.LBE1692:
 4029              	.LBE1691:
 4030              	.LBB1693:
 4031              	.LBI1693:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4032              		.loc 8 200 7 is_stmt 1 view .LVU1098
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4033              		.loc 8 200 7 is_stmt 0 view .LVU1099
GAS LISTING /tmp/ccEa7iXV.s 			page 270


 4034              	.LBE1693:
 4035              	.LBE1690:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4036              		.loc 8 231 2 view .LVU1100
 4037 0e6c 488D4424 		leaq	80(%rsp), %rax
 4037      50
 4038 0e71 4839C7   		cmpq	%rax, %rdi
 4039 0e74 7405     		je	.L206
 4040              	.LVL316:
 4041              	.LBB1694:
 4042              	.LBI1694:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4043              		.loc 8 236 7 is_stmt 1 view .LVU1101
 4044              	.LBB1695:
 4045              	.LBB1696:
 4046              	.LBI1696:
 4047              		.loc 14 469 7 view .LVU1102
 4048              	.LBB1697:
 4049              	.LBI1697:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4050              		.loc 12 119 7 view .LVU1103
 4051              	.LBB1698:
 4052              		.loc 12 128 19 is_stmt 0 view .LVU1104
 4053 0e76 E8000000 		call	_ZdlPv@PLT
 4053      00
 4054              	.LVL317:
 4055              	.L206:
 4056              		.loc 12 128 19 view .LVU1105
 4057              	.LBE1698:
 4058              	.LBE1697:
 4059              	.LBE1696:
 4060              	.LBE1695:
 4061              	.LBE1694:
 4062              	.LBE1689:
 4063              	.LBE1688:
 4064              	.LBB1699:
 4065              	.LBI1699:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4066              		.loc 8 150 14 is_stmt 1 view .LVU1106
 4067              	.LBB1700:
 4068              	.LBI1700:
 4069              		.loc 11 153 7 view .LVU1107
 4070              	.LBB1701:
 4071              	.LBI1701:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4072              		.loc 12 89 7 view .LVU1108
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4073              		.loc 12 89 7 is_stmt 0 view .LVU1109
 4074              	.LBE1701:
 4075              	.LBE1700:
 4076              	.LBE1699:
 4077              	.LBE1687:
  54:Includes/findwayBases.hpp ****         str += std::to_string(weight);
 4078              		.loc 5 54 9 is_stmt 1 view .LVU1110
 4079              	.LBB1702:
 4080              	.LBI1702:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
GAS LISTING /tmp/ccEa7iXV.s 			page 271


 4081              		.loc 8 1177 7 view .LVU1111
 4082              	.LBB1703:
 4083              	.LBI1703:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4084              		.loc 8 1263 7 view .LVU1112
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4085              		.loc 8 1263 7 is_stmt 0 view .LVU1113
 4086              	.LBE1703:
 4087              	.LBE1702:
 4088              	.LBE1865:
 4089              	.LBE1873:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4090              		.loc 9 335 2 is_stmt 1 view .LVU1114
 4091              	.LBB1874:
 4092              	.LBB1866:
 4093              	.LBB1711:
 4094              	.LBB1710:
 4095              	.LBB1704:
 4096              	.LBB1705:
 4097              	.LBI1705:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4098              		.loc 8 320 7 view .LVU1115
 4099              	.LBB1706:
 4100              	.LBB1707:
 4101              	.LBI1707:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4102              		.loc 8 930 7 view .LVU1116
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4103              		.loc 8 930 7 is_stmt 0 view .LVU1117
 4104              	.LBE1707:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4105              		.loc 8 322 2 view .LVU1118
 4106 0e7b 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4106      FFFFFFFF 
 4106      FF3F
 4107 0e85 482B4424 		subq	40(%rsp), %rax
 4107      28
 4108 0e8a 4883F809 		cmpq	$9, %rax
 4109 0e8e 7618     		jbe	.L271
 4110              	.LVL318:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4111              		.loc 8 322 2 view .LVU1119
 4112              	.LBE1706:
 4113              	.LBE1705:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4114              		.loc 8 1268 27 view .LVU1120
 4115 0e90 488D7C24 		leaq	32(%rsp), %rdi
 4115      20
 4116              	.LVL319:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4117              		.loc 8 1268 27 view .LVU1121
 4118 0e95 BA0A0000 		movl	$10, %edx
 4118      00
 4119 0e9a 488D3500 		leaq	.LC15(%rip), %rsi
 4119      000000
 4120              	.LEHB17:
 4121 0ea1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
GAS LISTING /tmp/ccEa7iXV.s 			page 272


 4121      00
 4122              	.LVL320:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4123              		.loc 8 1268 27 view .LVU1122
 4124 0ea6 EB0C     		jmp	.L272
 4125              	.LVL321:
 4126              	.L271:
 4127              	.LBB1709:
 4128              	.LBB1708:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4129              		.loc 8 323 24 view .LVU1123
 4130 0ea8 488D3D00 		leaq	.LC10(%rip), %rdi
 4130      000000
 4131 0eaf E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4131      00
 4132              	.LVL322:
 4133              	.L272:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4134              		.loc 8 323 24 view .LVU1124
 4135              	.LBE1708:
 4136              	.LBE1709:
 4137              	.LBE1704:
 4138              	.LBE1710:
 4139              	.LBE1711:
  55:Includes/findwayBases.hpp ****         str += "; i: ";
 4140              		.loc 5 55 9 is_stmt 1 view .LVU1125
 4141              	.LBB1712:
 4142              	.LBI1712:
6580:/usr/include/c++/9.2.0/bits/basic_string.h ****   {
 4143              		.loc 8 6580 3 view .LVU1126
 4144              	.LBB1713:
6582:/usr/include/c++/9.2.0/bits/basic_string.h ****       __gnu_cxx::__numeric_traits<float>::__max_exponent10 + 20;
 4145              		.loc 8 6582 5 view .LVU1127
6584:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   "%f", __val);
 4146              		.loc 8 6584 5 view .LVU1128
 4147              		.loc 8 6585 20 is_stmt 0 view .LVU1129
 4148 0eb4 488D7C24 		leaq	64(%rsp), %rdi
 4148      40
 4149 0eb9 660FEFC0 		pxor	%xmm0, %xmm0
 4150 0ebd F30F5A45 		cvtss2sd	28(%rbp), %xmm0
 4150      1C
 4151 0ec2 488D0D00 		leaq	.LC16(%rip), %rcx
 4151      000000
 4152 0ec9 BA3A0000 		movl	$58, %edx
 4152      00
 4153 0ece 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 4153      000000
 4154 0ed5 B8010000 		movl	$1, %eax
 4154      00
 4155 0eda E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 4155      00
 4156              	.LVL323:
 4157              	.LEHE17:
 4158              		.loc 8 6585 20 view .LVU1130
 4159              	.LBE1713:
 4160              	.LBE1712:
 4161              	.LBB1714:
GAS LISTING /tmp/ccEa7iXV.s 			page 273


 4162              	.LBI1714:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 4163              		.loc 8 1168 7 is_stmt 1 view .LVU1131
 4164              	.LBB1715:
 4165              	.LBI1715:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4166              		.loc 8 1221 7 view .LVU1132
 4167              	.LBB1716:
 4168              	.LBB1717:
 4169              	.LBI1717:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4170              		.loc 8 930 7 view .LVU1133
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4171              		.loc 8 930 7 is_stmt 0 view .LVU1134
 4172              	.LBE1717:
 4173              	.LBB1718:
 4174              	.LBI1718:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4175              		.loc 8 186 7 is_stmt 1 view .LVU1135
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4176              		.loc 8 186 7 is_stmt 0 view .LVU1136
 4177              	.LBE1718:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4178              		.loc 8 1222 55 view .LVU1137
 4179 0edf 488D7C24 		leaq	32(%rsp), %rdi
 4179      20
 4180              	.LVL324:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4181              		.loc 8 1222 55 view .LVU1138
 4182 0ee4 488B5424 		movq	72(%rsp), %rdx
 4182      48
 4183 0ee9 488B7424 		movq	64(%rsp), %rsi
 4183      40
 4184              	.LEHB18:
 4185 0eee E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4185      00
 4186              	.LVL325:
 4187              	.LEHE18:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4188              		.loc 8 1222 55 view .LVU1139
 4189              	.LBE1716:
 4190              	.LBE1715:
 4191              	.LBE1714:
 4192              	.LBB1719:
 4193              	.LBI1719:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4194              		.loc 8 657 7 is_stmt 1 view .LVU1140
 4195              	.LBB1720:
 4196              	.LBI1720:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4197              		.loc 8 229 7 view .LVU1141
 4198              	.LBB1721:
 4199              	.LBB1722:
 4200              	.LBI1722:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4201              		.loc 8 221 7 view .LVU1142
 4202              	.LBB1723:
GAS LISTING /tmp/ccEa7iXV.s 			page 274


 4203              	.LBI1723:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4204              		.loc 8 186 7 view .LVU1143
 4205              	.LBB1724:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4206              		.loc 8 187 28 is_stmt 0 view .LVU1144
 4207 0ef3 488B7C24 		movq	64(%rsp), %rdi
 4207      40
 4208              	.LVL326:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4209              		.loc 8 187 28 view .LVU1145
 4210              	.LBE1724:
 4211              	.LBE1723:
 4212              	.LBB1725:
 4213              	.LBI1725:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4214              		.loc 8 200 7 is_stmt 1 view .LVU1146
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4215              		.loc 8 200 7 is_stmt 0 view .LVU1147
 4216              	.LBE1725:
 4217              	.LBE1722:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4218              		.loc 8 231 2 view .LVU1148
 4219 0ef8 488D4424 		leaq	80(%rsp), %rax
 4219      50
 4220 0efd 4839C7   		cmpq	%rax, %rdi
 4221 0f00 7405     		je	.L208
 4222              	.LVL327:
 4223              	.LBB1726:
 4224              	.LBI1726:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4225              		.loc 8 236 7 is_stmt 1 view .LVU1149
 4226              	.LBB1727:
 4227              	.LBB1728:
 4228              	.LBI1728:
 4229              		.loc 14 469 7 view .LVU1150
 4230              	.LBB1729:
 4231              	.LBI1729:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4232              		.loc 12 119 7 view .LVU1151
 4233              	.LBB1730:
 4234              		.loc 12 128 19 is_stmt 0 view .LVU1152
 4235 0f02 E8000000 		call	_ZdlPv@PLT
 4235      00
 4236              	.LVL328:
 4237              	.L208:
 4238              		.loc 12 128 19 view .LVU1153
 4239              	.LBE1730:
 4240              	.LBE1729:
 4241              	.LBE1728:
 4242              	.LBE1727:
 4243              	.LBE1726:
 4244              	.LBE1721:
 4245              	.LBE1720:
 4246              	.LBB1731:
 4247              	.LBI1731:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 275


 4248              		.loc 8 150 14 is_stmt 1 view .LVU1154
 4249              	.LBB1732:
 4250              	.LBI1732:
 4251              		.loc 11 153 7 view .LVU1155
 4252              	.LBB1733:
 4253              	.LBI1733:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4254              		.loc 12 89 7 view .LVU1156
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4255              		.loc 12 89 7 is_stmt 0 view .LVU1157
 4256              	.LBE1733:
 4257              	.LBE1732:
 4258              	.LBE1731:
 4259              	.LBE1719:
  56:Includes/findwayBases.hpp ****         str += std::to_string(i);
 4260              		.loc 5 56 9 is_stmt 1 view .LVU1158
 4261              	.LBB1734:
 4262              	.LBI1734:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4263              		.loc 8 1177 7 view .LVU1159
 4264              	.LBB1735:
 4265              	.LBI1735:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4266              		.loc 8 1263 7 view .LVU1160
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4267              		.loc 8 1263 7 is_stmt 0 view .LVU1161
 4268              	.LBE1735:
 4269              	.LBE1734:
 4270              	.LBE1866:
 4271              	.LBE1874:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4272              		.loc 9 335 2 is_stmt 1 view .LVU1162
 4273              	.LBB1875:
 4274              	.LBB1867:
 4275              	.LBB1743:
 4276              	.LBB1742:
 4277              	.LBB1736:
 4278              	.LBB1737:
 4279              	.LBI1737:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4280              		.loc 8 320 7 view .LVU1163
 4281              	.LBB1738:
 4282              	.LBB1739:
 4283              	.LBI1739:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4284              		.loc 8 930 7 view .LVU1164
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4285              		.loc 8 930 7 is_stmt 0 view .LVU1165
 4286              	.LBE1739:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4287              		.loc 8 322 2 view .LVU1166
 4288 0f07 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4288      FFFFFFFF 
 4288      FF3F
 4289 0f11 482B4424 		subq	40(%rsp), %rax
 4289      28
 4290 0f16 4883F804 		cmpq	$4, %rax
GAS LISTING /tmp/ccEa7iXV.s 			page 276


 4291 0f1a 7618     		jbe	.L273
 4292              	.LVL329:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4293              		.loc 8 322 2 view .LVU1167
 4294              	.LBE1738:
 4295              	.LBE1737:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4296              		.loc 8 1268 27 view .LVU1168
 4297 0f1c 488D7C24 		leaq	32(%rsp), %rdi
 4297      20
 4298              	.LVL330:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4299              		.loc 8 1268 27 view .LVU1169
 4300 0f21 BA050000 		movl	$5, %edx
 4300      00
 4301 0f26 488D3500 		leaq	.LC17(%rip), %rsi
 4301      000000
 4302              	.LEHB19:
 4303 0f2d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4303      00
 4304              	.LVL331:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4305              		.loc 8 1268 27 view .LVU1170
 4306 0f32 EB0C     		jmp	.L274
 4307              	.LVL332:
 4308              	.L273:
 4309              	.LBB1741:
 4310              	.LBB1740:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4311              		.loc 8 323 24 view .LVU1171
 4312 0f34 488D3D00 		leaq	.LC10(%rip), %rdi
 4312      000000
 4313 0f3b E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4313      00
 4314              	.LVL333:
 4315              	.L274:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4316              		.loc 8 323 24 view .LVU1172
 4317              	.LBE1740:
 4318              	.LBE1741:
 4319              	.LBE1736:
 4320              	.LBE1742:
 4321              	.LBE1743:
  57:Includes/findwayBases.hpp ****         str += "}";
 4322              		.loc 5 57 9 is_stmt 1 view .LVU1173
 4323              	.LBB1744:
 4324              	.LBI1744:
6562:/usr/include/c++/9.2.0/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 4325              		.loc 8 6562 3 view .LVU1174
 4326              	.LBB1745:
6563:/usr/include/c++/9.2.0/bits/basic_string.h **** 					   4 * sizeof(unsigned long),
 4327              		.loc 8 6563 5 view .LVU1175
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4328              		.loc 8 6565 21 is_stmt 0 view .LVU1176
 4329 0f40 488D7C24 		leaq	64(%rsp), %rdi
 4329      40
 4330 0f45 4C8B4520 		movq	32(%rbp), %r8
GAS LISTING /tmp/ccEa7iXV.s 			page 277


 4331 0f49 488D0D00 		leaq	.LC12(%rip), %rcx
 4331      000000
 4332 0f50 BA200000 		movl	$32, %edx
 4332      00
 4333 0f55 488B3500 		movq	vsnprintf@GOTPCREL(%rip), %rsi
 4333      000000
 4334 0f5c B8000000 		movl	$0, %eax
 4334      00
 4335 0f61 E8000000 		call	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_m
 4335      00
 4336              	.LVL334:
 4337              	.LEHE19:
6565:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4338              		.loc 8 6565 21 view .LVU1177
 4339              	.LBE1745:
 4340              	.LBE1744:
 4341              	.LBB1746:
 4342              	.LBI1746:
1168:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__str); }
 4343              		.loc 8 1168 7 is_stmt 1 view .LVU1178
 4344              	.LBB1747:
 4345              	.LBI1747:
1221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4346              		.loc 8 1221 7 view .LVU1179
 4347              	.LBB1748:
 4348              	.LBB1749:
 4349              	.LBI1749:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4350              		.loc 8 930 7 view .LVU1180
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4351              		.loc 8 930 7 is_stmt 0 view .LVU1181
 4352              	.LBE1749:
 4353              	.LBB1750:
 4354              	.LBI1750:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4355              		.loc 8 186 7 is_stmt 1 view .LVU1182
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4356              		.loc 8 186 7 is_stmt 0 view .LVU1183
 4357              	.LBE1750:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4358              		.loc 8 1222 55 view .LVU1184
 4359 0f66 488D7C24 		leaq	32(%rsp), %rdi
 4359      20
 4360              	.LVL335:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4361              		.loc 8 1222 55 view .LVU1185
 4362 0f6b 488B5424 		movq	72(%rsp), %rdx
 4362      48
 4363 0f70 488B7424 		movq	64(%rsp), %rsi
 4363      40
 4364              	.LEHB20:
 4365 0f75 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4365      00
 4366              	.LVL336:
 4367              	.LEHE20:
1222:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4368              		.loc 8 1222 55 view .LVU1186
GAS LISTING /tmp/ccEa7iXV.s 			page 278


 4369              	.LBE1748:
 4370              	.LBE1747:
 4371              	.LBE1746:
 4372              	.LBB1751:
 4373              	.LBI1751:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4374              		.loc 8 657 7 is_stmt 1 view .LVU1187
 4375              	.LBB1752:
 4376              	.LBI1752:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4377              		.loc 8 229 7 view .LVU1188
 4378              	.LBB1753:
 4379              	.LBB1754:
 4380              	.LBI1754:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4381              		.loc 8 221 7 view .LVU1189
 4382              	.LBB1755:
 4383              	.LBI1755:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4384              		.loc 8 186 7 view .LVU1190
 4385              	.LBB1756:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4386              		.loc 8 187 28 is_stmt 0 view .LVU1191
 4387 0f7a 488B7C24 		movq	64(%rsp), %rdi
 4387      40
 4388              	.LVL337:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4389              		.loc 8 187 28 view .LVU1192
 4390              	.LBE1756:
 4391              	.LBE1755:
 4392              	.LBB1757:
 4393              	.LBI1757:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4394              		.loc 8 200 7 is_stmt 1 view .LVU1193
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4395              		.loc 8 200 7 is_stmt 0 view .LVU1194
 4396              	.LBE1757:
 4397              	.LBE1754:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4398              		.loc 8 231 2 view .LVU1195
 4399 0f7f 488D4424 		leaq	80(%rsp), %rax
 4399      50
 4400 0f84 4839C7   		cmpq	%rax, %rdi
 4401 0f87 7405     		je	.L210
 4402              	.LVL338:
 4403              	.LBB1758:
 4404              	.LBI1758:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4405              		.loc 8 236 7 is_stmt 1 view .LVU1196
 4406              	.LBB1759:
 4407              	.LBB1760:
 4408              	.LBI1760:
 4409              		.loc 14 469 7 view .LVU1197
 4410              	.LBB1761:
 4411              	.LBI1761:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4412              		.loc 12 119 7 view .LVU1198
GAS LISTING /tmp/ccEa7iXV.s 			page 279


 4413              	.LBB1762:
 4414              		.loc 12 128 19 is_stmt 0 view .LVU1199
 4415 0f89 E8000000 		call	_ZdlPv@PLT
 4415      00
 4416              	.LVL339:
 4417              	.L210:
 4418              		.loc 12 128 19 view .LVU1200
 4419              	.LBE1762:
 4420              	.LBE1761:
 4421              	.LBE1760:
 4422              	.LBE1759:
 4423              	.LBE1758:
 4424              	.LBE1753:
 4425              	.LBE1752:
 4426              	.LBB1763:
 4427              	.LBI1763:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4428              		.loc 8 150 14 is_stmt 1 view .LVU1201
 4429              	.LBB1764:
 4430              	.LBI1764:
 4431              		.loc 11 153 7 view .LVU1202
 4432              	.LBB1765:
 4433              	.LBI1765:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4434              		.loc 12 89 7 view .LVU1203
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4435              		.loc 12 89 7 is_stmt 0 view .LVU1204
 4436              	.LBE1765:
 4437              	.LBE1764:
 4438              	.LBE1763:
 4439              	.LBE1751:
  58:Includes/findwayBases.hpp ****         return str;
 4440              		.loc 5 58 9 is_stmt 1 view .LVU1205
 4441              	.LBB1766:
 4442              	.LBI1766:
1177:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return this->append(__s); }
 4443              		.loc 8 1177 7 view .LVU1206
 4444              	.LBB1767:
 4445              	.LBI1767:
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4446              		.loc 8 1263 7 view .LVU1207
1263:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4447              		.loc 8 1263 7 is_stmt 0 view .LVU1208
 4448              	.LBE1767:
 4449              	.LBE1766:
 4450              	.LBE1867:
 4451              	.LBE1875:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 4452              		.loc 9 335 2 is_stmt 1 view .LVU1209
 4453              	.LBB1876:
 4454              	.LBB1868:
 4455              	.LBB1775:
 4456              	.LBB1774:
 4457              	.LBB1768:
 4458              	.LBB1769:
 4459              	.LBI1769:
 320:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 280


 4460              		.loc 8 320 7 view .LVU1210
 4461              	.LBB1770:
 4462              	.LBB1771:
 4463              	.LBI1771:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4464              		.loc 8 930 7 view .LVU1211
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4465              		.loc 8 930 7 is_stmt 0 view .LVU1212
 4466              	.LBE1771:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4467              		.loc 8 322 2 view .LVU1213
 4468 0f8e 48B8FFFF 		movabsq	$4611686018427387903, %rax
 4468      FFFFFFFF 
 4468      FF3F
 4469 0f98 48394424 		cmpq	%rax, 40(%rsp)
 4469      28
 4470 0f9d 7418     		je	.L275
 4471              	.LVL340:
 322:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 4472              		.loc 8 322 2 view .LVU1214
 4473              	.LBE1770:
 4474              	.LBE1769:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4475              		.loc 8 1268 27 view .LVU1215
 4476 0f9f 488D7C24 		leaq	32(%rsp), %rdi
 4476      20
 4477              	.LVL341:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4478              		.loc 8 1268 27 view .LVU1216
 4479 0fa4 BA010000 		movl	$1, %edx
 4479      00
 4480 0fa9 488D3500 		leaq	.LC18(%rip), %rsi
 4480      000000
 4481              	.LEHB21:
 4482 0fb0 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
 4482      00
 4483              	.LVL342:
1268:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4484              		.loc 8 1268 27 view .LVU1217
 4485 0fb5 EB0C     		jmp	.L276
 4486              	.LVL343:
 4487              	.L275:
 4488              	.LBB1773:
 4489              	.LBB1772:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4490              		.loc 8 323 24 view .LVU1218
 4491 0fb7 488D3D00 		leaq	.LC10(%rip), %rdi
 4491      000000
 4492 0fbe E8000000 		call	_ZSt20__throw_length_errorPKc@PLT
 4492      00
 4493              	.LVL344:
 4494              	.LEHE21:
 4495              	.L276:
 323:/usr/include/c++/9.2.0/bits/basic_string.h ****       }
 4496              		.loc 8 323 24 view .LVU1219
 4497              	.LBE1772:
 4498              	.LBE1773:
GAS LISTING /tmp/ccEa7iXV.s 			page 281


 4499              	.LBE1768:
 4500              	.LBE1774:
 4501              	.LBE1775:
 4502              		.loc 5 59 9 is_stmt 1 view .LVU1220
 4503              		.loc 5 59 9 is_stmt 0 view .LVU1221
 4504              	.LBE1868:
 4505              	.LBE1876:
 4506              	.LBB1877:
 4507              	.LBI1877:
6416:/usr/include/c++/9.2.0/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 4508              		.loc 8 6416 5 is_stmt 1 view .LVU1222
 4509              	.LBB1878:
 4510              	.LBB1879:
 4511              	.LBI1879:
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4512              		.loc 8 930 7 view .LVU1223
 930:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_string_length; }
 4513              		.loc 8 930 7 is_stmt 0 view .LVU1224
 4514              	.LBE1879:
 4515              	.LBB1880:
 4516              	.LBI1880:
2312:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data(); }
 4517              		.loc 8 2312 7 is_stmt 1 view .LVU1225
 4518              	.LBB1881:
 4519              	.LBI1881:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4520              		.loc 8 186 7 view .LVU1226
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4521              		.loc 8 186 7 is_stmt 0 view .LVU1227
 4522              	.LBE1881:
 4523              	.LBE1880:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 4524              		.loc 8 6421 30 view .LVU1228
 4525 0fc3 488B5424 		movq	40(%rsp), %rdx
 4525      28
 4526 0fc8 488B7424 		movq	32(%rsp), %rsi
 4526      20
 4527 0fcd 4C89E7   		movq	%r12, %rdi
 4528              	.LEHB22:
 4529 0fd0 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 4529      00
 4530              	.LVL345:
 4531 0fd5 4989C4   		movq	%rax, %r12
 4532              	.LVL346:
6421:/usr/include/c++/9.2.0/bits/basic_string.h ****     }
 4533              		.loc 8 6421 30 view .LVU1229
 4534              	.LBE1878:
 4535              	.LBE1877:
 4536              	.LBB1882:
 4537              	.LBI1882:
 108:/usr/include/c++/9.2.0/ostream ****       {
 4538              		.loc 13 108 7 is_stmt 1 view .LVU1230
 4539              	.LBB1883:
 4540              	.LBI1883:
 571:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 572:/usr/include/c++/9.2.0/ostream ****       return __out;
 573:/usr/include/c++/9.2.0/ostream ****     }
GAS LISTING /tmp/ccEa7iXV.s 			page 282


 574:/usr/include/c++/9.2.0/ostream **** 
 575:/usr/include/c++/9.2.0/ostream ****   // Signed and unsigned
 576:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 577:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits>&
 578:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 579:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 580:/usr/include/c++/9.2.0/ostream **** 
 581:/usr/include/c++/9.2.0/ostream ****   template<class _Traits>
 582:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<char, _Traits> &
 583:/usr/include/c++/9.2.0/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 584:/usr/include/c++/9.2.0/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 585:/usr/include/c++/9.2.0/ostream ****   //@}
 586:/usr/include/c++/9.2.0/ostream **** 
 587:/usr/include/c++/9.2.0/ostream ****   // Standard basic_ostream manipulators
 588:/usr/include/c++/9.2.0/ostream **** 
 589:/usr/include/c++/9.2.0/ostream ****   /**
 590:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a newline and flush the stream.
 591:/usr/include/c++/9.2.0/ostream ****    *
 592:/usr/include/c++/9.2.0/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 593:/usr/include/c++/9.2.0/ostream ****    *  desired, leading to poor buffering performance.  See
 594:/usr/include/c++/9.2.0/ostream ****    *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/streambufs.html#io.streambuf.buffering
 595:/usr/include/c++/9.2.0/ostream ****    *  for more on this subject.
 596:/usr/include/c++/9.2.0/ostream ****   */
 597:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 598:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 599:/usr/include/c++/9.2.0/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 4541              		.loc 13 599 5 view .LVU1231
 4542              	.LBB1884:
 600:/usr/include/c++/9.2.0/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 4543              		.loc 13 600 19 is_stmt 0 view .LVU1232
 4544 0fd8 488B00   		movq	(%rax), %rax
 4545              	.LVL347:
 4546              		.loc 13 600 19 view .LVU1233
 4547 0fdb 4C89E1   		movq	%r12, %rcx
 4548 0fde 480348E8 		addq	-24(%rax), %rcx
 4549              	.LVL348:
 4550              	.LBB1885:
 4551              	.LBI1885:
 4552              		.file 15 "/usr/include/c++/9.2.0/bits/basic_ios.h"
   1:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
   3:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/basic_ios.h **** //
   5:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  11:/usr/include/c++/9.2.0/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  16:/usr/include/c++/9.2.0/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
GAS LISTING /tmp/ccEa7iXV.s 			page 283


  19:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  20:/usr/include/c++/9.2.0/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  25:/usr/include/c++/9.2.0/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/9.2.0/bits/basic_ios.h ****  */
  29:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  30:/usr/include/c++/9.2.0/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/9.2.0/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  33:/usr/include/c++/9.2.0/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  35:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/9.2.0/bits/basic_ios.h **** #include <bits/move.h>
  40:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  41:/usr/include/c++/9.2.0/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/9.2.0/bits/basic_ios.h **** {
  43:/usr/include/c++/9.2.0/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  45:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _Facet>
  46:/usr/include/c++/9.2.0/bits/basic_ios.h ****     inline const _Facet&
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  48:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  49:/usr/include/c++/9.2.0/bits/basic_ios.h ****       if (!__f)
  50:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
  51:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
  52:/usr/include/c++/9.2.0/bits/basic_ios.h ****     }
  53:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  54:/usr/include/c++/9.2.0/bits/basic_ios.h ****   /**
  55:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  56:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  stream classes. 
  57:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @ingroup io
  58:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  59:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  60:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *
  63:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  64:/usr/include/c++/9.2.0/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  65:/usr/include/c++/9.2.0/bits/basic_ios.h ****   */
  66:/usr/include/c++/9.2.0/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  67:/usr/include/c++/9.2.0/bits/basic_ios.h ****     class basic_ios : public ios_base
  68:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
  69:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
  70:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  71:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  72:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  73:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  74:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  75:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
GAS LISTING /tmp/ccEa7iXV.s 			page 284


  76:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  77:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  78:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  79:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  80:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  81:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  82:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  83:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
  84:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
  85:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  These are non-standard types.
  86:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
  87:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  88:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  89:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_put_type;
  90:/usr/include/c++/9.2.0/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  91:/usr/include/c++/9.2.0/bits/basic_ios.h **** 						     __num_get_type;
  92:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
  93:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
  94:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Data members:
  95:/usr/include/c++/9.2.0/bits/basic_ios.h ****     protected:
  96:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  97:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  98:/usr/include/c++/9.2.0/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  99:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
 100:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 101:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 102:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 103:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For ostream.
 104:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 105:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // For istream.
 106:/usr/include/c++/9.2.0/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 107:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 108:/usr/include/c++/9.2.0/bits/basic_ios.h ****     public:
 109:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@{
 110:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 111:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 112:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 113:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This allows you to write constructs such as
 114:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 115:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 116:/usr/include/c++/9.2.0/bits/basic_ios.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit operator bool() const
 118:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return !this->fail(); }
 119:/usr/include/c++/9.2.0/bits/basic_ios.h **** #else
 120:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator void*() const
 121:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 122:/usr/include/c++/9.2.0/bits/basic_ios.h **** #endif
 123:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 124:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 125:/usr/include/c++/9.2.0/bits/basic_ios.h ****       operator!() const
 126:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->fail(); }
 127:/usr/include/c++/9.2.0/bits/basic_ios.h ****       //@}
 128:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 129:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 130:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 131:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
 132:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 285


 133:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 134:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 135:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 136:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 137:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdstate() const
 138:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf_state; }
 139:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 140:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 141:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 142:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 143:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 144:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 145:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  users will not need to pass an argument.
 146:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 147:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 148:/usr/include/c++/9.2.0/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 149:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 150:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 151:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 152:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 153:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 154:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 155:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 156:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 157:/usr/include/c++/9.2.0/bits/basic_ios.h ****       setstate(iostate __state)
 158:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 159:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 160:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Flip the internal state on for the proper state bits, then
 161:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // rethrows the propagated exception if bit also set in
 162:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // exceptions().
 163:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 164:/usr/include/c++/9.2.0/bits/basic_ios.h ****       _M_setstate(iostate __state)
 165:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 166:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// 27.6.1.2.1 Common requirements.
 167:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	// Turn this on without causing an ios::failure to be thrown.
 168:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_streambuf_state |= __state;
 169:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (this->exceptions() & __state)
 170:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  __throw_exception_again;
 171:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 172:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 173:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 174:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 175:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if no error flags are set.
 176:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 177:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A wrapper around rdstate.
 178:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 179:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 180:/usr/include/c++/9.2.0/bits/basic_ios.h ****       good() const
 181:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return this->rdstate() == 0; }
 182:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 183:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 184:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 185:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the eofbit is set.
 186:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 187:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 188:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 189:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
GAS LISTING /tmp/ccEa7iXV.s 			page 286


 190:/usr/include/c++/9.2.0/bits/basic_ios.h ****       eof() const
 191:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & eofbit) != 0; }
 192:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 193:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 194:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 195:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if either the badbit or the failbit is set.
 196:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 197:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Checking the badbit in fail() is historical practice.
 198:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 199:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 200:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 201:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fail() const
 202:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & (badbit | failbit)) != 0; }
 203:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 204:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 205:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fast error checking.
 206:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  True if the badbit is set.
 207:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 208:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Note that other iostate flags may also be set.
 209:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 210:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bool
 211:/usr/include/c++/9.2.0/bits/basic_ios.h ****       bad() const
 212:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return (this->rdstate() & badbit) != 0; }
 213:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 214:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 215:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 216:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current exceptions mask.
 217:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 218:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This changes nothing in the stream.  See the one-argument version
 219:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  of exceptions(iostate) for the meaning of the return value.
 220:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 221:/usr/include/c++/9.2.0/bits/basic_ios.h ****       iostate
 222:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions() const
 223:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_exception; }
 224:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 225:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 226:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Throwing exceptions on errors.
 227:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __except  The new exceptions mask.
 228:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 229:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  By default, error flags are set silently.  You can set an
 230:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  exceptions mask for each stream; if a bit in the mask becomes set
 231:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in the error flags, then an exception of type
 232:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::ios_base::failure is thrown.
 233:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 234:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  If the error flag is already set when the exceptions mask is
 235:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  added, the exception is immediately thrown.  Try running the
 236:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  following under GCC 3.1 or later:
 237:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 238:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <iostream>
 239:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <fstream>
 240:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  #include <exception>
 241:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 242:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  int main()
 243:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  {
 244:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::set_terminate (__gnu_cxx::__verbose_terminate_handler);
 245:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 246:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::ifstream f ("/etc/motd");
GAS LISTING /tmp/ccEa7iXV.s 			page 287


 247:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 248:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting badbit\n";
 249:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.setstate (std::ios_base::badbit);
 250:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 251:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      std::cerr << "Setting exception mask\n";
 252:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *      f.exceptions (std::ios_base::badbit);
 253:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  }
 254:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 255:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 256:/usr/include/c++/9.2.0/bits/basic_ios.h ****       void
 257:/usr/include/c++/9.2.0/bits/basic_ios.h ****       exceptions(iostate __except)
 258:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 259:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_exception = __except;
 260:/usr/include/c++/9.2.0/bits/basic_ios.h ****         this->clear(_M_streambuf_state);
 261:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 262:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 263:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Constructor/destructor:
 264:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 265:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Constructor performs initialization.
 266:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 267:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The parameter is passed by derived streams.
 268:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 269:/usr/include/c++/9.2.0/bits/basic_ios.h ****       explicit
 270:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios(basic_streambuf<_CharT, _Traits>* __sb)
 271:/usr/include/c++/9.2.0/bits/basic_ios.h ****       : ios_base(), _M_tie(0), _M_fill(), _M_fill_init(false), _M_streambuf(0),
 272:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_ctype(0), _M_num_put(0), _M_num_get(0)
 273:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { this->init(__sb); }
 274:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 275:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 276:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Empty.
 277:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 278:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The destructor does nothing.  More specifically, it does not
 279:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  destroy the streambuf held by rdbuf().
 280:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 281:/usr/include/c++/9.2.0/bits/basic_ios.h ****       virtual
 282:/usr/include/c++/9.2.0/bits/basic_ios.h ****       ~basic_ios() { }
 283:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 284:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Members:
 285:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 286:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Fetches the current @e tied stream.
 287:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  A pointer to the tied stream, or NULL if the stream is
 288:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           not tied.
 289:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 290:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  A stream may be @e tied (or synchronized) to a second output
 291:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  stream.  When this stream performs any I/O, the tied stream is
 292:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  first flushed.  For example, @c std::cin is tied to @c std::cout.
 293:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 294:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 295:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie() const
 296:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_tie; }
 297:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 298:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 299:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Ties this stream to an output stream.
 300:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __tiestr  The output stream.
 301:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previously tied output stream, or NULL if the stream
 302:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *           was not tied.
 303:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 288


 304:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This sets up a new tie; see tie() for more.
 305:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 306:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*
 307:/usr/include/c++/9.2.0/bits/basic_ios.h ****       tie(basic_ostream<_CharT, _Traits>* __tiestr)
 308:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 309:/usr/include/c++/9.2.0/bits/basic_ios.h ****         basic_ostream<_CharT, _Traits>* __old = _M_tie;
 310:/usr/include/c++/9.2.0/bits/basic_ios.h ****         _M_tie = __tiestr;
 311:/usr/include/c++/9.2.0/bits/basic_ios.h ****         return __old;
 312:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 313:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 314:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 315:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Accessing the underlying buffer.
 316:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current stream buffer.
 317:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 318:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  This does not change the state of the stream.
 319:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 320:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 321:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf() const
 322:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return _M_streambuf; }
 323:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 324:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 325:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Changing the underlying buffer.
 326:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __sb  The new stream buffer.
 327:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous stream buffer.
 328:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 329:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Associates a new buffer with the current stream, and clears the
 330:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  error state.
 331:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 332:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Due to historical accidents which the LWG refuses to correct, the
 333:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  I/O library suffers from a design error:  this function is hidden
 334:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  in derived classes by overrides of the zero-argument @c rdbuf(),
 335:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  which is non-virtual for hysterical raisins.  As a result, you
 336:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  must use explicit qualifications to access this function via any
 337:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  derived class.  For example:
 338:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 339:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 340:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::fstream     foo;         // or some other derived type
 341:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  std::streambuf*  p = .....;
 342:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 343:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  foo.ios::rdbuf(p);            // ios == basic_ios<char>
 344:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 345:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 346:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*
 347:/usr/include/c++/9.2.0/bits/basic_ios.h ****       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);
 348:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 349:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 350:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Copies fields of __rhs into this.
 351:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __rhs  The source values for the copies.
 352:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  Reference to this object.
 353:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 354:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  All fields of __rhs are copied into this object except that rdbuf()
 355:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  and rdstate() remain unchanged.  All values in the pword and iword
 356:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  arrays are copied.  Before copying, each callback is invoked with
 357:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  erase_event.  After copying, each (new) callback is invoked with
 358:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  copyfmt_event.  The final step is to copy exceptions().
 359:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 360:/usr/include/c++/9.2.0/bits/basic_ios.h ****       basic_ios&
GAS LISTING /tmp/ccEa7iXV.s 			page 289


 361:/usr/include/c++/9.2.0/bits/basic_ios.h ****       copyfmt(const basic_ios& __rhs);
 362:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 363:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 364:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Retrieves the @a empty character.
 365:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The current fill character.
 366:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 367:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  It defaults to a space (' ') in the current locale.
 368:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 369:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 370:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill() const
 371:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 372:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	if (!_M_fill_init)
 373:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  {
 374:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill = this->widen(' ');
 375:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	    _M_fill_init = true;
 376:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	  }
 377:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return _M_fill;
 378:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 379:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 380:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 381:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Sets a new @a empty character.
 382:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __ch  The new character.
 383:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous fill character.
 384:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 385:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  The fill character is used to fill out space when P+ characters
 386:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  have been requested (e.g., via setw), Q characters are actually
 387:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  used, and Q<P.  It defaults to a space (' ') in the current locale.
 388:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 389:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 390:/usr/include/c++/9.2.0/bits/basic_ios.h ****       fill(char_type __ch)
 391:/usr/include/c++/9.2.0/bits/basic_ios.h ****       {
 392:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	char_type __old = this->fill();
 393:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	_M_fill = __ch;
 394:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	return __old;
 395:/usr/include/c++/9.2.0/bits/basic_ios.h ****       }
 396:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 397:/usr/include/c++/9.2.0/bits/basic_ios.h ****       // Locales:
 398:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 399:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Moves to a new locale.
 400:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __loc  The new locale.
 401:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The previous locale.
 402:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 403:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Calls @c ios_base::imbue(loc), and if a stream buffer is associated
 404:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  with this stream, calls that buffer's @c pubimbue(loc).
 405:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 406:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 407:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 408:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 409:/usr/include/c++/9.2.0/bits/basic_ios.h ****       locale
 410:/usr/include/c++/9.2.0/bits/basic_ios.h ****       imbue(const locale& __loc);
 411:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 412:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 413:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Squeezes characters.
 414:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to narrow.
 415:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __dfault  The character to narrow.
 416:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The narrowed character.
 417:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 290


 418:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char_type to a character of @c char,
 419:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  if possible.
 420:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 421:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 422:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 423:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).narrow(c,dfault)
 424:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 425:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 426:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 427:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 428:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 429:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char
 430:/usr/include/c++/9.2.0/bits/basic_ios.h ****       narrow(char_type __c, char __dfault) const
 431:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).narrow(__c, __dfault); }
 432:/usr/include/c++/9.2.0/bits/basic_ios.h **** 
 433:/usr/include/c++/9.2.0/bits/basic_ios.h ****       /**
 434:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @brief  Widens characters.
 435:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @param  __c  The character to widen.
 436:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @return  The widened character.
 437:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 438:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Maps a character of @c char to a character of @c char_type.
 439:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 440:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Returns the result of
 441:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @code
 442:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *    std::use_facet<ctype<char_type> >(getloc()).widen(c)
 443:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  @endcode
 444:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *
 445:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  Additional l10n notes are at
 446:/usr/include/c++/9.2.0/bits/basic_ios.h ****        *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/localization.html
 447:/usr/include/c++/9.2.0/bits/basic_ios.h ****       */
 448:/usr/include/c++/9.2.0/bits/basic_ios.h ****       char_type
 449:/usr/include/c++/9.2.0/bits/basic_ios.h ****       widen(char __c) const
 4553              		.loc 15 449 7 is_stmt 1 view .LVU1234
 4554              	.LBB1886:
 450:/usr/include/c++/9.2.0/bits/basic_ios.h ****       { return __check_facet(_M_ctype).widen(__c); }
 4555              		.loc 15 450 30 is_stmt 0 view .LVU1235
 4556 0fe2 4C8BA9F0 		movq	240(%rcx), %r13
 4556      000000
 4557              	.LVL349:
 4558              	.LBB1887:
 4559              	.LBI1887:
  47:/usr/include/c++/9.2.0/bits/basic_ios.h ****     {
 4560              		.loc 15 47 5 is_stmt 1 view .LVU1236
 4561              	.LBB1888:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 4562              		.loc 15 49 7 is_stmt 0 view .LVU1237
 4563 0fe9 4D85ED   		testq	%r13, %r13
 4564 0fec 0F84B200 		je	.L277
 4564      0000
 4565              	.LVL350:
  49:/usr/include/c++/9.2.0/bits/basic_ios.h **** 	__throw_bad_cast();
 4566              		.loc 15 49 7 view .LVU1238
 4567              	.LBE1888:
 4568              	.LBE1887:
 4569              	.LBB1890:
 4570              	.LBI1890:
 4571              		.file 16 "/usr/include/c++/9.2.0/bits/locale_facets.h"
GAS LISTING /tmp/ccEa7iXV.s 			page 291


   1:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
   3:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
   5:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  11:/usr/include/c++/9.2.0/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  16:/usr/include/c++/9.2.0/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  20:/usr/include/c++/9.2.0/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  25:/usr/include/c++/9.2.0/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/9.2.0/bits/locale_facets.h ****  */
  29:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  30:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  31:/usr/include/c++/9.2.0/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/9.2.0/bits/locale_facets.h **** //
  33:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  34:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/9.2.0/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  37:/usr/include/c++/9.2.0/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  39:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/9.2.0/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  50:/usr/include/c++/9.2.0/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/9.2.0/bits/locale_facets.h **** {
  52:/usr/include/c++/9.2.0/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  54:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 16
GAS LISTING /tmp/ccEa7iXV.s 			page 292


  58:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  59:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  60:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define  _GLIBCXX_NUM_CXX11_FACETS 8
  61:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  62:/usr/include/c++/9.2.0/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_CHAR8_T
  63:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 4
  64:/usr/include/c++/9.2.0/bits/locale_facets.h **** #else
  65:/usr/include/c++/9.2.0/bits/locale_facets.h **** # define _GLIBCXX_NUM_UNICODE_FACETS 2
  66:/usr/include/c++/9.2.0/bits/locale_facets.h **** #endif
  67:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  68:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  69:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
  70:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // generic definition.
  71:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _Tp>
  72:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  73:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  74:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  75:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  76:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Explicit specializations for required types.
  77:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  78:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  79:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  80:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  81:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  82:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  83:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  84:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  85:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  86:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  87:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
  88:/usr/include/c++/9.2.0/bits/locale_facets.h ****     void
  89:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  90:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const __c_locale&) throw();
  91:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
  92:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  93:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // partially-specialized.
  94:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  95:/usr/include/c++/9.2.0/bits/locale_facets.h ****     struct __pad
  96:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
  97:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static void
  98:/usr/include/c++/9.2.0/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  99:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
 100:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 101:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 102:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
 103:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
 104:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
 105:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
 106:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // only with __gsize != 0.
 107:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 108:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _CharT*
 109:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 110:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 111:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 112:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 113:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This template permits specializing facet output code for
 114:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
GAS LISTING /tmp/ccEa7iXV.s 			page 293


 115:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 116:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 117:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 118:/usr/include/c++/9.2.0/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 119:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 120:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 121:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 122:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 123:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 124:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 125:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 126:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
 127:/usr/include/c++/9.2.0/bits/locale_facets.h ****     inline
 128:/usr/include/c++/9.2.0/bits/locale_facets.h ****     _OutIter
 129:/usr/include/c++/9.2.0/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 130:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 131:/usr/include/c++/9.2.0/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 132:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	*__s = __ws[__j];
 133:/usr/include/c++/9.2.0/bits/locale_facets.h ****       return __s;
 134:/usr/include/c++/9.2.0/bits/locale_facets.h ****     }
 135:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 136:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 137:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 138:/usr/include/c++/9.2.0/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 139:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 140:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 141:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 142:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 143:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 144:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 145:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 146:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 147:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions.
 148:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 149:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 150:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 151:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 152:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 153:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 154:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter
 155:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT char_type;
 156:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 157:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 158:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 159:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 160:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 161:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 162:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 163:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 164:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 165:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 166:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 167:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 168:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool
 169:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 170:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 171:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 294


 172:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 173:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 174:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 175:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 176:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 177:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 178:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 179:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 180:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 181:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 182:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 183:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 184:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 185:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 186:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 187:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 188:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 189:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 190:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 191:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 192:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 193:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 194:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 195:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 196:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 197:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 198:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 199:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 200:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 201:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 202:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 203:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 204:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 205:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 206:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 207:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 208:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 209:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 210:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 211:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 212:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 213:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 214:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 215:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 216:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 217:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 218:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 219:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 220:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 221:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 222:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 223:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 224:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 225:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 226:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 227:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 228:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
GAS LISTING /tmp/ccEa7iXV.s 			page 295


 229:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 230:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 231:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 232:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 233:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 234:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 235:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 236:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 237:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 238:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 239:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 240:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
 241:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 242:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 243:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 244:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 245:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 246:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 247:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 248:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 249:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 250:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 251:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 252:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 253:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 254:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 255:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 256:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 257:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 258:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 259:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 260:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 261:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 262:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 263:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 264:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 265:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 266:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 267:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 268:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 269:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 270:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 271:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 272:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 273:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 274:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 275:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 276:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 277:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 278:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 279:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 280:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 281:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 282:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 283:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 284:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 285:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 296


 286:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 287:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 288:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 289:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 290:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type.
 291:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 292:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 293:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 294:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__c); }
 295:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 296:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 297:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen array to char_type
 298:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 299:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 300:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 301:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 302:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 303:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 304:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 305:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 306:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 307:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 308:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 309:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 310:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 311:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char*
 312:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 313:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 314:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 315:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 316:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 317:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 318:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 319:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 320:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 321:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 322:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 323:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 324:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 325:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 326:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 327:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 328:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 329:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 330:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char
 331:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 332:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 333:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 334:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 335:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 336:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 337:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 338:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 339:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 340:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 341:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 342:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
GAS LISTING /tmp/ccEa7iXV.s 			page 297


 343:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 344:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 345:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 346:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 347:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 348:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 349:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 350:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 351:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 352:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 353:/usr/include/c++/9.2.0/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 354:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	      char __dfault, char* __to) const
 355:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 356:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 357:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 358:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 359:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 360:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 361:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 362:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 363:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 364:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 365:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 366:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 367:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 368:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 369:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 370:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 371:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 372:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 373:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 374:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 375:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 376:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 377:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 378:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 379:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 380:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 381:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 382:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 383:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 384:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 385:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  as the input.
 386:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 387:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 388:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 389:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 390:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 391:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 392:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 393:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 394:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 395:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 396:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 397:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 398:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 399:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 298


 400:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 401:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 402:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 403:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 404:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 405:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 406:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 407:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 408:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 409:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 410:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 411:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 412:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 413:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 414:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 415:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 416:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 417:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 418:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 419:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 420:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 421:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 422:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 423:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 424:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 425:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 426:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 427:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 428:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 429:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 430:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 431:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 432:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 433:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 434:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 435:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 436:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 437:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 438:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 439:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 440:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 441:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 442:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 443:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument.
 444:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 445:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 446:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 447:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 448:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 449:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 450:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 451:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 452:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 453:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 454:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 455:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 456:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
GAS LISTING /tmp/ccEa7iXV.s 			page 299


 457:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 458:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 459:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 460:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 461:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 462:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 463:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 464:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 465:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 466:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 467:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 468:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 469:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 470:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 471:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 472:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 473:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 474:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 475:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 476:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 477:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 478:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 479:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 480:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 481:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 482:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 483:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 484:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 485:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 486:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 487:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 488:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 489:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 490:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 491:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 492:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 493:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 494:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 495:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 496:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the same input.
 497:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 498:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 499:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 500:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 501:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 502:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 503:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 504:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 505:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 506:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 507:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 508:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 509:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 510:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 511:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 512:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 513:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
GAS LISTING /tmp/ccEa7iXV.s 			page 300


 514:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 515:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 516:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 517:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 518:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 519:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char_type
 520:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 521:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 522:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 523:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 524:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 525:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char array
 526:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 527:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 528:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.
 529:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 530:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 531:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 532:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 533:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 534:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 535:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 536:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 537:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 538:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 539:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 540:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 541:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 542:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 543:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 544:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 545:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 546:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 547:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 548:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 549:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 550:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  is returned instead.
 551:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 552:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 553:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 554:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 555:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 556:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 557:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 558:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 559:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 560:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 561:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted char.
 562:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 563:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 564:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 565:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 566:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 567:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 568:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 569:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 570:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
GAS LISTING /tmp/ccEa7iXV.s 			page 301


 571:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 572:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 573:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 574:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 575:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 576:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 577:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  same input.
 578:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 579:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 580:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 581:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 582:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 583:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 584:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 585:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 586:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 587:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 588:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 589:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 590:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 591:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 592:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 593:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 594:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 595:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 596:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 597:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 598:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 599:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  streams for many I/O operations.
 600:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 601:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 602:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 603:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 604:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 605:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 606:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  __ctype_abstract_base.
 607:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 608:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 609:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 610:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 611:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 612:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 613:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 614:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 615:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
 616:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef _CharT			char_type;
 617:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 618:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 619:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 620:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id			id;
 621:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 622:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 623:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 624:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 625:/usr/include/c++/9.2.0/bits/locale_facets.h ****    protected:
 626:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual
 627:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ~ctype();
GAS LISTING /tmp/ccEa7iXV.s 			page 302


 628:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 629:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual bool
 630:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 631:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 632:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 633:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 634:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 635:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 636:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 637:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 638:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 640:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		  const char_type* __hi) const;
 641:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 642:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 643:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 644:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 645:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 646:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 647:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 648:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 649:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 650:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 651:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 652:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 653:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 654:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char_type
 655:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(char __c) const;
 656:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 657:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char*
 658:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 659:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 660:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual char
 661:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 662:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 663:/usr/include/c++/9.2.0/bits/locale_facets.h ****       virtual const char_type*
 664:/usr/include/c++/9.2.0/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 665:/usr/include/c++/9.2.0/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 666:/usr/include/c++/9.2.0/bits/locale_facets.h ****     };
 667:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 668:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<typename _CharT>
 669:/usr/include/c++/9.2.0/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 670:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 671:/usr/include/c++/9.2.0/bits/locale_facets.h ****   /**
 672:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 673:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  @ingroup locales
 674:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *
 675:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 676:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 677:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 678:/usr/include/c++/9.2.0/bits/locale_facets.h ****    *  optimizations as well.
 679:/usr/include/c++/9.2.0/bits/locale_facets.h ****   */
 680:/usr/include/c++/9.2.0/bits/locale_facets.h ****   template<>
 681:/usr/include/c++/9.2.0/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 682:/usr/include/c++/9.2.0/bits/locale_facets.h ****     {
 683:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 684:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Types:
GAS LISTING /tmp/ccEa7iXV.s 			page 303


 685:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 686:/usr/include/c++/9.2.0/bits/locale_facets.h ****       typedef char		char_type;
 687:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 688:/usr/include/c++/9.2.0/bits/locale_facets.h ****     protected:
 689:/usr/include/c++/9.2.0/bits/locale_facets.h ****       // Data Members:
 690:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 691:/usr/include/c++/9.2.0/bits/locale_facets.h ****       bool			_M_del;
 692:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_toupper;
 693:/usr/include/c++/9.2.0/bits/locale_facets.h ****       __to_type			_M_tolower;
 694:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const mask*		_M_table;
 695:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 696:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
 697:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 698:/usr/include/c++/9.2.0/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 699:/usr/include/c++/9.2.0/bits/locale_facets.h **** 						// 2 memcpy can't be used
 700:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 701:/usr/include/c++/9.2.0/bits/locale_facets.h ****     public:
 702:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The facet id for ctype<char>
 703:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static locale::id        id;
 704:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 705:/usr/include/c++/9.2.0/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 706:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 707:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 708:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 709:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 710:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 711:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 712:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 713:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *               Else classic_table() is used.
 714:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 715:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 716:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 717:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 718:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 719:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 720:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 721:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 722:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 723:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 724:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 725:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 726:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 727:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 728:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 729:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 730:/usr/include/c++/9.2.0/bits/locale_facets.h ****       explicit
 731:/usr/include/c++/9.2.0/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 732:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	    size_t __refs = 0);
 733:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 734:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 735:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Test char classification.
 736:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 737:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 738:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 739:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 740:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 741:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
GAS LISTING /tmp/ccEa7iXV.s 			page 304


 742:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 743:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline bool
 744:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(mask __m, char __c) const;
 745:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 746:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 747:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Return a mask array.
 748:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 749:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 750:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 751:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  the char array.
 752:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 753:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 754:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 755:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 756:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 757:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 758:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 759:/usr/include/c++/9.2.0/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 760:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 761:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 762:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 763:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 764:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 765:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  which is(m,char) is true.
 766:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 767:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 768:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 769:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 770:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 771:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 772:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 773:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 774:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 775:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 776:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 777:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 778:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 779:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 780:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 781:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 782:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 783:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 784:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 785:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 786:/usr/include/c++/9.2.0/bits/locale_facets.h ****       inline const char*
 787:/usr/include/c++/9.2.0/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 788:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 789:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 790:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 791:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 792:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 793:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 794:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 795:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 796:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 797:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 798:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
GAS LISTING /tmp/ccEa7iXV.s 			page 305


 799:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 800:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 801:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 802:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type __c) const
 803:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 804:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 805:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 806:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 807:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 808:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 809:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 810:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 811:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 812:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 813:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 814:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 815:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 816:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 817:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 818:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 819:/usr/include/c++/9.2.0/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 820:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 821:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 822:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 823:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 824:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 825:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 826:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 827:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 828:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 829:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 830:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 831:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 832:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 833:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 834:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 835:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type __c) const
 836:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 837:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 838:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
 839:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 840:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 841:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 842:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 843:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 844:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 845:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 846:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 847:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 848:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 849:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  @a __hi.
 850:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 851:/usr/include/c++/9.2.0/bits/locale_facets.h ****       const char_type*
 852:/usr/include/c++/9.2.0/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 853:/usr/include/c++/9.2.0/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 854:/usr/include/c++/9.2.0/bits/locale_facets.h **** 
 855:/usr/include/c++/9.2.0/bits/locale_facets.h ****       /**
GAS LISTING /tmp/ccEa7iXV.s 			page 306


 856:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @brief  Widen char
 857:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 858:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 859:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 860:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  argument will be returned unchanged.
 861:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 862:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 863:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 864:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 865:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 866:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  codecvt for that.
 867:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *
 868:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @param __c  The char to convert.
 869:/usr/include/c++/9.2.0/bits/locale_facets.h ****        *  @return  The converted character.
 870:/usr/include/c++/9.2.0/bits/locale_facets.h ****       */
 871:/usr/include/c++/9.2.0/bits/locale_facets.h ****       char_type
 872:/usr/include/c++/9.2.0/bits/locale_facets.h ****       widen(char __c) const
 4572              		.loc 16 872 7 is_stmt 1 view .LVU1239
 4573              	.LBB1891:
 873:/usr/include/c++/9.2.0/bits/locale_facets.h ****       {
 874:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	if (_M_widen_ok)
 4574              		.loc 16 874 2 view .LVU1240
 4575 0ff2 41807D38 		cmpb	$0, 56(%r13)
 4575      00
 4576 0ff7 0F84C800 		je	.L225
 4576      0000
 875:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 4577              		.loc 16 875 4 view .LVU1241
 4578              		.loc 16 875 51 is_stmt 0 view .LVU1242
 4579 0ffd 410FB675 		movzbl	67(%r13), %esi
 4579      43
 4580              	.LVL351:
 4581              	.L226:
 4582              		.loc 16 875 51 view .LVU1243
 4583              	.LBE1891:
 4584              	.LBE1890:
 4585              	.LBE1886:
 4586              	.LBE1885:
 4587              		.loc 13 600 19 view .LVU1244
 4588 1002 400FBEF6 		movsbl	%sil, %esi
 4589 1006 4C89E7   		movq	%r12, %rdi
 4590 1009 E8000000 		call	_ZNSo3putEc@PLT
 4590      00
 4591              	.LVL352:
 4592              	.LEHE22:
 4593 100e E9D00000 		jmp	.L278
 4593      00
 4594              	.LVL353:
 4595              	.L252:
 4596              		.loc 13 600 19 view .LVU1245
 4597 1013 4889C3   		movq	%rax, %rbx
 4598              	.LVL354:
 4599              		.loc 13 600 19 view .LVU1246
 4600              	.LBE1884:
 4601              	.LBE1883:
 4602              	.LBE1882:
 4603              	.LBB1905:
GAS LISTING /tmp/ccEa7iXV.s 			page 307


 4604              	.LBB1869:
 4605              	.LBB1776:
 4606              	.LBI1776:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4607              		.loc 8 657 7 is_stmt 1 view .LVU1247
 4608              	.LBB1777:
 4609              	.LBI1777:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4610              		.loc 8 229 7 view .LVU1248
 4611              	.LBB1778:
 4612              	.LBB1779:
 4613              	.LBI1779:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4614              		.loc 8 221 7 view .LVU1249
 4615              	.LBB1780:
 4616              	.LBI1780:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4617              		.loc 8 186 7 view .LVU1250
 4618              	.LBB1781:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4619              		.loc 8 187 28 is_stmt 0 view .LVU1251
 4620 1016 488B7C24 		movq	64(%rsp), %rdi
 4620      40
 4621              	.LVL355:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4622              		.loc 8 187 28 view .LVU1252
 4623              	.LBE1781:
 4624              	.LBE1780:
 4625              	.LBB1782:
 4626              	.LBI1782:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4627              		.loc 8 200 7 is_stmt 1 view .LVU1253
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4628              		.loc 8 200 7 is_stmt 0 view .LVU1254
 4629              	.LBE1782:
 4630              	.LBE1779:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4631              		.loc 8 231 2 view .LVU1255
 4632 101b 488D4424 		leaq	80(%rsp), %rax
 4632      50
 4633 1020 4839C7   		cmpq	%rax, %rdi
 4634 1023 7405     		je	.L215
 4635              	.LVL356:
 4636              	.LBB1783:
 4637              	.LBI1783:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4638              		.loc 8 236 7 is_stmt 1 view .LVU1256
 4639              	.LBB1784:
 4640              	.LBB1785:
 4641              	.LBI1785:
 4642              		.loc 14 469 7 view .LVU1257
 4643              	.LBB1786:
 4644              	.LBI1786:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4645              		.loc 12 119 7 view .LVU1258
 4646              	.LBB1787:
 4647              		.loc 12 128 19 is_stmt 0 view .LVU1259
GAS LISTING /tmp/ccEa7iXV.s 			page 308


 4648 1025 E8000000 		call	_ZdlPv@PLT
 4648      00
 4649              	.LVL357:
 4650              		.loc 12 128 19 view .LVU1260
 4651              	.LBE1787:
 4652              	.LBE1786:
 4653              	.LBE1785:
 4654              	.LBE1784:
 4655              	.LBE1783:
 4656              	.LBE1778:
 4657              	.LBE1777:
 4658              	.LBB1788:
 4659              	.LBI1788:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4660              		.loc 8 150 14 is_stmt 1 view .LVU1261
 4661              	.LBB1789:
 4662              	.LBI1789:
 4663              		.loc 11 153 7 view .LVU1262
 4664              	.LBB1790:
 4665              	.LBI1790:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4666              		.loc 12 89 7 view .LVU1263
 4667              	.L215:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4668              		.loc 12 89 7 is_stmt 0 view .LVU1264
 4669              	.LBE1790:
 4670              	.LBE1789:
 4671              	.LBE1788:
 4672              	.LBE1776:
 4673              	.LBB1791:
 4674              	.LBI1791:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4675              		.loc 8 657 7 is_stmt 1 view .LVU1265
 4676              	.LBB1792:
 4677              	.LBI1792:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4678              		.loc 8 229 7 view .LVU1266
 4679              	.LBB1793:
 4680              	.LBB1794:
 4681              	.LBI1794:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4682              		.loc 8 221 7 view .LVU1267
 4683              	.LBB1795:
 4684              	.LBI1795:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4685              		.loc 8 186 7 view .LVU1268
 4686              	.LBB1796:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4687              		.loc 8 187 28 is_stmt 0 view .LVU1269
 4688 102a 488B7C24 		movq	32(%rsp), %rdi
 4688      20
 4689              	.LVL358:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4690              		.loc 8 187 28 view .LVU1270
 4691              	.LBE1796:
 4692              	.LBE1795:
 4693              	.LBB1797:
GAS LISTING /tmp/ccEa7iXV.s 			page 309


 4694              	.LBI1797:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4695              		.loc 8 200 7 is_stmt 1 view .LVU1271
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4696              		.loc 8 200 7 is_stmt 0 view .LVU1272
 4697              	.LBE1797:
 4698              	.LBE1794:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4699              		.loc 8 231 2 view .LVU1273
 4700 102f 488D4424 		leaq	48(%rsp), %rax
 4700      30
 4701 1034 4839C7   		cmpq	%rax, %rdi
 4702 1037 7405     		je	.L223
 4703              	.LVL359:
 4704              	.LBB1798:
 4705              	.LBI1798:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4706              		.loc 8 236 7 is_stmt 1 view .LVU1274
 4707              	.LBB1799:
 4708              	.LBB1800:
 4709              	.LBI1800:
 4710              		.loc 14 469 7 view .LVU1275
 4711              	.LBB1801:
 4712              	.LBI1801:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4713              		.loc 12 119 7 view .LVU1276
 4714              	.LBB1802:
 4715              		.loc 12 128 19 is_stmt 0 view .LVU1277
 4716 1039 E8000000 		call	_ZdlPv@PLT
 4716      00
 4717              	.LVL360:
 4718              		.loc 12 128 19 view .LVU1278
 4719              	.LBE1802:
 4720              	.LBE1801:
 4721              	.LBE1800:
 4722              	.LBE1799:
 4723              	.LBE1798:
 4724              	.LBE1793:
 4725              	.LBE1792:
 4726              	.LBB1803:
 4727              	.LBI1803:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4728              		.loc 8 150 14 is_stmt 1 view .LVU1279
 4729              	.LBB1804:
 4730              	.LBI1804:
 4731              		.loc 11 153 7 view .LVU1280
 4732              	.LBB1805:
 4733              	.LBI1805:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4734              		.loc 12 89 7 view .LVU1281
 4735              	.L223:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4736              		.loc 12 89 7 is_stmt 0 view .LVU1282
 4737              	.LBE1805:
 4738              	.LBE1804:
 4739              	.LBE1803:
 4740              	.LBE1791:
GAS LISTING /tmp/ccEa7iXV.s 			page 310


 4741              	.LBE1869:
 4742              	.LBE1905:
 4743              	.LBB1906:
 4744              	.LBI1906:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4745              		.loc 8 657 7 is_stmt 1 discriminator 5 view .LVU1283
 4746              	.LBB1907:
 4747              	.LBI1907:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4748              		.loc 8 229 7 discriminator 5 view .LVU1284
 4749              	.LBB1908:
 4750              	.LBB1909:
 4751              	.LBI1909:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4752              		.loc 8 221 7 discriminator 5 view .LVU1285
 4753              	.LBB1910:
 4754              	.LBI1910:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4755              		.loc 8 186 7 discriminator 5 view .LVU1286
 4756              	.LBB1911:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4757              		.loc 8 187 28 is_stmt 0 discriminator 5 view .LVU1287
 4758 103e 488B3C24 		movq	(%rsp), %rdi
 4759              	.LVL361:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4760              		.loc 8 187 28 discriminator 5 view .LVU1288
 4761              	.LBE1911:
 4762              	.LBE1910:
 4763              	.LBB1912:
 4764              	.LBI1912:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4765              		.loc 8 200 7 is_stmt 1 discriminator 5 view .LVU1289
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4766              		.loc 8 200 7 is_stmt 0 discriminator 5 view .LVU1290
 4767              	.LBE1912:
 4768              	.LBE1909:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4769              		.loc 8 231 2 discriminator 5 view .LVU1291
 4770 1042 488D4424 		leaq	16(%rsp), %rax
 4770      10
 4771 1047 4839C7   		cmpq	%rax, %rdi
 4772 104a 7405     		je	.L237
 4773              	.LVL362:
 4774              	.LBB1913:
 4775              	.LBI1913:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4776              		.loc 8 236 7 is_stmt 1 view .LVU1292
 4777              	.LBB1914:
 4778              	.LBB1915:
 4779              	.LBI1915:
 4780              		.loc 14 469 7 view .LVU1293
 4781              	.LBB1916:
 4782              	.LBI1916:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4783              		.loc 12 119 7 view .LVU1294
 4784              	.LBB1917:
 4785              		.loc 12 128 19 is_stmt 0 view .LVU1295
GAS LISTING /tmp/ccEa7iXV.s 			page 311


 4786 104c E8000000 		call	_ZdlPv@PLT
 4786      00
 4787              	.LVL363:
 4788              	.L237:
 4789              		.loc 12 128 19 view .LVU1296
 4790              	.LBE1917:
 4791              	.LBE1916:
 4792              	.LBE1915:
 4793              	.LBE1914:
 4794              	.LBE1913:
 4795              	.LBE1908:
 4796              	.LBE1907:
 4797              	.LBB1918:
 4798              	.LBI1918:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4799              		.loc 8 150 14 is_stmt 1 view .LVU1297
 4800              	.LBB1919:
 4801              	.LBI1919:
 4802              		.loc 11 153 7 view .LVU1298
 4803              	.LBB1920:
 4804              	.LBI1920:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4805              		.loc 12 89 7 view .LVU1299
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4806              		.loc 12 89 7 is_stmt 0 view .LVU1300
 4807 1051 4889DF   		movq	%rbx, %rdi
 4808              	.LEHB23:
 4809 1054 E8000000 		call	_Unwind_Resume@PLT
 4809      00
 4810              	.LVL364:
 4811              	.LEHE23:
 4812              	.L251:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4813              		.loc 12 89 7 view .LVU1301
 4814 1059 4889C3   		movq	%rax, %rbx
 4815              	.LVL365:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4816              		.loc 12 89 7 view .LVU1302
 4817              	.LBE1920:
 4818              	.LBE1919:
 4819              	.LBE1918:
 4820              	.LBE1906:
 4821              	.LBB1921:
 4822              	.LBB1870:
 4823              	.LBB1806:
 4824              	.LBI1806:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4825              		.loc 8 657 7 is_stmt 1 view .LVU1303
 4826              	.LBB1807:
 4827              	.LBI1807:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4828              		.loc 8 229 7 view .LVU1304
 4829              	.LBB1808:
 4830              	.LBB1809:
 4831              	.LBI1809:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4832              		.loc 8 221 7 view .LVU1305
GAS LISTING /tmp/ccEa7iXV.s 			page 312


 4833              	.LBB1810:
 4834              	.LBI1810:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4835              		.loc 8 186 7 view .LVU1306
 4836              	.LBB1811:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4837              		.loc 8 187 28 is_stmt 0 view .LVU1307
 4838 105c 488B7C24 		movq	64(%rsp), %rdi
 4838      40
 4839              	.LVL366:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4840              		.loc 8 187 28 view .LVU1308
 4841              	.LBE1811:
 4842              	.LBE1810:
 4843              	.LBB1812:
 4844              	.LBI1812:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4845              		.loc 8 200 7 is_stmt 1 view .LVU1309
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4846              		.loc 8 200 7 is_stmt 0 view .LVU1310
 4847              	.LBE1812:
 4848              	.LBE1809:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4849              		.loc 8 231 2 view .LVU1311
 4850 1061 488D4424 		leaq	80(%rsp), %rax
 4850      50
 4851 1066 4839C7   		cmpq	%rax, %rdi
 4852 1069 74BF     		je	.L215
 4853              	.LVL367:
 4854              	.LBB1813:
 4855              	.LBI1813:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4856              		.loc 8 236 7 is_stmt 1 view .LVU1312
 4857              	.LBB1814:
 4858              	.LBB1815:
 4859              	.LBI1815:
 4860              		.loc 14 469 7 view .LVU1313
 4861              	.LBB1816:
 4862              	.LBI1816:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4863              		.loc 12 119 7 view .LVU1314
 4864              	.LBB1817:
 4865              		.loc 12 128 19 is_stmt 0 view .LVU1315
 4866 106b E8000000 		call	_ZdlPv@PLT
 4866      00
 4867              	.LVL368:
 4868              		.loc 12 128 19 view .LVU1316
 4869              	.LBE1817:
 4870              	.LBE1816:
 4871              	.LBE1815:
 4872              	.LBE1814:
 4873              	.LBE1813:
 4874              	.LBE1808:
 4875              	.LBE1807:
 4876              	.LBB1821:
 4877              	.LBI1821:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
GAS LISTING /tmp/ccEa7iXV.s 			page 313


 4878              		.loc 8 150 14 is_stmt 1 view .LVU1317
 4879              	.LBB1822:
 4880              	.LBI1822:
 4881              		.loc 11 153 7 view .LVU1318
 4882              	.LBB1823:
 4883              	.LBI1823:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4884              		.loc 12 89 7 view .LVU1319
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4885              		.loc 12 89 7 is_stmt 0 view .LVU1320
 4886              	.LBE1823:
 4887              	.LBE1822:
 4888              	.LBE1821:
 4889              	.LBB1824:
 4890              	.LBB1820:
 4891              	.LBB1819:
 4892              	.LBB1818:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4893              		.loc 8 237 79 view .LVU1321
 4894 1070 EBB8     		jmp	.L215
 4895              	.LVL369:
 4896              	.L250:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4897              		.loc 8 237 79 view .LVU1322
 4898 1072 4889C3   		movq	%rax, %rbx
 4899              	.LVL370:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4900              		.loc 8 237 79 view .LVU1323
 4901              	.LBE1818:
 4902              	.LBE1819:
 4903              	.LBE1820:
 4904              	.LBE1824:
 4905              	.LBE1806:
 4906              	.LBB1825:
 4907              	.LBI1825:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4908              		.loc 8 657 7 is_stmt 1 view .LVU1324
 4909              	.LBB1826:
 4910              	.LBI1826:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4911              		.loc 8 229 7 view .LVU1325
 4912              	.LBB1827:
 4913              	.LBB1828:
 4914              	.LBI1828:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4915              		.loc 8 221 7 view .LVU1326
 4916              	.LBB1829:
 4917              	.LBI1829:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4918              		.loc 8 186 7 view .LVU1327
 4919              	.LBB1830:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4920              		.loc 8 187 28 is_stmt 0 view .LVU1328
 4921 1075 488B7C24 		movq	64(%rsp), %rdi
 4921      40
 4922              	.LVL371:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
GAS LISTING /tmp/ccEa7iXV.s 			page 314


 4923              		.loc 8 187 28 view .LVU1329
 4924              	.LBE1830:
 4925              	.LBE1829:
 4926              	.LBB1831:
 4927              	.LBI1831:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4928              		.loc 8 200 7 is_stmt 1 view .LVU1330
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4929              		.loc 8 200 7 is_stmt 0 view .LVU1331
 4930              	.LBE1831:
 4931              	.LBE1828:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4932              		.loc 8 231 2 view .LVU1332
 4933 107a 488D4424 		leaq	80(%rsp), %rax
 4933      50
 4934 107f 4839C7   		cmpq	%rax, %rdi
 4935 1082 74A6     		je	.L215
 4936              	.LVL372:
 4937              	.LBB1832:
 4938              	.LBI1832:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4939              		.loc 8 236 7 is_stmt 1 view .LVU1333
 4940              	.LBB1833:
 4941              	.LBB1834:
 4942              	.LBI1834:
 4943              		.loc 14 469 7 view .LVU1334
 4944              	.LBB1835:
 4945              	.LBI1835:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 4946              		.loc 12 119 7 view .LVU1335
 4947              	.LBB1836:
 4948              		.loc 12 128 19 is_stmt 0 view .LVU1336
 4949 1084 E8000000 		call	_ZdlPv@PLT
 4949      00
 4950              	.LVL373:
 4951              		.loc 12 128 19 view .LVU1337
 4952              	.LBE1836:
 4953              	.LBE1835:
 4954              	.LBE1834:
 4955              	.LBE1833:
 4956              	.LBE1832:
 4957              	.LBE1827:
 4958              	.LBE1826:
 4959              	.LBB1840:
 4960              	.LBI1840:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4961              		.loc 8 150 14 is_stmt 1 view .LVU1338
 4962              	.LBB1841:
 4963              	.LBI1841:
 4964              		.loc 11 153 7 view .LVU1339
 4965              	.LBB1842:
 4966              	.LBI1842:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4967              		.loc 12 89 7 view .LVU1340
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 4968              		.loc 12 89 7 is_stmt 0 view .LVU1341
 4969              	.LBE1842:
GAS LISTING /tmp/ccEa7iXV.s 			page 315


 4970              	.LBE1841:
 4971              	.LBE1840:
 4972              	.LBB1843:
 4973              	.LBB1839:
 4974              	.LBB1838:
 4975              	.LBB1837:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4976              		.loc 8 237 79 view .LVU1342
 4977 1089 EB9F     		jmp	.L215
 4978              	.LVL374:
 4979              	.L249:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4980              		.loc 8 237 79 view .LVU1343
 4981 108b 4889C3   		movq	%rax, %rbx
 4982              	.LVL375:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 4983              		.loc 8 237 79 view .LVU1344
 4984              	.LBE1837:
 4985              	.LBE1838:
 4986              	.LBE1839:
 4987              	.LBE1843:
 4988              	.LBE1825:
 4989              	.LBB1844:
 4990              	.LBI1844:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 4991              		.loc 8 657 7 is_stmt 1 view .LVU1345
 4992              	.LBB1845:
 4993              	.LBI1845:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 4994              		.loc 8 229 7 view .LVU1346
 4995              	.LBB1846:
 4996              	.LBB1847:
 4997              	.LBI1847:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4998              		.loc 8 221 7 view .LVU1347
 4999              	.LBB1848:
 5000              	.LBI1848:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5001              		.loc 8 186 7 view .LVU1348
 5002              	.LBB1849:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5003              		.loc 8 187 28 is_stmt 0 view .LVU1349
 5004 108e 488B7C24 		movq	64(%rsp), %rdi
 5004      40
 5005              	.LVL376:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5006              		.loc 8 187 28 view .LVU1350
 5007              	.LBE1849:
 5008              	.LBE1848:
 5009              	.LBB1850:
 5010              	.LBI1850:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5011              		.loc 8 200 7 is_stmt 1 view .LVU1351
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5012              		.loc 8 200 7 is_stmt 0 view .LVU1352
 5013              	.LBE1850:
 5014              	.LBE1847:
GAS LISTING /tmp/ccEa7iXV.s 			page 316


 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5015              		.loc 8 231 2 view .LVU1353
 5016 1093 488D4424 		leaq	80(%rsp), %rax
 5016      50
 5017 1098 4839C7   		cmpq	%rax, %rdi
 5018 109b 748D     		je	.L215
 5019              	.LVL377:
 5020              	.LBB1851:
 5021              	.LBI1851:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5022              		.loc 8 236 7 is_stmt 1 view .LVU1354
 5023              	.LBB1852:
 5024              	.LBB1853:
 5025              	.LBI1853:
 5026              		.loc 14 469 7 view .LVU1355
 5027              	.LBB1854:
 5028              	.LBI1854:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5029              		.loc 12 119 7 view .LVU1356
 5030              	.LBB1855:
 5031              		.loc 12 128 19 is_stmt 0 view .LVU1357
 5032 109d E8000000 		call	_ZdlPv@PLT
 5032      00
 5033              	.LVL378:
 5034              		.loc 12 128 19 view .LVU1358
 5035              	.LBE1855:
 5036              	.LBE1854:
 5037              	.LBE1853:
 5038              	.LBE1852:
 5039              	.LBE1851:
 5040              	.LBE1846:
 5041              	.LBE1845:
 5042              	.LBB1859:
 5043              	.LBI1859:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5044              		.loc 8 150 14 is_stmt 1 view .LVU1359
 5045              	.LBB1860:
 5046              	.LBI1860:
 5047              		.loc 11 153 7 view .LVU1360
 5048              	.LBB1861:
 5049              	.LBI1861:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5050              		.loc 12 89 7 view .LVU1361
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5051              		.loc 12 89 7 is_stmt 0 view .LVU1362
 5052              	.LBE1861:
 5053              	.LBE1860:
 5054              	.LBE1859:
 5055              	.LBB1862:
 5056              	.LBB1858:
 5057              	.LBB1857:
 5058              	.LBB1856:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5059              		.loc 8 237 79 view .LVU1363
 5060 10a2 EB86     		jmp	.L215
 5061              	.LVL379:
 5062              	.L277:
GAS LISTING /tmp/ccEa7iXV.s 			page 317


 5063              	.LEHB24:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5064              		.loc 8 237 79 view .LVU1364
 5065              	.LBE1856:
 5066              	.LBE1857:
 5067              	.LBE1858:
 5068              	.LBE1862:
 5069              	.LBE1844:
 5070              	.LBE1870:
 5071              	.LBE1921:
 5072              	.LBB1922:
 5073              	.LBB1903:
 5074              	.LBB1901:
 5075              	.LBB1897:
 5076              	.LBB1895:
 5077              	.LBB1893:
 5078              	.LBB1889:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 5079              		.loc 15 50 18 view .LVU1365
 5080 10a4 E8000000 		call	_ZSt16__throw_bad_castv@PLT
 5080      00
 5081              	.LVL380:
 5082              	.L242:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 5083              		.loc 15 50 18 view .LVU1366
 5084 10a9 4889C3   		movq	%rax, %rbx
 5085              	.LVL381:
  50:/usr/include/c++/9.2.0/bits/basic_ios.h ****       return *__f;
 5086              		.loc 15 50 18 view .LVU1367
 5087              	.LBE1889:
 5088              	.LBE1893:
 5089              	.LBE1895:
 5090              	.LBE1897:
 5091              	.LBE1901:
 5092              	.LBE1903:
 5093              	.LBE1922:
 5094              	.LBB1923:
 5095              	.LBI1923:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5096              		.loc 8 657 7 is_stmt 1 view .LVU1368
 5097              	.LBB1924:
 5098              	.LBI1924:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5099              		.loc 8 229 7 view .LVU1369
 5100              	.LBB1925:
 5101              	.LBB1926:
 5102              	.LBI1926:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5103              		.loc 8 221 7 view .LVU1370
 5104              	.LBB1927:
 5105              	.LBI1927:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5106              		.loc 8 186 7 view .LVU1371
 5107              	.LBB1928:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5108              		.loc 8 187 28 is_stmt 0 view .LVU1372
 5109 10ac 488B7C24 		movq	32(%rsp), %rdi
GAS LISTING /tmp/ccEa7iXV.s 			page 318


 5109      20
 5110              	.LVL382:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5111              		.loc 8 187 28 view .LVU1373
 5112              	.LBE1928:
 5113              	.LBE1927:
 5114              	.LBB1929:
 5115              	.LBI1929:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5116              		.loc 8 200 7 is_stmt 1 view .LVU1374
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5117              		.loc 8 200 7 is_stmt 0 view .LVU1375
 5118              	.LBE1929:
 5119              	.LBE1926:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5120              		.loc 8 231 2 view .LVU1376
 5121 10b1 488D4424 		leaq	48(%rsp), %rax
 5121      30
 5122 10b6 4839C7   		cmpq	%rax, %rdi
 5123 10b9 7483     		je	.L223
 5124              	.LVL383:
 5125              	.LBB1930:
 5126              	.LBI1930:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5127              		.loc 8 236 7 is_stmt 1 view .LVU1377
 5128              	.LBB1931:
 5129              	.LBB1932:
 5130              	.LBI1932:
 5131              		.loc 14 469 7 view .LVU1378
 5132              	.LBB1933:
 5133              	.LBI1933:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5134              		.loc 12 119 7 view .LVU1379
 5135              	.LBB1934:
 5136              		.loc 12 128 19 is_stmt 0 view .LVU1380
 5137 10bb E8000000 		call	_ZdlPv@PLT
 5137      00
 5138              	.LVL384:
 5139              		.loc 12 128 19 view .LVU1381
 5140              	.LBE1934:
 5141              	.LBE1933:
 5142              	.LBE1932:
 5143              	.LBE1931:
 5144              	.LBE1930:
 5145              	.LBE1925:
 5146              	.LBE1924:
 5147              	.LBB1938:
 5148              	.LBI1938:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5149              		.loc 8 150 14 is_stmt 1 view .LVU1382
 5150              	.LBB1939:
 5151              	.LBI1939:
 5152              		.loc 11 153 7 view .LVU1383
 5153              	.LBB1940:
 5154              	.LBI1940:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5155              		.loc 12 89 7 view .LVU1384
GAS LISTING /tmp/ccEa7iXV.s 			page 319


  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5156              		.loc 12 89 7 is_stmt 0 view .LVU1385
 5157              	.LBE1940:
 5158              	.LBE1939:
 5159              	.LBE1938:
 5160              	.LBB1941:
 5161              	.LBB1937:
 5162              	.LBB1936:
 5163              	.LBB1935:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5164              		.loc 8 237 79 view .LVU1386
 5165 10c0 E979FFFF 		jmp	.L223
 5165      FF
 5166              	.LVL385:
 5167              	.L225:
 237:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5168              		.loc 8 237 79 view .LVU1387
 5169              	.LBE1935:
 5170              	.LBE1936:
 5171              	.LBE1937:
 5172              	.LBE1941:
 5173              	.LBE1923:
 5174              	.LBB1942:
 5175              	.LBB1904:
 5176              	.LBB1902:
 5177              	.LBB1898:
 5178              	.LBB1896:
 5179              	.LBB1894:
 5180              	.LBB1892:
 876:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	this->_M_widen_init();
 5181              		.loc 16 876 2 is_stmt 1 view .LVU1388
 5182              		.loc 16 876 21 is_stmt 0 view .LVU1389
 5183 10c5 4C89EF   		movq	%r13, %rdi
 5184 10c8 E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv@PLT
 5184      00
 5185              	.LVL386:
 877:/usr/include/c++/9.2.0/bits/locale_facets.h **** 	return this->do_widen(__c);
 5186              		.loc 16 877 2 is_stmt 1 view .LVU1390
 5187              		.loc 16 877 27 is_stmt 0 view .LVU1391
 5188 10cd 498B4500 		movq	0(%r13), %rax
 5189              		.loc 16 877 23 view .LVU1392
 5190 10d1 BE0A0000 		movl	$10, %esi
 5190      00
 5191 10d6 4C89EF   		movq	%r13, %rdi
 5192 10d9 FF5030   		call	*48(%rax)
 5193              	.LVL387:
 5194 10dc 89C6     		movl	%eax, %esi
 5195              		.loc 16 877 27 view .LVU1393
 5196 10de E91FFFFF 		jmp	.L226
 5196      FF
 5197              	.LVL388:
 5198              	.L278:
 5199              		.loc 16 877 27 view .LVU1394
 5200              	.LBE1892:
 5201              	.LBE1894:
 5202              	.LBE1896:
 5203              	.LBE1898:
GAS LISTING /tmp/ccEa7iXV.s 			page 320


 5204              		.loc 13 600 19 view .LVU1395
 5205 10e3 4889C7   		movq	%rax, %rdi
 5206              	.LVL389:
 5207              	.LBB1899:
 5208              	.LBI1899:
 601:/usr/include/c++/9.2.0/ostream **** 
 602:/usr/include/c++/9.2.0/ostream ****   /**
 603:/usr/include/c++/9.2.0/ostream ****    *  @brief  Write a null character into the output sequence.
 604:/usr/include/c++/9.2.0/ostream ****    *
 605:/usr/include/c++/9.2.0/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 606:/usr/include/c++/9.2.0/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 607:/usr/include/c++/9.2.0/ostream ****    *  string terminator.
 608:/usr/include/c++/9.2.0/ostream ****   */
 609:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 610:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 611:/usr/include/c++/9.2.0/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 612:/usr/include/c++/9.2.0/ostream ****     { return __os.put(_CharT()); }
 613:/usr/include/c++/9.2.0/ostream **** 
 614:/usr/include/c++/9.2.0/ostream ****   /**
 615:/usr/include/c++/9.2.0/ostream ****    *  @brief  Flushes the output stream.
 616:/usr/include/c++/9.2.0/ostream ****    *
 617:/usr/include/c++/9.2.0/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 618:/usr/include/c++/9.2.0/ostream ****   */
 619:/usr/include/c++/9.2.0/ostream ****   template<typename _CharT, typename _Traits>
 620:/usr/include/c++/9.2.0/ostream ****     inline basic_ostream<_CharT, _Traits>&
 621:/usr/include/c++/9.2.0/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 5209              		.loc 13 621 5 is_stmt 1 view .LVU1396
 5210              	.LBB1900:
 622:/usr/include/c++/9.2.0/ostream ****     { return __os.flush(); }
 5211              		.loc 13 622 25 is_stmt 0 view .LVU1397
 5212 10e6 E8000000 		call	_ZNSo5flushEv@PLT
 5212      00
 5213              	.LVL390:
 5214              	.LEHE24:
 5215              		.loc 13 622 25 view .LVU1398
 5216              	.LBE1900:
 5217              	.LBE1899:
 5218              	.LBE1902:
 5219              	.LBE1904:
 5220              	.LBE1942:
 5221              	.LBB1943:
 5222              	.LBI1943:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5223              		.loc 8 657 7 is_stmt 1 view .LVU1399
 5224              	.LBB1944:
 5225              	.LBI1944:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5226              		.loc 8 229 7 view .LVU1400
 5227              	.LBB1945:
 5228              	.LBB1946:
 5229              	.LBI1946:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5230              		.loc 8 221 7 view .LVU1401
 5231              	.LBB1947:
 5232              	.LBI1947:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5233              		.loc 8 186 7 view .LVU1402
GAS LISTING /tmp/ccEa7iXV.s 			page 321


 5234              	.LBB1948:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5235              		.loc 8 187 28 is_stmt 0 view .LVU1403
 5236 10eb 488B7C24 		movq	32(%rsp), %rdi
 5236      20
 5237              	.LVL391:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5238              		.loc 8 187 28 view .LVU1404
 5239              	.LBE1948:
 5240              	.LBE1947:
 5241              	.LBB1949:
 5242              	.LBI1949:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5243              		.loc 8 200 7 is_stmt 1 view .LVU1405
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5244              		.loc 8 200 7 is_stmt 0 view .LVU1406
 5245              	.LBE1949:
 5246              	.LBE1946:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5247              		.loc 8 231 2 view .LVU1407
 5248 10f0 488D4424 		leaq	48(%rsp), %rax
 5248      30
 5249 10f5 4839C7   		cmpq	%rax, %rdi
 5250 10f8 7405     		je	.L227
 5251              	.LVL392:
 5252              	.LBB1950:
 5253              	.LBI1950:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5254              		.loc 8 236 7 is_stmt 1 view .LVU1408
 5255              	.LBB1951:
 5256              	.LBB1952:
 5257              	.LBI1952:
 5258              		.loc 14 469 7 view .LVU1409
 5259              	.LBB1953:
 5260              	.LBI1953:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5261              		.loc 12 119 7 view .LVU1410
 5262              	.LBB1954:
 5263              		.loc 12 128 19 is_stmt 0 view .LVU1411
 5264 10fa E8000000 		call	_ZdlPv@PLT
 5264      00
 5265              	.LVL393:
 5266              	.L227:
 5267              		.loc 12 128 19 view .LVU1412
 5268              	.LBE1954:
 5269              	.LBE1953:
 5270              	.LBE1952:
 5271              	.LBE1951:
 5272              	.LBE1950:
 5273              	.LBE1945:
 5274              	.LBE1944:
 5275              	.LBB1955:
 5276              	.LBI1955:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5277              		.loc 8 150 14 is_stmt 1 view .LVU1413
 5278              	.LBB1956:
 5279              	.LBI1956:
GAS LISTING /tmp/ccEa7iXV.s 			page 322


 5280              		.loc 11 153 7 view .LVU1414
 5281              	.LBB1957:
 5282              	.LBI1957:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5283              		.loc 12 89 7 view .LVU1415
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5284              		.loc 12 89 7 is_stmt 0 view .LVU1416
 5285              	.LBE1957:
 5286              	.LBE1956:
 5287              	.LBE1955:
 5288              	.LBE1943:
 5289              	.LBB1958:
 5290              	.LBI1958:
 657:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _M_dispose(); }
 5291              		.loc 8 657 7 is_stmt 1 view .LVU1417
 5292              	.LBB1959:
 5293              	.LBI1959:
 229:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5294              		.loc 8 229 7 view .LVU1418
 5295              	.LBB1960:
 5296              	.LBB1961:
 5297              	.LBI1961:
 221:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5298              		.loc 8 221 7 view .LVU1419
 5299              	.LBB1962:
 5300              	.LBI1962:
 186:/usr/include/c++/9.2.0/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5301              		.loc 8 186 7 view .LVU1420
 5302              	.LBB1963:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5303              		.loc 8 187 28 is_stmt 0 view .LVU1421
 5304 10ff 488B3C24 		movq	(%rsp), %rdi
 5305              	.LVL394:
 187:/usr/include/c++/9.2.0/bits/basic_string.h **** 
 5306              		.loc 8 187 28 view .LVU1422
 5307              	.LBE1963:
 5308              	.LBE1962:
 5309              	.LBB1964:
 5310              	.LBI1964:
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5311              		.loc 8 200 7 is_stmt 1 view .LVU1423
 200:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5312              		.loc 8 200 7 is_stmt 0 view .LVU1424
 5313              	.LBE1964:
 5314              	.LBE1961:
 231:/usr/include/c++/9.2.0/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5315              		.loc 8 231 2 view .LVU1425
 5316 1103 488D4424 		leaq	16(%rsp), %rax
 5316      10
 5317 1108 4839C7   		cmpq	%rax, %rdi
 5318 110b 7405     		je	.L228
 5319              	.LVL395:
 5320              	.LBB1965:
 5321              	.LBI1965:
 236:/usr/include/c++/9.2.0/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5322              		.loc 8 236 7 is_stmt 1 view .LVU1426
 5323              	.LBB1966:
GAS LISTING /tmp/ccEa7iXV.s 			page 323


 5324              	.LBB1967:
 5325              	.LBI1967:
 5326              		.loc 14 469 7 view .LVU1427
 5327              	.LBB1968:
 5328              	.LBI1968:
 119:/usr/include/c++/9.2.0/ext/new_allocator.h ****       {
 5329              		.loc 12 119 7 view .LVU1428
 5330              	.LBB1969:
 5331              		.loc 12 128 19 is_stmt 0 view .LVU1429
 5332 110d E8000000 		call	_ZdlPv@PLT
 5332      00
 5333              	.LVL396:
 5334              	.L228:
 5335              		.loc 12 128 19 view .LVU1430
 5336              	.LBE1969:
 5337              	.LBE1968:
 5338              	.LBE1967:
 5339              	.LBE1966:
 5340              	.LBE1965:
 5341              	.LBE1960:
 5342              	.LBE1959:
 5343              	.LBB1970:
 5344              	.LBI1970:
 150:/usr/include/c++/9.2.0/bits/basic_string.h ****       {
 5345              		.loc 8 150 14 is_stmt 1 view .LVU1431
 5346              	.LBB1971:
 5347              	.LBI1971:
 5348              		.loc 11 153 7 view .LVU1432
 5349              	.LBB1972:
 5350              	.LBI1972:
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5351              		.loc 12 89 7 view .LVU1433
  89:/usr/include/c++/9.2.0/ext/new_allocator.h **** 
 5352              		.loc 12 89 7 is_stmt 0 view .LVU1434
 5353              	.LBE1972:
 5354              	.LBE1971:
 5355              	.LBE1970:
 5356              	.LBE1958:
 454:Src/findwayBases.cpp ****     {
 5357              		.loc 1 454 5 is_stmt 1 view .LVU1435
 5358 1112 4839EB   		cmpq	%rbp, %rbx
 5359 1115 741D     		je	.L279
 5360              	.LBB1973:
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5361              		.loc 1 459 16 is_stmt 0 view .LVU1436
 5362 1117 B8000000 		movl	$0, %eax
 5362      00
 5363              	.L229:
 5364              	.LVL397:
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5365              		.loc 1 459 25 is_stmt 1 discriminator 1 view .LVU1437
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5366              		.loc 1 459 34 is_stmt 0 discriminator 1 view .LVU1438
 5367 111c 488B5308 		movq	8(%rbx), %rdx
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5368              		.loc 1 459 25 discriminator 1 view .LVU1439
 5369 1120 4839C2   		cmpq	%rax, %rdx
GAS LISTING /tmp/ccEa7iXV.s 			page 324


 5370 1123 7660     		jbe	.L240
 460:Src/findwayBases.cpp ****         {
 5371              		.loc 1 460 9 is_stmt 1 view .LVU1440
 460:Src/findwayBases.cpp ****         {
 5372              		.loc 1 460 19 is_stmt 0 view .LVU1441
 5373 1125 488B13   		movq	(%rbx), %rdx
 460:Src/findwayBases.cpp ****         {
 5374              		.loc 1 460 9 view .LVU1442
 5375 1128 48392CC2 		cmpq	%rbp, (%rdx,%rax,8)
 5376 112c 7420     		je	.L280
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5377              		.loc 1 459 5 is_stmt 1 discriminator 2 view .LVU1443
 5378 112e 4883C001 		addq	$1, %rax
 5379              	.LVL398:
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5380              		.loc 1 459 5 is_stmt 0 discriminator 2 view .LVU1444
 5381 1132 EBE8     		jmp	.L229
 5382              	.LVL399:
 5383              	.L279:
 459:Src/findwayBases.cpp ****         if(start->targets[i] == end)
 5384              		.loc 1 459 5 discriminator 2 view .LVU1445
 5385              	.LBE1973:
 456:Src/findwayBases.cpp ****         return;
 5386              		.loc 1 456 9 is_stmt 1 view .LVU1446
 5387              	.LBB1977:
 5388              	.LBI1977:
 565:/usr/include/c++/9.2.0/ostream ****     {
 5389              		.loc 13 565 5 view .LVU1447
 565:/usr/include/c++/9.2.0/ostream ****     {
 5390              		.loc 13 565 5 is_stmt 0 view .LVU1448
 5391              	.LBE1977:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5392              		.loc 9 335 2 is_stmt 1 view .LVU1449
 5393              	.LBB1979:
 5394              	.LBB1978:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5395              		.loc 13 570 18 is_stmt 0 view .LVU1450
 5396 1134 BA030000 		movl	$3, %edx
 5396      00
 5397 1139 488D3500 		leaq	.LC20(%rip), %rsi
 5397      000000
 5398 1140 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 5398      000000
 5399              	.LEHB25:
 5400 1147 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5400      00
 5401              	.LVL400:
 572:/usr/include/c++/9.2.0/ostream ****     }
 5402              		.loc 13 572 14 view .LVU1451
 5403 114c EB18     		jmp	.L182
 5404              	.LVL401:
 5405              	.L280:
 572:/usr/include/c++/9.2.0/ostream ****     }
 5406              		.loc 13 572 14 view .LVU1452
 5407              	.LBE1978:
 5408              	.LBE1979:
 5409              	.LBB1980:
GAS LISTING /tmp/ccEa7iXV.s 			page 325


 462:Src/findwayBases.cpp ****             // std::cout << "ALREADY EXISTS ";
 5410              		.loc 1 462 13 is_stmt 1 view .LVU1453
 5411              	.LBB1974:
 5412              	.LBI1974:
 565:/usr/include/c++/9.2.0/ostream ****     {
 5413              		.loc 13 565 5 view .LVU1454
 565:/usr/include/c++/9.2.0/ostream ****     {
 5414              		.loc 13 565 5 is_stmt 0 view .LVU1455
 5415              	.LBE1974:
 5416              	.LBE1980:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5417              		.loc 9 335 2 is_stmt 1 view .LVU1456
 5418              	.LBB1981:
 5419              	.LBB1976:
 5420              	.LBB1975:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5421              		.loc 13 570 18 is_stmt 0 view .LVU1457
 5422 114e BA030000 		movl	$3, %edx
 5422      00
 5423 1153 488D3500 		leaq	.LC21(%rip), %rsi
 5423      000000
 5424 115a 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 5424      000000
 5425 1161 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5425      00
 5426              	.LVL402:
 5427              	.L182:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5428              		.loc 13 570 18 view .LVU1458
 5429              	.LBE1975:
 5430              	.LBE1976:
 5431              	.LBE1981:
 480:Src/findwayBases.cpp **** 
 5432              		.loc 1 480 1 view .LVU1459
 5433 1166 488B4424 		movq	104(%rsp), %rax
 5433      68
 5434 116b 64483304 		xorq	%fs:40, %rax
 5434      25280000 
 5434      00
 5435 1174 0F859700 		jne	.L281
 5435      0000
 5436 117a 4883C478 		addq	$120, %rsp
 5437              		.cfi_remember_state
 5438              		.cfi_def_cfa_offset 40
 5439 117e 5B       		popq	%rbx
 5440              		.cfi_def_cfa_offset 32
 5441              	.LVL403:
 480:Src/findwayBases.cpp **** 
 5442              		.loc 1 480 1 view .LVU1460
 5443 117f 5D       		popq	%rbp
 5444              		.cfi_def_cfa_offset 24
 5445              	.LVL404:
 480:Src/findwayBases.cpp **** 
 5446              		.loc 1 480 1 view .LVU1461
 5447 1180 415C     		popq	%r12
 5448              		.cfi_def_cfa_offset 16
 5449 1182 415D     		popq	%r13
GAS LISTING /tmp/ccEa7iXV.s 			page 326


 5450              		.cfi_def_cfa_offset 8
 5451 1184 C3       		ret
 5452              	.LVL405:
 5453              	.L240:
 5454              		.cfi_restore_state
 5455              	.LBB1982:
 466:Src/findwayBases.cpp ****         if(end->targets[i] == start)
 5456              		.loc 1 466 16 view .LVU1462
 5457 1185 B8000000 		movl	$0, %eax
 5457      00
 5458              	.LVL406:
 5459              	.L231:
 466:Src/findwayBases.cpp ****         if(end->targets[i] == start)
 5460              		.loc 1 466 25 is_stmt 1 discriminator 1 view .LVU1463
 5461 118a 48394508 		cmpq	%rax, 8(%rbp)
 5462 118e 762A     		jbe	.L233
 467:Src/findwayBases.cpp ****         {
 5463              		.loc 1 467 9 view .LVU1464
 467:Src/findwayBases.cpp ****         {
 5464              		.loc 1 467 17 is_stmt 0 view .LVU1465
 5465 1190 488B4D00 		movq	0(%rbp), %rcx
 467:Src/findwayBases.cpp ****         {
 5466              		.loc 1 467 9 view .LVU1466
 5467 1194 48391CC1 		cmpq	%rbx, (%rcx,%rax,8)
 5468 1198 7406     		je	.L282
 466:Src/findwayBases.cpp ****         if(end->targets[i] == start)
 5469              		.loc 1 466 5 is_stmt 1 discriminator 2 view .LVU1467
 5470 119a 4883C001 		addq	$1, %rax
 5471              	.LVL407:
 466:Src/findwayBases.cpp ****         if(end->targets[i] == start)
 5472              		.loc 1 466 5 is_stmt 0 discriminator 2 view .LVU1468
 5473 119e EBEA     		jmp	.L231
 5474              	.L282:
 469:Src/findwayBases.cpp ****             // std::cout << "ALREADY EXISTS ";
 5475              		.loc 1 469 13 is_stmt 1 view .LVU1469
 5476              	.LVL408:
 5477              	.LBB1983:
 5478              	.LBI1983:
 565:/usr/include/c++/9.2.0/ostream ****     {
 5479              		.loc 13 565 5 view .LVU1470
 565:/usr/include/c++/9.2.0/ostream ****     {
 5480              		.loc 13 565 5 is_stmt 0 view .LVU1471
 5481              	.LBE1983:
 5482              	.LBE1982:
 335:/usr/include/c++/9.2.0/bits/char_traits.h ****       }
 5483              		.loc 9 335 2 is_stmt 1 view .LVU1472
 5484              	.LBB1986:
 5485              	.LBB1985:
 5486              	.LBB1984:
 570:/usr/include/c++/9.2.0/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 5487              		.loc 13 570 18 is_stmt 0 view .LVU1473
 5488 11a0 BA030000 		movl	$3, %edx
 5488      00
 5489 11a5 488D3500 		leaq	.LC21(%rip), %rsi
 5489      000000
 5490 11ac 488D3D00 		leaq	_ZSt4cout(%rip), %rdi
 5490      000000
GAS LISTING /tmp/ccEa7iXV.s 			page 327


 5491 11b3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@PLT
 5491      00
 5492              	.LVL409:
 5493              	.LEHE25:
 572:/usr/include/c++/9.2.0/ostream ****     }
 5494              		.loc 13 572 14 view .LVU1474
 5495 11b8 EBAC     		jmp	.L182
 5496              	.LVL410:
 5497              	.L233:
 572:/usr/include/c++/9.2.0/ostream ****     }
 5498              		.loc 13 572 14 view .LVU1475
 5499              	.LBE1984:
 5500              	.LBE1985:
 5501              	.LBE1986:
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5502              		.loc 1 475 5 is_stmt 1 view .LVU1476
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5503              		.loc 1 475 68 is_stmt 0 view .LVU1477
 5504 11ba 4883C201 		addq	$1, %rdx
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5505              		.loc 1 475 20 view .LVU1478
 5506 11be 48895308 		movq	%rdx, 8(%rbx)
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5507              		.loc 1 475 58 view .LVU1479
 5508 11c2 488B3B   		movq	(%rbx), %rdi
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5509              		.loc 1 475 50 view .LVU1480
 5510 11c5 488D34D5 		leaq	0(,%rdx,8), %rsi
 5510      00000000 
 5511 11cd E8000000 		call	realloc@PLT
 5511      00
 5512              	.LVL411:
 475:Src/findwayBases.cpp ****     start->targets[start->numOfTargets - 1] = end;
 5513              		.loc 1 475 20 view .LVU1481
 5514 11d2 488903   		movq	%rax, (%rbx)
 476:Src/findwayBases.cpp **** 
 5515              		.loc 1 476 5 is_stmt 1 view .LVU1482
 476:Src/findwayBases.cpp **** 
 5516              		.loc 1 476 27 is_stmt 0 view .LVU1483
 5517 11d5 488B5308 		movq	8(%rbx), %rdx
 476:Src/findwayBases.cpp **** 
 5518              		.loc 1 476 45 view .LVU1484
 5519 11d9 48896CD0 		movq	%rbp, -8(%rax,%rdx,8)
 5519      F8
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 5520              		.loc 1 478 5 is_stmt 1 view .LVU1485
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 5521              		.loc 1 478 64 is_stmt 0 view .LVU1486
 5522 11de 488B4508 		movq	8(%rbp), %rax
 5523 11e2 488D7001 		leaq	1(%rax), %rsi
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 5524              		.loc 1 478 18 view .LVU1487
 5525 11e6 48897508 		movq	%rsi, 8(%rbp)
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 5526              		.loc 1 478 54 view .LVU1488
 5527 11ea 488B7D00 		movq	0(%rbp), %rdi
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
GAS LISTING /tmp/ccEa7iXV.s 			page 328


 5528              		.loc 1 478 48 view .LVU1489
 5529 11ee 48C1E603 		salq	$3, %rsi
 5530 11f2 E8000000 		call	realloc@PLT
 5530      00
 5531              	.LVL412:
 478:Src/findwayBases.cpp ****     end->targets[end->numOfTargets - 1] = start;
 5532              		.loc 1 478 18 view .LVU1490
 5533 11f7 48894500 		movq	%rax, 0(%rbp)
 479:Src/findwayBases.cpp **** }
 5534              		.loc 1 479 5 is_stmt 1 view .LVU1491
 479:Src/findwayBases.cpp **** }
 5535              		.loc 1 479 23 is_stmt 0 view .LVU1492
 5536 11fb 488B5508 		movq	8(%rbp), %rdx
 479:Src/findwayBases.cpp **** }
 5537              		.loc 1 479 41 view .LVU1493
 5538 11ff 48895CD0 		movq	%rbx, -8(%rax,%rdx,8)
 5538      F8
 5539 1204 E95DFFFF 		jmp	.L182
 5539      FF
 5540              	.LVL413:
 5541              	.L241:
 479:Src/findwayBases.cpp **** }
 5542              		.loc 1 479 41 view .LVU1494
 5543 1209 4889C3   		movq	%rax, %rbx
 5544              	.LVL414:
 479:Src/findwayBases.cpp **** }
 5545              		.loc 1 479 41 view .LVU1495
 5546 120c E92DFEFF 		jmp	.L223
 5546      FF
 5547              	.LVL415:
 5548              	.L281:
 480:Src/findwayBases.cpp **** 
 5549              		.loc 1 480 1 view .LVU1496
 5550 1211 E8000000 		call	__stack_chk_fail@PLT
 5550      00
 5551              	.LVL416:
 5552              		.cfi_endproc
 5553              	.LFE1743:
 5554              		.globl	__gxx_personality_v0
 5555              		.section	.gcc_except_table,"a",@progbits
 5556              	.LLSDA1743:
 5557 0000 FF       		.byte	0xff
 5558 0001 FF       		.byte	0xff
 5559 0002 01       		.byte	0x1
 5560 0003 9601     		.uleb128 .LLSDACSE1743-.LLSDACSB1743
 5561              	.LLSDACSB1743:
 5562 0005 33       		.uleb128 .LEHB0-.LFB1743
 5563 0006 20       		.uleb128 .LEHE0-.LEHB0
 5564 0007 00       		.uleb128 0
 5565 0008 00       		.uleb128 0
 5566 0009 77       		.uleb128 .LEHB1-.LFB1743
 5567 000a 41       		.uleb128 .LEHE1-.LEHB1
 5568 000b 8A01     		.uleb128 .L243-.LFB1743
 5569 000d 00       		.uleb128 0
 5570 000e C501     		.uleb128 .LEHB2-.LFB1743
 5571 0010 05       		.uleb128 .LEHE2-.LEHB2
 5572 0011 CE05     		.uleb128 .L247-.LFB1743
GAS LISTING /tmp/ccEa7iXV.s 			page 329


 5573 0013 00       		.uleb128 0
 5574 0014 8202     		.uleb128 .LEHB3-.LFB1743
 5575 0016 3A       		.uleb128 .LEHE3-.LEHB3
 5576 0017 8A01     		.uleb128 .L243-.LFB1743
 5577 0019 00       		.uleb128 0
 5578 001a C902     		.uleb128 .LEHB4-.LFB1743
 5579 001c 05       		.uleb128 .LEHE4-.LEHB4
 5580 001d 8006     		.uleb128 .L246-.LFB1743
 5581 001f 00       		.uleb128 0
 5582 0020 8603     		.uleb128 .LEHB5-.LFB1743
 5583 0022 3E       		.uleb128 .LEHE5-.LEHB5
 5584 0023 8A01     		.uleb128 .L243-.LFB1743
 5585 0025 00       		.uleb128 0
 5586 0026 D103     		.uleb128 .LEHB6-.LFB1743
 5587 0028 05       		.uleb128 .LEHE6-.LEHB6
 5588 0029 9906     		.uleb128 .L245-.LFB1743
 5589 002b 00       		.uleb128 0
 5590 002c 8E04     		.uleb128 .LEHB7-.LFB1743
 5591 002e 39       		.uleb128 .LEHE7-.LEHB7
 5592 002f 8A01     		.uleb128 .L243-.LFB1743
 5593 0031 00       		.uleb128 0
 5594 0032 D404     		.uleb128 .LEHB8-.LFB1743
 5595 0034 05       		.uleb128 .LEHE8-.LEHB8
 5596 0035 B206     		.uleb128 .L244-.LFB1743
 5597 0037 00       		.uleb128 0
 5598 0038 8D05     		.uleb128 .LEHB9-.LFB1743
 5599 003a 13       		.uleb128 .LEHE9-.LEHB9
 5600 003b 8A01     		.uleb128 .L243-.LFB1743
 5601 003d 00       		.uleb128 0
 5602 003e B005     		.uleb128 .LEHB10-.LFB1743
 5603 0040 1C       		.uleb128 .LEHE10-.LEHB10
 5604 0041 8E10     		.uleb128 .L241-.LFB1743
 5605 0043 00       		.uleb128 0
 5606 0044 FB05     		.uleb128 .LEHB11-.LFB1743
 5607 0046 05       		.uleb128 .LEHE11-.LEHB11
 5608 0047 00       		.uleb128 0
 5609 0048 00       		.uleb128 0
 5610 0049 E406     		.uleb128 .LEHB12-.LFB1743
 5611 004b 05       		.uleb128 .LEHE12-.LEHB12
 5612 004c 8E10     		.uleb128 .L241-.LFB1743
 5613 004e 00       		.uleb128 0
 5614 004f 8F07     		.uleb128 .LEHB13-.LFB1743
 5615 0051 41       		.uleb128 .LEHE13-.LEHB13
 5616 0052 A207     		.uleb128 .L248-.LFB1743
 5617 0054 00       		.uleb128 0
 5618 0055 DF07     		.uleb128 .LEHB14-.LFB1743
 5619 0057 05       		.uleb128 .LEHE14-.LEHB14
 5620 0058 980C     		.uleb128 .L252-.LFB1743
 5621 005a 00       		.uleb128 0
 5622 005b 9E08     		.uleb128 .LEHB15-.LFB1743
 5623 005d 3A       		.uleb128 .LEHE15-.LEHB15
 5624 005e A207     		.uleb128 .L248-.LFB1743
 5625 0060 00       		.uleb128 0
 5626 0061 E708     		.uleb128 .LEHB16-.LFB1743
 5627 0063 05       		.uleb128 .LEHE16-.LEHB16
 5628 0064 DE0C     		.uleb128 .L251-.LFB1743
 5629 0066 00       		.uleb128 0
GAS LISTING /tmp/ccEa7iXV.s 			page 330


 5630 0067 A609     		.uleb128 .LEHB17-.LFB1743
 5631 0069 3E       		.uleb128 .LEHE17-.LEHB17
 5632 006a A207     		.uleb128 .L248-.LFB1743
 5633 006c 00       		.uleb128 0
 5634 006d F309     		.uleb128 .LEHB18-.LFB1743
 5635 006f 05       		.uleb128 .LEHE18-.LEHB18
 5636 0070 F70C     		.uleb128 .L250-.LFB1743
 5637 0072 00       		.uleb128 0
 5638 0073 B20A     		.uleb128 .LEHB19-.LFB1743
 5639 0075 39       		.uleb128 .LEHE19-.LEHB19
 5640 0076 A207     		.uleb128 .L248-.LFB1743
 5641 0078 00       		.uleb128 0
 5642 0079 FA0A     		.uleb128 .LEHB20-.LFB1743
 5643 007b 05       		.uleb128 .LEHE20-.LEHB20
 5644 007c 900D     		.uleb128 .L249-.LFB1743
 5645 007e 00       		.uleb128 0
 5646 007f B50B     		.uleb128 .LEHB21-.LFB1743
 5647 0081 13       		.uleb128 .LEHE21-.LEHB21
 5648 0082 A207     		.uleb128 .L248-.LFB1743
 5649 0084 00       		.uleb128 0
 5650 0085 D50B     		.uleb128 .LEHB22-.LFB1743
 5651 0087 3E       		.uleb128 .LEHE22-.LEHB22
 5652 0088 AE0D     		.uleb128 .L242-.LFB1743
 5653 008a 00       		.uleb128 0
 5654 008b D90C     		.uleb128 .LEHB23-.LFB1743
 5655 008d 05       		.uleb128 .LEHE23-.LEHB23
 5656 008e 00       		.uleb128 0
 5657 008f 00       		.uleb128 0
 5658 0090 A90D     		.uleb128 .LEHB24-.LFB1743
 5659 0092 47       		.uleb128 .LEHE24-.LEHB24
 5660 0093 AE0D     		.uleb128 .L242-.LFB1743
 5661 0095 00       		.uleb128 0
 5662 0096 CC0E     		.uleb128 .LEHB25-.LFB1743
 5663 0098 71       		.uleb128 .LEHE25-.LEHB25
 5664 0099 00       		.uleb128 0
 5665 009a 00       		.uleb128 0
 5666              	.LLSDACSE1743:
 5667              		.text
 5670              	_GLOBAL__sub_I__Z15hasIntersectionPK8baselineS1_:
 5671              	.LFB2086:
 5672              		.loc 1 491 1 is_stmt 1 view -0
 5673              		.cfi_startproc
 5674 1216 4883EC08 		subq	$8, %rsp
 5675              		.cfi_def_cfa_offset 16
 5676              		.loc 1 491 1 is_stmt 0 view .LVU1498
 5677 121a BEFFFF00 		movl	$65535, %esi
 5677      00
 5678 121f BF010000 		movl	$1, %edi
 5678      00
 5679 1224 E8D7EDFF 		call	_Z41__static_initialization_and_destruction_0ii
 5679      FF
 5680              	.LVL417:
 5681 1229 4883C408 		addq	$8, %rsp
 5682              		.cfi_def_cfa_offset 8
 5683 122d C3       		ret
 5684              		.cfi_endproc
 5685              	.LFE2086:
GAS LISTING /tmp/ccEa7iXV.s 			page 331


 5687              		.section	.init_array,"aw"
 5688              		.align 8
 5689 0000 00000000 		.quad	_GLOBAL__sub_I__Z15hasIntersectionPK8baselineS1_
 5689      00000000 
 5690              		.local	_ZStL8__ioinit
 5691              		.comm	_ZStL8__ioinit,1,1
 5692              		.section	.rodata.cst4,"aM",@progbits,4
 5693              		.align 4
 5694              	.LC0:
 5695 0000 00000000 		.long	0
 5696              		.section	.rodata.cst16,"aM",@progbits,16
 5697              		.align 16
 5698              	.LC1:
 5699 0000 FFFFFF7F 		.long	2147483647
 5700 0004 00000000 		.long	0
 5701 0008 00000000 		.long	0
 5702 000c 00000000 		.long	0
 5703              		.section	.rodata.cst8,"aM",@progbits,8
 5704              		.align 8
 5705              	.LC2:
 5706 0000 00000000 		.long	0
 5707 0004 0000F03F 		.long	1072693248
 5708              		.align 8
 5709              	.LC3:
 5710 0008 00000000 		.long	0
 5711 000c 00000000 		.long	0
 5712              		.section	.rodata.cst4
 5713              		.align 4
 5714              	.LC4:
 5715 0004 0000803F 		.long	1065353216
 5716              		.section	.rodata.cst8
 5717              		.align 8
 5718              	.LC5:
 5719 0010 9A999999 		.long	2576980378
 5720 0014 9999D93F 		.long	1071225241
 5721              		.align 8
 5722              	.LC6:
 5723 0018 00000000 		.long	0
 5724 001c 00000040 		.long	1073741824
 5725              		.text
 5726              	.Letext0:
 5727              		.file 17 "/usr/include/c++/9.2.0/cwchar"
 5728              		.file 18 "/usr/include/c++/9.2.0/new"
 5729              		.file 19 "/usr/include/c++/9.2.0/bits/exception_ptr.h"
 5730              		.file 20 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/c++config.h"
 5731              		.file 21 "/usr/include/c++/9.2.0/type_traits"
 5732              		.file 22 "/usr/include/c++/9.2.0/bits/stl_pair.h"
 5733              		.file 23 "/usr/include/c++/9.2.0/bits/cpp_type_traits.h"
 5734              		.file 24 "/usr/include/c++/9.2.0/bits/stl_iterator_base_types.h"
 5735              		.file 25 "/usr/include/c++/9.2.0/debug/debug.h"
 5736              		.file 26 "/usr/include/c++/9.2.0/cstdint"
 5737              		.file 27 "/usr/include/c++/9.2.0/clocale"
 5738              		.file 28 "/usr/include/c++/9.2.0/cstdlib"
 5739              		.file 29 "/usr/include/c++/9.2.0/cstdio"
 5740              		.file 30 "/usr/include/c++/9.2.0/initializer_list"
 5741              		.file 31 "/usr/include/c++/9.2.0/bits/stringfwd.h"
 5742              		.file 32 "/usr/include/c++/9.2.0/system_error"
GAS LISTING /tmp/ccEa7iXV.s 			page 332


 5743              		.file 33 "/usr/include/c++/9.2.0/bits/ios_base.h"
 5744              		.file 34 "/usr/include/c++/9.2.0/cwctype"
 5745              		.file 35 "/usr/include/c++/9.2.0/bits/ostream.tcc"
 5746              		.file 36 "/usr/include/c++/9.2.0/iosfwd"
 5747              		.file 37 "/usr/include/c++/9.2.0/bits/ptr_traits.h"
 5748              		.file 38 "/usr/include/c++/9.2.0/bits/move.h"
 5749              		.file 39 "/usr/include/c++/9.2.0/bits/functexcept.h"
 5750              		.file 40 "/usr/include/c++/9.2.0/bits/ostream_insert.h"
 5751              		.file 41 "/usr/include/c++/9.2.0/bits/predefined_ops.h"
 5752              		.file 42 "/usr/include/c++/9.2.0/ext/numeric_traits.h"
 5753              		.file 43 "/usr/include/c++/9.2.0/ext/alloc_traits.h"
 5754              		.file 44 "/usr/include/c++/9.2.0/bits/stl_iterator.h"
 5755              		.file 45 "/usr/include/c++/9.2.0/ext/type_traits.h"
 5756              		.file 46 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/stddef.h"
 5757              		.file 47 "<built-in>"
 5758              		.file 48 "/usr/include/bits/types/wint_t.h"
 5759              		.file 49 "/usr/include/bits/types/__mbstate_t.h"
 5760              		.file 50 "/usr/include/bits/types/mbstate_t.h"
 5761              		.file 51 "/usr/include/bits/types/__FILE.h"
 5762              		.file 52 "/usr/include/bits/types/struct_FILE.h"
 5763              		.file 53 "/usr/include/bits/types/FILE.h"
 5764              		.file 54 "/usr/include/wchar.h"
 5765              		.file 55 "/usr/include/bits/types/struct_tm.h"
 5766              		.file 56 "/usr/include/bits/types.h"
 5767              		.file 57 "/usr/include/bits/stdint-intn.h"
 5768              		.file 58 "/usr/include/bits/stdint-uintn.h"
 5769              		.file 59 "/usr/include/stdint.h"
 5770              		.file 60 "/usr/include/locale.h"
 5771              		.file 61 "/usr/include/time.h"
 5772              		.file 62 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 5773              		.file 63 "/usr/include/stdlib.h"
 5774              		.file 64 "/usr/include/bits/stdlib-float.h"
 5775              		.file 65 "/usr/include/bits/stdlib-bsearch.h"
 5776              		.file 66 "/usr/include/bits/types/__fpos_t.h"
 5777              		.file 67 "/usr/include/stdio.h"
 5778              		.file 68 "/usr/include/bits/sys_errlist.h"
 5779              		.file 69 "/usr/include/bits/stdio.h"
 5780              		.file 70 "/usr/include/errno.h"
 5781              		.file 71 "/usr/include/bits/wctype-wchar.h"
 5782              		.file 72 "/usr/include/wctype.h"
 5783              		.file 73 "/usr/include/math.h"
 5784              		.file 74 "/usr/include/c++/9.2.0/math.h"
 5785              		.file 75 "/usr/include/bits/mathcalls.h"
 46706              		.align 8
 46709              	DW.ref.__gxx_personality_v0:
 46710 0000 00000000 		.quad	__gxx_personality_v0
 46710      00000000 
 46711              		.hidden	__dso_handle
 46712              		.ident	"GCC: (GNU) 9.2.0"
 46713              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccEa7iXV.s 			page 333


DEFINED SYMBOLS
                            *ABS*:0000000000000000 findwayBases.cpp
     /tmp/ccEa7iXV.s:5      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000000 _ZStL8__ioinit
     /tmp/ccEa7iXV.s:45     .text:000000000000003d _Z15hasIntersectionPK8baselineS1_
     /tmp/ccEa7iXV.s:65     .text:0000000000000050 _Z15getIntersectionPK8baselineS1_
     /tmp/ccEa7iXV.s:220    .text:0000000000000140 _Z15isCoDirectionalPK4vectPK6coords
     /tmp/ccEa7iXV.s:297    .text:00000000000001c5 _Z11isDotInsidePK6coordsPK8obstacle
     /tmp/ccEa7iXV.s:352    .text:0000000000000219 _Z14vectToBaselinePK4vect
     /tmp/ccEa7iXV.s:405    .text:0000000000000265 _Z6getLenPK6coordsS1_
     /tmp/ccEa7iXV.s:455    .text:0000000000000291 _Z6getLenPK4vect
     /tmp/ccEa7iXV.s:494    .text:00000000000002b5 _Z15getIntersectionPK8obstaclePK4vect
     /tmp/ccEa7iXV.s:973    .text:00000000000006a4 _Z12createCoordsff
     /tmp/ccEa7iXV.s:1001   .text:00000000000006bc _Z17getCoordsOfCornerPK8obstacleh
     /tmp/ccEa7iXV.s:1165   .text:00000000000007e9 _Z14createObstaclefff
     /tmp/ccEa7iXV.s:1275   .text:0000000000000889 _Z8getPointPK8obstacleh
     /tmp/ccEa7iXV.s:1292   .text:0000000000000893 _Z15hasIntersectionPK8obstaclePK4vect
     /tmp/ccEa7iXV.s:1406   .text:0000000000000931 _Z11getWayPriceP10graphPointS0_
     /tmp/ccEa7iXV.s:1489   .text:0000000000000997 _Z11getWayPriceP6coordsS0_
     /tmp/ccEa7iXV.s:1578   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
     /tmp/ccEa7iXV.s:1813   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
     /tmp/ccEa7iXV.s:2043   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
     /tmp/ccEa7iXV.s:2245   .text:00000000000009fb _Z9addTargetP10graphPointS0_
     /tmp/ccEa7iXV.s:46709  .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccEa7iXV.s:5670   .text:0000000000001216 _GLOBAL__sub_I__Z15hasIntersectionPK8baselineS1_
     /tmp/ccEa7iXV.s:5698   .rodata.cst16:0000000000000000 .LC1
     /tmp/ccEa7iXV.s:5705   .rodata.cst8:0000000000000000 .LC2
     /tmp/ccEa7iXV.s:5709   .rodata.cst8:0000000000000008 .LC3
     /tmp/ccEa7iXV.s:5694   .rodata.cst4:0000000000000000 .LC0
     /tmp/ccEa7iXV.s:5714   .rodata.cst4:0000000000000004 .LC4
     /tmp/ccEa7iXV.s:5718   .rodata.cst8:0000000000000010 .LC5
     /tmp/ccEa7iXV.s:5722   .rodata.cst8:0000000000000018 .LC6
     /tmp/ccEa7iXV.s:2214   .rodata.str1.1:0000000000000000 .LC8
     /tmp/ccEa7iXV.s:2216   .rodata.str1.1:0000000000000005 .LC9
     /tmp/ccEa7iXV.s:2220   .rodata.str1.1:000000000000001b .LC11
     /tmp/ccEa7iXV.s:2218   .rodata.str1.1:0000000000000006 .LC10
     /tmp/ccEa7iXV.s:2222   .rodata.str1.1:0000000000000023 .LC12
     /tmp/ccEa7iXV.s:2224   .rodata.str1.1:0000000000000027 .LC13
     /tmp/ccEa7iXV.s:2226   .rodata.str1.1:000000000000002f .LC14
     /tmp/ccEa7iXV.s:2228   .rodata.str1.1:0000000000000032 .LC15
     /tmp/ccEa7iXV.s:2230   .rodata.str1.1:000000000000003d .LC16
     /tmp/ccEa7iXV.s:2232   .rodata.str1.1:0000000000000040 .LC17
     /tmp/ccEa7iXV.s:2234   .rodata.str1.1:0000000000000046 .LC18
     /tmp/ccEa7iXV.s:2236   .rodata.str1.1:0000000000000048 .LC19
     /tmp/ccEa7iXV.s:2238   .rodata.str1.1:000000000000004d .LC20
     /tmp/ccEa7iXV.s:2240   .rodata.str1.1:0000000000000051 .LC21
     /tmp/ccEa7iXV.s:1572   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.8:0000000000000000 .LC7

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
sqrtf
__stack_chk_fail
malloc
GAS LISTING /tmp/ccEa7iXV.s 			page 334


pow
sqrt
memcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
_ZSt4cout
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
_ZSt20__throw_length_errorPKc
vsnprintf
_ZdlPv
_Unwind_Resume
_ZNSo3putEc
_ZSt16__throw_bad_castv
_ZNKSt5ctypeIcE13_M_widen_initEv
_ZNSo5flushEv
realloc
__gxx_personality_v0
