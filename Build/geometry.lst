GAS LISTING /tmp/ccQVJrVe.s 			page 1


   1              		.file	"geometry.cpp"
   2              		.text
   3              	.Ltext0:
   5              	_Z41__static_initialization_and_destruction_0ii:
   6              	.LVL0:
   7              	.LFB2060:
   8              		.file 1 "Src/geometry.cpp"
   1:Src/geometry.cpp **** #include "geometry.hpp"
   2:Src/geometry.cpp **** #include <stdint.h>
   3:Src/geometry.cpp **** #include "bases.hpp"
   4:Src/geometry.cpp **** 
   5:Src/geometry.cpp **** namespace geometry
   6:Src/geometry.cpp **** {
   7:Src/geometry.cpp **** 	using namespace bases;
   8:Src/geometry.cpp **** 
   9:Src/geometry.cpp ****     struct vect createVect(const struct coords *c, const COORDS_DATATYPE angle)
  10:Src/geometry.cpp ****     {
  11:Src/geometry.cpp ****         struct vect ret;
  12:Src/geometry.cpp ****         ret.c  = (struct coords*)malloc(sizeof(struct coords));
  13:Src/geometry.cpp ****         ret.c->x = c->x;
  14:Src/geometry.cpp ****         ret.c->y = c->y;
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  16:Src/geometry.cpp ****         ret.dy = ret.dx * tan(angle / 180.0 * PI);
  17:Src/geometry.cpp ****         ret.dx = abs(ret.dx);
  18:Src/geometry.cpp ****         ret.dy = abs(ret.dy);
  19:Src/geometry.cpp ****         if(angle > 180 || angle < 0)
  20:Src/geometry.cpp ****             ret.dy *= -1;
  21:Src/geometry.cpp **** 
  22:Src/geometry.cpp ****         if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
  23:Src/geometry.cpp ****             ret.dx *= -1;
  24:Src/geometry.cpp ****         return ret;
  25:Src/geometry.cpp ****     }
  26:Src/geometry.cpp **** 
  27:Src/geometry.cpp **** 
  28:Src/geometry.cpp ****     struct vect createVect(const struct coords *start, const struct coords *end)
  29:Src/geometry.cpp ****     {
  30:Src/geometry.cpp ****         struct vect ret;
  31:Src/geometry.cpp ****         ret.c = (struct coords*)malloc(sizeof(struct coords));
  32:Src/geometry.cpp ****         ret.c->x = start->x;
  33:Src/geometry.cpp ****         ret.c->y = start->y;
  34:Src/geometry.cpp ****         ret.dx = end->x - start->x;
  35:Src/geometry.cpp ****         ret.dy = end->y - start->y;
  36:Src/geometry.cpp ****         return ret;
  37:Src/geometry.cpp ****     }
  38:Src/geometry.cpp **** 
  39:Src/geometry.cpp ****     struct vect createVect(const struct obstacle *obst, const uint8_t corner, const COORDS_DATATYPE
  40:Src/geometry.cpp ****     {
  41:Src/geometry.cpp ****         struct vect ret;
  42:Src/geometry.cpp ****         struct coords *c = getCoordsOfCorner(obst, corner);
  43:Src/geometry.cpp ****         ret = createVect(c, angle);
  44:Src/geometry.cpp ****         free(c);
  45:Src/geometry.cpp ****         return ret;
  46:Src/geometry.cpp ****     }
  47:Src/geometry.cpp **** 
  48:Src/geometry.cpp ****     bool hasIntersections(const struct vect *v)
  49:Src/geometry.cpp ****     {
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
GAS LISTING /tmp/ccQVJrVe.s 			page 2


  51:Src/geometry.cpp ****         {
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
  53:Src/geometry.cpp ****                 return true;
  54:Src/geometry.cpp ****         }
  55:Src/geometry.cpp ****         return false;
  56:Src/geometry.cpp ****     }
  57:Src/geometry.cpp **** 
  58:Src/geometry.cpp ****     #define CONST 0.4
  59:Src/geometry.cpp **** 
  60:Src/geometry.cpp ****     bool isDotInside(const struct coords *c)
  61:Src/geometry.cpp ****     {
  62:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
  63:Src/geometry.cpp ****         {
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
  65:Src/geometry.cpp ****             &&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
  66:Src/geometry.cpp ****             &&  (c->y - CONST > obstacles[i].c->y)
  67:Src/geometry.cpp ****             &&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
  68:Src/geometry.cpp ****                 return true;
  69:Src/geometry.cpp ****         }
  70:Src/geometry.cpp ****         return false;
  71:Src/geometry.cpp ****     }
  72:Src/geometry.cpp **** 
  73:Src/geometry.cpp ****     #undef CONST
  74:Src/geometry.cpp **** 
  75:Src/geometry.cpp **** 
  76:Src/geometry.cpp **** 
  77:Src/geometry.cpp ****     struct coords getCoordsOfPoint(struct graphPoint *p)
  78:Src/geometry.cpp ****     {
  79:Src/geometry.cpp ****         return (p->c);
  80:Src/geometry.cpp ****     }
  81:Src/geometry.cpp **** 
  82:Src/geometry.cpp ****     bool            hasIntersection(const struct obstacle *obst, const struct vect *v)
  83:Src/geometry.cpp ****     {
  84:Src/geometry.cpp ****         struct coords c = getIntersection(obst, v);
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
  86:Src/geometry.cpp ****             return false;
  87:Src/geometry.cpp ****         else
  88:Src/geometry.cpp ****             return true;
  89:Src/geometry.cpp ****     }
  90:Src/geometry.cpp **** 
  91:Src/geometry.cpp **** 
  92:Src/geometry.cpp ****     bool            hasIntersection(const struct baseline *b1,  const struct baseline *b2)
  93:Src/geometry.cpp ****     {
  94:Src/geometry.cpp ****         return b1->k != b2->k;
  95:Src/geometry.cpp ****     }
  96:Src/geometry.cpp **** 
  97:Src/geometry.cpp ****     struct coords   getIntersection(const struct baseline *b1, const struct baseline *b2)
  98:Src/geometry.cpp ****     {
  99:Src/geometry.cpp ****         struct coords ret;
 100:Src/geometry.cpp ****         if(b1->k == b2->k)
 101:Src/geometry.cpp ****             ret = {0, 0};
 102:Src/geometry.cpp ****         else 
 103:Src/geometry.cpp ****         {
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 105:Src/geometry.cpp ****             {
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
GAS LISTING /tmp/ccQVJrVe.s 			page 3


 108:Src/geometry.cpp ****             }
 109:Src/geometry.cpp ****             else if(abs(b1->k) == INF)
 110:Src/geometry.cpp ****             {
 111:Src/geometry.cpp ****                 ret.x = b1->b;
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 113:Src/geometry.cpp ****             }
 114:Src/geometry.cpp ****             else
 115:Src/geometry.cpp ****             {
 116:Src/geometry.cpp ****                 ret.x = b2->b;
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 118:Src/geometry.cpp ****             }
 119:Src/geometry.cpp ****         }
 120:Src/geometry.cpp **** 
 121:Src/geometry.cpp ****         return ret;
 122:Src/geometry.cpp ****     }
 123:Src/geometry.cpp **** 
 124:Src/geometry.cpp ****     bool isCoDirectional(const struct vect *v, const struct coords *c)
 125:Src/geometry.cpp ****     {
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 127:Src/geometry.cpp ****     }
 128:Src/geometry.cpp **** 
 129:Src/geometry.cpp **** 
 130:Src/geometry.cpp ****     struct coords   getIntersection(const struct obstacle *obst, const struct vect *v)
 131:Src/geometry.cpp ****     {
 132:Src/geometry.cpp ****         struct coords inter1, inter2, tgt;
 133:Src/geometry.cpp ****         tgt = {(v->dx + v->c->x), (v->dy + v->c->y)};
 134:Src/geometry.cpp ****         struct baseline b1,
 135:Src/geometry.cpp ****                         b2;
 136:Src/geometry.cpp ****         COORDS_DATATYPE l1 = 0, l2 = 0, lv = 0;
 137:Src/geometry.cpp **** 
 138:Src/geometry.cpp ****         lv = getLen(v);
 139:Src/geometry.cpp **** 
 140:Src/geometry.cpp ****         b1 = vectToBaseline(v);
 141:Src/geometry.cpp **** 
 142:Src/geometry.cpp ****         b2.k = INF;
 143:Src/geometry.cpp ****         b2.b = obst->c->x;
 144:Src/geometry.cpp **** 
 145:Src/geometry.cpp ****         inter1 = getIntersection(&b1, &b2);
 146:Src/geometry.cpp ****         if(isDotInside(&inter1, obst))
 147:Src/geometry.cpp ****         {
 148:Src/geometry.cpp ****             l1 = getLen(v->c, &inter1);
 149:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 150:Src/geometry.cpp ****             {
 151:Src/geometry.cpp ****                 l1 = 0;
 152:Src/geometry.cpp ****                 inter1 = {0, 0};
 153:Src/geometry.cpp ****             }
 154:Src/geometry.cpp ****         }
 155:Src/geometry.cpp ****         else
 156:Src/geometry.cpp ****         {
 157:Src/geometry.cpp ****             l1 = 0;
 158:Src/geometry.cpp ****             inter1 = {0, 0};
 159:Src/geometry.cpp ****         }
 160:Src/geometry.cpp **** 
 161:Src/geometry.cpp ****         b2.b += obst->a;
 162:Src/geometry.cpp **** 
 163:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 164:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
GAS LISTING /tmp/ccQVJrVe.s 			page 4


 165:Src/geometry.cpp ****         {
 166:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 167:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 168:Src/geometry.cpp ****             {
 169:Src/geometry.cpp ****                 inter2 = {0, 0};
 170:Src/geometry.cpp ****                 l2 = 0;
 171:Src/geometry.cpp ****             }
 172:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 173:Src/geometry.cpp ****             {
 174:Src/geometry.cpp ****                 inter1 = inter2;
 175:Src/geometry.cpp ****                 l1 = l2;
 176:Src/geometry.cpp ****                 l2 = 0;
 177:Src/geometry.cpp ****                 inter2 = {0, 0};
 178:Src/geometry.cpp ****             }
 179:Src/geometry.cpp ****             else
 180:Src/geometry.cpp ****             {
 181:Src/geometry.cpp ****                 l2 = 0;
 182:Src/geometry.cpp ****                 inter2 = {0, 0};
 183:Src/geometry.cpp ****             }
 184:Src/geometry.cpp ****         }
 185:Src/geometry.cpp ****         else
 186:Src/geometry.cpp ****         {
 187:Src/geometry.cpp ****             l2 = 0;
 188:Src/geometry.cpp ****             inter2 = {0, 0};
 189:Src/geometry.cpp ****         }
 190:Src/geometry.cpp **** 
 191:Src/geometry.cpp **** 
 192:Src/geometry.cpp ****         b2.k = 0;
 193:Src/geometry.cpp ****         b2.b = obst->c->y;
 194:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 195:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 196:Src/geometry.cpp ****         {
 197:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 198:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 199:Src/geometry.cpp ****             {
 200:Src/geometry.cpp ****                 inter2 = {0, 0};
 201:Src/geometry.cpp ****                 l2 = 0;
 202:Src/geometry.cpp ****             }
 203:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 204:Src/geometry.cpp ****             {
 205:Src/geometry.cpp ****                 inter1 = inter2;
 206:Src/geometry.cpp ****                 l1 = l2;
 207:Src/geometry.cpp ****                 l2 = 0;
 208:Src/geometry.cpp ****                 inter2 = {0, 0};
 209:Src/geometry.cpp ****             }
 210:Src/geometry.cpp ****             else
 211:Src/geometry.cpp ****             {
 212:Src/geometry.cpp ****                 l2 = 0;
 213:Src/geometry.cpp ****                 inter2 = {0, 0};
 214:Src/geometry.cpp ****             }
 215:Src/geometry.cpp ****         }
 216:Src/geometry.cpp ****         else
 217:Src/geometry.cpp ****         {
 218:Src/geometry.cpp ****             l2 = 0;
 219:Src/geometry.cpp ****             inter2 = {0, 0};
 220:Src/geometry.cpp ****         }
 221:Src/geometry.cpp **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 5


 222:Src/geometry.cpp ****         
 223:Src/geometry.cpp ****         b2.b += obst->b;
 224:Src/geometry.cpp **** 
 225:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 226:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 227:Src/geometry.cpp ****         {
 228:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 229:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 230:Src/geometry.cpp ****             {
 231:Src/geometry.cpp ****                 inter2 = {0, 0};
 232:Src/geometry.cpp ****                 l2 = 0;
 233:Src/geometry.cpp ****             }
 234:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 235:Src/geometry.cpp ****             {
 236:Src/geometry.cpp ****                 inter1 = inter2;
 237:Src/geometry.cpp ****                 l1 = l2;
 238:Src/geometry.cpp ****                 l2 = 0;
 239:Src/geometry.cpp ****                 inter2 = {0, 0};
 240:Src/geometry.cpp ****             }
 241:Src/geometry.cpp ****             else
 242:Src/geometry.cpp ****             {
 243:Src/geometry.cpp ****                 l2 = 0;
 244:Src/geometry.cpp ****                 inter2 = {0, 0};
 245:Src/geometry.cpp ****             }
 246:Src/geometry.cpp ****         }
 247:Src/geometry.cpp ****         else
 248:Src/geometry.cpp ****         {
 249:Src/geometry.cpp ****             l2 = 0;
 250:Src/geometry.cpp ****             inter2 = {0, 0};
 251:Src/geometry.cpp ****         }
 252:Src/geometry.cpp **** 
 253:Src/geometry.cpp ****         return inter1;
 254:Src/geometry.cpp ****     }
 255:Src/geometry.cpp **** 
 256:Src/geometry.cpp **** 
 257:Src/geometry.cpp **** 
 258:Src/geometry.cpp **** 
 259:Src/geometry.cpp ****     bool            isDotInside(const struct coords *dot, const struct obstacle *obstacle)
 260:Src/geometry.cpp ****     {
 261:Src/geometry.cpp ****         return      (dot->x >= obstacle->c->x)
 262:Src/geometry.cpp ****                 &&  (dot->x <= obstacle->c->x + obstacle->a)
 263:Src/geometry.cpp ****                 &&  (dot->y >= obstacle->c->y)
 264:Src/geometry.cpp ****                 &&  (dot->y <= obstacle->c->y + obstacle->b);
 265:Src/geometry.cpp ****     }
 266:Src/geometry.cpp **** 
 267:Src/geometry.cpp ****     struct baseline vectToBaseline(const struct vect *v)
 268:Src/geometry.cpp ****     {
 269:Src/geometry.cpp ****         struct baseline ret;
 270:Src/geometry.cpp **** 
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 272:Src/geometry.cpp **** 
 273:Src/geometry.cpp ****         if(v->dx != 0)
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 275:Src/geometry.cpp ****         else
 276:Src/geometry.cpp ****             ret.b = v->c->x;
 277:Src/geometry.cpp **** 
 278:Src/geometry.cpp ****         return ret;
GAS LISTING /tmp/ccQVJrVe.s 			page 6


 279:Src/geometry.cpp ****     }
 280:Src/geometry.cpp **** 
 281:Src/geometry.cpp ****     COORDS_DATATYPE getLen(const struct coords *c1, const struct coords *c2)
 282:Src/geometry.cpp ****     {
 283:Src/geometry.cpp ****         COORDS_DATATYPE lx = c1->x - c2->x,
 284:Src/geometry.cpp ****                         ly = c1->y - c2->y,
 285:Src/geometry.cpp ****                         l  = sqrt(sqr(lx) + sqr(ly));
 286:Src/geometry.cpp **** 
 287:Src/geometry.cpp ****         return l;
 288:Src/geometry.cpp ****     }
 289:Src/geometry.cpp **** 
 290:Src/geometry.cpp ****     COORDS_DATATYPE getLen(const struct vect *v)
 291:Src/geometry.cpp ****     {
 292:Src/geometry.cpp ****         COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 293:Src/geometry.cpp ****         return l;
 294:Src/geometry.cpp ****     }
 295:Src/geometry.cpp **** 
 296:Src/geometry.cpp ****     #define CONST 0.4
 297:Src/geometry.cpp **** 
 298:Src/geometry.cpp ****     struct coords*  getCoordsOfCorner(const struct obstacle *obst, const uint8_t corner)
 299:Src/geometry.cpp ****     {
 300:Src/geometry.cpp ****         struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 301:Src/geometry.cpp ****         switch (corner) {
 302:Src/geometry.cpp ****             case CORNER_LEFT_BOT:
 303:Src/geometry.cpp ****             {
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 305:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 306:Src/geometry.cpp ****                 break;
 307:Src/geometry.cpp ****             }
 308:Src/geometry.cpp ****             case CORNER_LEFT_TOP:
 309:Src/geometry.cpp ****             {
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 312:Src/geometry.cpp ****                 break;
 313:Src/geometry.cpp ****             }
 314:Src/geometry.cpp ****             case CORNER_RIGHT_BOT:
 315:Src/geometry.cpp ****             {
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 317:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 318:Src/geometry.cpp ****                 break;
 319:Src/geometry.cpp ****             }
 320:Src/geometry.cpp ****             case CORNER_RIGHT_TOP:
 321:Src/geometry.cpp ****             {
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 324:Src/geometry.cpp ****                 break;
 325:Src/geometry.cpp ****             }
 326:Src/geometry.cpp ****         }
 327:Src/geometry.cpp ****         return ret;
 328:Src/geometry.cpp ****     }
 329:Src/geometry.cpp **** 
 330:Src/geometry.cpp **** 
 331:Src/geometry.cpp ****     struct graphPoint* getPoint(const struct obstacle *obst, const uint8_t corner)
 332:Src/geometry.cpp ****     {
 333:Src/geometry.cpp ****         return obst->corners[corner];
 334:Src/geometry.cpp ****     }
 335:Src/geometry.cpp **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 7


 336:Src/geometry.cpp **** 
 337:Src/geometry.cpp **** }...
   9              		.loc 1 337 1 view -0
  10              		.cfi_startproc
  11              		.loc 1 337 1 is_stmt 0 view .LVU1
  12 0000 83FF01   		cmpl	$1, %edi
  13 0003 7401     		je	.L7
  14              	.L4:
  15 0005 C3       		ret
  16              	.L7:
  17              		.loc 1 337 1 discriminator 1 view .LVU2
  18 0006 81FEFFFF 		cmpl	$65535, %esi
  18      0000
  19 000c 75F7     		jne	.L4
  20              		.loc 1 337 1 view .LVU3
  21 000e 4883EC08 		subq	$8, %rsp
  22              		.cfi_def_cfa_offset 16
  23              		.file 2 "/usr/include/c++/9.2.0/iostream"
   1:/usr/include/c++/9.2.0/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/9.2.0/iostream **** 
   3:/usr/include/c++/9.2.0/iostream **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/iostream **** //
   5:/usr/include/c++/9.2.0/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/iostream **** // any later version.
  10:/usr/include/c++/9.2.0/iostream **** 
  11:/usr/include/c++/9.2.0/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/iostream **** 
  16:/usr/include/c++/9.2.0/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/iostream **** 
  20:/usr/include/c++/9.2.0/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/iostream **** 
  25:/usr/include/c++/9.2.0/iostream **** /** @file include/iostream
  26:/usr/include/c++/9.2.0/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/9.2.0/iostream ****  */
  28:/usr/include/c++/9.2.0/iostream **** 
  29:/usr/include/c++/9.2.0/iostream **** //
  30:/usr/include/c++/9.2.0/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/9.2.0/iostream **** //
  32:/usr/include/c++/9.2.0/iostream **** 
  33:/usr/include/c++/9.2.0/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/9.2.0/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/9.2.0/iostream **** 
  36:/usr/include/c++/9.2.0/iostream **** #pragma GCC system_header
  37:/usr/include/c++/9.2.0/iostream **** 
  38:/usr/include/c++/9.2.0/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/9.2.0/iostream **** #include <ostream>
GAS LISTING /tmp/ccQVJrVe.s 			page 8


  40:/usr/include/c++/9.2.0/iostream **** #include <istream>
  41:/usr/include/c++/9.2.0/iostream **** 
  42:/usr/include/c++/9.2.0/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/9.2.0/iostream **** {
  44:/usr/include/c++/9.2.0/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/9.2.0/iostream **** 
  46:/usr/include/c++/9.2.0/iostream ****   /**
  47:/usr/include/c++/9.2.0/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/9.2.0/iostream ****    *
  49:/usr/include/c++/9.2.0/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/9.2.0/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/9.2.0/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/9.2.0/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/9.2.0/iostream ****    *
  54:/usr/include/c++/9.2.0/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/9.2.0/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/9.2.0/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/9.2.0/iostream ****    *  manual linked to above.
  58:/usr/include/c++/9.2.0/iostream ****   */
  59:/usr/include/c++/9.2.0/iostream ****   //@{
  60:/usr/include/c++/9.2.0/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/9.2.0/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/9.2.0/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/9.2.0/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/9.2.0/iostream **** 
  65:/usr/include/c++/9.2.0/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/9.2.0/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/9.2.0/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/9.2.0/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/9.2.0/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/9.2.0/iostream **** #endif
  71:/usr/include/c++/9.2.0/iostream ****   //@}
  72:/usr/include/c++/9.2.0/iostream **** 
  73:/usr/include/c++/9.2.0/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/9.2.0/iostream ****   static ios_base::Init __ioinit;
  24              		.loc 2 74 25 view .LVU4
  25 0012 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
  25      000000
  26              	.LVL1:
  27              		.loc 2 74 25 view .LVU5
  28 0019 E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
  28      00
  29              	.LVL2:
  30              		.loc 2 74 25 view .LVU6
  31 001e 488D1500 		leaq	__dso_handle(%rip), %rdx
  31      000000
  32 0025 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
  32      000000
  33 002c 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
  33      000000
  34 0033 E8000000 		call	__cxa_atexit@PLT
  34      00
  35              	.LVL3:
  36              		.loc 1 337 1 view .LVU7
  37 0038 4883C408 		addq	$8, %rsp
  38              		.cfi_def_cfa_offset 8
  39 003c C3       		ret
GAS LISTING /tmp/ccQVJrVe.s 			page 9


  40              		.cfi_endproc
  41              	.LFE2060:
  43              		.globl	_ZN8geometry10createVectEPKN5bases6coordsEf
  45              	_ZN8geometry10createVectEPKN5bases6coordsEf:
  46              	.LVL4:
  47              	.LFB1721:
  10:Src/geometry.cpp ****     {
  48              		.loc 1 10 5 is_stmt 1 view -0
  49              		.cfi_startproc
  10:Src/geometry.cpp ****     {
  50              		.loc 1 10 5 is_stmt 0 view .LVU9
  51 003d 55       		pushq	%rbp
  52              		.cfi_def_cfa_offset 16
  53              		.cfi_offset 6, -16
  54 003e 53       		pushq	%rbx
  55              		.cfi_def_cfa_offset 24
  56              		.cfi_offset 3, -24
  57 003f 4883EC18 		subq	$24, %rsp
  58              		.cfi_def_cfa_offset 48
  59 0043 4889FD   		movq	%rdi, %rbp
  60 0046 F30F1144 		movss	%xmm0, 12(%rsp)
  60      240C
  11:Src/geometry.cpp ****         struct vect ret;
  61              		.loc 1 11 9 is_stmt 1 view .LVU10
  12:Src/geometry.cpp ****         ret.c  = (struct coords*)malloc(sizeof(struct coords));
  62              		.loc 1 12 9 view .LVU11
  12:Src/geometry.cpp ****         ret.c  = (struct coords*)malloc(sizeof(struct coords));
  63              		.loc 1 12 40 is_stmt 0 view .LVU12
  64 004c BF080000 		movl	$8, %edi
  64      00
  65              	.LVL5:
  12:Src/geometry.cpp ****         ret.c  = (struct coords*)malloc(sizeof(struct coords));
  66              		.loc 1 12 40 view .LVU13
  67 0051 E8000000 		call	malloc@PLT
  67      00
  68              	.LVL6:
  12:Src/geometry.cpp ****         ret.c  = (struct coords*)malloc(sizeof(struct coords));
  69              		.loc 1 12 40 view .LVU14
  70 0056 4889C3   		movq	%rax, %rbx
  13:Src/geometry.cpp ****         ret.c->x = c->x;
  71              		.loc 1 13 9 is_stmt 1 view .LVU15
  13:Src/geometry.cpp ****         ret.c->x = c->x;
  72              		.loc 1 13 23 is_stmt 0 view .LVU16
  73 0059 F30F1045 		movss	0(%rbp), %xmm0
  73      00
  13:Src/geometry.cpp ****         ret.c->x = c->x;
  74              		.loc 1 13 18 view .LVU17
  75 005e F30F1100 		movss	%xmm0, (%rax)
  14:Src/geometry.cpp ****         ret.c->y = c->y;
  76              		.loc 1 14 9 is_stmt 1 view .LVU18
  14:Src/geometry.cpp ****         ret.c->y = c->y;
  77              		.loc 1 14 23 is_stmt 0 view .LVU19
  78 0062 F30F1045 		movss	4(%rbp), %xmm0
  78      04
  14:Src/geometry.cpp ****         ret.c->y = c->y;
  79              		.loc 1 14 18 view .LVU20
  80 0067 F30F1140 		movss	%xmm0, 4(%rax)
GAS LISTING /tmp/ccQVJrVe.s 			page 10


  80      04
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  81              		.loc 1 15 9 is_stmt 1 view .LVU21
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  82              		.loc 1 15 45 is_stmt 0 view .LVU22
  83 006c 660FEFC0 		pxor	%xmm0, %xmm0
  84 0070 F30F5A44 		cvtss2sd	12(%rsp), %xmm0
  84      240C
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  85              		.loc 1 15 51 view .LVU23
  86 0076 F20F5E05 		divsd	.LC0(%rip), %xmm0
  86      00000000 
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  87              		.loc 1 15 44 view .LVU24
  88 007e F20F5905 		mulsd	.LC1(%rip), %xmm0
  88      00000000 
  89 0086 E8000000 		call	tan@PLT
  89      00
  90              	.LVL7:
  15:Src/geometry.cpp ****         ret.dx = FIELD_MAX_LEN * 10.0 / tan(angle / 180.0 * PI);
  91              		.loc 1 15 39 view .LVU25
  92 008b F20F100D 		movsd	.LC2(%rip), %xmm1
  92      00000000 
  93 0093 F20F5EC8 		divsd	%xmm0, %xmm1
  94 0097 F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
  16:Src/geometry.cpp ****         ret.dy = ret.dx * tan(angle / 180.0 * PI);
  95              		.loc 1 16 9 is_stmt 1 view .LVU26
  16:Src/geometry.cpp ****         ret.dy = ret.dx * tan(angle / 180.0 * PI);
  96              		.loc 1 16 22 is_stmt 0 view .LVU27
  97 009b 660FEFD2 		pxor	%xmm2, %xmm2
  98 009f F30F5AD1 		cvtss2sd	%xmm1, %xmm2
  16:Src/geometry.cpp ****         ret.dy = ret.dx * tan(angle / 180.0 * PI);
  99              		.loc 1 16 25 view .LVU28
 100 00a3 F20F59C2 		mulsd	%xmm2, %xmm0
 101 00a7 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
  17:Src/geometry.cpp ****         ret.dx = abs(ret.dx);
 102              		.loc 1 17 9 is_stmt 1 view .LVU29
 103              	.LVL8:
 104              	.LBB24:
 105              	.LBI24:
 106              		.file 3 "/usr/include/c++/9.2.0/bits/std_abs.h"
   1:/usr/include/c++/9.2.0/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/include/c++/9.2.0/bits/std_abs.h **** 
   3:/usr/include/c++/9.2.0/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/bits/std_abs.h **** //
   5:/usr/include/c++/9.2.0/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/bits/std_abs.h **** // any later version.
  10:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  11:/usr/include/c++/9.2.0/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  16:/usr/include/c++/9.2.0/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
GAS LISTING /tmp/ccQVJrVe.s 			page 11


  17:/usr/include/c++/9.2.0/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  20:/usr/include/c++/9.2.0/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  25:/usr/include/c++/9.2.0/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/9.2.0/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/include/c++/9.2.0/bits/std_abs.h ****  */
  29:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  30:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  33:/usr/include/c++/9.2.0/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  35:/usr/include/c++/9.2.0/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  37:/usr/include/c++/9.2.0/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/include/c++/9.2.0/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/include/c++/9.2.0/bits/std_abs.h **** # include_next <math.h>
  41:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  42:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  44:/usr/include/c++/9.2.0/bits/std_abs.h **** #undef abs
  45:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  46:/usr/include/c++/9.2.0/bits/std_abs.h **** extern "C++"
  47:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  48:/usr/include/c++/9.2.0/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/include/c++/9.2.0/bits/std_abs.h **** {
  50:/usr/include/c++/9.2.0/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  52:/usr/include/c++/9.2.0/bits/std_abs.h ****   using ::abs;
  53:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  54:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long
  56:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  58:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  59:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline long long
  61:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/include/c++/9.2.0/bits/std_abs.h **** #endif
  63:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  64:/usr/include/c++/9.2.0/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/include/c++/9.2.0/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/include/c++/9.2.0/bits/std_abs.h **** 
  69:/usr/include/c++/9.2.0/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(double __x)
  72:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/include/c++/9.2.0/bits/std_abs.h **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 12


  74:/usr/include/c++/9.2.0/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   abs(float __x)
 107              		.loc 3 75 3 view .LVU30
 108              	.LBB25:
  76:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 109              		.loc 3 76 5 view .LVU31
 110              		.loc 3 76 31 is_stmt 0 view .LVU32
 111 00ab F30F1015 		movss	.LC3(%rip), %xmm2
 111      00000000 
 112 00b3 0F54CA   		andps	%xmm2, %xmm1
 113              	.LVL9:
 114              		.loc 3 76 31 view .LVU33
 115              	.LBE25:
 116              	.LBE24:
  18:Src/geometry.cpp ****         ret.dy = abs(ret.dy);
 117              		.loc 1 18 9 is_stmt 1 view .LVU34
 118              	.LBB26:
 119              	.LBI26:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 120              		.loc 3 75 3 view .LVU35
 121              	.LBB27:
 122              		.loc 3 76 5 view .LVU36
 123              		.loc 3 76 31 is_stmt 0 view .LVU37
 124 00b6 0F54C2   		andps	%xmm2, %xmm0
 125              	.LVL10:
 126              		.loc 3 76 31 view .LVU38
 127              	.LBE27:
 128              	.LBE26:
  18:Src/geometry.cpp ****         ret.dy = abs(ret.dy);
 129              		.loc 1 18 16 view .LVU39
 130 00b9 660F7EC0 		movd	%xmm0, %eax
 131 00bd 48C1E020 		salq	$32, %rax
 132 00c1 660F7ECA 		movd	%xmm1, %edx
 133              	.LVL11:
  18:Src/geometry.cpp ****         ret.dy = abs(ret.dy);
 134              		.loc 1 18 16 view .LVU40
 135 00c5 4809C2   		orq	%rax, %rdx
  19:Src/geometry.cpp ****         if(angle > 180 || angle < 0)
 136              		.loc 1 19 9 is_stmt 1 view .LVU41
 137 00c8 F30F1064 		movss	12(%rsp), %xmm4
 137      240C
 138 00ce 0F2F2500 		comiss	.LC4(%rip), %xmm4
 138      000000
 139 00d5 770C     		ja	.L9
 140 00d7 4889D1   		movq	%rdx, %rcx
  19:Src/geometry.cpp ****         if(angle > 180 || angle < 0)
 141              		.loc 1 19 24 is_stmt 0 discriminator 1 view .LVU42
 142 00da 660FEFD2 		pxor	%xmm2, %xmm2
 143 00de 0F2FD4   		comiss	%xmm4, %xmm2
 144 00e1 7614     		jbe	.L10
 145              	.L9:
  20:Src/geometry.cpp ****             ret.dy *= -1;
 146              		.loc 1 20 13 is_stmt 1 view .LVU43
  20:Src/geometry.cpp ****             ret.dy *= -1;
 147              		.loc 1 20 20 is_stmt 0 view .LVU44
 148 00e3 0F570500 		xorps	.LC6(%rip), %xmm0
 148      000000
GAS LISTING /tmp/ccQVJrVe.s 			page 13


 149 00ea 660F7EC0 		movd	%xmm0, %eax
 150 00ee 48C1E020 		salq	$32, %rax
 151 00f2 89D1     		movl	%edx, %ecx
  20:Src/geometry.cpp ****             ret.dy *= -1;
 152              		.loc 1 20 20 view .LVU45
 153 00f4 4809C1   		orq	%rax, %rcx
 154              	.L10:
  22:Src/geometry.cpp ****         if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 155              		.loc 1 22 9 is_stmt 1 view .LVU46
 156 00f7 F30F106C 		movss	12(%rsp), %xmm5
 156      240C
 157 00fd 0F2F2D00 		comiss	.LC7(%rip), %xmm5
 157      000000
 158 0104 720D     		jb	.L12
  22:Src/geometry.cpp ****         if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 159              		.loc 1 22 28 is_stmt 0 discriminator 2 view .LVU47
 160 0106 F30F1005 		movss	.LC8(%rip), %xmm0
 160      00000000 
 161 010e 0F2FC5   		comiss	%xmm5, %xmm0
 162 0111 733A     		jnb	.L14
 163              	.L12:
  22:Src/geometry.cpp ****         if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 164              		.loc 1 22 12 discriminator 3 view .LVU48
 165 0113 F30F1074 		movss	12(%rsp), %xmm6
 165      240C
 166 0119 0F2F3500 		comiss	.LC9(%rip), %xmm6
 166      000000
 167 0120 720D     		jb	.L15
  22:Src/geometry.cpp ****         if(!((angle >= -90 && angle <= 90) || (angle >= 190 + 90 && angle <= 360 + 90)))
 168              		.loc 1 22 66 discriminator 4 view .LVU49
 169 0122 F30F1005 		movss	.LC10(%rip), %xmm0
 169      00000000 
 170 012a 0F2FC6   		comiss	%xmm6, %xmm0
 171 012d 731E     		jnb	.L14
 172              	.L15:
  23:Src/geometry.cpp ****             ret.dx *= -1;
 173              		.loc 1 23 13 is_stmt 1 view .LVU50
  23:Src/geometry.cpp ****             ret.dx *= -1;
 174              		.loc 1 23 20 is_stmt 0 view .LVU51
 175 012f 0F570D00 		xorps	.LC6(%rip), %xmm1
 175      000000
 176 0136 660F7ECA 		movd	%xmm1, %edx
 177 013a 48B80000 		movabsq	$-4294967296, %rax
 177      0000FFFF 
 177      FFFF
  23:Src/geometry.cpp ****             ret.dx *= -1;
 178              		.loc 1 23 20 view .LVU52
 179 0144 4821C8   		andq	%rcx, %rax
 180 0147 4809D0   		orq	%rdx, %rax
 181 014a 4889C1   		movq	%rax, %rcx
 182              	.L14:
  24:Src/geometry.cpp ****         return ret;
 183              		.loc 1 24 9 is_stmt 1 view .LVU53
  25:Src/geometry.cpp ****     }
 184              		.loc 1 25 5 is_stmt 0 view .LVU54
 185 014d 4889D8   		movq	%rbx, %rax
  25:Src/geometry.cpp ****     }
GAS LISTING /tmp/ccQVJrVe.s 			page 14


 186              		.loc 1 25 5 view .LVU55
 187 0150 66480F6E 		movq	%rcx, %xmm0
 187      C1
 188 0155 4883C418 		addq	$24, %rsp
 189              		.cfi_def_cfa_offset 24
 190 0159 5B       		popq	%rbx
 191              		.cfi_def_cfa_offset 16
 192 015a 5D       		popq	%rbp
 193              		.cfi_def_cfa_offset 8
 194              	.LVL12:
  25:Src/geometry.cpp ****     }
 195              		.loc 1 25 5 view .LVU56
 196 015b C3       		ret
 197              		.cfi_endproc
 198              	.LFE1721:
 200              		.globl	_ZN8geometry10createVectEPKN5bases6coordsES3_
 202              	_ZN8geometry10createVectEPKN5bases6coordsES3_:
 203              	.LVL13:
 204              	.LFB1725:
  29:Src/geometry.cpp ****     {
 205              		.loc 1 29 5 is_stmt 1 view -0
 206              		.cfi_startproc
  29:Src/geometry.cpp ****     {
 207              		.loc 1 29 5 is_stmt 0 view .LVU58
 208 015c 55       		pushq	%rbp
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 6, -16
 211 015d 53       		pushq	%rbx
 212              		.cfi_def_cfa_offset 24
 213              		.cfi_offset 3, -24
 214 015e 4883EC08 		subq	$8, %rsp
 215              		.cfi_def_cfa_offset 32
 216 0162 4889FD   		movq	%rdi, %rbp
 217 0165 4889F3   		movq	%rsi, %rbx
  30:Src/geometry.cpp ****         struct vect ret;
 218              		.loc 1 30 9 is_stmt 1 view .LVU59
  31:Src/geometry.cpp ****         ret.c = (struct coords*)malloc(sizeof(struct coords));
 219              		.loc 1 31 9 view .LVU60
  31:Src/geometry.cpp ****         ret.c = (struct coords*)malloc(sizeof(struct coords));
 220              		.loc 1 31 39 is_stmt 0 view .LVU61
 221 0168 BF080000 		movl	$8, %edi
 221      00
 222              	.LVL14:
  31:Src/geometry.cpp ****         ret.c = (struct coords*)malloc(sizeof(struct coords));
 223              		.loc 1 31 39 view .LVU62
 224 016d E8000000 		call	malloc@PLT
 224      00
 225              	.LVL15:
  32:Src/geometry.cpp ****         ret.c->x = start->x;
 226              		.loc 1 32 9 is_stmt 1 view .LVU63
  32:Src/geometry.cpp ****         ret.c->x = start->x;
 227              		.loc 1 32 27 is_stmt 0 view .LVU64
 228 0172 F30F1055 		movss	0(%rbp), %xmm2
 228      00
  32:Src/geometry.cpp ****         ret.c->x = start->x;
 229              		.loc 1 32 18 view .LVU65
 230 0177 F30F1110 		movss	%xmm2, (%rax)
GAS LISTING /tmp/ccQVJrVe.s 			page 15


  33:Src/geometry.cpp ****         ret.c->y = start->y;
 231              		.loc 1 33 9 is_stmt 1 view .LVU66
  33:Src/geometry.cpp ****         ret.c->y = start->y;
 232              		.loc 1 33 27 is_stmt 0 view .LVU67
 233 017b F30F104D 		movss	4(%rbp), %xmm1
 233      04
  33:Src/geometry.cpp ****         ret.c->y = start->y;
 234              		.loc 1 33 18 view .LVU68
 235 0180 F30F1148 		movss	%xmm1, 4(%rax)
 235      04
  34:Src/geometry.cpp ****         ret.dx = end->x - start->x;
 236              		.loc 1 34 9 is_stmt 1 view .LVU69
  34:Src/geometry.cpp ****         ret.dx = end->x - start->x;
 237              		.loc 1 34 23 is_stmt 0 view .LVU70
 238 0185 F30F1003 		movss	(%rbx), %xmm0
  34:Src/geometry.cpp ****         ret.dx = end->x - start->x;
 239              		.loc 1 34 16 view .LVU71
 240 0189 F30F5CC2 		subss	%xmm2, %xmm0
  35:Src/geometry.cpp ****         ret.dy = end->y - start->y;
 241              		.loc 1 35 9 is_stmt 1 view .LVU72
  35:Src/geometry.cpp ****         ret.dy = end->y - start->y;
 242              		.loc 1 35 23 is_stmt 0 view .LVU73
 243 018d F30F1053 		movss	4(%rbx), %xmm2
 243      04
  35:Src/geometry.cpp ****         ret.dy = end->y - start->y;
 244              		.loc 1 35 16 view .LVU74
 245 0192 F30F5CD1 		subss	%xmm1, %xmm2
 246 0196 660F7ED2 		movd	%xmm2, %edx
 247 019a 4889D1   		movq	%rdx, %rcx
 248 019d 48C1E120 		salq	$32, %rcx
 249 01a1 660F7EC2 		movd	%xmm0, %edx
 250              	.LVL16:
  35:Src/geometry.cpp ****         ret.dy = end->y - start->y;
 251              		.loc 1 35 16 view .LVU75
 252 01a5 4809CA   		orq	%rcx, %rdx
  36:Src/geometry.cpp ****         return ret;
 253              		.loc 1 36 9 is_stmt 1 view .LVU76
  37:Src/geometry.cpp ****     }
 254              		.loc 1 37 5 is_stmt 0 view .LVU77
 255 01a8 66480F6E 		movq	%rdx, %xmm0
 255      C2
 256 01ad 4883C408 		addq	$8, %rsp
 257              		.cfi_def_cfa_offset 24
 258 01b1 5B       		popq	%rbx
 259              		.cfi_def_cfa_offset 16
 260              	.LVL17:
  37:Src/geometry.cpp ****     }
 261              		.loc 1 37 5 view .LVU78
 262 01b2 5D       		popq	%rbp
 263              		.cfi_def_cfa_offset 8
 264              	.LVL18:
  37:Src/geometry.cpp ****     }
 265              		.loc 1 37 5 view .LVU79
 266 01b3 C3       		ret
 267              		.cfi_endproc
 268              	.LFE1725:
 270              		.globl	_ZN8geometry11isDotInsideEPKN5bases6coordsE
GAS LISTING /tmp/ccQVJrVe.s 			page 16


 272              	_ZN8geometry11isDotInsideEPKN5bases6coordsE:
 273              	.LVL19:
 274              	.LFB1728:
  61:Src/geometry.cpp ****     {
 275              		.loc 1 61 5 is_stmt 1 view -0
 276              		.cfi_startproc
  62:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 277              		.loc 1 62 9 view .LVU81
 278              	.LBB28:
  62:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 279              		.loc 1 62 20 is_stmt 0 view .LVU82
 280 01b4 BA000000 		movl	$0, %edx
 280      00
 281 01b9 EB04     		jmp	.L28
 282              	.LVL20:
 283              	.L24:
  62:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 284              		.loc 1 62 9 is_stmt 1 discriminator 2 view .LVU83
 285 01bb 4883C201 		addq	$1, %rdx
 286              	.LVL21:
 287              	.L28:
  62:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 288              		.loc 1 62 29 discriminator 1 view .LVU84
 289 01bf 48391500 		cmpq	%rdx, numOfObstacles(%rip)
 289      000000
 290 01c6 0F869F00 		jbe	.L29
 290      0000
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 291              		.loc 1 64 13 view .LVU85
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 292              		.loc 1 64 21 is_stmt 0 view .LVU86
 293 01cc 660FEFC9 		pxor	%xmm1, %xmm1
 294 01d0 F30F5A0F 		cvtss2sd	(%rdi), %xmm1
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 295              		.loc 1 64 23 view .LVU87
 296 01d4 660F28D9 		movapd	%xmm1, %xmm3
 297 01d8 F20F5C1D 		subsd	.LC11(%rip), %xmm3
 297      00000000 
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 298              		.loc 1 64 44 view .LVU88
 299 01e0 488D0452 		leaq	(%rdx,%rdx,2), %rax
 300 01e4 48C1E004 		salq	$4, %rax
 301 01e8 48030500 		addq	obstacles(%rip), %rax
 301      000000
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 302              		.loc 1 64 46 view .LVU89
 303 01ef 488B08   		movq	(%rax), %rcx
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 304              		.loc 1 64 49 view .LVU90
 305 01f2 F30F1001 		movss	(%rcx), %xmm0
 306 01f6 660FEFD2 		pxor	%xmm2, %xmm2
 307 01fa F30F5AD0 		cvtss2sd	%xmm0, %xmm2
  64:Src/geometry.cpp ****             if(	(c->x - CONST > obstacles[i].c->x)
 308              		.loc 1 64 13 view .LVU91
 309 01fe 660F2FDA 		comisd	%xmm2, %xmm3
 310 0202 76B7     		jbe	.L24
  65:Src/geometry.cpp ****             &&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
GAS LISTING /tmp/ccQVJrVe.s 			page 17


 311              		.loc 1 65 23 view .LVU92
 312 0204 F20F580D 		addsd	.LC11(%rip), %xmm1
 312      00000000 
  65:Src/geometry.cpp ****             &&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 313              		.loc 1 65 66 view .LVU93
 314 020c F30F1050 		movss	40(%rax), %xmm2
 314      28
  65:Src/geometry.cpp ****             &&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 315              		.loc 1 65 51 view .LVU94
 316 0211 F30F58C2 		addss	%xmm2, %xmm0
 317 0215 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
  65:Src/geometry.cpp ****             &&  (c->x + CONST < obstacles[i].c->x + obstacles[i].a)
 318              		.loc 1 65 13 view .LVU95
 319 0219 660F2FC1 		comisd	%xmm1, %xmm0
 320 021d 769C     		jbe	.L24
  66:Src/geometry.cpp ****             &&  (c->y - CONST > obstacles[i].c->y)
 321              		.loc 1 66 21 view .LVU96
 322 021f 660FEFC0 		pxor	%xmm0, %xmm0
 323 0223 F30F5A47 		cvtss2sd	4(%rdi), %xmm0
 323      04
  66:Src/geometry.cpp ****             &&  (c->y - CONST > obstacles[i].c->y)
 324              		.loc 1 66 23 view .LVU97
 325 0228 660F28E0 		movapd	%xmm0, %xmm4
 326 022c F20F5C25 		subsd	.LC11(%rip), %xmm4
 326      00000000 
  66:Src/geometry.cpp ****             &&  (c->y - CONST > obstacles[i].c->y)
 327              		.loc 1 66 49 view .LVU98
 328 0234 F30F1049 		movss	4(%rcx), %xmm1
 328      04
 329 0239 660FEFDB 		pxor	%xmm3, %xmm3
 330 023d F30F5AD9 		cvtss2sd	%xmm1, %xmm3
  66:Src/geometry.cpp ****             &&  (c->y - CONST > obstacles[i].c->y)
 331              		.loc 1 66 13 view .LVU99
 332 0241 660F2FE3 		comisd	%xmm3, %xmm4
 333 0245 0F8670FF 		jbe	.L24
 333      FFFF
  67:Src/geometry.cpp ****             &&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 334              		.loc 1 67 23 view .LVU100
 335 024b F20F5805 		addsd	.LC11(%rip), %xmm0
 335      00000000 
  67:Src/geometry.cpp ****             &&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 336              		.loc 1 67 51 view .LVU101
 337 0253 F30F58D1 		addss	%xmm1, %xmm2
 338 0257 F30F5AD2 		cvtss2sd	%xmm2, %xmm2
  67:Src/geometry.cpp ****             &&  (c->y + CONST < obstacles[i].c->y + obstacles[i].a))
 339              		.loc 1 67 13 view .LVU102
 340 025b 660F2FD0 		comisd	%xmm0, %xmm2
 341 025f 0F8656FF 		jbe	.L24
 341      FFFF
  68:Src/geometry.cpp ****                 return true;
 342              		.loc 1 68 24 view .LVU103
 343 0265 B8010000 		movl	$1, %eax
 343      00
 344              	.LBE28:
  71:Src/geometry.cpp ****     }
 345              		.loc 1 71 5 view .LVU104
 346 026a C3       		ret
GAS LISTING /tmp/ccQVJrVe.s 			page 18


 347              	.L29:
  70:Src/geometry.cpp ****         return false;
 348              		.loc 1 70 16 view .LVU105
 349 026b B8000000 		movl	$0, %eax
 349      00
 350 0270 C3       		ret
 351              		.cfi_endproc
 352              	.LFE1728:
 354              		.globl	_ZN8geometry16getCoordsOfPointEPN5bases10graphPointE
 356              	_ZN8geometry16getCoordsOfPointEPN5bases10graphPointE:
 357              	.LVL22:
 358              	.LFB1729:
  78:Src/geometry.cpp ****     {
 359              		.loc 1 78 5 is_stmt 1 view -0
 360              		.cfi_startproc
  79:Src/geometry.cpp ****         return (p->c);
 361              		.loc 1 79 9 view .LVU107
  79:Src/geometry.cpp ****         return (p->c);
 362              		.loc 1 79 21 is_stmt 0 view .LVU108
 363 0271 F30F7E47 		movq	16(%rdi), %xmm0
 363      10
  80:Src/geometry.cpp ****     }
 364              		.loc 1 80 5 view .LVU109
 365 0276 C3       		ret
 366              		.cfi_endproc
 367              	.LFE1729:
 369              		.globl	_ZN8geometry15hasIntersectionEPKN5bases8baselineES3_
 371              	_ZN8geometry15hasIntersectionEPKN5bases8baselineES3_:
 372              	.LVL23:
 373              	.LFB1731:
  93:Src/geometry.cpp ****     {
 374              		.loc 1 93 5 is_stmt 1 view -0
 375              		.cfi_startproc
  94:Src/geometry.cpp ****         return b1->k != b2->k;
 376              		.loc 1 94 9 view .LVU111
  94:Src/geometry.cpp ****         return b1->k != b2->k;
 377              		.loc 1 94 20 is_stmt 0 view .LVU112
 378 0277 F30F1007 		movss	(%rdi), %xmm0
  94:Src/geometry.cpp ****         return b1->k != b2->k;
 379              		.loc 1 94 29 view .LVU113
 380 027b 0F2E06   		ucomiss	(%rsi), %xmm0
 381 027e 0F9AC0   		setp	%al
 382 0281 BA010000 		movl	$1, %edx
 382      00
 383 0286 0F45C2   		cmovne	%edx, %eax
  95:Src/geometry.cpp ****     }
 384              		.loc 1 95 5 view .LVU114
 385 0289 C3       		ret
 386              		.cfi_endproc
 387              	.LFE1731:
 389              		.globl	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_
 391              	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_:
 392              	.LVL24:
 393              	.LFB1732:
  98:Src/geometry.cpp ****     {
 394              		.loc 1 98 5 is_stmt 1 view -0
 395              		.cfi_startproc
GAS LISTING /tmp/ccQVJrVe.s 			page 19


  99:Src/geometry.cpp ****         struct coords ret;
 396              		.loc 1 99 9 view .LVU116
 100:Src/geometry.cpp ****         if(b1->k == b2->k)
 397              		.loc 1 100 9 view .LVU117
 100:Src/geometry.cpp ****         if(b1->k == b2->k)
 398              		.loc 1 100 16 is_stmt 0 view .LVU118
 399 028a F30F1007 		movss	(%rdi), %xmm0
 100:Src/geometry.cpp ****         if(b1->k == b2->k)
 400              		.loc 1 100 25 view .LVU119
 401 028e F30F100E 		movss	(%rsi), %xmm1
 100:Src/geometry.cpp ****         if(b1->k == b2->k)
 402              		.loc 1 100 9 view .LVU120
 403 0292 0F2EC1   		ucomiss	%xmm1, %xmm0
 404 0295 7A07     		jp	.L37
 405 0297 7505     		jne	.L37
 101:Src/geometry.cpp ****             ret = {0, 0};
 406              		.loc 1 101 13 is_stmt 1 view .LVU121
 101:Src/geometry.cpp ****             ret = {0, 0};
 407              		.loc 1 101 17 is_stmt 0 view .LVU122
 408 0299 660FEFC0 		pxor	%xmm0, %xmm0
 409              	.LVL25:
 101:Src/geometry.cpp ****             ret = {0, 0};
 410              		.loc 1 101 17 view .LVU123
 411 029d C3       		ret
 412              	.L37:
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 413              		.loc 1 104 13 is_stmt 1 view .LVU124
 414              	.LVL26:
 415              	.LBB29:
 416              	.LBI29:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 417              		.loc 3 75 3 view .LVU125
 418              	.LBB30:
 419              		.loc 3 76 5 view .LVU126
 420              		.loc 3 76 31 is_stmt 0 view .LVU127
 421 029e 0F28D8   		movaps	%xmm0, %xmm3
 422 02a1 0F541D00 		andps	.LC3(%rip), %xmm3
 422      000000
 423              	.LVL27:
 424              		.loc 3 76 31 view .LVU128
 425              	.LBE30:
 426              	.LBE29:
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 427              		.loc 1 104 19 view .LVU129
 428 02a8 F30F5ADB 		cvtss2sd	%xmm3, %xmm3
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 429              		.loc 1 104 30 view .LVU130
 430 02ac F20F1015 		movsd	.LC12(%rip), %xmm2
 430      00000000 
 431 02b4 F20F5E15 		divsd	.LC13(%rip), %xmm2
 431      00000000 
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 432              		.loc 1 104 34 view .LVU131
 433 02bc 660F2EDA 		ucomisd	%xmm2, %xmm3
 434 02c0 7A36     		jp	.L46
 435 02c2 7534     		jne	.L46
 436              	.L40:
GAS LISTING /tmp/ccQVJrVe.s 			page 20


 109:Src/geometry.cpp ****             else if(abs(b1->k) == INF)
 437              		.loc 1 109 18 is_stmt 1 discriminator 4 view .LVU132
 438              	.LVL28:
 439              		.loc 3 76 5 discriminator 4 view .LVU133
 109:Src/geometry.cpp ****             else if(abs(b1->k) == INF)
 440              		.loc 1 109 18 is_stmt 0 discriminator 4 view .LVU134
 441 02c4 660F2EDA 		ucomisd	%xmm2, %xmm3
 442 02c8 0F8A8800 		jp	.L43
 442      0000
 443 02ce 0F858200 		jne	.L43
 443      0000
 111:Src/geometry.cpp ****                 ret.x = b1->b;
 444              		.loc 1 111 17 is_stmt 1 view .LVU135
 111:Src/geometry.cpp ****                 ret.x = b1->b;
 445              		.loc 1 111 29 is_stmt 0 view .LVU136
 446 02d4 F30F1057 		movss	4(%rdi), %xmm2
 446      04
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 447              		.loc 1 112 17 is_stmt 1 view .LVU137
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 448              		.loc 1 112 31 is_stmt 0 view .LVU138
 449 02d9 F30F59CA 		mulss	%xmm2, %xmm1
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 450              		.loc 1 112 23 view .LVU139
 451 02dd F30F584E 		addss	4(%rsi), %xmm1
 451      04
 452 02e2 66480F7E 		movq	%xmm1, %rax
 452      C8
 453 02e7 48C1E020 		salq	$32, %rax
 454 02eb 660F7ED2 		movd	%xmm2, %edx
 455              	.LVL29:
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 456              		.loc 1 112 23 view .LVU140
 457 02ef 4809C2   		orq	%rax, %rdx
 458              	.LVL30:
 112:Src/geometry.cpp ****                 ret.y = b2->k * ret.x + b2->b;
 459              		.loc 1 112 23 view .LVU141
 460 02f2 66480F6E 		movq	%rdx, %xmm0
 460      C2
 461 02f7 C3       		ret
 462              	.LVL31:
 463              	.L46:
 464              	.LBB31:
 465              	.LBI31:
  75:/usr/include/c++/9.2.0/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 466              		.loc 3 75 3 is_stmt 1 discriminator 1 view .LVU142
 467              	.LBB32:
 468              		.loc 3 76 5 discriminator 1 view .LVU143
 469              		.loc 3 76 31 is_stmt 0 discriminator 1 view .LVU144
 470 02f8 0F28E1   		movaps	%xmm1, %xmm4
 471 02fb 0F542500 		andps	.LC3(%rip), %xmm4
 471      000000
 472              	.LVL32:
 473              		.loc 3 76 31 discriminator 1 view .LVU145
 474              	.LBE32:
 475              	.LBE31:
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
GAS LISTING /tmp/ccQVJrVe.s 			page 21


 476              		.loc 1 104 40 discriminator 1 view .LVU146
 477 0302 F30F5AE4 		cvtss2sd	%xmm4, %xmm4
 104:Src/geometry.cpp ****             if(abs(b1->k) != INF && abs(b2->k) != INF)
 478              		.loc 1 104 34 discriminator 1 view .LVU147
 479 0306 660F2ED4 		ucomisd	%xmm4, %xmm2
 480 030a 7A02     		jp	.L47
 481 030c 74B6     		je	.L40
 482              	.L47:
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 483              		.loc 1 106 17 is_stmt 1 view .LVU148
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 484              		.loc 1 106 30 is_stmt 0 view .LVU149
 485 030e F30F1066 		movss	4(%rsi), %xmm4
 485      04
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 486              		.loc 1 106 38 view .LVU150
 487 0313 F30F105F 		movss	4(%rdi), %xmm3
 487      04
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 488              		.loc 1 106 32 view .LVU151
 489 0318 0F28D4   		movaps	%xmm4, %xmm2
 490 031b F30F5CD3 		subss	%xmm3, %xmm2
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 491              		.loc 1 106 50 view .LVU152
 492 031f 0F28E8   		movaps	%xmm0, %xmm5
 493 0322 F30F5CE9 		subss	%xmm1, %xmm5
 106:Src/geometry.cpp ****                 ret.x = (b2->b - b1->b) / (b1->k - b2->k);
 494              		.loc 1 106 23 view .LVU153
 495 0326 F30F5ED5 		divss	%xmm5, %xmm2
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 496              		.loc 1 107 17 is_stmt 1 view .LVU154
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 497              		.loc 1 107 32 is_stmt 0 view .LVU155
 498 032a F30F59D9 		mulss	%xmm1, %xmm3
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 499              		.loc 1 107 48 view .LVU156
 500 032e F30F59E0 		mulss	%xmm0, %xmm4
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 501              		.loc 1 107 40 view .LVU157
 502 0332 F30F5CDC 		subss	%xmm4, %xmm3
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 503              		.loc 1 107 66 view .LVU158
 504 0336 F30F5CC8 		subss	%xmm0, %xmm1
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 505              		.loc 1 107 23 view .LVU159
 506 033a F30F5ED9 		divss	%xmm1, %xmm3
 507 033e 660F7ED8 		movd	%xmm3, %eax
 508 0342 4889C2   		movq	%rax, %rdx
 509 0345 48C1E220 		salq	$32, %rdx
 510 0349 660F7ED0 		movd	%xmm2, %eax
 511              	.LVL33:
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 512              		.loc 1 107 23 view .LVU160
 513 034d 4809D0   		orq	%rdx, %rax
 514              	.LVL34:
 107:Src/geometry.cpp ****                 ret.y = (b2->k * b1->b - b1->k * b2->b) / (b2->k - b1->k);
 515              		.loc 1 107 23 view .LVU161
GAS LISTING /tmp/ccQVJrVe.s 			page 22


 516 0350 66480F6E 		movq	%rax, %xmm0
 516      C0
 517 0355 C3       		ret
 518              	.LVL35:
 519              	.L43:
 116:Src/geometry.cpp ****                 ret.x = b2->b;
 520              		.loc 1 116 17 is_stmt 1 view .LVU162
 116:Src/geometry.cpp ****                 ret.x = b2->b;
 521              		.loc 1 116 29 is_stmt 0 view .LVU163
 522 0356 F30F1056 		movss	4(%rsi), %xmm2
 522      04
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 523              		.loc 1 117 17 is_stmt 1 view .LVU164
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 524              		.loc 1 117 31 is_stmt 0 view .LVU165
 525 035b F30F59C2 		mulss	%xmm2, %xmm0
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 526              		.loc 1 117 23 view .LVU166
 527 035f F30F5847 		addss	4(%rdi), %xmm0
 527      04
 528 0364 66480F7E 		movq	%xmm0, %rax
 528      C0
 529 0369 48C1E020 		salq	$32, %rax
 530 036d 660F7ED2 		movd	%xmm2, %edx
 531              	.LVL36:
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 532              		.loc 1 117 23 view .LVU167
 533 0371 4809C2   		orq	%rax, %rdx
 534              	.LVL37:
 117:Src/geometry.cpp ****                 ret.y = b1->k * ret.x + b1->b;
 535              		.loc 1 117 23 view .LVU168
 536 0374 66480F6E 		movq	%rdx, %xmm0
 536      C2
 121:Src/geometry.cpp ****         return ret;
 537              		.loc 1 121 9 is_stmt 1 view .LVU169
 122:Src/geometry.cpp ****     }
 538              		.loc 1 122 5 is_stmt 0 view .LVU170
 539 0379 C3       		ret
 540              		.cfi_endproc
 541              	.LFE1732:
 543              		.globl	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
 545              	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE:
 546              	.LVL38:
 547              	.LFB1733:
 125:Src/geometry.cpp ****     {
 548              		.loc 1 125 5 is_stmt 1 view -0
 549              		.cfi_startproc
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 550              		.loc 1 126 9 view .LVU172
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 551              		.loc 1 126 17 is_stmt 0 view .LVU173
 552 037a 660FEFC0 		pxor	%xmm0, %xmm0
 553 037e 0F2F4708 		comiss	8(%rdi), %xmm0
 554 0382 7728     		ja	.L73
 555 0384 B9010000 		movl	$1, %ecx
 555      00
 556              	.L50:
GAS LISTING /tmp/ccQVJrVe.s 			page 23


 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 557              		.loc 1 126 31 discriminator 4 view .LVU174
 558 0389 F30F1006 		movss	(%rsi), %xmm0
 559 038d 488B07   		movq	(%rdi), %rax
 560 0390 F30F5C00 		subss	(%rax), %xmm0
 561 0394 660FEFC9 		pxor	%xmm1, %xmm1
 562 0398 0F2FC8   		comiss	%xmm0, %xmm1
 563 039b 7716     		ja	.L74
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 564              		.loc 1 126 31 view .LVU175
 565 039d BA010000 		movl	$1, %edx
 565      00
 566              	.L52:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 567              		.loc 1 126 51 discriminator 8 view .LVU176
 568 03a2 39D1     		cmpl	%edx, %ecx
 569 03a4 7414     		je	.L75
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 570              		.loc 1 126 51 view .LVU177
 571 03a6 B8000000 		movl	$0, %eax
 571      00
 572 03ab C3       		ret
 573              	.L73:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 574              		.loc 1 126 17 view .LVU178
 575 03ac B9FFFFFF 		movl	$-1, %ecx
 575      FF
 576 03b1 EBD6     		jmp	.L50
 577              	.L74:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 578              		.loc 1 126 31 view .LVU179
 579 03b3 BAFFFFFF 		movl	$-1, %edx
 579      FF
 580 03b8 EBE8     		jmp	.L52
 581              	.L75:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 582              		.loc 1 126 54 discriminator 9 view .LVU180
 583 03ba 660FEFC0 		pxor	%xmm0, %xmm0
 584 03be 0F2F470C 		comiss	12(%rdi), %xmm0
 585 03c2 7727     		ja	.L76
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 586              		.loc 1 126 54 view .LVU181
 587 03c4 BA010000 		movl	$1, %edx
 587      00
 588              	.L55:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 589              		.loc 1 126 68 discriminator 14 view .LVU182
 590 03c9 F30F1046 		movss	4(%rsi), %xmm0
 590      04
 591 03ce F30F5C40 		subss	4(%rax), %xmm0
 591      04
 592 03d3 660FEFC9 		pxor	%xmm1, %xmm1
 593 03d7 0F2FC8   		comiss	%xmm0, %xmm1
 594 03da 7716     		ja	.L77
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 595              		.loc 1 126 68 view .LVU183
 596 03dc B8010000 		movl	$1, %eax
GAS LISTING /tmp/ccQVJrVe.s 			page 24


 596      00
 597              	.L57:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 598              		.loc 1 126 51 discriminator 18 view .LVU184
 599 03e1 39C2     		cmpl	%eax, %edx
 600 03e3 7414     		je	.L64
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 601              		.loc 1 126 51 view .LVU185
 602 03e5 B8000000 		movl	$0, %eax
 602      00
 603 03ea C3       		ret
 604              	.L76:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 605              		.loc 1 126 54 view .LVU186
 606 03eb BAFFFFFF 		movl	$-1, %edx
 606      FF
 607 03f0 EBD7     		jmp	.L55
 608              	.L77:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 609              		.loc 1 126 68 view .LVU187
 610 03f2 B8FFFFFF 		movl	$-1, %eax
 610      FF
 611 03f7 EBE8     		jmp	.L57
 612              	.L64:
 126:Src/geometry.cpp ****         return (sgn(v->dx) == sgn(c->x - v->c->x) && sgn(v->dy) == sgn(c->y - v->c->y));
 613              		.loc 1 126 51 view .LVU188
 614 03f9 B8010000 		movl	$1, %eax
 614      00
 127:Src/geometry.cpp ****     }
 615              		.loc 1 127 5 view .LVU189
 616 03fe C3       		ret
 617              		.cfi_endproc
 618              	.LFE1733:
 620              		.globl	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
 622              	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE:
 623              	.LVL39:
 624              	.LFB1738:
 260:Src/geometry.cpp ****     {
 625              		.loc 1 260 5 is_stmt 1 view -0
 626              		.cfi_startproc
 261:Src/geometry.cpp ****         return      (dot->x >= obstacle->c->x)
 627              		.loc 1 261 9 view .LVU191
 261:Src/geometry.cpp ****         return      (dot->x >= obstacle->c->x)
 628              		.loc 1 261 27 is_stmt 0 view .LVU192
 629 03ff F30F100F 		movss	(%rdi), %xmm1
 261:Src/geometry.cpp ****         return      (dot->x >= obstacle->c->x)
 630              		.loc 1 261 42 view .LVU193
 631 0403 488B06   		movq	(%rsi), %rax
 261:Src/geometry.cpp ****         return      (dot->x >= obstacle->c->x)
 632              		.loc 1 261 45 view .LVU194
 633 0406 F30F1000 		movss	(%rax), %xmm0
 264:Src/geometry.cpp ****                 &&  (dot->y <= obstacle->c->y + obstacle->b);
 634              		.loc 1 264 17 view .LVU195
 635 040a 0F2FC8   		comiss	%xmm0, %xmm1
 636 040d 7229     		jb	.L90
 262:Src/geometry.cpp ****                 &&  (dot->x <= obstacle->c->x + obstacle->a)
 637              		.loc 1 262 47 view .LVU196
GAS LISTING /tmp/ccQVJrVe.s 			page 25


 638 040f F30F5846 		addss	40(%rsi), %xmm0
 638      28
 262:Src/geometry.cpp ****                 &&  (dot->x <= obstacle->c->x + obstacle->a)
 639              		.loc 1 262 17 view .LVU197
 640 0414 0F2FC1   		comiss	%xmm1, %xmm0
 641 0417 7225     		jb	.L91
 263:Src/geometry.cpp ****                 &&  (dot->y >= obstacle->c->y)
 642              		.loc 1 263 27 view .LVU198
 643 0419 F30F104F 		movss	4(%rdi), %xmm1
 643      04
 263:Src/geometry.cpp ****                 &&  (dot->y >= obstacle->c->y)
 644              		.loc 1 263 45 view .LVU199
 645 041e F30F1040 		movss	4(%rax), %xmm0
 645      04
 263:Src/geometry.cpp ****                 &&  (dot->y >= obstacle->c->y)
 646              		.loc 1 263 17 view .LVU200
 647 0423 0F2FC8   		comiss	%xmm0, %xmm1
 648 0426 721C     		jb	.L92
 264:Src/geometry.cpp ****                 &&  (dot->y <= obstacle->c->y + obstacle->b);
 649              		.loc 1 264 47 discriminator 3 view .LVU201
 650 0428 F30F5846 		addss	44(%rsi), %xmm0
 650      2C
 264:Src/geometry.cpp ****                 &&  (dot->y <= obstacle->c->y + obstacle->b);
 651              		.loc 1 264 17 discriminator 3 view .LVU202
 652 042d 0F2FC1   		comiss	%xmm1, %xmm0
 653 0430 7318     		jnb	.L86
 264:Src/geometry.cpp ****                 &&  (dot->y <= obstacle->c->y + obstacle->b);
 654              		.loc 1 264 17 view .LVU203
 655 0432 B8000000 		movl	$0, %eax
 655      00
 656 0437 C3       		ret
 657              	.L90:
 658 0438 B8000000 		movl	$0, %eax
 658      00
 659 043d C3       		ret
 660              	.L91:
 661 043e B8000000 		movl	$0, %eax
 661      00
 662 0443 C3       		ret
 663              	.L92:
 664 0444 B8000000 		movl	$0, %eax
 664      00
 665 0449 C3       		ret
 666              	.L86:
 667 044a B8010000 		movl	$1, %eax
 667      00
 265:Src/geometry.cpp ****     }
 668              		.loc 1 265 5 view .LVU204
 669 044f C3       		ret
 670              		.cfi_endproc
 671              	.LFE1738:
 673              		.globl	_ZN8geometry14vectToBaselineEPKN5bases4vectE
 675              	_ZN8geometry14vectToBaselineEPKN5bases4vectE:
 676              	.LVL40:
 677              	.LFB1739:
 268:Src/geometry.cpp ****     {
 678              		.loc 1 268 5 is_stmt 1 view -0
GAS LISTING /tmp/ccQVJrVe.s 			page 26


 679              		.cfi_startproc
 269:Src/geometry.cpp ****         struct baseline ret;
 680              		.loc 1 269 9 view .LVU206
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 681              		.loc 1 271 9 view .LVU207
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 682              		.loc 1 271 28 is_stmt 0 view .LVU208
 683 0450 F30F104F 		movss	12(%rdi), %xmm1
 683      0C
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 684              		.loc 1 271 43 view .LVU209
 685 0455 F30F1057 		movss	8(%rdi), %xmm2
 685      08
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 686              		.loc 1 271 31 view .LVU210
 687 045a F30F5ECA 		divss	%xmm2, %xmm1
 271:Src/geometry.cpp ****         ret.k = ((float)v->dy / (float)v->dx);
 688              		.loc 1 271 15 view .LVU211
 689 045e 660F7EC8 		movd	%xmm1, %eax
 273:Src/geometry.cpp ****         if(v->dx != 0)
 690              		.loc 1 273 9 is_stmt 1 view .LVU212
 691 0462 0F2E1500 		ucomiss	.LC5(%rip), %xmm2
 691      000000
 692 0469 7A10     		jp	.L97
 693 046b 750E     		jne	.L97
 276:Src/geometry.cpp ****             ret.b = v->c->x;
 694              		.loc 1 276 13 view .LVU213
 276:Src/geometry.cpp ****             ret.b = v->c->x;
 695              		.loc 1 276 24 is_stmt 0 view .LVU214
 696 046d 488B17   		movq	(%rdi), %rdx
 276:Src/geometry.cpp ****             ret.b = v->c->x;
 697              		.loc 1 276 19 view .LVU215
 698 0470 8B12     		movl	(%rdx), %edx
 699 0472 48C1E220 		salq	$32, %rdx
 700 0476 4809D0   		orq	%rdx, %rax
 701              	.LVL41:
 276:Src/geometry.cpp ****             ret.b = v->c->x;
 702              		.loc 1 276 19 view .LVU216
 703 0479 EB1B     		jmp	.L96
 704              	.L97:
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 705              		.loc 1 274 13 is_stmt 1 view .LVU217
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 706              		.loc 1 274 24 is_stmt 0 view .LVU218
 707 047b 488B0F   		movq	(%rdi), %rcx
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 708              		.loc 1 274 27 view .LVU219
 709 047e F30F1041 		movss	4(%rcx), %xmm0
 709      04
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 710              		.loc 1 274 39 view .LVU220
 711 0483 F30F5909 		mulss	(%rcx), %xmm1
 274:Src/geometry.cpp ****             ret.b = v->c->y - v->c->x * ret.k;
 712              		.loc 1 274 19 view .LVU221
 713 0487 F30F5CC1 		subss	%xmm1, %xmm0
 714 048b 660F7EC2 		movd	%xmm0, %edx
 715 048f 48C1E220 		salq	$32, %rdx
GAS LISTING /tmp/ccQVJrVe.s 			page 27


 716 0493 4809D0   		orq	%rdx, %rax
 717              	.L96:
 278:Src/geometry.cpp ****         return ret;
 718              		.loc 1 278 9 is_stmt 1 view .LVU222
 719              	.LVL42:
 279:Src/geometry.cpp ****     }
 720              		.loc 1 279 5 is_stmt 0 view .LVU223
 721 0496 66480F6E 		movq	%rax, %xmm0
 721      C0
 722 049b C3       		ret
 723              		.cfi_endproc
 724              	.LFE1739:
 726              		.globl	_ZN8geometry6getLenEPKN5bases6coordsES3_
 728              	_ZN8geometry6getLenEPKN5bases6coordsES3_:
 729              	.LVL43:
 730              	.LFB1740:
 282:Src/geometry.cpp ****     {
 731              		.loc 1 282 5 is_stmt 1 view -0
 732              		.cfi_startproc
 282:Src/geometry.cpp ****     {
 733              		.loc 1 282 5 is_stmt 0 view .LVU225
 734 049c 4883EC08 		subq	$8, %rsp
 735              		.cfi_def_cfa_offset 16
 283:Src/geometry.cpp ****         COORDS_DATATYPE lx = c1->x - c2->x,
 736              		.loc 1 283 9 is_stmt 1 view .LVU226
 283:Src/geometry.cpp ****         COORDS_DATATYPE lx = c1->x - c2->x,
 737              		.loc 1 283 34 is_stmt 0 view .LVU227
 738 04a0 F30F1007 		movss	(%rdi), %xmm0
 283:Src/geometry.cpp ****         COORDS_DATATYPE lx = c1->x - c2->x,
 739              		.loc 1 283 25 view .LVU228
 740 04a4 F30F5C06 		subss	(%rsi), %xmm0
 741              	.LVL44:
 284:Src/geometry.cpp ****                         ly = c1->y - c2->y,
 742              		.loc 1 284 34 view .LVU229
 743 04a8 F30F104F 		movss	4(%rdi), %xmm1
 743      04
 284:Src/geometry.cpp ****                         ly = c1->y - c2->y,
 744              		.loc 1 284 25 view .LVU230
 745 04ad F30F5C4E 		subss	4(%rsi), %xmm1
 745      04
 746              	.LVL45:
 285:Src/geometry.cpp ****                         l  = sqrt(sqr(lx) + sqr(ly));
 747              		.loc 1 285 35 view .LVU231
 748 04b2 F30F59C0 		mulss	%xmm0, %xmm0
 749              	.LVL46:
 285:Src/geometry.cpp ****                         l  = sqrt(sqr(lx) + sqr(ly));
 750              		.loc 1 285 45 view .LVU232
 751 04b6 F30F59C9 		mulss	%xmm1, %xmm1
 752              	.LVL47:
 285:Src/geometry.cpp ****                         l  = sqrt(sqr(lx) + sqr(ly));
 753              		.loc 1 285 34 view .LVU233
 754 04ba F30F58C1 		addss	%xmm1, %xmm0
 755              	.LVL48:
 756              	.LBB33:
 757              	.LBI33:
 758              		.file 4 "/usr/include/c++/9.2.0/cmath"
   1:/usr/include/c++/9.2.0/cmath **** // -*- C++ -*- C forwarding header.
GAS LISTING /tmp/ccQVJrVe.s 			page 28


   2:/usr/include/c++/9.2.0/cmath **** 
   3:/usr/include/c++/9.2.0/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/include/c++/9.2.0/cmath **** //
   5:/usr/include/c++/9.2.0/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/9.2.0/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/9.2.0/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/9.2.0/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/9.2.0/cmath **** // any later version.
  10:/usr/include/c++/9.2.0/cmath **** 
  11:/usr/include/c++/9.2.0/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/9.2.0/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/9.2.0/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/9.2.0/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/9.2.0/cmath **** 
  16:/usr/include/c++/9.2.0/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/9.2.0/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/9.2.0/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/9.2.0/cmath **** 
  20:/usr/include/c++/9.2.0/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/9.2.0/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/9.2.0/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/9.2.0/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/9.2.0/cmath **** 
  25:/usr/include/c++/9.2.0/cmath **** /** @file include/cmath
  26:/usr/include/c++/9.2.0/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/9.2.0/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/c++/9.2.0/cmath ****  *
  29:/usr/include/c++/9.2.0/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/9.2.0/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/9.2.0/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/9.2.0/cmath ****  *  as macros in C).
  33:/usr/include/c++/9.2.0/cmath ****  */
  34:/usr/include/c++/9.2.0/cmath **** 
  35:/usr/include/c++/9.2.0/cmath **** //
  36:/usr/include/c++/9.2.0/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/9.2.0/cmath **** //
  38:/usr/include/c++/9.2.0/cmath **** 
  39:/usr/include/c++/9.2.0/cmath **** #pragma GCC system_header
  40:/usr/include/c++/9.2.0/cmath **** 
  41:/usr/include/c++/9.2.0/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/9.2.0/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/9.2.0/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/9.2.0/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/include/c++/9.2.0/cmath **** #include_next <math.h>
  46:/usr/include/c++/9.2.0/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/include/c++/9.2.0/cmath **** #include <bits/std_abs.h>
  48:/usr/include/c++/9.2.0/cmath **** 
  49:/usr/include/c++/9.2.0/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/include/c++/9.2.0/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/include/c++/9.2.0/cmath **** 
  52:/usr/include/c++/9.2.0/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/include/c++/9.2.0/cmath **** #undef div
  54:/usr/include/c++/9.2.0/cmath **** #undef acos
  55:/usr/include/c++/9.2.0/cmath **** #undef asin
  56:/usr/include/c++/9.2.0/cmath **** #undef atan
  57:/usr/include/c++/9.2.0/cmath **** #undef atan2
  58:/usr/include/c++/9.2.0/cmath **** #undef ceil
GAS LISTING /tmp/ccQVJrVe.s 			page 29


  59:/usr/include/c++/9.2.0/cmath **** #undef cos
  60:/usr/include/c++/9.2.0/cmath **** #undef cosh
  61:/usr/include/c++/9.2.0/cmath **** #undef exp
  62:/usr/include/c++/9.2.0/cmath **** #undef fabs
  63:/usr/include/c++/9.2.0/cmath **** #undef floor
  64:/usr/include/c++/9.2.0/cmath **** #undef fmod
  65:/usr/include/c++/9.2.0/cmath **** #undef frexp
  66:/usr/include/c++/9.2.0/cmath **** #undef ldexp
  67:/usr/include/c++/9.2.0/cmath **** #undef log
  68:/usr/include/c++/9.2.0/cmath **** #undef log10
  69:/usr/include/c++/9.2.0/cmath **** #undef modf
  70:/usr/include/c++/9.2.0/cmath **** #undef pow
  71:/usr/include/c++/9.2.0/cmath **** #undef sin
  72:/usr/include/c++/9.2.0/cmath **** #undef sinh
  73:/usr/include/c++/9.2.0/cmath **** #undef sqrt
  74:/usr/include/c++/9.2.0/cmath **** #undef tan
  75:/usr/include/c++/9.2.0/cmath **** #undef tanh
  76:/usr/include/c++/9.2.0/cmath **** 
  77:/usr/include/c++/9.2.0/cmath **** extern "C++"
  78:/usr/include/c++/9.2.0/cmath **** {
  79:/usr/include/c++/9.2.0/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/include/c++/9.2.0/cmath **** {
  81:/usr/include/c++/9.2.0/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/include/c++/9.2.0/cmath **** 
  83:/usr/include/c++/9.2.0/cmath ****   using ::acos;
  84:/usr/include/c++/9.2.0/cmath **** 
  85:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/c++/9.2.0/cmath ****   acos(float __x)
  88:/usr/include/c++/9.2.0/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/include/c++/9.2.0/cmath **** 
  90:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/c++/9.2.0/cmath ****   acos(long double __x)
  92:/usr/include/c++/9.2.0/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/include/c++/9.2.0/cmath **** #endif
  94:/usr/include/c++/9.2.0/cmath **** 
  95:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
  96:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
  99:/usr/include/c++/9.2.0/cmath ****     acos(_Tp __x)
 100:/usr/include/c++/9.2.0/cmath ****     { return __builtin_acos(__x); }
 101:/usr/include/c++/9.2.0/cmath **** 
 102:/usr/include/c++/9.2.0/cmath ****   using ::asin;
 103:/usr/include/c++/9.2.0/cmath **** 
 104:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/c++/9.2.0/cmath ****   asin(float __x)
 107:/usr/include/c++/9.2.0/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/include/c++/9.2.0/cmath **** 
 109:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/c++/9.2.0/cmath ****   asin(long double __x)
 111:/usr/include/c++/9.2.0/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/include/c++/9.2.0/cmath **** #endif
 113:/usr/include/c++/9.2.0/cmath **** 
 114:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 115:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
GAS LISTING /tmp/ccQVJrVe.s 			page 30


 116:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 118:/usr/include/c++/9.2.0/cmath ****     asin(_Tp __x)
 119:/usr/include/c++/9.2.0/cmath ****     { return __builtin_asin(__x); }
 120:/usr/include/c++/9.2.0/cmath **** 
 121:/usr/include/c++/9.2.0/cmath ****   using ::atan;
 122:/usr/include/c++/9.2.0/cmath **** 
 123:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/c++/9.2.0/cmath ****   atan(float __x)
 126:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/include/c++/9.2.0/cmath **** 
 128:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/c++/9.2.0/cmath ****   atan(long double __x)
 130:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/include/c++/9.2.0/cmath **** #endif
 132:/usr/include/c++/9.2.0/cmath **** 
 133:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 134:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 137:/usr/include/c++/9.2.0/cmath ****     atan(_Tp __x)
 138:/usr/include/c++/9.2.0/cmath ****     { return __builtin_atan(__x); }
 139:/usr/include/c++/9.2.0/cmath **** 
 140:/usr/include/c++/9.2.0/cmath ****   using ::atan2;
 141:/usr/include/c++/9.2.0/cmath **** 
 142:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/c++/9.2.0/cmath ****   atan2(float __y, float __x)
 145:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/include/c++/9.2.0/cmath **** 
 147:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/c++/9.2.0/cmath ****   atan2(long double __y, long double __x)
 149:/usr/include/c++/9.2.0/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/include/c++/9.2.0/cmath **** #endif
 151:/usr/include/c++/9.2.0/cmath **** 
 152:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/include/c++/9.2.0/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/include/c++/9.2.0/cmath ****     {
 157:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/include/c++/9.2.0/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/include/c++/9.2.0/cmath ****     }
 160:/usr/include/c++/9.2.0/cmath **** 
 161:/usr/include/c++/9.2.0/cmath ****   using ::ceil;
 162:/usr/include/c++/9.2.0/cmath **** 
 163:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/include/c++/9.2.0/cmath ****   ceil(float __x)
 166:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/include/c++/9.2.0/cmath **** 
 168:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/include/c++/9.2.0/cmath ****   ceil(long double __x)
 170:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/include/c++/9.2.0/cmath **** #endif
 172:/usr/include/c++/9.2.0/cmath **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 31


 173:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 174:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 177:/usr/include/c++/9.2.0/cmath ****     ceil(_Tp __x)
 178:/usr/include/c++/9.2.0/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/include/c++/9.2.0/cmath **** 
 180:/usr/include/c++/9.2.0/cmath ****   using ::cos;
 181:/usr/include/c++/9.2.0/cmath **** 
 182:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/include/c++/9.2.0/cmath ****   cos(float __x)
 185:/usr/include/c++/9.2.0/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/include/c++/9.2.0/cmath **** 
 187:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/c++/9.2.0/cmath ****   cos(long double __x)
 189:/usr/include/c++/9.2.0/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/include/c++/9.2.0/cmath **** #endif
 191:/usr/include/c++/9.2.0/cmath **** 
 192:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 193:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 196:/usr/include/c++/9.2.0/cmath ****     cos(_Tp __x)
 197:/usr/include/c++/9.2.0/cmath ****     { return __builtin_cos(__x); }
 198:/usr/include/c++/9.2.0/cmath **** 
 199:/usr/include/c++/9.2.0/cmath ****   using ::cosh;
 200:/usr/include/c++/9.2.0/cmath **** 
 201:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/c++/9.2.0/cmath ****   cosh(float __x)
 204:/usr/include/c++/9.2.0/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/include/c++/9.2.0/cmath **** 
 206:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/c++/9.2.0/cmath ****   cosh(long double __x)
 208:/usr/include/c++/9.2.0/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/include/c++/9.2.0/cmath **** #endif
 210:/usr/include/c++/9.2.0/cmath **** 
 211:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 212:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 215:/usr/include/c++/9.2.0/cmath ****     cosh(_Tp __x)
 216:/usr/include/c++/9.2.0/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/include/c++/9.2.0/cmath **** 
 218:/usr/include/c++/9.2.0/cmath ****   using ::exp;
 219:/usr/include/c++/9.2.0/cmath **** 
 220:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/c++/9.2.0/cmath ****   exp(float __x)
 223:/usr/include/c++/9.2.0/cmath ****   { return __builtin_expf(__x); }
 224:/usr/include/c++/9.2.0/cmath **** 
 225:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/c++/9.2.0/cmath ****   exp(long double __x)
 227:/usr/include/c++/9.2.0/cmath ****   { return __builtin_expl(__x); }
 228:/usr/include/c++/9.2.0/cmath **** #endif
 229:/usr/include/c++/9.2.0/cmath **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 32


 230:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 231:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 234:/usr/include/c++/9.2.0/cmath ****     exp(_Tp __x)
 235:/usr/include/c++/9.2.0/cmath ****     { return __builtin_exp(__x); }
 236:/usr/include/c++/9.2.0/cmath **** 
 237:/usr/include/c++/9.2.0/cmath ****   using ::fabs;
 238:/usr/include/c++/9.2.0/cmath **** 
 239:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/include/c++/9.2.0/cmath ****   fabs(float __x)
 242:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/include/c++/9.2.0/cmath **** 
 244:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/c++/9.2.0/cmath ****   fabs(long double __x)
 246:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/include/c++/9.2.0/cmath **** #endif
 248:/usr/include/c++/9.2.0/cmath **** 
 249:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 250:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 253:/usr/include/c++/9.2.0/cmath ****     fabs(_Tp __x)
 254:/usr/include/c++/9.2.0/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/include/c++/9.2.0/cmath **** 
 256:/usr/include/c++/9.2.0/cmath ****   using ::floor;
 257:/usr/include/c++/9.2.0/cmath **** 
 258:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/c++/9.2.0/cmath ****   floor(float __x)
 261:/usr/include/c++/9.2.0/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/include/c++/9.2.0/cmath **** 
 263:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/c++/9.2.0/cmath ****   floor(long double __x)
 265:/usr/include/c++/9.2.0/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/include/c++/9.2.0/cmath **** #endif
 267:/usr/include/c++/9.2.0/cmath **** 
 268:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 269:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 272:/usr/include/c++/9.2.0/cmath ****     floor(_Tp __x)
 273:/usr/include/c++/9.2.0/cmath ****     { return __builtin_floor(__x); }
 274:/usr/include/c++/9.2.0/cmath **** 
 275:/usr/include/c++/9.2.0/cmath ****   using ::fmod;
 276:/usr/include/c++/9.2.0/cmath **** 
 277:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/c++/9.2.0/cmath ****   fmod(float __x, float __y)
 280:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/include/c++/9.2.0/cmath **** 
 282:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/c++/9.2.0/cmath ****   fmod(long double __x, long double __y)
 284:/usr/include/c++/9.2.0/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/include/c++/9.2.0/cmath **** #endif
 286:/usr/include/c++/9.2.0/cmath **** 
GAS LISTING /tmp/ccQVJrVe.s 			page 33


 287:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/include/c++/9.2.0/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/include/c++/9.2.0/cmath ****     {
 292:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/include/c++/9.2.0/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/include/c++/9.2.0/cmath ****     }
 295:/usr/include/c++/9.2.0/cmath **** 
 296:/usr/include/c++/9.2.0/cmath ****   using ::frexp;
 297:/usr/include/c++/9.2.0/cmath **** 
 298:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/include/c++/9.2.0/cmath ****   inline float
 300:/usr/include/c++/9.2.0/cmath ****   frexp(float __x, int* __exp)
 301:/usr/include/c++/9.2.0/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/include/c++/9.2.0/cmath **** 
 303:/usr/include/c++/9.2.0/cmath ****   inline long double
 304:/usr/include/c++/9.2.0/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/include/c++/9.2.0/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/include/c++/9.2.0/cmath **** #endif
 307:/usr/include/c++/9.2.0/cmath **** 
 308:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 309:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 312:/usr/include/c++/9.2.0/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/include/c++/9.2.0/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/include/c++/9.2.0/cmath **** 
 315:/usr/include/c++/9.2.0/cmath ****   using ::ldexp;
 316:/usr/include/c++/9.2.0/cmath **** 
 317:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/include/c++/9.2.0/cmath ****   ldexp(float __x, int __exp)
 320:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/include/c++/9.2.0/cmath **** 
 322:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/include/c++/9.2.0/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/include/c++/9.2.0/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/include/c++/9.2.0/cmath **** #endif
 326:/usr/include/c++/9.2.0/cmath **** 
 327:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 328:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 331:/usr/include/c++/9.2.0/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/include/c++/9.2.0/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/include/c++/9.2.0/cmath **** 
 334:/usr/include/c++/9.2.0/cmath ****   using ::log;
 335:/usr/include/c++/9.2.0/cmath **** 
 336:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/c++/9.2.0/cmath ****   log(float __x)
 339:/usr/include/c++/9.2.0/cmath ****   { return __builtin_logf(__x); }
 340:/usr/include/c++/9.2.0/cmath **** 
 341:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/c++/9.2.0/cmath ****   log(long double __x)
 343:/usr/include/c++/9.2.0/cmath ****   { return __builtin_logl(__x); }
GAS LISTING /tmp/ccQVJrVe.s 			page 34


 344:/usr/include/c++/9.2.0/cmath **** #endif
 345:/usr/include/c++/9.2.0/cmath **** 
 346:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 347:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 350:/usr/include/c++/9.2.0/cmath ****     log(_Tp __x)
 351:/usr/include/c++/9.2.0/cmath ****     { return __builtin_log(__x); }
 352:/usr/include/c++/9.2.0/cmath **** 
 353:/usr/include/c++/9.2.0/cmath ****   using ::log10;
 354:/usr/include/c++/9.2.0/cmath **** 
 355:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/c++/9.2.0/cmath ****   log10(float __x)
 358:/usr/include/c++/9.2.0/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/include/c++/9.2.0/cmath **** 
 360:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/c++/9.2.0/cmath ****   log10(long double __x)
 362:/usr/include/c++/9.2.0/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/include/c++/9.2.0/cmath **** #endif
 364:/usr/include/c++/9.2.0/cmath **** 
 365:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 366:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 369:/usr/include/c++/9.2.0/cmath ****     log10(_Tp __x)
 370:/usr/include/c++/9.2.0/cmath ****     { return __builtin_log10(__x); }
 371:/usr/include/c++/9.2.0/cmath **** 
 372:/usr/include/c++/9.2.0/cmath ****   using ::modf;
 373:/usr/include/c++/9.2.0/cmath **** 
 374:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/c++/9.2.0/cmath ****   inline float
 376:/usr/include/c++/9.2.0/cmath ****   modf(float __x, float* __iptr)
 377:/usr/include/c++/9.2.0/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/include/c++/9.2.0/cmath **** 
 379:/usr/include/c++/9.2.0/cmath ****   inline long double
 380:/usr/include/c++/9.2.0/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/include/c++/9.2.0/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/include/c++/9.2.0/cmath **** #endif
 383:/usr/include/c++/9.2.0/cmath **** 
 384:/usr/include/c++/9.2.0/cmath ****   using ::pow;
 385:/usr/include/c++/9.2.0/cmath **** 
 386:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/include/c++/9.2.0/cmath ****   pow(float __x, float __y)
 389:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/include/c++/9.2.0/cmath **** 
 391:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/include/c++/9.2.0/cmath ****   pow(long double __x, long double __y)
 393:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/include/c++/9.2.0/cmath **** 
 395:/usr/include/c++/9.2.0/cmath **** #if __cplusplus < 201103L
 396:/usr/include/c++/9.2.0/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/include/c++/9.2.0/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/include/c++/9.2.0/cmath ****   inline double
 399:/usr/include/c++/9.2.0/cmath ****   pow(double __x, int __i)
 400:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powi(__x, __i); }
GAS LISTING /tmp/ccQVJrVe.s 			page 35


 401:/usr/include/c++/9.2.0/cmath **** 
 402:/usr/include/c++/9.2.0/cmath ****   inline float
 403:/usr/include/c++/9.2.0/cmath ****   pow(float __x, int __n)
 404:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/include/c++/9.2.0/cmath **** 
 406:/usr/include/c++/9.2.0/cmath ****   inline long double
 407:/usr/include/c++/9.2.0/cmath ****   pow(long double __x, int __n)
 408:/usr/include/c++/9.2.0/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/include/c++/9.2.0/cmath **** #endif
 410:/usr/include/c++/9.2.0/cmath **** #endif
 411:/usr/include/c++/9.2.0/cmath **** 
 412:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/include/c++/9.2.0/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/include/c++/9.2.0/cmath ****     {
 417:/usr/include/c++/9.2.0/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/include/c++/9.2.0/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/include/c++/9.2.0/cmath ****     }
 420:/usr/include/c++/9.2.0/cmath **** 
 421:/usr/include/c++/9.2.0/cmath ****   using ::sin;
 422:/usr/include/c++/9.2.0/cmath **** 
 423:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/include/c++/9.2.0/cmath ****   sin(float __x)
 426:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/include/c++/9.2.0/cmath **** 
 428:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/include/c++/9.2.0/cmath ****   sin(long double __x)
 430:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/include/c++/9.2.0/cmath **** #endif
 432:/usr/include/c++/9.2.0/cmath **** 
 433:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 434:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 437:/usr/include/c++/9.2.0/cmath ****     sin(_Tp __x)
 438:/usr/include/c++/9.2.0/cmath ****     { return __builtin_sin(__x); }
 439:/usr/include/c++/9.2.0/cmath **** 
 440:/usr/include/c++/9.2.0/cmath ****   using ::sinh;
 441:/usr/include/c++/9.2.0/cmath **** 
 442:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/include/c++/9.2.0/cmath ****   sinh(float __x)
 445:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/include/c++/9.2.0/cmath **** 
 447:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/include/c++/9.2.0/cmath ****   sinh(long double __x)
 449:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/include/c++/9.2.0/cmath **** #endif
 451:/usr/include/c++/9.2.0/cmath **** 
 452:/usr/include/c++/9.2.0/cmath ****   template<typename _Tp>
 453:/usr/include/c++/9.2.0/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/include/c++/9.2.0/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/include/c++/9.2.0/cmath ****                                     double>::__type
 456:/usr/include/c++/9.2.0/cmath ****     sinh(_Tp __x)
 457:/usr/include/c++/9.2.0/cmath ****     { return __builtin_sinh(__x); }
GAS LISTING /tmp/ccQVJrVe.s 			page 36


 458:/usr/include/c++/9.2.0/cmath **** 
 459:/usr/include/c++/9.2.0/cmath ****   using ::sqrt;
 460:/usr/include/c++/9.2.0/cmath **** 
 461:/usr/include/c++/9.2.0/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/include/c++/9.2.0/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/include/c++/9.2.0/cmath ****   sqrt(float __x)
 759              		.loc 4 463 3 is_stmt 1 view .LVU234
 760              	.LBB34:
 464:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sqrtf(__x); }
 761              		.loc 4 464 5 view .LVU235
 762              		.loc 4 464 27 is_stmt 0 view .LVU236
 763 04be E8000000 		call	sqrtf@PLT
 763      00
 764              	.LVL49:
 765              		.loc 4 464 27 view .LVU237
 766              	.LBE34:
 767              	.LBE33:
 287:Src/geometry.cpp ****         return l;
 768              		.loc 1 287 9 is_stmt 1 view .LVU238
 288:Src/geometry.cpp ****     }
 769              		.loc 1 288 5 is_stmt 0 view .LVU239
 770 04c3 4883C408 		addq	$8, %rsp
 771              		.cfi_def_cfa_offset 8
 772 04c7 C3       		ret
 773              		.cfi_endproc
 774              	.LFE1740:
 776              		.globl	_ZN8geometry6getLenEPKN5bases4vectE
 778              	_ZN8geometry6getLenEPKN5bases4vectE:
 779              	.LVL50:
 780              	.LFB1741:
 291:Src/geometry.cpp ****     {
 781              		.loc 1 291 5 is_stmt 1 view -0
 782              		.cfi_startproc
 291:Src/geometry.cpp ****     {
 783              		.loc 1 291 5 is_stmt 0 view .LVU241
 784 04c8 4883EC08 		subq	$8, %rsp
 785              		.cfi_def_cfa_offset 16
 292:Src/geometry.cpp ****         COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 786              		.loc 1 292 9 is_stmt 1 view .LVU242
 292:Src/geometry.cpp ****         COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 787              		.loc 1 292 34 is_stmt 0 view .LVU243
 788 04cc F30F1047 		movss	8(%rdi), %xmm0
 788      08
 789 04d1 F30F59C0 		mulss	%xmm0, %xmm0
 292:Src/geometry.cpp ****         COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 790              		.loc 1 292 47 view .LVU244
 791 04d5 F30F104F 		movss	12(%rdi), %xmm1
 791      0C
 792 04da F30F59C9 		mulss	%xmm1, %xmm1
 292:Src/geometry.cpp ****         COORDS_DATATYPE l = sqrt(sqr(v->dx) + sqr(v->dy));
 793              		.loc 1 292 33 view .LVU245
 794 04de F30F58C1 		addss	%xmm1, %xmm0
 795              	.LVL51:
 796              	.LBB35:
 797              	.LBI35:
 463:/usr/include/c++/9.2.0/cmath ****   { return __builtin_sqrtf(__x); }
 798              		.loc 4 463 3 is_stmt 1 view .LVU246
GAS LISTING /tmp/ccQVJrVe.s 			page 37


 799              	.LBB36:
 800              		.loc 4 464 5 view .LVU247
 801              		.loc 4 464 27 is_stmt 0 view .LVU248
 802 04e2 E8000000 		call	sqrtf@PLT
 802      00
 803              	.LVL52:
 804              		.loc 4 464 27 view .LVU249
 805              	.LBE36:
 806              	.LBE35:
 293:Src/geometry.cpp ****         return l;
 807              		.loc 1 293 9 is_stmt 1 view .LVU250
 294:Src/geometry.cpp ****     }
 808              		.loc 1 294 5 is_stmt 0 view .LVU251
 809 04e7 4883C408 		addq	$8, %rsp
 810              		.cfi_def_cfa_offset 8
 811 04eb C3       		ret
 812              		.cfi_endproc
 813              	.LFE1741:
 815              		.globl	_ZN8geometry15getIntersectionEPKN5bases8obstacleEPKNS0_4vectE
 817              	_ZN8geometry15getIntersectionEPKN5bases8obstacleEPKNS0_4vectE:
 818              	.LVL53:
 819              	.LFB1734:
 131:Src/geometry.cpp ****     {
 820              		.loc 1 131 5 is_stmt 1 view -0
 821              		.cfi_startproc
 131:Src/geometry.cpp ****     {
 822              		.loc 1 131 5 is_stmt 0 view .LVU253
 823 04ec 4155     		pushq	%r13
 824              		.cfi_def_cfa_offset 16
 825              		.cfi_offset 13, -16
 826 04ee 4154     		pushq	%r12
 827              		.cfi_def_cfa_offset 24
 828              		.cfi_offset 12, -24
 829 04f0 55       		pushq	%rbp
 830              		.cfi_def_cfa_offset 32
 831              		.cfi_offset 6, -32
 832 04f1 53       		pushq	%rbx
 833              		.cfi_def_cfa_offset 40
 834              		.cfi_offset 3, -40
 835 04f2 4883EC48 		subq	$72, %rsp
 836              		.cfi_def_cfa_offset 112
 837 04f6 4889FB   		movq	%rdi, %rbx
 838 04f9 4889F5   		movq	%rsi, %rbp
 131:Src/geometry.cpp ****     {
 839              		.loc 1 131 5 view .LVU254
 840 04fc 64488B04 		movq	%fs:40, %rax
 840      25280000 
 840      00
 841 0505 48894424 		movq	%rax, 56(%rsp)
 841      38
 842 050a 31C0     		xorl	%eax, %eax
 132:Src/geometry.cpp ****         struct coords inter1, inter2, tgt;
 843              		.loc 1 132 9 is_stmt 1 view .LVU255
 133:Src/geometry.cpp ****         tgt = {(v->dx + v->c->x), (v->dy + v->c->y)};
 844              		.loc 1 133 9 view .LVU256
 134:Src/geometry.cpp ****         struct baseline b1,
 845              		.loc 1 134 9 view .LVU257
GAS LISTING /tmp/ccQVJrVe.s 			page 38


 134:Src/geometry.cpp ****         struct baseline b1,
 846              		.loc 1 134 25 is_stmt 0 view .LVU258
 847 050c C7442428 		movl	$0x00000000, 40(%rsp)
 847      00000000 
 848 0514 C744242C 		movl	$0x00000000, 44(%rsp)
 848      00000000 
 135:Src/geometry.cpp ****                         b2;
 849              		.loc 1 135 25 view .LVU259
 850 051c C7442430 		movl	$0x00000000, 48(%rsp)
 850      00000000 
 851 0524 C7442434 		movl	$0x00000000, 52(%rsp)
 851      00000000 
 136:Src/geometry.cpp ****         COORDS_DATATYPE l1 = 0, l2 = 0, lv = 0;
 852              		.loc 1 136 9 is_stmt 1 view .LVU260
 853              	.LVL54:
 138:Src/geometry.cpp ****         lv = getLen(v);
 854              		.loc 1 138 9 view .LVU261
 138:Src/geometry.cpp ****         lv = getLen(v);
 855              		.loc 1 138 20 is_stmt 0 view .LVU262
 856 052c 4889F7   		movq	%rsi, %rdi
 857              	.LVL55:
 138:Src/geometry.cpp ****         lv = getLen(v);
 858              		.loc 1 138 20 view .LVU263
 859 052f E8000000 		call	_ZN8geometry6getLenEPKN5bases4vectE
 859      00
 860              	.LVL56:
 138:Src/geometry.cpp ****         lv = getLen(v);
 861              		.loc 1 138 20 view .LVU264
 862 0534 F30F1144 		movss	%xmm0, 8(%rsp)
 862      2408
 863              	.LVL57:
 140:Src/geometry.cpp ****         b1 = vectToBaseline(v);
 864              		.loc 1 140 9 is_stmt 1 view .LVU265
 140:Src/geometry.cpp ****         b1 = vectToBaseline(v);
 865              		.loc 1 140 30 is_stmt 0 view .LVU266
 866 053a 4889EF   		movq	%rbp, %rdi
 867 053d E8000000 		call	_ZN8geometry14vectToBaselineEPKN5bases4vectE
 867      00
 868              	.LVL58:
 140:Src/geometry.cpp ****         b1 = vectToBaseline(v);
 869              		.loc 1 140 30 view .LVU267
 870 0542 660FD644 		movq	%xmm0, 40(%rsp)
 870      2428
 142:Src/geometry.cpp ****         b2.k = INF;
 871              		.loc 1 142 9 is_stmt 1 view .LVU268
 142:Src/geometry.cpp ****         b2.k = INF;
 872              		.loc 1 142 14 is_stmt 0 view .LVU269
 873 0548 F30F1005 		movss	.LC14(%rip), %xmm0
 873      00000000 
 874 0550 F30F5E05 		divss	.LC5(%rip), %xmm0
 874      00000000 
 875 0558 F30F1144 		movss	%xmm0, 48(%rsp)
 875      2430
 143:Src/geometry.cpp ****         b2.b = obst->c->x;
 876              		.loc 1 143 9 is_stmt 1 view .LVU270
 143:Src/geometry.cpp ****         b2.b = obst->c->x;
 877              		.loc 1 143 22 is_stmt 0 view .LVU271
GAS LISTING /tmp/ccQVJrVe.s 			page 39


 878 055e 488B03   		movq	(%rbx), %rax
 143:Src/geometry.cpp ****         b2.b = obst->c->x;
 879              		.loc 1 143 25 view .LVU272
 880 0561 F30F1000 		movss	(%rax), %xmm0
 143:Src/geometry.cpp ****         b2.b = obst->c->x;
 881              		.loc 1 143 14 view .LVU273
 882 0565 F30F1144 		movss	%xmm0, 52(%rsp)
 882      2434
 145:Src/geometry.cpp ****         inter1 = getIntersection(&b1, &b2);
 883              		.loc 1 145 9 is_stmt 1 view .LVU274
 145:Src/geometry.cpp ****         inter1 = getIntersection(&b1, &b2);
 884              		.loc 1 145 42 is_stmt 0 view .LVU275
 885 056b 488D7424 		leaq	48(%rsp), %rsi
 885      30
 886 0570 488D7C24 		leaq	40(%rsp), %rdi
 886      28
 887 0575 E8000000 		call	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_
 887      00
 888              	.LVL59:
 889 057a 660FD644 		movq	%xmm0, 24(%rsp)
 889      2418
 146:Src/geometry.cpp ****         if(isDotInside(&inter1, obst))
 890              		.loc 1 146 9 is_stmt 1 view .LVU276
 146:Src/geometry.cpp ****         if(isDotInside(&inter1, obst))
 891              		.loc 1 146 23 is_stmt 0 view .LVU277
 892 0580 488D7C24 		leaq	24(%rsp), %rdi
 892      18
 893 0585 4889DE   		movq	%rbx, %rsi
 894 0588 E8000000 		call	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
 894      00
 895              	.LVL60:
 146:Src/geometry.cpp ****         if(isDotInside(&inter1, obst))
 896              		.loc 1 146 9 view .LVU278
 897 058d 84C0     		testb	%al, %al
 898 058f 0F851201 		jne	.L138
 898      0000
 157:Src/geometry.cpp ****             l1 = 0;
 899              		.loc 1 157 13 is_stmt 1 view .LVU279
 158:Src/geometry.cpp ****             inter1 = {0, 0};
 900              		.loc 1 158 13 view .LVU280
 158:Src/geometry.cpp ****             inter1 = {0, 0};
 901              		.loc 1 158 20 is_stmt 0 view .LVU281
 902 0595 C7442418 		movl	$0x00000000, 24(%rsp)
 902      00000000 
 903 059d C744241C 		movl	$0x00000000, 28(%rsp)
 903      00000000 
 157:Src/geometry.cpp ****             l1 = 0;
 904              		.loc 1 157 16 view .LVU282
 905 05a5 448B2500 		movl	.LC5(%rip), %r12d
 905      000000
 906              	.LVL61:
 907              	.L106:
 161:Src/geometry.cpp ****         b2.b += obst->a;
 908              		.loc 1 161 9 is_stmt 1 view .LVU283
 161:Src/geometry.cpp ****         b2.b += obst->a;
 909              		.loc 1 161 14 is_stmt 0 view .LVU284
 910 05ac F30F1044 		movss	52(%rsp), %xmm0
GAS LISTING /tmp/ccQVJrVe.s 			page 40


 910      2434
 911 05b2 F30F5843 		addss	40(%rbx), %xmm0
 911      28
 912 05b7 F30F1144 		movss	%xmm0, 52(%rsp)
 912      2434
 163:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 913              		.loc 1 163 9 is_stmt 1 view .LVU285
 163:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 914              		.loc 1 163 42 is_stmt 0 view .LVU286
 915 05bd 488D7424 		leaq	48(%rsp), %rsi
 915      30
 916 05c2 488D7C24 		leaq	40(%rsp), %rdi
 916      28
 917 05c7 E8000000 		call	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_
 917      00
 918              	.LVL62:
 919 05cc 660FD644 		movq	%xmm0, 32(%rsp)
 919      2420
 164:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 920              		.loc 1 164 9 is_stmt 1 view .LVU287
 164:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 921              		.loc 1 164 23 is_stmt 0 view .LVU288
 922 05d2 488D7C24 		leaq	32(%rsp), %rdi
 922      20
 923 05d7 4889DE   		movq	%rbx, %rsi
 924 05da E8000000 		call	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
 924      00
 925              	.LVL63:
 164:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 926              		.loc 1 164 9 view .LVU289
 927 05df 84C0     		testb	%al, %al
 928 05e1 0F851501 		jne	.L139
 928      0000
 187:Src/geometry.cpp ****             l2 = 0;
 929              		.loc 1 187 13 is_stmt 1 view .LVU290
 188:Src/geometry.cpp ****             inter2 = {0, 0};
 930              		.loc 1 188 13 view .LVU291
 188:Src/geometry.cpp ****             inter2 = {0, 0};
 931              		.loc 1 188 20 is_stmt 0 view .LVU292
 932 05e7 C7442420 		movl	$0x00000000, 32(%rsp)
 932      00000000 
 933 05ef C7442424 		movl	$0x00000000, 36(%rsp)
 933      00000000 
 934              	.L113:
 192:Src/geometry.cpp ****         b2.k = 0;
 935              		.loc 1 192 9 is_stmt 1 view .LVU293
 192:Src/geometry.cpp ****         b2.k = 0;
 936              		.loc 1 192 14 is_stmt 0 view .LVU294
 937 05f7 C7442430 		movl	$0x00000000, 48(%rsp)
 937      00000000 
 193:Src/geometry.cpp ****         b2.b = obst->c->y;
 938              		.loc 1 193 9 is_stmt 1 view .LVU295
 193:Src/geometry.cpp ****         b2.b = obst->c->y;
 939              		.loc 1 193 22 is_stmt 0 view .LVU296
 940 05ff 488B03   		movq	(%rbx), %rax
 193:Src/geometry.cpp ****         b2.b = obst->c->y;
 941              		.loc 1 193 25 view .LVU297
GAS LISTING /tmp/ccQVJrVe.s 			page 41


 942 0602 F30F1040 		movss	4(%rax), %xmm0
 942      04
 193:Src/geometry.cpp ****         b2.b = obst->c->y;
 943              		.loc 1 193 14 view .LVU298
 944 0607 F30F1144 		movss	%xmm0, 52(%rsp)
 944      2434
 194:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 945              		.loc 1 194 9 is_stmt 1 view .LVU299
 194:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 946              		.loc 1 194 42 is_stmt 0 view .LVU300
 947 060d 488D7424 		leaq	48(%rsp), %rsi
 947      30
 948 0612 488D7C24 		leaq	40(%rsp), %rdi
 948      28
 949 0617 E8000000 		call	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_
 949      00
 950              	.LVL64:
 951 061c 660FD644 		movq	%xmm0, 32(%rsp)
 951      2420
 195:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 952              		.loc 1 195 9 is_stmt 1 view .LVU301
 195:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 953              		.loc 1 195 23 is_stmt 0 view .LVU302
 954 0622 488D7C24 		leaq	32(%rsp), %rdi
 954      20
 955 0627 4889DE   		movq	%rbx, %rsi
 956 062a E8000000 		call	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
 956      00
 957              	.LVL65:
 195:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 958              		.loc 1 195 9 view .LVU303
 959 062f 84C0     		testb	%al, %al
 960 0631 0F857401 		jne	.L140
 960      0000
 218:Src/geometry.cpp ****             l2 = 0;
 961              		.loc 1 218 13 is_stmt 1 view .LVU304
 219:Src/geometry.cpp ****             inter2 = {0, 0};
 962              		.loc 1 219 13 view .LVU305
 219:Src/geometry.cpp ****             inter2 = {0, 0};
 963              		.loc 1 219 20 is_stmt 0 view .LVU306
 964 0637 C7442420 		movl	$0x00000000, 32(%rsp)
 964      00000000 
 965 063f C7442424 		movl	$0x00000000, 36(%rsp)
 965      00000000 
 966              	.L122:
 223:Src/geometry.cpp ****         b2.b += obst->b;
 967              		.loc 1 223 9 is_stmt 1 view .LVU307
 223:Src/geometry.cpp ****         b2.b += obst->b;
 968              		.loc 1 223 14 is_stmt 0 view .LVU308
 969 0647 F30F1044 		movss	52(%rsp), %xmm0
 969      2434
 970 064d F30F5843 		addss	44(%rbx), %xmm0
 970      2C
 971 0652 F30F1144 		movss	%xmm0, 52(%rsp)
 971      2434
 225:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 972              		.loc 1 225 9 is_stmt 1 view .LVU309
GAS LISTING /tmp/ccQVJrVe.s 			page 42


 225:Src/geometry.cpp ****         inter2 = getIntersection(&b1, &b2);
 973              		.loc 1 225 42 is_stmt 0 view .LVU310
 974 0658 488D7424 		leaq	48(%rsp), %rsi
 974      30
 975 065d 488D7C24 		leaq	40(%rsp), %rdi
 975      28
 976 0662 E8000000 		call	_ZN8geometry15getIntersectionEPKN5bases8baselineES3_
 976      00
 977              	.LVL66:
 978 0667 660FD644 		movq	%xmm0, 32(%rsp)
 978      2420
 226:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 979              		.loc 1 226 9 is_stmt 1 view .LVU311
 226:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 980              		.loc 1 226 23 is_stmt 0 view .LVU312
 981 066d 488D7C24 		leaq	32(%rsp), %rdi
 981      20
 982 0672 4889DE   		movq	%rbx, %rsi
 983 0675 E8000000 		call	_ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
 983      00
 984              	.LVL67:
 226:Src/geometry.cpp ****         if(isDotInside(&inter2, obst))
 985              		.loc 1 226 9 view .LVU313
 986 067a 84C0     		testb	%al, %al
 987 067c 0F85D801 		jne	.L141
 987      0000
 988              	.LVL68:
 989              	.L125:
 253:Src/geometry.cpp ****         return inter1;
 990              		.loc 1 253 9 is_stmt 1 view .LVU314
 253:Src/geometry.cpp ****         return inter1;
 991              		.loc 1 253 16 is_stmt 0 view .LVU315
 992 0682 F30F7E44 		movq	24(%rsp), %xmm0
 992      2418
 254:Src/geometry.cpp ****     }
 993              		.loc 1 254 5 view .LVU316
 994 0688 488B4424 		movq	56(%rsp), %rax
 994      38
 995 068d 64483304 		xorq	%fs:40, %rax
 995      25280000 
 995      00
 996 0696 0F853A02 		jne	.L142
 996      0000
 997 069c 4883C448 		addq	$72, %rsp
 998              		.cfi_remember_state
 999              		.cfi_def_cfa_offset 40
 1000 06a0 5B       		popq	%rbx
 1001              		.cfi_def_cfa_offset 32
 1002 06a1 5D       		popq	%rbp
 1003              		.cfi_def_cfa_offset 24
 1004              	.LVL69:
 254:Src/geometry.cpp ****     }
 1005              		.loc 1 254 5 view .LVU317
 1006 06a2 415C     		popq	%r12
 1007              		.cfi_def_cfa_offset 16
 1008 06a4 415D     		popq	%r13
 1009              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/ccQVJrVe.s 			page 43


 1010 06a6 C3       		ret
 1011              	.LVL70:
 1012              	.L138:
 1013              		.cfi_restore_state
 148:Src/geometry.cpp ****             l1 = getLen(v->c, &inter1);
 1014              		.loc 1 148 13 is_stmt 1 view .LVU318
 148:Src/geometry.cpp ****             l1 = getLen(v->c, &inter1);
 1015              		.loc 1 148 28 is_stmt 0 view .LVU319
 1016 06a7 488B7D00 		movq	0(%rbp), %rdi
 148:Src/geometry.cpp ****             l1 = getLen(v->c, &inter1);
 1017              		.loc 1 148 24 view .LVU320
 1018 06ab 4C8D6C24 		leaq	24(%rsp), %r13
 1018      18
 1019 06b0 4C89EE   		movq	%r13, %rsi
 1020 06b3 E8000000 		call	_ZN8geometry6getLenEPKN5bases6coordsES3_
 1020      00
 1021              	.LVL71:
 1022 06b8 66410F7E 		movd	%xmm0, %r12d
 1022      C4
 1023              	.LVL72:
 149:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 1024              		.loc 1 149 13 is_stmt 1 view .LVU321
 149:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 1025              		.loc 1 149 33 is_stmt 0 view .LVU322
 1026 06bd 4C89EE   		movq	%r13, %rsi
 1027 06c0 4889EF   		movq	%rbp, %rdi
 1028 06c3 E8000000 		call	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
 1028      00
 1029              	.LVL73:
 149:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 1030              		.loc 1 149 16 view .LVU323
 1031 06c8 84C0     		testb	%al, %al
 1032 06ca 7414     		je	.L105
 149:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter1) && l1 <= lv))
 1033              		.loc 1 149 16 discriminator 2 view .LVU324
 1034 06cc F30F1064 		movss	8(%rsp), %xmm4
 1034      2408
 1035 06d2 66410F6E 		movd	%r12d, %xmm5
 1035      EC
 1036 06d7 0F2FE5   		comiss	%xmm5, %xmm4
 1037 06da 0F83CCFE 		jnb	.L106
 1037      FFFF
 1038              	.L105:
 151:Src/geometry.cpp ****                 l1 = 0;
 1039              		.loc 1 151 17 is_stmt 1 view .LVU325
 1040              	.LVL74:
 152:Src/geometry.cpp ****                 inter1 = {0, 0};
 1041              		.loc 1 152 17 view .LVU326
 152:Src/geometry.cpp ****                 inter1 = {0, 0};
 1042              		.loc 1 152 24 is_stmt 0 view .LVU327
 1043 06e0 C7442418 		movl	$0x00000000, 24(%rsp)
 1043      00000000 
 1044 06e8 C744241C 		movl	$0x00000000, 28(%rsp)
 1044      00000000 
 151:Src/geometry.cpp ****                 l1 = 0;
 1045              		.loc 1 151 20 view .LVU328
 1046 06f0 448B2500 		movl	.LC5(%rip), %r12d
GAS LISTING /tmp/ccQVJrVe.s 			page 44


 1046      000000
 1047 06f7 E9B0FEFF 		jmp	.L106
 1047      FF
 1048              	.LVL75:
 1049              	.L139:
 166:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1050              		.loc 1 166 13 is_stmt 1 view .LVU329
 166:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1051              		.loc 1 166 28 is_stmt 0 view .LVU330
 1052 06fc 488B7D00 		movq	0(%rbp), %rdi
 166:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1053              		.loc 1 166 24 view .LVU331
 1054 0700 4C8D6C24 		leaq	32(%rsp), %r13
 1054      20
 1055 0705 4C89EE   		movq	%r13, %rsi
 1056 0708 E8000000 		call	_ZN8geometry6getLenEPKN5bases6coordsES3_
 1056      00
 1057              	.LVL76:
 1058 070d F30F1144 		movss	%xmm0, 12(%rsp)
 1058      240C
 1059              	.LVL77:
 167:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1060              		.loc 1 167 13 is_stmt 1 view .LVU332
 167:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1061              		.loc 1 167 33 is_stmt 0 view .LVU333
 1062 0713 4C89EE   		movq	%r13, %rsi
 1063 0716 4889EF   		movq	%rbp, %rdi
 1064 0719 E8000000 		call	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
 1064      00
 1065              	.LVL78:
 167:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1066              		.loc 1 167 16 view .LVU334
 1067 071e 84C0     		testb	%al, %al
 1068 0720 7453     		je	.L108
 167:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1069              		.loc 1 167 16 discriminator 2 view .LVU335
 1070 0722 F30F1074 		movss	8(%rsp), %xmm6
 1070      2408
 1071 0728 0F2F7424 		comiss	12(%rsp), %xmm6
 1071      0C
 1072 072d 7246     		jb	.L108
 172:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1073              		.loc 1 172 18 is_stmt 1 view .LVU336
 1074              	.LVL79:
 1075              	.LBB37:
 1076              	.LBI37:
 1077              		.file 5 "Includes/bases.hpp"
   1:Includes/bases.hpp **** #pragma once
   2:Includes/bases.hpp **** 
   3:Includes/bases.hpp **** #include <iostream>
   4:Includes/bases.hpp **** #include <stdlib.h>
   5:Includes/bases.hpp **** #include <unistd.h>
   6:Includes/bases.hpp **** #include <stdint.h>
   7:Includes/bases.hpp **** #include "math.hpp"
   8:Includes/bases.hpp **** 
   9:Includes/bases.hpp **** namespace bases
  10:Includes/bases.hpp **** {
GAS LISTING /tmp/ccQVJrVe.s 			page 45


  11:Includes/bases.hpp ****     typedef float COORDS_DATATYPE;
  12:Includes/bases.hpp **** 
  13:Includes/bases.hpp **** 
  14:Includes/bases.hpp ****     const uint8_t CORNER_LEFT_BOT  = 0;
  15:Includes/bases.hpp ****     const uint8_t CORNER_LEFT_TOP  = 1;
  16:Includes/bases.hpp ****     const uint8_t CORNER_RIGHT_TOP = 2;
  17:Includes/bases.hpp ****     const uint8_t CORNER_RIGHT_BOT = 3;
  18:Includes/bases.hpp ****  
  19:Includes/bases.hpp **** 	struct array
  20:Includes/bases.hpp **** 	{
  21:Includes/bases.hpp **** 		void *items;
  22:Includes/bases.hpp **** 		size_t size;
  23:Includes/bases.hpp **** 	};
  24:Includes/bases.hpp **** 
  25:Includes/bases.hpp **** 
  26:Includes/bases.hpp **** 	struct coords
  27:Includes/bases.hpp **** 	{
  28:Includes/bases.hpp **** 		COORDS_DATATYPE     x,
  29:Includes/bases.hpp **** 							y;
  30:Includes/bases.hpp **** 
  31:Includes/bases.hpp **** 		bool eq(struct coords *c)
  32:Includes/bases.hpp **** 		{
  33:Includes/bases.hpp **** 			return (x == c->x && y == c->y);
  34:Includes/bases.hpp **** 		}
  35:Includes/bases.hpp **** 
  36:Includes/bases.hpp **** 		bool eq(COORDS_DATATYPE _x, COORDS_DATATYPE _y)
 1078              		.loc 5 36 8 view .LVU337
 1079              	.LBB38:
  37:Includes/bases.hpp **** 		{
  38:Includes/bases.hpp **** 			return (x == _x && y == _y);
 1080              		.loc 5 38 4 view .LVU338
 1081              		.loc 5 38 12 is_stmt 0 view .LVU339
 1082 072f F30F1044 		movss	24(%rsp), %xmm0
 1082      2418
 1083              		.loc 5 38 20 view .LVU340
 1084 0735 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1084      000000
 1085 073c 7A4C     		jp	.L112
 1086 073e 754A     		jne	.L112
 1087              		.loc 5 38 23 view .LVU341
 1088 0740 F30F1044 		movss	28(%rsp), %xmm0
 1088      241C
 1089              		.loc 5 38 20 view .LVU342
 1090 0746 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1090      000000
 1091 074d 7A3B     		jp	.L112
 1092 074f 7539     		jne	.L112
 1093              	.LVL80:
 1094              	.L114:
 1095              		.loc 5 38 20 view .LVU343
 1096              	.LBE38:
 1097              	.LBE37:
 174:Src/geometry.cpp ****                 inter1 = inter2;
 1098              		.loc 1 174 17 is_stmt 1 view .LVU344
 174:Src/geometry.cpp ****                 inter1 = inter2;
 1099              		.loc 1 174 24 is_stmt 0 view .LVU345
 1100 0751 488B4424 		movq	32(%rsp), %rax
GAS LISTING /tmp/ccQVJrVe.s 			page 46


 1100      20
 1101 0756 48894424 		movq	%rax, 24(%rsp)
 1101      18
 175:Src/geometry.cpp ****                 l1 = l2;
 1102              		.loc 1 175 17 is_stmt 1 view .LVU346
 1103              	.LVL81:
 176:Src/geometry.cpp ****                 l2 = 0;
 1104              		.loc 1 176 17 view .LVU347
 177:Src/geometry.cpp ****                 inter2 = {0, 0};
 1105              		.loc 1 177 17 view .LVU348
 177:Src/geometry.cpp ****                 inter2 = {0, 0};
 1106              		.loc 1 177 24 is_stmt 0 view .LVU349
 1107 075b C7442420 		movl	$0x00000000, 32(%rsp)
 1107      00000000 
 1108 0763 C7442424 		movl	$0x00000000, 36(%rsp)
 1108      00000000 
 175:Src/geometry.cpp ****                 l1 = l2;
 1109              		.loc 1 175 20 view .LVU350
 1110 076b 448B6424 		movl	12(%rsp), %r12d
 1110      0C
 1111 0770 E982FEFF 		jmp	.L113
 1111      FF
 1112              	.LVL82:
 1113              	.L108:
 169:Src/geometry.cpp ****                 inter2 = {0, 0};
 1114              		.loc 1 169 17 is_stmt 1 view .LVU351
 169:Src/geometry.cpp ****                 inter2 = {0, 0};
 1115              		.loc 1 169 24 is_stmt 0 view .LVU352
 1116 0775 C7442420 		movl	$0x00000000, 32(%rsp)
 1116      00000000 
 1117 077d C7442424 		movl	$0x00000000, 36(%rsp)
 1117      00000000 
 170:Src/geometry.cpp ****                 l2 = 0;
 1118              		.loc 1 170 17 is_stmt 1 view .LVU353
 1119              	.LVL83:
 170:Src/geometry.cpp ****                 l2 = 0;
 1120              		.loc 1 170 17 is_stmt 0 view .LVU354
 1121 0785 E96DFEFF 		jmp	.L113
 1121      FF
 1122              	.LVL84:
 1123              	.L112:
 172:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1124              		.loc 1 172 37 view .LVU355
 1125 078a 66410F6E 		movd	%r12d, %xmm2
 1125      D4
 1126 078f 0F2F5424 		comiss	12(%rsp), %xmm2
 1126      0C
 1127 0794 77BB     		ja	.L114
 1128              	.LVL85:
 181:Src/geometry.cpp ****                 l2 = 0;
 1129              		.loc 1 181 17 is_stmt 1 view .LVU356
 182:Src/geometry.cpp ****                 inter2 = {0, 0};
 1130              		.loc 1 182 17 view .LVU357
 182:Src/geometry.cpp ****                 inter2 = {0, 0};
 1131              		.loc 1 182 24 is_stmt 0 view .LVU358
 1132 0796 C7442420 		movl	$0x00000000, 32(%rsp)
 1132      00000000 
GAS LISTING /tmp/ccQVJrVe.s 			page 47


 1133 079e C7442424 		movl	$0x00000000, 36(%rsp)
 1133      00000000 
 1134 07a6 E94CFEFF 		jmp	.L113
 1134      FF
 1135              	.LVL86:
 1136              	.L140:
 197:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1137              		.loc 1 197 13 is_stmt 1 view .LVU359
 197:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1138              		.loc 1 197 28 is_stmt 0 view .LVU360
 1139 07ab 488B7D00 		movq	0(%rbp), %rdi
 197:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1140              		.loc 1 197 24 view .LVU361
 1141 07af 4C8D6C24 		leaq	32(%rsp), %r13
 1141      20
 1142 07b4 4C89EE   		movq	%r13, %rsi
 1143 07b7 E8000000 		call	_ZN8geometry6getLenEPKN5bases6coordsES3_
 1143      00
 1144              	.LVL87:
 1145 07bc F30F1144 		movss	%xmm0, 12(%rsp)
 1145      240C
 1146              	.LVL88:
 198:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1147              		.loc 1 198 13 is_stmt 1 view .LVU362
 198:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1148              		.loc 1 198 33 is_stmt 0 view .LVU363
 1149 07c2 4C89EE   		movq	%r13, %rsi
 1150 07c5 4889EF   		movq	%rbp, %rdi
 1151 07c8 E8000000 		call	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
 1151      00
 1152              	.LVL89:
 198:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1153              		.loc 1 198 16 view .LVU364
 1154 07cd 84C0     		testb	%al, %al
 1155 07cf 7453     		je	.L117
 198:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1156              		.loc 1 198 16 discriminator 2 view .LVU365
 1157 07d1 F30F107C 		movss	8(%rsp), %xmm7
 1157      2408
 1158 07d7 0F2F7C24 		comiss	12(%rsp), %xmm7
 1158      0C
 1159 07dc 7246     		jb	.L117
 203:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1160              		.loc 1 203 18 is_stmt 1 view .LVU366
 1161              	.LVL90:
 1162              	.LBB39:
 1163              	.LBI39:
  36:Includes/bases.hpp **** 		{
 1164              		.loc 5 36 8 view .LVU367
 1165              	.LBB40:
 1166              		.loc 5 38 4 view .LVU368
 1167              		.loc 5 38 12 is_stmt 0 view .LVU369
 1168 07de F30F1044 		movss	24(%rsp), %xmm0
 1168      2418
 1169              		.loc 5 38 20 view .LVU370
 1170 07e4 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1170      000000
GAS LISTING /tmp/ccQVJrVe.s 			page 48


 1171 07eb 7A4C     		jp	.L121
 1172 07ed 754A     		jne	.L121
 1173              		.loc 5 38 23 view .LVU371
 1174 07ef F30F1044 		movss	28(%rsp), %xmm0
 1174      241C
 1175              		.loc 5 38 20 view .LVU372
 1176 07f5 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1176      000000
 1177 07fc 7A3B     		jp	.L121
 1178 07fe 7539     		jne	.L121
 1179              	.LVL91:
 1180              	.L123:
 1181              		.loc 5 38 20 view .LVU373
 1182              	.LBE40:
 1183              	.LBE39:
 205:Src/geometry.cpp ****                 inter1 = inter2;
 1184              		.loc 1 205 17 is_stmt 1 view .LVU374
 205:Src/geometry.cpp ****                 inter1 = inter2;
 1185              		.loc 1 205 24 is_stmt 0 view .LVU375
 1186 0800 488B4424 		movq	32(%rsp), %rax
 1186      20
 1187 0805 48894424 		movq	%rax, 24(%rsp)
 1187      18
 206:Src/geometry.cpp ****                 l1 = l2;
 1188              		.loc 1 206 17 is_stmt 1 view .LVU376
 1189              	.LVL92:
 207:Src/geometry.cpp ****                 l2 = 0;
 1190              		.loc 1 207 17 view .LVU377
 208:Src/geometry.cpp ****                 inter2 = {0, 0};
 1191              		.loc 1 208 17 view .LVU378
 208:Src/geometry.cpp ****                 inter2 = {0, 0};
 1192              		.loc 1 208 24 is_stmt 0 view .LVU379
 1193 080a C7442420 		movl	$0x00000000, 32(%rsp)
 1193      00000000 
 1194 0812 C7442424 		movl	$0x00000000, 36(%rsp)
 1194      00000000 
 206:Src/geometry.cpp ****                 l1 = l2;
 1195              		.loc 1 206 20 view .LVU380
 1196 081a 448B6424 		movl	12(%rsp), %r12d
 1196      0C
 1197 081f E923FEFF 		jmp	.L122
 1197      FF
 1198              	.LVL93:
 1199              	.L117:
 200:Src/geometry.cpp ****                 inter2 = {0, 0};
 1200              		.loc 1 200 17 is_stmt 1 view .LVU381
 200:Src/geometry.cpp ****                 inter2 = {0, 0};
 1201              		.loc 1 200 24 is_stmt 0 view .LVU382
 1202 0824 C7442420 		movl	$0x00000000, 32(%rsp)
 1202      00000000 
 1203 082c C7442424 		movl	$0x00000000, 36(%rsp)
 1203      00000000 
 201:Src/geometry.cpp ****                 l2 = 0;
 1204              		.loc 1 201 17 is_stmt 1 view .LVU383
 1205              	.LVL94:
 201:Src/geometry.cpp ****                 l2 = 0;
 1206              		.loc 1 201 17 is_stmt 0 view .LVU384
GAS LISTING /tmp/ccQVJrVe.s 			page 49


 1207 0834 E90EFEFF 		jmp	.L122
 1207      FF
 1208              	.LVL95:
 1209              	.L121:
 203:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1210              		.loc 1 203 37 view .LVU385
 1211 0839 66410F6E 		movd	%r12d, %xmm4
 1211      E4
 1212 083e 0F2F6424 		comiss	12(%rsp), %xmm4
 1212      0C
 1213 0843 77BB     		ja	.L123
 1214              	.LVL96:
 212:Src/geometry.cpp ****                 l2 = 0;
 1215              		.loc 1 212 17 is_stmt 1 view .LVU386
 213:Src/geometry.cpp ****                 inter2 = {0, 0};
 1216              		.loc 1 213 17 view .LVU387
 213:Src/geometry.cpp ****                 inter2 = {0, 0};
 1217              		.loc 1 213 24 is_stmt 0 view .LVU388
 1218 0845 C7442420 		movl	$0x00000000, 32(%rsp)
 1218      00000000 
 1219 084d C7442424 		movl	$0x00000000, 36(%rsp)
 1219      00000000 
 1220 0855 E9EDFDFF 		jmp	.L122
 1220      FF
 1221              	.LVL97:
 1222              	.L141:
 228:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1223              		.loc 1 228 13 is_stmt 1 view .LVU389
 228:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1224              		.loc 1 228 28 is_stmt 0 view .LVU390
 1225 085a 488B7D00 		movq	0(%rbp), %rdi
 228:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1226              		.loc 1 228 24 view .LVU391
 1227 085e 488D5C24 		leaq	32(%rsp), %rbx
 1227      20
 1228              	.LVL98:
 228:Src/geometry.cpp ****             l2 = getLen(v->c, &inter2);
 1229              		.loc 1 228 24 view .LVU392
 1230 0863 4889DE   		movq	%rbx, %rsi
 1231 0866 E8000000 		call	_ZN8geometry6getLenEPKN5bases6coordsES3_
 1231      00
 1232              	.LVL99:
 1233 086b F30F1144 		movss	%xmm0, 12(%rsp)
 1233      240C
 1234              	.LVL100:
 229:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1235              		.loc 1 229 13 is_stmt 1 view .LVU393
 229:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1236              		.loc 1 229 33 is_stmt 0 view .LVU394
 1237 0871 4889DE   		movq	%rbx, %rsi
 1238 0874 4889EF   		movq	%rbp, %rdi
 1239 0877 E8000000 		call	_ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
 1239      00
 1240              	.LVL101:
 229:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1241              		.loc 1 229 16 view .LVU395
 1242 087c 84C0     		testb	%al, %al
GAS LISTING /tmp/ccQVJrVe.s 			page 50


 1243 087e 0F84FEFD 		je	.L125
 1243      FFFF
 229:Src/geometry.cpp ****             if(!(isCoDirectional(v, &inter2) && l2 <= lv))
 1244              		.loc 1 229 16 discriminator 2 view .LVU396
 1245 0884 F30F104C 		movss	8(%rsp), %xmm1
 1245      2408
 1246 088a 0F2F4C24 		comiss	12(%rsp), %xmm1
 1246      0C
 1247 088f 0F82EDFD 		jb	.L125
 1247      FFFF
 234:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1248              		.loc 1 234 18 is_stmt 1 view .LVU397
 1249              	.LVL102:
 1250              	.LBB41:
 1251              	.LBI41:
  36:Includes/bases.hpp **** 		{
 1252              		.loc 5 36 8 view .LVU398
 1253              	.LBB42:
 1254              		.loc 5 38 4 view .LVU399
 1255              		.loc 5 38 12 is_stmt 0 view .LVU400
 1256 0895 F30F1044 		movss	24(%rsp), %xmm0
 1256      2418
 1257              		.loc 5 38 20 view .LVU401
 1258 089b 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1258      000000
 1259 08a2 7A13     		jp	.L127
 1260 08a4 7511     		jne	.L127
 1261              		.loc 5 38 23 view .LVU402
 1262 08a6 F30F1044 		movss	28(%rsp), %xmm0
 1262      241C
 1263              		.loc 5 38 20 view .LVU403
 1264 08ac 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1264      000000
 1265 08b3 7A02     		jp	.L127
 1266 08b5 7410     		je	.L129
 1267              	.L127:
 1268              	.LVL103:
 1269              		.loc 5 38 20 view .LVU404
 1270              	.LBE42:
 1271              	.LBE41:
 234:Src/geometry.cpp ****             else if(inter1.eq(0, 0) || l2 < l1)
 1272              		.loc 1 234 37 view .LVU405
 1273 08b7 66410F6E 		movd	%r12d, %xmm6
 1273      F4
 1274 08bc 0F2F7424 		comiss	12(%rsp), %xmm6
 1274      0C
 1275 08c1 0F86BBFD 		jbe	.L125
 1275      FFFF
 1276              	.L129:
 236:Src/geometry.cpp ****                 inter1 = inter2;
 1277              		.loc 1 236 17 is_stmt 1 view .LVU406
 236:Src/geometry.cpp ****                 inter1 = inter2;
 1278              		.loc 1 236 24 is_stmt 0 view .LVU407
 1279 08c7 488B4424 		movq	32(%rsp), %rax
 1279      20
 1280 08cc 48894424 		movq	%rax, 24(%rsp)
 1280      18
GAS LISTING /tmp/ccQVJrVe.s 			page 51


 237:Src/geometry.cpp ****                 l1 = l2;
 1281              		.loc 1 237 17 is_stmt 1 view .LVU408
 1282              	.LVL104:
 238:Src/geometry.cpp ****                 l2 = 0;
 1283              		.loc 1 238 17 view .LVU409
 239:Src/geometry.cpp ****                 inter2 = {0, 0};
 1284              		.loc 1 239 17 view .LVU410
 1285 08d1 E9ACFDFF 		jmp	.L125
 1285      FF
 1286              	.LVL105:
 1287              	.L142:
 254:Src/geometry.cpp ****     }
 1288              		.loc 1 254 5 is_stmt 0 view .LVU411
 1289 08d6 E8000000 		call	__stack_chk_fail@PLT
 1289      00
 1290              	.LVL106:
 1291              		.cfi_endproc
 1292              	.LFE1734:
 1294              		.globl	_ZN8geometry15hasIntersectionEPKN5bases8obstacleEPKNS0_4vectE
 1296              	_ZN8geometry15hasIntersectionEPKN5bases8obstacleEPKNS0_4vectE:
 1297              	.LVL107:
 1298              	.LFB1730:
  83:Src/geometry.cpp ****     {
 1299              		.loc 1 83 5 is_stmt 1 view -0
 1300              		.cfi_startproc
  83:Src/geometry.cpp ****     {
 1301              		.loc 1 83 5 is_stmt 0 view .LVU413
 1302 08db 53       		pushq	%rbx
 1303              		.cfi_def_cfa_offset 16
 1304              		.cfi_offset 3, -16
 1305 08dc 4889F3   		movq	%rsi, %rbx
  84:Src/geometry.cpp ****         struct coords c = getIntersection(obst, v);
 1306              		.loc 1 84 9 is_stmt 1 view .LVU414
  84:Src/geometry.cpp ****         struct coords c = getIntersection(obst, v);
 1307              		.loc 1 84 50 is_stmt 0 view .LVU415
 1308 08df E8000000 		call	_ZN8geometry15getIntersectionEPKN5bases8obstacleEPKNS0_4vectE
 1308      00
 1309              	.LVL108:
  84:Src/geometry.cpp ****         struct coords c = getIntersection(obst, v);
 1310              		.loc 1 84 50 view .LVU416
 1311 08e4 66480F7E 		movq	%xmm0, %rax
 1311      C0
 1312              	.LVL109:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1313              		.loc 1 85 9 is_stmt 1 view .LVU417
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1314              		.loc 1 85 49 is_stmt 0 view .LVU418
 1315 08e9 0F2E0500 		ucomiss	.LC5(%rip), %xmm0
 1315      000000
 1316 08f0 7A18     		jp	.L144
 1317 08f2 7516     		jne	.L144
 1318              	.LVL110:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1319              		.loc 1 85 27 discriminator 1 view .LVU419
 1320 08f4 66480F7E 		movq	%xmm0, %rcx
 1320      C1
 1321 08f9 48C1E920 		shrq	$32, %rcx
GAS LISTING /tmp/ccQVJrVe.s 			page 52


 1322 08fd 660F6EC9 		movd	%ecx, %xmm1
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1323              		.loc 1 85 22 discriminator 1 view .LVU420
 1324 0901 0F2E0D00 		ucomiss	.LC5(%rip), %xmm1
 1324      000000
 1325 0908 7B2C     		jnp	.L162
 1326              	.L144:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1327              		.loc 1 85 46 discriminator 4 view .LVU421
 1328 090a 488B13   		movq	(%rbx), %rdx
 1329              	.LVL111:
 1330              	.LBB43:
 1331              	.LBI43:
  31:Includes/bases.hpp **** 		{
 1332              		.loc 5 31 8 is_stmt 1 discriminator 4 view .LVU422
 1333              	.LBB44:
  33:Includes/bases.hpp **** 		}
 1334              		.loc 5 33 4 discriminator 4 view .LVU423
  33:Includes/bases.hpp **** 		}
 1335              		.loc 5 33 20 is_stmt 0 discriminator 4 view .LVU424
 1336 090d F30F100A 		movss	(%rdx), %xmm1
  33:Includes/bases.hpp **** 		}
 1337              		.loc 5 33 22 discriminator 4 view .LVU425
 1338 0911 0F2EC1   		ucomiss	%xmm1, %xmm0
 1339 0914 7A29     		jp	.L148
 1340 0916 7527     		jne	.L148
 1341              	.LVL112:
  33:Includes/bases.hpp **** 		}
 1342              		.loc 5 33 25 view .LVU426
 1343 0918 4889C1   		movq	%rax, %rcx
 1344 091b 48C1E920 		shrq	$32, %rcx
 1345 091f 660F6ED1 		movd	%ecx, %xmm2
  33:Includes/bases.hpp **** 		}
 1346              		.loc 5 33 33 view .LVU427
 1347 0923 F30F105A 		movss	4(%rdx), %xmm3
 1347      04
  33:Includes/bases.hpp **** 		}
 1348              		.loc 5 33 22 view .LVU428
 1349 0928 0F2ED3   		ucomiss	%xmm3, %xmm2
 1350 092b 7A12     		jp	.L148
 1351 092d 7510     		jne	.L148
 1352              	.LBE44:
 1353              	.LBE43:
  86:Src/geometry.cpp ****             return false;
 1354              		.loc 1 86 20 view .LVU429
 1355 092f B8000000 		movl	$0, %eax
 1355      00
 1356 0934 EB41     		jmp	.L143
 1357              	.LVL113:
 1358              	.L162:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1359              		.loc 1 85 22 discriminator 1 view .LVU430
 1360 0936 75D2     		jne	.L144
  86:Src/geometry.cpp ****             return false;
 1361              		.loc 1 86 20 view .LVU431
 1362 0938 B8000000 		movl	$0, %eax
 1362      00
GAS LISTING /tmp/ccQVJrVe.s 			page 53


 1363 093d EB38     		jmp	.L143
 1364              	.LVL114:
 1365              	.L148:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1366              		.loc 1 85 61 view .LVU432
 1367 093f F30F584B 		addss	8(%rbx), %xmm1
 1367      08
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1368              		.loc 1 85 49 view .LVU433
 1369 0944 0F2EC1   		ucomiss	%xmm1, %xmm0
 1370 0947 7A29     		jp	.L155
 1371 0949 7527     		jne	.L155
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1372              		.loc 1 85 99 discriminator 7 view .LVU434
 1373 094b F30F104A 		movss	4(%rdx), %xmm1
 1373      04
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1374              		.loc 1 85 91 discriminator 7 view .LVU435
 1375 0950 F30F584B 		addss	12(%rbx), %xmm1
 1375      0C
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1376              		.loc 1 85 107 discriminator 7 view .LVU436
 1377 0955 48C1E820 		shrq	$32, %rax
 1378              	.LVL115:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1379              		.loc 1 85 107 discriminator 7 view .LVU437
 1380 0959 660F6EC0 		movd	%eax, %xmm0
 1381              	.LVL116:
  85:Src/geometry.cpp ****         if((c.x == 0 && c.y == 0) || c.eq(v->c) || (((v->dx + v->c->x) == c.x) && ((v->dy + v->c->y
 1382              		.loc 1 85 80 discriminator 7 view .LVU438
 1383 095d 0F2EC8   		ucomiss	%xmm0, %xmm1
 1384 0960 7A09     		jp	.L160
 1385 0962 7507     		jne	.L160
  86:Src/geometry.cpp ****             return false;
 1386              		.loc 1 86 20 view .LVU439
 1387 0964 B8000000 		movl	$0, %eax
 1387      00
 1388 0969 EB0C     		jmp	.L143
 1389              	.L160:
  88:Src/geometry.cpp ****             return true;
 1390              		.loc 1 88 20 view .LVU440
 1391 096b B8010000 		movl	$1, %eax
 1391      00
 1392 0970 EB05     		jmp	.L143
 1393              	.LVL117:
 1394              	.L155:
  88:Src/geometry.cpp ****             return true;
 1395              		.loc 1 88 20 view .LVU441
 1396 0972 B8010000 		movl	$1, %eax
 1396      00
 1397              	.LVL118:
 1398              	.L143:
  89:Src/geometry.cpp ****     }
 1399              		.loc 1 89 5 view .LVU442
 1400 0977 5B       		popq	%rbx
 1401              		.cfi_def_cfa_offset 8
 1402              	.LVL119:
GAS LISTING /tmp/ccQVJrVe.s 			page 54


  89:Src/geometry.cpp ****     }
 1403              		.loc 1 89 5 view .LVU443
 1404 0978 C3       		ret
 1405              		.cfi_endproc
 1406              	.LFE1730:
 1408              		.globl	_ZN8geometry16hasIntersectionsEPKN5bases4vectE
 1410              	_ZN8geometry16hasIntersectionsEPKN5bases4vectE:
 1411              	.LVL120:
 1412              	.LFB1727:
  49:Src/geometry.cpp ****     {
 1413              		.loc 1 49 5 is_stmt 1 view -0
 1414              		.cfi_startproc
  49:Src/geometry.cpp ****     {
 1415              		.loc 1 49 5 is_stmt 0 view .LVU445
 1416 0979 55       		pushq	%rbp
 1417              		.cfi_def_cfa_offset 16
 1418              		.cfi_offset 6, -16
 1419 097a 53       		pushq	%rbx
 1420              		.cfi_def_cfa_offset 24
 1421              		.cfi_offset 3, -24
 1422 097b 4883EC08 		subq	$8, %rsp
 1423              		.cfi_def_cfa_offset 32
 1424 097f 4889FD   		movq	%rdi, %rbp
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1425              		.loc 1 50 9 is_stmt 1 view .LVU446
 1426              	.LVL121:
 1427              	.LBB45:
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1428              		.loc 1 50 20 is_stmt 0 view .LVU447
 1429 0982 BB000000 		movl	$0, %ebx
 1429      00
 1430              	.LVL122:
 1431              	.L165:
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1432              		.loc 1 50 29 is_stmt 1 discriminator 1 view .LVU448
 1433 0987 48391D00 		cmpq	%rbx, numOfObstacles(%rip)
 1433      000000
 1434 098e 7621     		jbe	.L166
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
 1435              		.loc 1 52 13 view .LVU449
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
 1436              		.loc 1 52 44 is_stmt 0 view .LVU450
 1437 0990 488D3C5B 		leaq	(%rbx,%rbx,2), %rdi
 1438 0994 48C1E704 		salq	$4, %rdi
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
 1439              		.loc 1 52 32 view .LVU451
 1440 0998 48033D00 		addq	obstacles(%rip), %rdi
 1440      000000
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
 1441              		.loc 1 52 31 view .LVU452
 1442 099f 4889EE   		movq	%rbp, %rsi
 1443 09a2 E8000000 		call	_ZN8geometry15hasIntersectionEPKN5bases8obstacleEPKNS0_4vectE
 1443      00
 1444              	.LVL123:
  52:Src/geometry.cpp ****             if(hasIntersection(&obstacles[i], v))
 1445              		.loc 1 52 13 view .LVU453
 1446 09a7 84C0     		testb	%al, %al
GAS LISTING /tmp/ccQVJrVe.s 			page 55


 1447 09a9 750B     		jne	.L163
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1448              		.loc 1 50 9 is_stmt 1 discriminator 2 view .LVU454
 1449 09ab 4883C301 		addq	$1, %rbx
 1450              	.LVL124:
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1451              		.loc 1 50 9 is_stmt 0 discriminator 2 view .LVU455
 1452 09af EBD6     		jmp	.L165
 1453              	.L166:
  50:Src/geometry.cpp ****         for(size_t i = 0; i < numOfObstacles; i++)
 1454              		.loc 1 50 9 discriminator 2 view .LVU456
 1455              	.LBE45:
  55:Src/geometry.cpp ****         return false;
 1456              		.loc 1 55 16 view .LVU457
 1457 09b1 B8000000 		movl	$0, %eax
 1457      00
 1458              	.L163:
  56:Src/geometry.cpp ****     }
 1459              		.loc 1 56 5 view .LVU458
 1460 09b6 4883C408 		addq	$8, %rsp
 1461              		.cfi_def_cfa_offset 24
 1462 09ba 5B       		popq	%rbx
 1463              		.cfi_def_cfa_offset 16
 1464              	.LVL125:
  56:Src/geometry.cpp ****     }
 1465              		.loc 1 56 5 view .LVU459
 1466 09bb 5D       		popq	%rbp
 1467              		.cfi_def_cfa_offset 8
 1468              	.LVL126:
  56:Src/geometry.cpp ****     }
 1469              		.loc 1 56 5 view .LVU460
 1470 09bc C3       		ret
 1471              		.cfi_endproc
 1472              	.LFE1727:
 1474              		.globl	_ZN8geometry17getCoordsOfCornerEPKN5bases8obstacleEh
 1476              	_ZN8geometry17getCoordsOfCornerEPKN5bases8obstacleEh:
 1477              	.LVL127:
 1478              	.LFB1742:
 299:Src/geometry.cpp ****     {
 1479              		.loc 1 299 5 is_stmt 1 view -0
 1480              		.cfi_startproc
 299:Src/geometry.cpp ****     {
 1481              		.loc 1 299 5 is_stmt 0 view .LVU462
 1482 09bd 55       		pushq	%rbp
 1483              		.cfi_def_cfa_offset 16
 1484              		.cfi_offset 6, -16
 1485 09be 53       		pushq	%rbx
 1486              		.cfi_def_cfa_offset 24
 1487              		.cfi_offset 3, -24
 1488 09bf 4883EC08 		subq	$8, %rsp
 1489              		.cfi_def_cfa_offset 32
 1490 09c3 4889FD   		movq	%rdi, %rbp
 1491 09c6 89F3     		movl	%esi, %ebx
 300:Src/geometry.cpp ****         struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 1492              		.loc 1 300 9 is_stmt 1 view .LVU463
 300:Src/geometry.cpp ****         struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 1493              		.loc 1 300 52 is_stmt 0 view .LVU464
GAS LISTING /tmp/ccQVJrVe.s 			page 56


 1494 09c8 BF080000 		movl	$8, %edi
 1494      00
 1495              	.LVL128:
 300:Src/geometry.cpp ****         struct coords *ret = (struct coords*)malloc(sizeof(struct coords));
 1496              		.loc 1 300 52 view .LVU465
 1497 09cd E8000000 		call	malloc@PLT
 1497      00
 1498              	.LVL129:
 301:Src/geometry.cpp ****         switch (corner) {
 1499              		.loc 1 301 9 is_stmt 1 view .LVU466
 1500 09d2 80FB02   		cmpb	$2, %bl
 1501 09d5 0F84CF00 		je	.L169
 1501      0000
 1502 09db 774E     		ja	.L170
 1503 09dd 84DB     		testb	%bl, %bl
 1504 09df 0F848800 		je	.L171
 1504      0000
 1505 09e5 80FB01   		cmpb	$1, %bl
 1506 09e8 0F85B500 		jne	.L168
 1506      0000
 308:Src/geometry.cpp ****             case CORNER_LEFT_TOP:
 1507              		.loc 1 308 13 view .LVU467
 309:Src/geometry.cpp ****             {
 1508              		.loc 1 309 13 view .LVU468
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1509              		.loc 1 310 17 view .LVU469
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1510              		.loc 1 310 32 is_stmt 0 view .LVU470
 1511 09ee 488B5500 		movq	0(%rbp), %rdx
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1512              		.loc 1 310 35 view .LVU471
 1513 09f2 660FEFC9 		pxor	%xmm1, %xmm1
 1514 09f6 F30F5A0A 		cvtss2sd	(%rdx), %xmm1
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1515              		.loc 1 310 37 view .LVU472
 1516 09fa F20F1015 		movsd	.LC11(%rip), %xmm2
 1516      00000000 
 1517 0a02 F20F5CCA 		subsd	%xmm2, %xmm1
 1518 0a06 F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
 310:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1519              		.loc 1 310 24 view .LVU473
 1520 0a0a F30F1108 		movss	%xmm1, (%rax)
 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1521              		.loc 1 311 17 is_stmt 1 view .LVU474
 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1522              		.loc 1 311 45 is_stmt 0 view .LVU475
 1523 0a0e F30F1045 		movss	44(%rbp), %xmm0
 1523      2C
 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1524              		.loc 1 311 37 view .LVU476
 1525 0a13 F30F5842 		addss	4(%rdx), %xmm0
 1525      04
 1526 0a18 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1527              		.loc 1 311 47 view .LVU477
 1528 0a1c F20F58C2 		addsd	%xmm2, %xmm0
 1529 0a20 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
GAS LISTING /tmp/ccQVJrVe.s 			page 57


 311:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1530              		.loc 1 311 24 view .LVU478
 1531 0a24 F30F1140 		movss	%xmm0, 4(%rax)
 1531      04
 312:Src/geometry.cpp ****                 break;
 1532              		.loc 1 312 17 is_stmt 1 view .LVU479
 1533 0a29 EB78     		jmp	.L168
 1534              	.L170:
 301:Src/geometry.cpp ****         switch (corner) {
 1535              		.loc 1 301 9 is_stmt 0 view .LVU480
 1536 0a2b 80FB03   		cmpb	$3, %bl
 1537 0a2e 7573     		jne	.L168
 314:Src/geometry.cpp ****             case CORNER_RIGHT_BOT:
 1538              		.loc 1 314 13 is_stmt 1 view .LVU481
 315:Src/geometry.cpp ****             {
 1539              		.loc 1 315 13 view .LVU482
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1540              		.loc 1 316 17 view .LVU483
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1541              		.loc 1 316 32 is_stmt 0 view .LVU484
 1542 0a30 488B5500 		movq	0(%rbp), %rdx
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1543              		.loc 1 316 45 view .LVU485
 1544 0a34 F30F1045 		movss	40(%rbp), %xmm0
 1544      28
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1545              		.loc 1 316 37 view .LVU486
 1546 0a39 F30F5802 		addss	(%rdx), %xmm0
 1547 0a3d F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1548              		.loc 1 316 47 view .LVU487
 1549 0a41 F20F100D 		movsd	.LC11(%rip), %xmm1
 1549      00000000 
 1550 0a49 F20F58C1 		addsd	%xmm1, %xmm0
 1551 0a4d F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 316:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1552              		.loc 1 316 24 view .LVU488
 1553 0a51 F30F1100 		movss	%xmm0, (%rax)
 317:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1554              		.loc 1 317 17 is_stmt 1 view .LVU489
 317:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1555              		.loc 1 317 35 is_stmt 0 view .LVU490
 1556 0a55 660FEFC0 		pxor	%xmm0, %xmm0
 1557 0a59 F30F5A42 		cvtss2sd	4(%rdx), %xmm0
 1557      04
 317:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1558              		.loc 1 317 37 view .LVU491
 1559 0a5e F20F5CC1 		subsd	%xmm1, %xmm0
 1560 0a62 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 317:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1561              		.loc 1 317 24 view .LVU492
 1562 0a66 F30F1140 		movss	%xmm0, 4(%rax)
 1562      04
 318:Src/geometry.cpp ****                 break;
 1563              		.loc 1 318 17 is_stmt 1 view .LVU493
 1564 0a6b EB36     		jmp	.L168
 1565              	.L171:
GAS LISTING /tmp/ccQVJrVe.s 			page 58


 302:Src/geometry.cpp ****             case CORNER_LEFT_BOT:
 1566              		.loc 1 302 13 view .LVU494
 303:Src/geometry.cpp ****             {
 1567              		.loc 1 303 13 view .LVU495
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1568              		.loc 1 304 17 view .LVU496
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1569              		.loc 1 304 32 is_stmt 0 view .LVU497
 1570 0a6d 488B5500 		movq	0(%rbp), %rdx
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1571              		.loc 1 304 35 view .LVU498
 1572 0a71 660FEFC0 		pxor	%xmm0, %xmm0
 1573 0a75 F30F5A02 		cvtss2sd	(%rdx), %xmm0
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1574              		.loc 1 304 37 view .LVU499
 1575 0a79 F20F100D 		movsd	.LC11(%rip), %xmm1
 1575      00000000 
 1576 0a81 F20F5CC1 		subsd	%xmm1, %xmm0
 1577 0a85 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 304:Src/geometry.cpp ****                 ret->x = obst->c->x - CONST;
 1578              		.loc 1 304 24 view .LVU500
 1579 0a89 F30F1100 		movss	%xmm0, (%rax)
 305:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1580              		.loc 1 305 17 is_stmt 1 view .LVU501
 305:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1581              		.loc 1 305 35 is_stmt 0 view .LVU502
 1582 0a8d 660FEFC0 		pxor	%xmm0, %xmm0
 1583 0a91 F30F5A42 		cvtss2sd	4(%rdx), %xmm0
 1583      04
 305:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1584              		.loc 1 305 37 view .LVU503
 1585 0a96 F20F5CC1 		subsd	%xmm1, %xmm0
 1586 0a9a F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 305:Src/geometry.cpp ****                 ret->y = obst->c->y - CONST;
 1587              		.loc 1 305 24 view .LVU504
 1588 0a9e F30F1140 		movss	%xmm0, 4(%rax)
 1588      04
 306:Src/geometry.cpp ****                 break;
 1589              		.loc 1 306 17 is_stmt 1 view .LVU505
 1590              	.L168:
 328:Src/geometry.cpp ****     }
 1591              		.loc 1 328 5 is_stmt 0 view .LVU506
 1592 0aa3 4883C408 		addq	$8, %rsp
 1593              		.cfi_remember_state
 1594              		.cfi_def_cfa_offset 24
 1595 0aa7 5B       		popq	%rbx
 1596              		.cfi_def_cfa_offset 16
 1597 0aa8 5D       		popq	%rbp
 1598              		.cfi_def_cfa_offset 8
 1599              	.LVL130:
 328:Src/geometry.cpp ****     }
 1600              		.loc 1 328 5 view .LVU507
 1601 0aa9 C3       		ret
 1602              	.LVL131:
 1603              	.L169:
 1604              		.cfi_restore_state
 320:Src/geometry.cpp ****             case CORNER_RIGHT_TOP:
GAS LISTING /tmp/ccQVJrVe.s 			page 59


 1605              		.loc 1 320 13 is_stmt 1 view .LVU508
 321:Src/geometry.cpp ****             {
 1606              		.loc 1 321 13 view .LVU509
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1607              		.loc 1 322 17 view .LVU510
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1608              		.loc 1 322 32 is_stmt 0 view .LVU511
 1609 0aaa 488B5500 		movq	0(%rbp), %rdx
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1610              		.loc 1 322 45 view .LVU512
 1611 0aae F30F104D 		movss	40(%rbp), %xmm1
 1611      28
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1612              		.loc 1 322 37 view .LVU513
 1613 0ab3 F30F580A 		addss	(%rdx), %xmm1
 1614 0ab7 F30F5AC9 		cvtss2sd	%xmm1, %xmm1
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1615              		.loc 1 322 47 view .LVU514
 1616 0abb F20F1015 		movsd	.LC11(%rip), %xmm2
 1616      00000000 
 1617 0ac3 F20F58CA 		addsd	%xmm2, %xmm1
 1618 0ac7 F20F5AC9 		cvtsd2ss	%xmm1, %xmm1
 322:Src/geometry.cpp ****                 ret->x = obst->c->x + obst->a + CONST;
 1619              		.loc 1 322 24 view .LVU515
 1620 0acb F30F1108 		movss	%xmm1, (%rax)
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1621              		.loc 1 323 17 is_stmt 1 view .LVU516
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1622              		.loc 1 323 45 is_stmt 0 view .LVU517
 1623 0acf F30F1045 		movss	44(%rbp), %xmm0
 1623      2C
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1624              		.loc 1 323 37 view .LVU518
 1625 0ad4 F30F5842 		addss	4(%rdx), %xmm0
 1625      04
 1626 0ad9 F30F5AC0 		cvtss2sd	%xmm0, %xmm0
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1627              		.loc 1 323 47 view .LVU519
 1628 0add F20F58C2 		addsd	%xmm2, %xmm0
 1629 0ae1 F20F5AC0 		cvtsd2ss	%xmm0, %xmm0
 323:Src/geometry.cpp ****                 ret->y = obst->c->y + obst->b + CONST;
 1630              		.loc 1 323 24 view .LVU520
 1631 0ae5 F30F1140 		movss	%xmm0, 4(%rax)
 1631      04
 324:Src/geometry.cpp ****                 break;
 1632              		.loc 1 324 17 is_stmt 1 view .LVU521
 327:Src/geometry.cpp ****         return ret;
 1633              		.loc 1 327 9 view .LVU522
 327:Src/geometry.cpp ****         return ret;
 1634              		.loc 1 327 16 is_stmt 0 view .LVU523
 1635 0aea EBB7     		jmp	.L168
 1636              		.cfi_endproc
 1637              	.LFE1742:
 1639              		.globl	_ZN8geometry10createVectEPKN5bases8obstacleEhf
 1641              	_ZN8geometry10createVectEPKN5bases8obstacleEhf:
 1642              	.LVL132:
 1643              	.LFB1726:
GAS LISTING /tmp/ccQVJrVe.s 			page 60


  40:Src/geometry.cpp ****     {
 1644              		.loc 1 40 5 is_stmt 1 view -0
 1645              		.cfi_startproc
  40:Src/geometry.cpp ****     {
 1646              		.loc 1 40 5 is_stmt 0 view .LVU525
 1647 0aec 55       		pushq	%rbp
 1648              		.cfi_def_cfa_offset 16
 1649              		.cfi_offset 6, -16
 1650 0aed 53       		pushq	%rbx
 1651              		.cfi_def_cfa_offset 24
 1652              		.cfi_offset 3, -24
 1653 0aee 4883EC18 		subq	$24, %rsp
 1654              		.cfi_def_cfa_offset 48
 1655 0af2 F30F1144 		movss	%xmm0, 8(%rsp)
 1655      2408
  41:Src/geometry.cpp ****         struct vect ret;
 1656              		.loc 1 41 9 is_stmt 1 view .LVU526
  42:Src/geometry.cpp ****         struct coords *c = getCoordsOfCorner(obst, corner);
 1657              		.loc 1 42 9 view .LVU527
  42:Src/geometry.cpp ****         struct coords *c = getCoordsOfCorner(obst, corner);
 1658              		.loc 1 42 45 is_stmt 0 view .LVU528
 1659 0af8 400FB6F6 		movzbl	%sil, %esi
  42:Src/geometry.cpp ****         struct coords *c = getCoordsOfCorner(obst, corner);
 1660              		.loc 1 42 45 view .LVU529
 1661 0afc E8000000 		call	_ZN8geometry17getCoordsOfCornerEPKN5bases8obstacleEh
 1661      00
 1662              	.LVL133:
  42:Src/geometry.cpp ****         struct coords *c = getCoordsOfCorner(obst, corner);
 1663              		.loc 1 42 45 view .LVU530
 1664 0b01 4889C3   		movq	%rax, %rbx
 1665              	.LVL134:
  43:Src/geometry.cpp ****         ret = createVect(c, angle);
 1666              		.loc 1 43 9 is_stmt 1 view .LVU531
  43:Src/geometry.cpp ****         ret = createVect(c, angle);
 1667              		.loc 1 43 34 is_stmt 0 view .LVU532
 1668 0b04 F30F1044 		movss	8(%rsp), %xmm0
 1668      2408
 1669 0b0a 4889C7   		movq	%rax, %rdi
 1670 0b0d E8000000 		call	_ZN8geometry10createVectEPKN5bases6coordsEf
 1670      00
 1671              	.LVL135:
  43:Src/geometry.cpp ****         ret = createVect(c, angle);
 1672              		.loc 1 43 34 view .LVU533
 1673 0b12 4889C5   		movq	%rax, %rbp
 1674 0b15 660FD644 		movq	%xmm0, 8(%rsp)
 1674      2408
 1675              	.LVL136:
  44:Src/geometry.cpp ****         free(c);
 1676              		.loc 1 44 9 is_stmt 1 view .LVU534
  44:Src/geometry.cpp ****         free(c);
 1677              		.loc 1 44 13 is_stmt 0 view .LVU535
 1678 0b1b 4889DF   		movq	%rbx, %rdi
 1679 0b1e E8000000 		call	free@PLT
 1679      00
 1680              	.LVL137:
  45:Src/geometry.cpp ****         return ret;
 1681              		.loc 1 45 9 is_stmt 1 view .LVU536
GAS LISTING /tmp/ccQVJrVe.s 			page 61


  46:Src/geometry.cpp ****     }
 1682              		.loc 1 46 5 is_stmt 0 view .LVU537
 1683 0b23 4889E8   		movq	%rbp, %rax
 1684 0b26 F30F7E44 		movq	8(%rsp), %xmm0
 1684      2408
 1685 0b2c 4883C418 		addq	$24, %rsp
 1686              		.cfi_def_cfa_offset 24
 1687 0b30 5B       		popq	%rbx
 1688              		.cfi_def_cfa_offset 16
 1689              	.LVL138:
  46:Src/geometry.cpp ****     }
 1690              		.loc 1 46 5 view .LVU538
 1691 0b31 5D       		popq	%rbp
 1692              		.cfi_def_cfa_offset 8
 1693 0b32 C3       		ret
 1694              		.cfi_endproc
 1695              	.LFE1726:
 1697              		.globl	_ZN8geometry8getPointEPKN5bases8obstacleEh
 1699              	_ZN8geometry8getPointEPKN5bases8obstacleEh:
 1700              	.LVL139:
 1701              	.LFB1743:
 332:Src/geometry.cpp ****     {
 1702              		.loc 1 332 5 is_stmt 1 view -0
 1703              		.cfi_startproc
 333:Src/geometry.cpp ****         return obst->corners[corner];
 1704              		.loc 1 333 9 view .LVU540
 333:Src/geometry.cpp ****         return obst->corners[corner];
 1705              		.loc 1 333 36 is_stmt 0 view .LVU541
 1706 0b33 400FB6F6 		movzbl	%sil, %esi
 333:Src/geometry.cpp ****         return obst->corners[corner];
 1707              		.loc 1 333 36 view .LVU542
 1708 0b37 488B44F7 		movq	8(%rdi,%rsi,8), %rax
 1708      08
 334:Src/geometry.cpp ****     }
 1709              		.loc 1 334 5 view .LVU543
 1710 0b3c C3       		ret
 1711              		.cfi_endproc
 1712              	.LFE1743:
 1715              	_GLOBAL__sub_I__ZN8geometry10createVectEPKN5bases6coordsEf:
 1716              	.LFB2061:
 1717              		.loc 1 337 1 is_stmt 1 view -0
 1718              		.cfi_startproc
 1719 0b3d 4883EC08 		subq	$8, %rsp
 1720              		.cfi_def_cfa_offset 16
 1721              		.loc 1 337 1 is_stmt 0 view .LVU545
 1722 0b41 BEFFFF00 		movl	$65535, %esi
 1722      00
 1723 0b46 BF010000 		movl	$1, %edi
 1723      00
 1724 0b4b E8B0F4FF 		call	_Z41__static_initialization_and_destruction_0ii
 1724      FF
 1725              	.LVL140:
 1726 0b50 4883C408 		addq	$8, %rsp
 1727              		.cfi_def_cfa_offset 8
 1728 0b54 C3       		ret
 1729              		.cfi_endproc
 1730              	.LFE2061:
GAS LISTING /tmp/ccQVJrVe.s 			page 62


 1732              		.section	.init_array,"aw"
 1733              		.align 8
 1734 0000 00000000 		.quad	_GLOBAL__sub_I__ZN8geometry10createVectEPKN5bases6coordsEf
 1734      00000000 
 1735              		.local	_ZStL8__ioinit
 1736              		.comm	_ZStL8__ioinit,1,1
 1737              		.section	.rodata.cst8,"aM",@progbits,8
 1738              		.align 8
 1739              	.LC0:
 1740 0000 00000000 		.long	0
 1741 0004 00806640 		.long	1080459264
 1742              		.align 8
 1743              	.LC1:
 1744 0008 6E861BF0 		.long	4028335726
 1745 000c F9210940 		.long	1074340345
 1746              		.align 8
 1747              	.LC2:
 1748 0010 00000000 		.long	0
 1749 0014 0088D340 		.long	1087604736
 1750              		.section	.rodata.cst16,"aM",@progbits,16
 1751              		.align 16
 1752              	.LC3:
 1753 0000 FFFFFF7F 		.long	2147483647
 1754 0004 00000000 		.long	0
 1755 0008 00000000 		.long	0
 1756 000c 00000000 		.long	0
 1757              		.section	.rodata.cst4,"aM",@progbits,4
 1758              		.align 4
 1759              	.LC4:
 1760 0000 00003443 		.long	1127481344
 1761              		.align 4
 1762              	.LC5:
 1763 0004 00000000 		.long	0
 1764              		.section	.rodata.cst16
 1765              		.align 16
 1766              	.LC6:
 1767 0010 00000080 		.long	2147483648
 1768 0014 00000000 		.long	0
 1769 0018 00000000 		.long	0
 1770 001c 00000000 		.long	0
 1771              		.section	.rodata.cst4
 1772              		.align 4
 1773              	.LC7:
 1774 0008 0000B4C2 		.long	3266576384
 1775              		.align 4
 1776              	.LC8:
 1777 000c 0000B442 		.long	1119092736
 1778              		.align 4
 1779              	.LC9:
 1780 0010 00008C43 		.long	1133248512
 1781              		.align 4
 1782              	.LC10:
 1783 0014 0000E143 		.long	1138819072
 1784              		.section	.rodata.cst8
 1785              		.align 8
 1786              	.LC11:
 1787 0018 9A999999 		.long	2576980378
GAS LISTING /tmp/ccQVJrVe.s 			page 63


 1788 001c 9999D93F 		.long	1071225241
 1789              		.align 8
 1790              	.LC12:
 1791 0020 00000000 		.long	0
 1792 0024 0000F03F 		.long	1072693248
 1793              		.align 8
 1794              	.LC13:
 1795 0028 00000000 		.long	0
 1796 002c 00000000 		.long	0
 1797              		.section	.rodata.cst4
 1798              		.align 4
 1799              	.LC14:
 1800 0018 0000803F 		.long	1065353216
 1801              		.text
 1802              	.Letext0:
 1803              		.file 6 "/usr/include/bits/types.h"
 1804              		.file 7 "/usr/include/bits/stdint-intn.h"
 1805              		.file 8 "/usr/include/bits/stdint-uintn.h"
 1806              		.file 9 "/usr/include/stdint.h"
 1807              		.file 10 "/usr/include/c++/9.2.0/cwchar"
 1808              		.file 11 "/usr/include/c++/9.2.0/new"
 1809              		.file 12 "/usr/include/c++/9.2.0/bits/exception_ptr.h"
 1810              		.file 13 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/c++config.h"
 1811              		.file 14 "/usr/include/c++/9.2.0/type_traits"
 1812              		.file 15 "/usr/include/c++/9.2.0/bits/stl_pair.h"
 1813              		.file 16 "/usr/include/c++/9.2.0/debug/debug.h"
 1814              		.file 17 "/usr/include/c++/9.2.0/bits/char_traits.h"
 1815              		.file 18 "/usr/include/c++/9.2.0/cstdint"
 1816              		.file 19 "/usr/include/c++/9.2.0/clocale"
 1817              		.file 20 "/usr/include/c++/9.2.0/cstdlib"
 1818              		.file 21 "/usr/include/c++/9.2.0/cstdio"
 1819              		.file 22 "/usr/include/c++/9.2.0/system_error"
 1820              		.file 23 "/usr/include/c++/9.2.0/bits/ios_base.h"
 1821              		.file 24 "/usr/include/c++/9.2.0/cwctype"
 1822              		.file 25 "/usr/include/c++/9.2.0/iosfwd"
 1823              		.file 26 "/usr/include/c++/9.2.0/bits/predefined_ops.h"
 1824              		.file 27 "/usr/include/c++/9.2.0/ext/new_allocator.h"
 1825              		.file 28 "/usr/include/c++/9.2.0/ext/numeric_traits.h"
 1826              		.file 29 "/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.0/include/stddef.h"
 1827              		.file 30 "<built-in>"
 1828              		.file 31 "/usr/include/bits/types/wint_t.h"
 1829              		.file 32 "/usr/include/bits/types/__mbstate_t.h"
 1830              		.file 33 "/usr/include/bits/types/mbstate_t.h"
 1831              		.file 34 "/usr/include/bits/types/__FILE.h"
 1832              		.file 35 "/usr/include/bits/types/struct_FILE.h"
 1833              		.file 36 "/usr/include/bits/types/FILE.h"
 1834              		.file 37 "/usr/include/wchar.h"
 1835              		.file 38 "/usr/include/bits/types/struct_tm.h"
 1836              		.file 39 "/usr/include/locale.h"
 1837              		.file 40 "/usr/include/time.h"
 1838              		.file 41 "/usr/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/atomic_word.h"
 1839              		.file 42 "/usr/include/stdlib.h"
 1840              		.file 43 "/usr/include/bits/stdlib-float.h"
 1841              		.file 44 "/usr/include/bits/stdlib-bsearch.h"
 1842              		.file 45 "/usr/include/bits/types/__fpos_t.h"
 1843              		.file 46 "/usr/include/stdio.h"
 1844              		.file 47 "/usr/include/bits/sys_errlist.h"
GAS LISTING /tmp/ccQVJrVe.s 			page 64


 1845              		.file 48 "/usr/include/bits/stdio.h"
 1846              		.file 49 "/usr/include/errno.h"
 1847              		.file 50 "/usr/include/bits/wctype-wchar.h"
 1848              		.file 51 "/usr/include/wctype.h"
 1849              		.file 52 "/usr/include/c++/9.2.0/stdlib.h"
 1850              		.file 53 "/usr/include/unistd.h"
 1851              		.file 54 "/usr/include/bits/getopt_core.h"
 1852              		.file 55 "/usr/include/math.h"
 1853              		.file 56 "/usr/include/c++/9.2.0/math.h"
 1854              		.file 57 "/usr/include/bits/mathcalls.h"
 1855              		.file 58 "Includes/geometry.hpp"
GAS LISTING /tmp/ccQVJrVe.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 geometry.cpp
     /tmp/ccQVJrVe.s:5      .text:0000000000000000 _Z41__static_initialization_and_destruction_0ii
                             .bss:0000000000000000 _ZStL8__ioinit
     /tmp/ccQVJrVe.s:45     .text:000000000000003d _ZN8geometry10createVectEPKN5bases6coordsEf
     /tmp/ccQVJrVe.s:202    .text:000000000000015c _ZN8geometry10createVectEPKN5bases6coordsES3_
     /tmp/ccQVJrVe.s:272    .text:00000000000001b4 _ZN8geometry11isDotInsideEPKN5bases6coordsE
     /tmp/ccQVJrVe.s:356    .text:0000000000000271 _ZN8geometry16getCoordsOfPointEPN5bases10graphPointE
     /tmp/ccQVJrVe.s:371    .text:0000000000000277 _ZN8geometry15hasIntersectionEPKN5bases8baselineES3_
     /tmp/ccQVJrVe.s:391    .text:000000000000028a _ZN8geometry15getIntersectionEPKN5bases8baselineES3_
     /tmp/ccQVJrVe.s:545    .text:000000000000037a _ZN8geometry15isCoDirectionalEPKN5bases4vectEPKNS0_6coordsE
     /tmp/ccQVJrVe.s:622    .text:00000000000003ff _ZN8geometry11isDotInsideEPKN5bases6coordsEPKNS0_8obstacleE
     /tmp/ccQVJrVe.s:675    .text:0000000000000450 _ZN8geometry14vectToBaselineEPKN5bases4vectE
     /tmp/ccQVJrVe.s:728    .text:000000000000049c _ZN8geometry6getLenEPKN5bases6coordsES3_
     /tmp/ccQVJrVe.s:778    .text:00000000000004c8 _ZN8geometry6getLenEPKN5bases4vectE
     /tmp/ccQVJrVe.s:817    .text:00000000000004ec _ZN8geometry15getIntersectionEPKN5bases8obstacleEPKNS0_4vectE
     /tmp/ccQVJrVe.s:1296   .text:00000000000008db _ZN8geometry15hasIntersectionEPKN5bases8obstacleEPKNS0_4vectE
     /tmp/ccQVJrVe.s:1410   .text:0000000000000979 _ZN8geometry16hasIntersectionsEPKN5bases4vectE
     /tmp/ccQVJrVe.s:1476   .text:00000000000009bd _ZN8geometry17getCoordsOfCornerEPKN5bases8obstacleEh
     /tmp/ccQVJrVe.s:1641   .text:0000000000000aec _ZN8geometry10createVectEPKN5bases8obstacleEhf
     /tmp/ccQVJrVe.s:1699   .text:0000000000000b33 _ZN8geometry8getPointEPKN5bases8obstacleEh
     /tmp/ccQVJrVe.s:1715   .text:0000000000000b3d _GLOBAL__sub_I__ZN8geometry10createVectEPKN5bases6coordsEf
     /tmp/ccQVJrVe.s:1739   .rodata.cst8:0000000000000000 .LC0
     /tmp/ccQVJrVe.s:1743   .rodata.cst8:0000000000000008 .LC1
     /tmp/ccQVJrVe.s:1747   .rodata.cst8:0000000000000010 .LC2
     /tmp/ccQVJrVe.s:1752   .rodata.cst16:0000000000000000 .LC3
     /tmp/ccQVJrVe.s:1759   .rodata.cst4:0000000000000000 .LC4
     /tmp/ccQVJrVe.s:1766   .rodata.cst16:0000000000000010 .LC6
     /tmp/ccQVJrVe.s:1773   .rodata.cst4:0000000000000008 .LC7
     /tmp/ccQVJrVe.s:1776   .rodata.cst4:000000000000000c .LC8
     /tmp/ccQVJrVe.s:1779   .rodata.cst4:0000000000000010 .LC9
     /tmp/ccQVJrVe.s:1782   .rodata.cst4:0000000000000014 .LC10
     /tmp/ccQVJrVe.s:1786   .rodata.cst8:0000000000000018 .LC11
     /tmp/ccQVJrVe.s:1790   .rodata.cst8:0000000000000020 .LC12
     /tmp/ccQVJrVe.s:1794   .rodata.cst8:0000000000000028 .LC13
     /tmp/ccQVJrVe.s:1762   .rodata.cst4:0000000000000004 .LC5
     /tmp/ccQVJrVe.s:1799   .rodata.cst4:0000000000000018 .LC14

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
malloc
tan
numOfObstacles
obstacles
sqrtf
__stack_chk_fail
free
